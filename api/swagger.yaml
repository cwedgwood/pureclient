openapi: 3.0.0
info:
  title: FlashArray REST API
  version: "2.8"
servers:
- url: /
tags:
- name: Authorization
  description: "Pure Storage uses the OAuth 2.0 Token Exchange authorization grant\
    \ and JSON Web Tokens (JWTs) to authenticate to the Pure Storage REST API. Before\
    \ you can exchange the ID token for an access token, create and enable the API\
    \ client to generate the `key_id`, `id`, and `issuer` values. These values will\
    \ be used as JWT claims for the `subject_token` parameter."
- name: Active Directory
  description: Active Directory configuration authenticates users for NFS using Kerberos
    or SMB using Kerberos or New Technology LAN Manager (NTLM). Active Directory is
    also used to authorize users by mapping identities across the NFS and SMB protocols
    by using LDAP queries.
- name: Administrators
  description: "The FlashArray has a single default administrative account named pureuser.\
    \ The administrator can add, delete, and modify administrators on the array. Administrator\
    \ roles may be assigned to user accounts including `array_admin`, `storage_admin`,\
    \ and `readonly`."
- name: Alerts
  description: "Alerts indicate significant events that occur on an array, including\
    \ whenever a component degrades or the capacity threshold of the component is\
    \ reached."
- name: Alert Watchers
  description: Alert watchers receive email notifications when alerts occur on an
    array.
- name: API Clients
  description: "An API client represents an identity type. API clients are created\
    \ on the array. To create an API client, register and then enable it on the array.\
    \ After the API client has been created, the user name (`sub`) and identity tokens\
    \ (`kid` and `aud` tokens) that are issued by the API client are used as claims\
    \ for the JSON Web Token that you create to authenticate into the REST API."
- name: Apps
  description: Apps that extend array functionality can be integrated into the Purity//FA
    operating system.
- name: Arrays
  description: Array features provide the ability to configure settings that affect
    the operation of the array as a whole and monitor array I/O performance.
- name: Array Connections
  description: Manages connections between arrays.
- name: Audits
  description: Audit trail records describe administrative actions performed by a
    user to modify the configuration of an array.
- name: Certificates
  description: "Purity//FA creates a self-signed certificate and private key when\
    \ you start the system for the first time. You can use the default certificate,\
    \ change the certificate attributes, create a new self-signed certificate, or\
    \ import an SSL certificate signed by a certificate authority."
- name: Connections
  description: A connection gives hosts access to volumes on the array.
- name: Controllers
  description: "Controller data includes the name, mode, FlashArray model, Purity//FA\
    \ software version, and status of each controller in the array."
- name: Directories
  description: Important file system directories should be set up as managed directories.
    Managed directories can have policies attached to them. Managed directories differ
    from standard directories in that they provide space reporting and metrics.
- name: Directory Exports
  description: Managed directory exports are created by adding NFS or SMB export policies
    to managed directories.
- name: Directory Quotas
  description: Directory quotas provide the ability to set capacity limits on managed
    directories.
- name: Directory Services
  description: Manages directory service configurations for integration with LDAP
    servers (e.g. Active Directory and OpenLDAP) in order to support various array
    services.
- name: Directory Snapshots
  description: Directory snapshots are created manually or by adding snapshot policies
    to managed directories. Each snapshot policy can be re-used for multiple directories.
- name: DNS
  description: "DNS attributes include the domain suffix, static name servers, mode\
    \ (static or DHCP), and search domain. The configured attributes can be listed."
- name: Drives
  description: "Drive data includes the name, type, status, capacity, protocol and\
    \ other information for all flash, NVRAM, and cache modules in an array."
- name: File Systems
  description: "A FlashArray can contain up to 24 separate file systems, each with\
    \ a number of directories that can be exported via supported protocols. Clients,\
    \ using Active Directory or LDAP, can connect and access these exports using SMB\
    \ or NFS."
- name: Hardware
  description: "Operational status is reported by most of the hardware components\
    \ in an array, including the chassis, controller, and storage shelf."
- name: Host Groups
  description: Host groups implement consistent connections between a set of hosts
    and one or more volumes. Connections are consistent in the sense that all hosts
    associated with a host group address a volume connected to the group by the same
    LUN. Host groups are typically used to provide a common view of storage volumes
    to the hosts in a clustered application.
- name: Hosts
  description: "Hosts organize the storage network addresses (iSCSI Qualified Names,\
    \ NVMe qualified names, or Fibre Channel world wide names) of client computers\
    \ to identify the host's intiators. Hosts also control communications between\
    \ clients and volumes. After a volume has been created, establish a host-volume\
    \ connection so that the host can read data from and write data to the volume."
- name: KMIP
  description: The Key Management Interoperability Protocol (KMIP) server is used
    in combination with the Pure Storage Rapid Data Locking (RDL) feature and EncryptReduce
    feature to further secure the encrypted data on a FlashArray.
- name: Maintenance Windows
  description: "During a maintenance window, alerts are suppressed that are related\
    \ to connections, paths, ports, and other resources that are down during maintenance."
- name: Network Interfaces
  description: Manages the interfaces and the network connection attributes of the
    array.
- name: Offloads
  description: "The offload feature enables system administrators to replicate point-in-time\
    \ volume snapshots from the array to an external storage system for long-term\
    \ retention. Each offload target represents an external storage system, such as\
    \ an Azure Blob container, NFS device, or S3 bucket, to where Purity//FA volume\
    \ snapshots can be replicated."
- name: Pods
  description: "Synchronous replication is managed through pods. A pod representing\
    \ a collection of protection groups and volumes is created on one array and stretched\
    \ to another array, resulting in fully synchronized writes between the two arrays.\
    \ A pod can contain a mix of volumes, and protection groups with member volumes.\
    \ Writes to the pod coming into either array are immediately synchronized and\
    \ seen on both arrays."
- name: Policies
  description: "Policies are used to create exports (i.e., shares) and schedule snapshots.\
    \ NFS and SMB policies can be created and have one or more rules applied to them.\
    \ Each policy can be reused, creating exports for a number of managed directories."
- name: Ports
  description: "The ports on a FlashArray are assigned iSCSI Qualified Names (IQNs),\
    \ NVMe Qualified Names (NQNs), and Fibre Channel World Wide Names (WWNs)."
- name: Protection Groups
  description: "A protection group defines a set of volumes, hosts, or host groups\
    \ (called members) that are protected together through snapshots with point-in-time\
    \ consistency across the member volumes. The members within the protection group\
    \ have common data protection requirements and the same snapshot, replication,\
    \ and retention schedules."
- name: Protection Group Snapshots
  description: Protection group snapshots capture the content of all volumes on the
    source array for the specified protection group at a single point in time.
- name: Remote Pods
  description: A remote pod represents a pod that is on a connected array but not
    stretched to this array.
- name: Remote Protection Groups
  description: A remote protection group represents a protection group that resides
    on an offload target with the source side of the remote protection group being
    another array that is connected to the local array. The local array can only see
    the remote protection groups of other arrays if the two arrays are connected.
- name: Remote Protection Group Snapshots
  description: A remote protection group snapshot represents a protection group snapshot
    that resides on an offload target with the source side of the remote protection
    group snapshot being another array that is connected to the local array. The local
    array can only see the remote protection group snapshots of other arrays if the
    two arrays are connected.
- name: Remote Volume Snapshots
  description: A remote volume snapshot represents a volume snapshot that resides
    on an offload target with the source side of the remote volume snapshot being
    another array that is connected to the local array. The local array can only see
    the remote volume snapshots of other arrays if the two arrays are connected.
- name: Sessions
  description: Manages Purity//FA login and user session data.
- name: SMI-S
  description: Manages the Pure Storage Storage Management Initiative Specification
    (SMI-S).
- name: SMTP
  description: Manages connections to Simple Network Management Protocol (SMTP) managers.
- name: SNMP Agents
  description: Manages connections to Simple Network Management Protocol (SNMP) agents.
- name: SNMP Managers
  description: Manages connections to Simple Network Management Protocol (SNMP) managers.
- name: Software
  description: Software to be installed on the array.
- name: Subnets
  description: Manages the subnets and VLANs used to organize the network interfaces.
- name: Support
  description: "Enables Support to fix bugs and help customers solve problems. Support\
    \ tools include proxy, phonehome, and remote assist."
- name: Syslog
  description: Manages connections to syslog servers.
- name: Volumes
  description: "A volume represents a container that manages the storage space on\
    \ the array. After a volume has been created, host-volume connections must be\
    \ established so that the host can read data from and write data to the volume.\
    \ Volume data should be protected using asynchronous replication to a remote array,\
    \ synchronous replication between remote arrays, and replication to external storage\
    \ systems."
- name: Volume Groups
  description: "Volume groups organize volumes into logical groupings. If virtual\
    \ volumes are configured, each volume group on the FlashArray array represents\
    \ its associated virtual machine, and inside each of those volumes groups are\
    \ the FlashArray volumes that are assigned to the virtual machine. Volume groups\
    \ that are associated with virtual machines have names that begin with `vvol-`\
    \ and end with the virtual machine name."
- name: Volume Snapshots
  description: "Volume snapshots are immutable, point-in-time images of the contents\
    \ of one or more volumes. There are two types of volume snapshots&#58; volume\
    \ snapshots and protection group volume snapshots. A volume snapshot is a snapshot\
    \ that captures the contents of a single volume. A protection group volume snapshot\
    \ is a volume snapshot that is created from a group of volumes that are part of\
    \ the same protection group. All of the volume snapshots created from a protection\
    \ group snapshot are point-in-time consistent with each other."
paths:
  /oauth2/1.0/token:
    post:
      tags:
      - Authorization
      summary: Get access token
      description: |
        Exchanges an ID Token for an OAuth 2.0 access token.
      requestBody:
        content:
          application/x-www-form-urlencoded:
            schema:
              $ref: '#/components/schemas/1_0_token_body'
        required: true
      responses:
        "200":
          description: OK
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/oauth_token_response'
        "400":
          description: BAD REQUEST
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/inline_response_400'
        "401":
          description: UNAUTHORIZED
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/inline_response_401'
      security: []
  /api/api_version:
    get:
      tags:
      - Authorization
      summary: List available API versions
      description: |
        Returns a list of available API versions. No authentication is required to access this endpoint.
      responses:
        "200":
          description: OK
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/inline_response_200'
      security: []
  /api/2.8/login:
    post:
      tags:
      - Authorization
      summary: POST login (placeholder)
      description: |
        Exchange an API token for a session token.
      parameters:
      - name: api-token
        in: header
        description: API token for a user.
        required: false
        style: simple
        explode: false
        schema:
          type: string
        example: 0f2e2884-9486-c6c2-438c-f50418f2aac3
      responses:
        "200":
          description: OK
          headers:
            x-auth-token:
              description: Session token for a user.
              style: simple
              explode: false
              schema:
                type: string
              example: 3be3d489-55c6-4643-90ac-a476dbc98812
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/inline_response_200_1'
  /api/2.8/logout:
    post:
      tags:
      - Authorization
      summary: POST logout (placeholder)
      description: |
        Invalidate a session token.
      parameters:
      - name: x-auth-token
        in: header
        description: Session token for a user.
        required: false
        style: simple
        explode: false
        schema:
          type: string
        example: 3be3d489-55c6-4643-90ac-a476dbc98812
      responses:
        "200":
          description: OK
  /api/2.8/active-directory:
    get:
      tags:
      - Active Directory
      summary: List Active Directory attributes
      description: Displays configured Active Directory attributes.
      parameters:
      - name: Authorization
        in: header
        description: "Access token (in JWT format) required to use any API endpoint\
          \ (except `/oauth2`, `/login`, and `/logout`)"
        required: false
        style: simple
        explode: false
        schema:
          type: string
      - name: X-Request-ID
        in: header
        description: Supplied by client during request or generated by server.
        required: false
        style: simple
        explode: false
        schema:
          type: string
      - name: continuation_token
        in: query
        description: A token used to retrieve the next page of data with some consistency
          guaranteed. The token is a Base64 encoded value. Set `continuation_token`
          to the system-generated token taken from the `x-next-token` header field
          of the response. A query has reached its last page when the response does
          not include a token. Pagination requires the `limit` and `continuation_token`
          query parameters.
        required: false
        style: form
        explode: true
        schema:
          type: string
      - name: filter
        in: query
        description: Narrows down the results to only the response objects that satisfy
          the filter criteria.
        required: false
        style: form
        explode: true
        schema:
          type: string
      - name: limit
        in: query
        description: "Limits the size of the response to the specified number of objects\
          \ on each page. To return the total number of resources, set `limit=0`.\
          \ The total number of resources is returned as a `total_item_count` value.\
          \ If the page size requested is larger than the system maximum limit, the\
          \ server returns the maximum limit, disregarding the requested page size."
        required: false
        style: form
        explode: true
        schema:
          minimum: 1
          type: integer
          format: int32
        example: 10
      - name: names
        in: query
        description: "Performs the operation on the unique name specified. Enter multiple\
          \ names in comma-separated format. For example, `name01,name02`."
        required: false
        style: form
        explode: false
        schema:
          type: array
          items:
            type: string
      - name: offset
        in: query
        description: The starting position based on the results of the query in relation
          to the full set of response objects returned.
        required: false
        style: form
        explode: true
        schema:
          minimum: 0
          type: integer
          format: int32
        example: 10
      - name: sort
        in: query
        description: "Returns the response objects in the order specified. Set `sort`\
          \ to the name in the response by which to sort. Sorting can be performed\
          \ on any of the names in the response, and the objects can be sorted in\
          \ ascending or descending order. By default, the response objects are sorted\
          \ in ascending order. To sort in descending order, append the minus sign\
          \ (`-`) to the name. A single request can be sorted on multiple objects.\
          \ For example, you can sort all volumes from largest to smallest volume\
          \ size, and then sort volumes of the same size in ascending order by volume\
          \ name. To sort on multiple names, list the names as comma-separated values."
        required: false
        style: form
        explode: false
        schema:
          type: array
          items:
            pattern: "^[a-z]+(_[a-z]+)*-?"
            type: string
      - name: total_item_count
        in: query
        description: "If set to `true`, the `total_item_count` matching the specified\
          \ query parameters is calculated and returned in the response. If set to\
          \ `false`, the `total_item_count` is `null` in the response. This may speed\
          \ up queries where the `total_item_count` is large. If not specified, defaults\
          \ to `false`."
        required: false
        style: form
        explode: true
        schema:
          type: boolean
      responses:
        "200":
          description: OK
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/inline_response_200_2'
    post:
      tags:
      - Active Directory
      summary: Create Active Directory account
      description: "Creates one or more Active Directory accounts, including specified\
        \ `domain`, `computer_name`, `kerberos_servers`, and `directory_servers`."
      parameters:
      - name: Authorization
        in: header
        description: "Access token (in JWT format) required to use any API endpoint\
          \ (except `/oauth2`, `/login`, and `/logout`)"
        required: false
        style: simple
        explode: false
        schema:
          type: string
      - name: X-Request-ID
        in: header
        description: Supplied by client during request or generated by server.
        required: false
        style: simple
        explode: false
        schema:
          type: string
      - name: names
        in: query
        description: "Performs the operation on the unique name specified. For example,\
          \ `name01`. Enter multiple names in comma-separated format."
        required: true
        style: form
        explode: false
        schema:
          type: array
          items:
            type: string
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/2_8_activedirectory_body'
        required: true
      responses:
        "200":
          description: OK
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/inline_response_200_3'
    delete:
      tags:
      - Active Directory
      summary: Delete Active Directory account
      description: Deletes one or more specified Active Directory accounts.
      parameters:
      - name: Authorization
        in: header
        description: "Access token (in JWT format) required to use any API endpoint\
          \ (except `/oauth2`, `/login`, and `/logout`)"
        required: false
        style: simple
        explode: false
        schema:
          type: string
      - name: X-Request-ID
        in: header
        description: Supplied by client during request or generated by server.
        required: false
        style: simple
        explode: false
        schema:
          type: string
      - name: local_only
        in: query
        description: "If specified as `true`, only delete the Active Directory configuration\
          \ on the local array, without deleting the computer account created in the\
          \ Active Directory domain. If not specified, defaults to `false`."
        required: false
        style: form
        explode: true
        schema:
          type: boolean
      - name: names
        in: query
        description: "Performs the operation on the unique name specified. For example,\
          \ `name01`. Enter multiple names in comma-separated format."
        required: true
        style: form
        explode: false
        schema:
          type: array
          items:
            type: string
      responses:
        "200":
          description: OK
  /api/2.8/admins:
    get:
      tags:
      - Administrators
      summary: List administrators
      description: Displays a list of administrators.
      parameters:
      - name: Authorization
        in: header
        description: "Access token (in JWT format) required to use any API endpoint\
          \ (except `/oauth2`, `/login`, and `/logout`)"
        required: false
        style: simple
        explode: false
        schema:
          type: string
      - name: X-Request-ID
        in: header
        description: Supplied by client during request or generated by server.
        required: false
        style: simple
        explode: false
        schema:
          type: string
      - name: continuation_token
        in: query
        description: A token used to retrieve the next page of data with some consistency
          guaranteed. The token is a Base64 encoded value. Set `continuation_token`
          to the system-generated token taken from the `x-next-token` header field
          of the response. A query has reached its last page when the response does
          not include a token. Pagination requires the `limit` and `continuation_token`
          query parameters.
        required: false
        style: form
        explode: true
        schema:
          type: string
      - name: expose_api_token
        in: query
        description: "If `true`, exposes the API token of the current user."
        required: false
        style: form
        explode: true
        schema:
          type: boolean
      - name: filter
        in: query
        description: Narrows down the results to only the response objects that satisfy
          the filter criteria.
        required: false
        style: form
        explode: true
        schema:
          type: string
      - name: limit
        in: query
        description: "Limits the size of the response to the specified number of objects\
          \ on each page. To return the total number of resources, set `limit=0`.\
          \ The total number of resources is returned as a `total_item_count` value.\
          \ If the page size requested is larger than the system maximum limit, the\
          \ server returns the maximum limit, disregarding the requested page size."
        required: false
        style: form
        explode: true
        schema:
          minimum: 1
          type: integer
          format: int32
        example: 10
      - name: names
        in: query
        description: "Performs the operation on the unique name specified. Enter multiple\
          \ names in comma-separated format. For example, `name01,name02`."
        required: false
        style: form
        explode: false
        schema:
          type: array
          items:
            type: string
      - name: offset
        in: query
        description: The starting position based on the results of the query in relation
          to the full set of response objects returned.
        required: false
        style: form
        explode: true
        schema:
          minimum: 0
          type: integer
          format: int32
        example: 10
      - name: sort
        in: query
        description: "Returns the response objects in the order specified. Set `sort`\
          \ to the name in the response by which to sort. Sorting can be performed\
          \ on any of the names in the response, and the objects can be sorted in\
          \ ascending or descending order. By default, the response objects are sorted\
          \ in ascending order. To sort in descending order, append the minus sign\
          \ (`-`) to the name. A single request can be sorted on multiple objects.\
          \ For example, you can sort all volumes from largest to smallest volume\
          \ size, and then sort volumes of the same size in ascending order by volume\
          \ name. To sort on multiple names, list the names as comma-separated values."
        required: false
        style: form
        explode: false
        schema:
          type: array
          items:
            pattern: "^[a-z]+(_[a-z]+)*-?"
            type: string
      - name: total_item_count
        in: query
        description: "If set to `true`, the `total_item_count` matching the specified\
          \ query parameters is calculated and returned in the response. If set to\
          \ `false`, the `total_item_count` is `null` in the response. This may speed\
          \ up queries where the `total_item_count` is large. If not specified, defaults\
          \ to `false`."
        required: false
        style: form
        explode: true
        schema:
          type: boolean
      responses:
        "200":
          description: OK
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/inline_response_200_4'
    post:
      tags:
      - Administrators
      summary: Create an administrator
      description: Creates an administrator.
      parameters:
      - name: Authorization
        in: header
        description: "Access token (in JWT format) required to use any API endpoint\
          \ (except `/oauth2`, `/login`, and `/logout`)"
        required: false
        style: simple
        explode: false
        schema:
          type: string
      - name: X-Request-ID
        in: header
        description: Supplied by client during request or generated by server.
        required: false
        style: simple
        explode: false
        schema:
          type: string
      - name: names
        in: query
        description: "Performs the operation on the unique name specified. Enter multiple\
          \ names in comma-separated format. For example, `name01,name02`."
        required: false
        style: form
        explode: false
        schema:
          type: array
          items:
            type: string
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/2_8_admins_body'
        required: true
      responses:
        "200":
          description: OK
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/inline_response_200_5'
    delete:
      tags:
      - Administrators
      summary: Deletes an administrator
      description: Deletes the specified administrator.
      parameters:
      - name: Authorization
        in: header
        description: "Access token (in JWT format) required to use any API endpoint\
          \ (except `/oauth2`, `/login`, and `/logout`)"
        required: false
        style: simple
        explode: false
        schema:
          type: string
      - name: X-Request-ID
        in: header
        description: Supplied by client during request or generated by server.
        required: false
        style: simple
        explode: false
        schema:
          type: string
      - name: names
        in: query
        description: "Performs the operation on the unique name specified. Enter multiple\
          \ names in comma-separated format. For example, `name01,name02`."
        required: false
        style: form
        explode: false
        schema:
          type: array
          items:
            type: string
      responses:
        "200":
          description: OK
    patch:
      tags:
      - Administrators
      summary: Modify an administrator
      description: Modifies properties for the specified administrator.
      parameters:
      - name: Authorization
        in: header
        description: "Access token (in JWT format) required to use any API endpoint\
          \ (except `/oauth2`, `/login`, and `/logout`)"
        required: false
        style: simple
        explode: false
        schema:
          type: string
      - name: X-Request-ID
        in: header
        description: Supplied by client during request or generated by server.
        required: false
        style: simple
        explode: false
        schema:
          type: string
      - name: names
        in: query
        description: "Performs the operation on the unique name specified. Enter multiple\
          \ names in comma-separated format. For example, `name01,name02`."
        required: false
        style: form
        explode: false
        schema:
          type: array
          items:
            type: string
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/2_8_admins_body_1'
        required: true
      responses:
        "200":
          description: OK
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/inline_response_200_5'
  /api/2.8/admins/api-tokens:
    get:
      tags:
      - Administrators
      summary: List API tokens
      description: Displays API tokens for the specified administrators.
      parameters:
      - name: Authorization
        in: header
        description: "Access token (in JWT format) required to use any API endpoint\
          \ (except `/oauth2`, `/login`, and `/logout`)"
        required: false
        style: simple
        explode: false
        schema:
          type: string
      - name: X-Request-ID
        in: header
        description: Supplied by client during request or generated by server.
        required: false
        style: simple
        explode: false
        schema:
          type: string
      - name: continuation_token
        in: query
        description: A token used to retrieve the next page of data with some consistency
          guaranteed. The token is a Base64 encoded value. Set `continuation_token`
          to the system-generated token taken from the `x-next-token` header field
          of the response. A query has reached its last page when the response does
          not include a token. Pagination requires the `limit` and `continuation_token`
          query parameters.
        required: false
        style: form
        explode: true
        schema:
          type: string
      - name: expose_api_token
        in: query
        description: "If `true`, exposes the API token of the current user."
        required: false
        style: form
        explode: true
        schema:
          type: boolean
      - name: filter
        in: query
        description: Narrows down the results to only the response objects that satisfy
          the filter criteria.
        required: false
        style: form
        explode: true
        schema:
          type: string
      - name: limit
        in: query
        description: "Limits the size of the response to the specified number of objects\
          \ on each page. To return the total number of resources, set `limit=0`.\
          \ The total number of resources is returned as a `total_item_count` value.\
          \ If the page size requested is larger than the system maximum limit, the\
          \ server returns the maximum limit, disregarding the requested page size."
        required: false
        style: form
        explode: true
        schema:
          minimum: 1
          type: integer
          format: int32
        example: 10
      - name: names
        in: query
        description: "Performs the operation on the unique name specified. Enter multiple\
          \ names in comma-separated format. For example, `name01,name02`."
        required: false
        style: form
        explode: false
        schema:
          type: array
          items:
            type: string
      - name: offset
        in: query
        description: The starting position based on the results of the query in relation
          to the full set of response objects returned.
        required: false
        style: form
        explode: true
        schema:
          minimum: 0
          type: integer
          format: int32
        example: 10
      - name: sort
        in: query
        description: "Returns the response objects in the order specified. Set `sort`\
          \ to the name in the response by which to sort. Sorting can be performed\
          \ on any of the names in the response, and the objects can be sorted in\
          \ ascending or descending order. By default, the response objects are sorted\
          \ in ascending order. To sort in descending order, append the minus sign\
          \ (`-`) to the name. A single request can be sorted on multiple objects.\
          \ For example, you can sort all volumes from largest to smallest volume\
          \ size, and then sort volumes of the same size in ascending order by volume\
          \ name. To sort on multiple names, list the names as comma-separated values."
        required: false
        style: form
        explode: false
        schema:
          type: array
          items:
            pattern: "^[a-z]+(_[a-z]+)*-?"
            type: string
      - name: total_item_count
        in: query
        description: "If set to `true`, the `total_item_count` matching the specified\
          \ query parameters is calculated and returned in the response. If set to\
          \ `false`, the `total_item_count` is `null` in the response. This may speed\
          \ up queries where the `total_item_count` is large. If not specified, defaults\
          \ to `false`."
        required: false
        style: form
        explode: true
        schema:
          type: boolean
      responses:
        "200":
          description: OK
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/inline_response_200_6'
    post:
      tags:
      - Administrators
      summary: Create API tokens
      description: Creates API tokens for the specified administrators.
      parameters:
      - name: Authorization
        in: header
        description: "Access token (in JWT format) required to use any API endpoint\
          \ (except `/oauth2`, `/login`, and `/logout`)"
        required: false
        style: simple
        explode: false
        schema:
          type: string
      - name: X-Request-ID
        in: header
        description: Supplied by client during request or generated by server.
        required: false
        style: simple
        explode: false
        schema:
          type: string
      - name: names
        in: query
        description: "Performs the operation on the unique name specified. Enter multiple\
          \ names in comma-separated format. For example, `name01,name02`."
        required: false
        style: form
        explode: false
        schema:
          type: array
          items:
            type: string
      - name: timeout
        in: query
        description: "The duration of API token validity, in milliseconds."
        required: false
        style: form
        explode: true
        schema:
          type: integer
          format: int64
      responses:
        "200":
          description: OK
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/inline_response_200_7'
    delete:
      tags:
      - Administrators
      summary: Delete API tokens
      description: Deletes the API tokens of the specified administrators.
      parameters:
      - name: Authorization
        in: header
        description: "Access token (in JWT format) required to use any API endpoint\
          \ (except `/oauth2`, `/login`, and `/logout`)"
        required: false
        style: simple
        explode: false
        schema:
          type: string
      - name: X-Request-ID
        in: header
        description: Supplied by client during request or generated by server.
        required: false
        style: simple
        explode: false
        schema:
          type: string
      - name: names
        in: query
        description: "Performs the operation on the unique name specified. Enter multiple\
          \ names in comma-separated format. For example, `name01,name02`."
        required: false
        style: form
        explode: false
        schema:
          type: array
          items:
            type: string
      responses:
        "200":
          description: OK
  /api/2.8/admins/cache:
    get:
      tags:
      - Administrators
      summary: List administrator cache entries
      description: Displays entries in the administrator cache.
      parameters:
      - name: Authorization
        in: header
        description: "Access token (in JWT format) required to use any API endpoint\
          \ (except `/oauth2`, `/login`, and `/logout`)"
        required: false
        style: simple
        explode: false
        schema:
          type: string
      - name: X-Request-ID
        in: header
        description: Supplied by client during request or generated by server.
        required: false
        style: simple
        explode: false
        schema:
          type: string
      - name: continuation_token
        in: query
        description: A token used to retrieve the next page of data with some consistency
          guaranteed. The token is a Base64 encoded value. Set `continuation_token`
          to the system-generated token taken from the `x-next-token` header field
          of the response. A query has reached its last page when the response does
          not include a token. Pagination requires the `limit` and `continuation_token`
          query parameters.
        required: false
        style: form
        explode: true
        schema:
          type: string
      - name: filter
        in: query
        description: Narrows down the results to only the response objects that satisfy
          the filter criteria.
        required: false
        style: form
        explode: true
        schema:
          type: string
      - name: limit
        in: query
        description: "Limits the size of the response to the specified number of objects\
          \ on each page. To return the total number of resources, set `limit=0`.\
          \ The total number of resources is returned as a `total_item_count` value.\
          \ If the page size requested is larger than the system maximum limit, the\
          \ server returns the maximum limit, disregarding the requested page size."
        required: false
        style: form
        explode: true
        schema:
          minimum: 1
          type: integer
          format: int32
        example: 10
      - name: names
        in: query
        description: "Performs the operation on the unique name specified. Enter multiple\
          \ names in comma-separated format. For example, `name01,name02`."
        required: false
        style: form
        explode: false
        schema:
          type: array
          items:
            type: string
      - name: offset
        in: query
        description: The starting position based on the results of the query in relation
          to the full set of response objects returned.
        required: false
        style: form
        explode: true
        schema:
          minimum: 0
          type: integer
          format: int32
        example: 10
      - name: sort
        in: query
        description: "Returns the response objects in the order specified. Set `sort`\
          \ to the name in the response by which to sort. Sorting can be performed\
          \ on any of the names in the response, and the objects can be sorted in\
          \ ascending or descending order. By default, the response objects are sorted\
          \ in ascending order. To sort in descending order, append the minus sign\
          \ (`-`) to the name. A single request can be sorted on multiple objects.\
          \ For example, you can sort all volumes from largest to smallest volume\
          \ size, and then sort volumes of the same size in ascending order by volume\
          \ name. To sort on multiple names, list the names as comma-separated values."
        required: false
        style: form
        explode: false
        schema:
          type: array
          items:
            pattern: "^[a-z]+(_[a-z]+)*-?"
            type: string
      - name: total_item_count
        in: query
        description: "If set to `true`, the `total_item_count` matching the specified\
          \ query parameters is calculated and returned in the response. If set to\
          \ `false`, the `total_item_count` is `null` in the response. This may speed\
          \ up queries where the `total_item_count` is large. If not specified, defaults\
          \ to `false`."
        required: false
        style: form
        explode: true
        schema:
          type: boolean
      responses:
        "200":
          description: OK
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/inline_response_200_8'
    put:
      tags:
      - Administrators
      summary: Update or refresh entries in the administrator cache
      description: "Updates entries in the cache for administrators who currently\
        \ do not have a cache entry, otherwise refreshes the existing entry."
      parameters:
      - name: Authorization
        in: header
        description: "Access token (in JWT format) required to use any API endpoint\
          \ (except `/oauth2`, `/login`, and `/logout`)"
        required: false
        style: simple
        explode: false
        schema:
          type: string
      - name: X-Request-ID
        in: header
        description: Supplied by client during request or generated by server.
        required: false
        style: simple
        explode: false
        schema:
          type: string
      - name: names
        in: query
        description: "Performs the operation on the unique name specified. Enter multiple\
          \ names in comma-separated format. For example, `name01,name02`."
        required: false
        style: form
        explode: false
        schema:
          type: array
          items:
            type: string
      responses:
        "200":
          description: OK
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/inline_response_200_9'
    delete:
      tags:
      - Administrators
      summary: Delete cache entries
      description: Deletes all entries from the administrator cache.
      parameters:
      - name: Authorization
        in: header
        description: "Access token (in JWT format) required to use any API endpoint\
          \ (except `/oauth2`, `/login`, and `/logout`)"
        required: false
        style: simple
        explode: false
        schema:
          type: string
      - name: X-Request-ID
        in: header
        description: Supplied by client during request or generated by server.
        required: false
        style: simple
        explode: false
        schema:
          type: string
      - name: remove_all_entries
        in: query
        description: "If set to `true`, removes all entries from the administrator\
          \ cache."
        required: true
        style: form
        explode: true
        schema:
          type: boolean
      responses:
        "200":
          description: OK
  /api/2.8/admins/settings:
    get:
      tags:
      - Administrators
      summary: List administrator settings
      description: Displays the global administrator settings for the array.
      parameters:
      - name: Authorization
        in: header
        description: "Access token (in JWT format) required to use any API endpoint\
          \ (except `/oauth2`, `/login`, and `/logout`)"
        required: false
        style: simple
        explode: false
        schema:
          type: string
      - name: X-Request-ID
        in: header
        description: Supplied by client during request or generated by server.
        required: false
        style: simple
        explode: false
        schema:
          type: string
      - name: filter
        in: query
        description: Narrows down the results to only the response objects that satisfy
          the filter criteria.
        required: false
        style: form
        explode: true
        schema:
          type: string
      - name: limit
        in: query
        description: "Limits the size of the response to the specified number of objects\
          \ on each page. To return the total number of resources, set `limit=0`.\
          \ The total number of resources is returned as a `total_item_count` value.\
          \ If the page size requested is larger than the system maximum limit, the\
          \ server returns the maximum limit, disregarding the requested page size."
        required: false
        style: form
        explode: true
        schema:
          minimum: 1
          type: integer
          format: int32
        example: 10
      - name: offset
        in: query
        description: The starting position based on the results of the query in relation
          to the full set of response objects returned.
        required: false
        style: form
        explode: true
        schema:
          minimum: 0
          type: integer
          format: int32
        example: 10
      - name: sort
        in: query
        description: "Returns the response objects in the order specified. Set `sort`\
          \ to the name in the response by which to sort. Sorting can be performed\
          \ on any of the names in the response, and the objects can be sorted in\
          \ ascending or descending order. By default, the response objects are sorted\
          \ in ascending order. To sort in descending order, append the minus sign\
          \ (`-`) to the name. A single request can be sorted on multiple objects.\
          \ For example, you can sort all volumes from largest to smallest volume\
          \ size, and then sort volumes of the same size in ascending order by volume\
          \ name. To sort on multiple names, list the names as comma-separated values."
        required: false
        style: form
        explode: false
        schema:
          type: array
          items:
            pattern: "^[a-z]+(_[a-z]+)*-?"
            type: string
      - name: total_item_count
        in: query
        description: "If set to `true`, the `total_item_count` matching the specified\
          \ query parameters is calculated and returned in the response. If set to\
          \ `false`, the `total_item_count` is `null` in the response. This may speed\
          \ up queries where the `total_item_count` is large. If not specified, defaults\
          \ to `false`."
        required: false
        style: form
        explode: true
        schema:
          type: boolean
      responses:
        "200":
          description: OK
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/inline_response_200_10'
    patch:
      tags:
      - Administrators
      summary: Modify administrator settings
      description: Modifies the global administrator settings for the array.
      parameters:
      - name: Authorization
        in: header
        description: "Access token (in JWT format) required to use any API endpoint\
          \ (except `/oauth2`, `/login`, and `/logout`)"
        required: false
        style: simple
        explode: false
        schema:
          type: string
      - name: X-Request-ID
        in: header
        description: Supplied by client during request or generated by server.
        required: false
        style: simple
        explode: false
        schema:
          type: string
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/AdminSettings'
        required: true
      responses:
        "200":
          description: OK
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/inline_response_200_10'
  /api/2.8/alerts:
    get:
      tags:
      - Alerts
      summary: List alerts
      description: Displays a list of alerts.
      parameters:
      - name: Authorization
        in: header
        description: "Access token (in JWT format) required to use any API endpoint\
          \ (except `/oauth2`, `/login`, and `/logout`)"
        required: false
        style: simple
        explode: false
        schema:
          type: string
      - name: X-Request-ID
        in: header
        description: Supplied by client during request or generated by server.
        required: false
        style: simple
        explode: false
        schema:
          type: string
      - name: continuation_token
        in: query
        description: A token used to retrieve the next page of data with some consistency
          guaranteed. The token is a Base64 encoded value. Set `continuation_token`
          to the system-generated token taken from the `x-next-token` header field
          of the response. A query has reached its last page when the response does
          not include a token. Pagination requires the `limit` and `continuation_token`
          query parameters.
        required: false
        style: form
        explode: true
        schema:
          type: string
      - name: filter
        in: query
        description: Narrows down the results to only the response objects that satisfy
          the filter criteria.
        required: false
        style: form
        explode: true
        schema:
          type: string
      - name: flagged
        in: query
        description: "If set to `true`, lists only flagged messages. If set to `false`,\
          \ lists only unflagged messages. if not specified, lists all messages."
        required: false
        style: form
        explode: true
        schema:
          type: boolean
      - name: ids
        in: query
        description: Performs the operation on the unique resource IDs specified.
          Enter multiple resource IDs in comma-separated format. The `ids` and `names`
          parameters cannot be provided together.
        required: false
        style: form
        explode: false
        schema:
          type: array
          items:
            type: string
      - name: limit
        in: query
        description: "Limits the size of the response to the specified number of objects\
          \ on each page. To return the total number of resources, set `limit=0`.\
          \ The total number of resources is returned as a `total_item_count` value.\
          \ If the page size requested is larger than the system maximum limit, the\
          \ server returns the maximum limit, disregarding the requested page size."
        required: false
        style: form
        explode: true
        schema:
          minimum: 1
          type: integer
          format: int32
        example: 10
      - name: names
        in: query
        description: "Performs the operation on the unique name specified. Enter multiple\
          \ names in comma-separated format. For example, `name01,name02`."
        required: false
        style: form
        explode: false
        schema:
          type: array
          items:
            type: string
      - name: offset
        in: query
        description: The starting position based on the results of the query in relation
          to the full set of response objects returned.
        required: false
        style: form
        explode: true
        schema:
          minimum: 0
          type: integer
          format: int32
        example: 10
      - name: sort
        in: query
        description: "Returns the response objects in the order specified. Set `sort`\
          \ to the name in the response by which to sort. Sorting can be performed\
          \ on any of the names in the response, and the objects can be sorted in\
          \ ascending or descending order. By default, the response objects are sorted\
          \ in ascending order. To sort in descending order, append the minus sign\
          \ (`-`) to the name. A single request can be sorted on multiple objects.\
          \ For example, you can sort all volumes from largest to smallest volume\
          \ size, and then sort volumes of the same size in ascending order by volume\
          \ name. To sort on multiple names, list the names as comma-separated values."
        required: false
        style: form
        explode: false
        schema:
          type: array
          items:
            pattern: "^[a-z]+(_[a-z]+)*-?"
            type: string
      - name: total_item_count
        in: query
        description: "If set to `true`, the `total_item_count` matching the specified\
          \ query parameters is calculated and returned in the response. If set to\
          \ `false`, the `total_item_count` is `null` in the response. This may speed\
          \ up queries where the `total_item_count` is large. If not specified, defaults\
          \ to `false`."
        required: false
        style: form
        explode: true
        schema:
          type: boolean
      responses:
        "200":
          description: OK
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/inline_response_200_11'
    patch:
      tags:
      - Alerts
      summary: Modify flagged state
      description: Modifies one or more alerts and display updated information about
        these alerts.
      parameters:
      - name: Authorization
        in: header
        description: "Access token (in JWT format) required to use any API endpoint\
          \ (except `/oauth2`, `/login`, and `/logout`)"
        required: false
        style: simple
        explode: false
        schema:
          type: string
      - name: X-Request-ID
        in: header
        description: Supplied by client during request or generated by server.
        required: false
        style: simple
        explode: false
        schema:
          type: string
      - name: ids
        in: query
        description: Performs the operation on the unique resource IDs specified.
          Enter multiple resource IDs in comma-separated format. The `ids` and `names`
          parameters cannot be provided together.
        required: false
        style: form
        explode: false
        schema:
          type: array
          items:
            type: string
      - name: names
        in: query
        description: "Performs the operation on the unique name specified. Enter multiple\
          \ names in comma-separated format. For example, `name01,name02`."
        required: false
        style: form
        explode: false
        schema:
          type: array
          items:
            type: string
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/Alert'
        required: true
      responses:
        "200":
          description: OK
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/inline_response_200_12'
  /api/2.8/alerts/events:
    get:
      tags:
      - Alerts
      summary: List alert events
      description: Displays a list of alert events.
      parameters:
      - name: Authorization
        in: header
        description: "Access token (in JWT format) required to use any API endpoint\
          \ (except `/oauth2`, `/login`, and `/logout`)"
        required: false
        style: simple
        explode: false
        schema:
          type: string
      - name: X-Request-ID
        in: header
        description: Supplied by client during request or generated by server.
        required: false
        style: simple
        explode: false
        schema:
          type: string
      - name: continuation_token
        in: query
        description: A token used to retrieve the next page of data with some consistency
          guaranteed. The token is a Base64 encoded value. Set `continuation_token`
          to the system-generated token taken from the `x-next-token` header field
          of the response. A query has reached its last page when the response does
          not include a token. Pagination requires the `limit` and `continuation_token`
          query parameters.
        required: false
        style: form
        explode: true
        schema:
          type: string
      - name: filter
        in: query
        description: Narrows down the results to only the response objects that satisfy
          the filter criteria.
        required: false
        style: form
        explode: true
        schema:
          type: string
      - name: flagged
        in: query
        description: "If set to `true`, lists only flagged messages. If set to `false`,\
          \ lists only unflagged messages. if not specified, lists all messages."
        required: false
        style: form
        explode: true
        schema:
          type: boolean
      - name: ids
        in: query
        description: Performs the operation on the unique resource IDs specified.
          Enter multiple resource IDs in comma-separated format. The `ids` and `names`
          parameters cannot be provided together.
        required: false
        style: form
        explode: false
        schema:
          type: array
          items:
            type: string
      - name: limit
        in: query
        description: "Limits the size of the response to the specified number of objects\
          \ on each page. To return the total number of resources, set `limit=0`.\
          \ The total number of resources is returned as a `total_item_count` value.\
          \ If the page size requested is larger than the system maximum limit, the\
          \ server returns the maximum limit, disregarding the requested page size."
        required: false
        style: form
        explode: true
        schema:
          minimum: 1
          type: integer
          format: int32
        example: 10
      - name: names
        in: query
        description: "Performs the operation on the unique name specified. For example,\
          \ `name01`. Enter multiple names in comma-separated format. The `ids` or\
          \ `names` parameter is required, but both cannot be set together."
        required: false
        style: form
        explode: false
        schema:
          type: array
          items:
            type: string
      - name: offset
        in: query
        description: The starting position based on the results of the query in relation
          to the full set of response objects returned.
        required: false
        style: form
        explode: true
        schema:
          minimum: 0
          type: integer
          format: int32
        example: 10
      - name: sort
        in: query
        description: "Returns the response objects in the order specified. Set `sort`\
          \ to the name in the response by which to sort. Sorting can be performed\
          \ on any of the names in the response, and the objects can be sorted in\
          \ ascending or descending order. By default, the response objects are sorted\
          \ in ascending order. To sort in descending order, append the minus sign\
          \ (`-`) to the name. A single request can be sorted on multiple objects.\
          \ For example, you can sort all volumes from largest to smallest volume\
          \ size, and then sort volumes of the same size in ascending order by volume\
          \ name. To sort on multiple names, list the names as comma-separated values."
        required: false
        style: form
        explode: false
        schema:
          type: array
          items:
            pattern: "^[a-z]+(_[a-z]+)*-?"
            type: string
      - name: total_item_count
        in: query
        description: "If set to `true`, the `total_item_count` matching the specified\
          \ query parameters is calculated and returned in the response. If set to\
          \ `false`, the `total_item_count` is `null` in the response. This may speed\
          \ up queries where the `total_item_count` is large. If not specified, defaults\
          \ to `false`."
        required: false
        style: form
        explode: true
        schema:
          type: boolean
      responses:
        "200":
          description: OK
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/inline_response_200_13'
  /api/2.8/alert-watchers:
    get:
      tags:
      - Alert Watchers
      summary: List alert watchers
      description: Displays alert watcher email addressess and indicates whether they
        are `enabled`.
      parameters:
      - name: Authorization
        in: header
        description: "Access token (in JWT format) required to use any API endpoint\
          \ (except `/oauth2`, `/login`, and `/logout`)"
        required: false
        style: simple
        explode: false
        schema:
          type: string
      - name: X-Request-ID
        in: header
        description: Supplied by client during request or generated by server.
        required: false
        style: simple
        explode: false
        schema:
          type: string
      - name: continuation_token
        in: query
        description: A token used to retrieve the next page of data with some consistency
          guaranteed. The token is a Base64 encoded value. Set `continuation_token`
          to the system-generated token taken from the `x-next-token` header field
          of the response. A query has reached its last page when the response does
          not include a token. Pagination requires the `limit` and `continuation_token`
          query parameters.
        required: false
        style: form
        explode: true
        schema:
          type: string
      - name: filter
        in: query
        description: Narrows down the results to only the response objects that satisfy
          the filter criteria.
        required: false
        style: form
        explode: true
        schema:
          type: string
      - name: limit
        in: query
        description: "Limits the size of the response to the specified number of objects\
          \ on each page. To return the total number of resources, set `limit=0`.\
          \ The total number of resources is returned as a `total_item_count` value.\
          \ If the page size requested is larger than the system maximum limit, the\
          \ server returns the maximum limit, disregarding the requested page size."
        required: false
        style: form
        explode: true
        schema:
          minimum: 1
          type: integer
          format: int32
        example: 10
      - name: names
        in: query
        description: "Performs the operation on the unique name specified. Enter multiple\
          \ names in comma-separated format. For example, `name01,name02`."
        required: false
        style: form
        explode: false
        schema:
          type: array
          items:
            type: string
      - name: offset
        in: query
        description: The starting position based on the results of the query in relation
          to the full set of response objects returned.
        required: false
        style: form
        explode: true
        schema:
          minimum: 0
          type: integer
          format: int32
        example: 10
      - name: sort
        in: query
        description: "Returns the response objects in the order specified. Set `sort`\
          \ to the name in the response by which to sort. Sorting can be performed\
          \ on any of the names in the response, and the objects can be sorted in\
          \ ascending or descending order. By default, the response objects are sorted\
          \ in ascending order. To sort in descending order, append the minus sign\
          \ (`-`) to the name. A single request can be sorted on multiple objects.\
          \ For example, you can sort all volumes from largest to smallest volume\
          \ size, and then sort volumes of the same size in ascending order by volume\
          \ name. To sort on multiple names, list the names as comma-separated values."
        required: false
        style: form
        explode: false
        schema:
          type: array
          items:
            pattern: "^[a-z]+(_[a-z]+)*-?"
            type: string
      - name: total_item_count
        in: query
        description: "If set to `true`, the `total_item_count` matching the specified\
          \ query parameters is calculated and returned in the response. If set to\
          \ `false`, the `total_item_count` is `null` in the response. This may speed\
          \ up queries where the `total_item_count` is large. If not specified, defaults\
          \ to `false`."
        required: false
        style: form
        explode: true
        schema:
          type: boolean
      responses:
        "200":
          description: OK
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/inline_response_200_14'
    post:
      tags:
      - Alert Watchers
      summary: Create alert watcher
      description: "Creates one or more alert watcher email addresses, adding them\
        \ to the list of alert watchers."
      parameters:
      - name: Authorization
        in: header
        description: "Access token (in JWT format) required to use any API endpoint\
          \ (except `/oauth2`, `/login`, and `/logout`)"
        required: false
        style: simple
        explode: false
        schema:
          type: string
      - name: X-Request-ID
        in: header
        description: Supplied by client during request or generated by server.
        required: false
        style: simple
        explode: false
        schema:
          type: string
      - name: names
        in: query
        description: "Performs the operation on the unique name specified. For example,\
          \ `name01`. Enter multiple names in comma-separated format."
        required: true
        style: form
        explode: false
        schema:
          type: array
          items:
            type: string
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/2_8_alertwatchers_body'
      responses:
        "200":
          description: OK
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/inline_response_200_15'
    delete:
      tags:
      - Alert Watchers
      summary: Delete alert watcher
      description: Delete alert watcher email address from the list of alert watchers.
      parameters:
      - name: Authorization
        in: header
        description: "Access token (in JWT format) required to use any API endpoint\
          \ (except `/oauth2`, `/login`, and `/logout`)"
        required: false
        style: simple
        explode: false
        schema:
          type: string
      - name: X-Request-ID
        in: header
        description: Supplied by client during request or generated by server.
        required: false
        style: simple
        explode: false
        schema:
          type: string
      - name: names
        in: query
        description: "Performs the operation on the unique name specified. For example,\
          \ `name01`. Enter multiple names in comma-separated format."
        required: true
        style: form
        explode: false
        schema:
          type: array
          items:
            type: string
      responses:
        "200":
          description: OK
    patch:
      tags:
      - Alert Watchers
      summary: Modify alert watcher
      description: Modify alert watcher email address by enabling or disabling it.
      parameters:
      - name: Authorization
        in: header
        description: "Access token (in JWT format) required to use any API endpoint\
          \ (except `/oauth2`, `/login`, and `/logout`)"
        required: false
        style: simple
        explode: false
        schema:
          type: string
      - name: X-Request-ID
        in: header
        description: Supplied by client during request or generated by server.
        required: false
        style: simple
        explode: false
        schema:
          type: string
      - name: names
        in: query
        description: "Performs the operation on the unique name specified. For example,\
          \ `name01`. Enter multiple names in comma-separated format."
        required: true
        style: form
        explode: false
        schema:
          type: array
          items:
            type: string
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/2_8_alertwatchers_body_1'
        required: true
      responses:
        "200":
          description: OK
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/inline_response_200_15'
  /api/2.8/alert-watchers/test:
    get:
      tags:
      - Alert Watchers
      summary: List alert watcher test
      description: Displays alert watcher email test results.
      parameters:
      - name: Authorization
        in: header
        description: "Access token (in JWT format) required to use any API endpoint\
          \ (except `/oauth2`, `/login`, and `/logout`)"
        required: false
        style: simple
        explode: false
        schema:
          type: string
      - name: X-Request-ID
        in: header
        description: Supplied by client during request or generated by server.
        required: false
        style: simple
        explode: false
        schema:
          type: string
      - name: filter
        in: query
        description: Narrows down the results to only the response objects that satisfy
          the filter criteria.
        required: false
        style: form
        explode: true
        schema:
          type: string
      - name: limit
        in: query
        description: "Limits the size of the response to the specified number of objects\
          \ on each page. To return the total number of resources, set `limit=0`.\
          \ The total number of resources is returned as a `total_item_count` value.\
          \ If the page size requested is larger than the system maximum limit, the\
          \ server returns the maximum limit, disregarding the requested page size."
        required: false
        style: form
        explode: true
        schema:
          minimum: 1
          type: integer
          format: int32
        example: 10
      - name: names
        in: query
        description: "Performs the operation on the unique name specified. Enter multiple\
          \ names in comma-separated format. For example, `name01,name02`."
        required: false
        style: form
        explode: false
        schema:
          type: array
          items:
            type: string
      - name: offset
        in: query
        description: The starting position based on the results of the query in relation
          to the full set of response objects returned.
        required: false
        style: form
        explode: true
        schema:
          minimum: 0
          type: integer
          format: int32
        example: 10
      - name: sort
        in: query
        description: "Returns the response objects in the order specified. Set `sort`\
          \ to the name in the response by which to sort. Sorting can be performed\
          \ on any of the names in the response, and the objects can be sorted in\
          \ ascending or descending order. By default, the response objects are sorted\
          \ in ascending order. To sort in descending order, append the minus sign\
          \ (`-`) to the name. A single request can be sorted on multiple objects.\
          \ For example, you can sort all volumes from largest to smallest volume\
          \ size, and then sort volumes of the same size in ascending order by volume\
          \ name. To sort on multiple names, list the names as comma-separated values."
        required: false
        style: form
        explode: false
        schema:
          type: array
          items:
            pattern: "^[a-z]+(_[a-z]+)*-?"
            type: string
      - name: total_item_count
        in: query
        description: "If set to `true`, the `total_item_count` matching the specified\
          \ query parameters is calculated and returned in the response. If set to\
          \ `false`, the `total_item_count` is `null` in the response. This may speed\
          \ up queries where the `total_item_count` is large. If not specified, defaults\
          \ to `false`."
        required: false
        style: form
        explode: true
        schema:
          type: boolean
      responses:
        "200":
          description: OK
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/inline_response_200_16'
  /api/2.8/api-clients:
    get:
      tags:
      - API Clients
      summary: List API clients
      description: Returns a list of API clients.
      parameters:
      - name: Authorization
        in: header
        description: "Access token (in JWT format) required to use any API endpoint\
          \ (except `/oauth2`, `/login`, and `/logout`)"
        required: false
        style: simple
        explode: false
        schema:
          type: string
      - name: X-Request-ID
        in: header
        description: Supplied by client during request or generated by server.
        required: false
        style: simple
        explode: false
        schema:
          type: string
      - name: filter
        in: query
        description: Narrows down the results to only the response objects that satisfy
          the filter criteria.
        required: false
        style: form
        explode: true
        schema:
          type: string
      - name: ids
        in: query
        description: Performs the operation on the unique resource IDs specified.
          Enter multiple resource IDs in comma-separated format. The `ids` and `names`
          parameters cannot be provided together.
        required: false
        style: form
        explode: false
        schema:
          type: array
          items:
            type: string
      - name: limit
        in: query
        description: "Limits the size of the response to the specified number of objects\
          \ on each page. To return the total number of resources, set `limit=0`.\
          \ The total number of resources is returned as a `total_item_count` value.\
          \ If the page size requested is larger than the system maximum limit, the\
          \ server returns the maximum limit, disregarding the requested page size."
        required: false
        style: form
        explode: true
        schema:
          minimum: 1
          type: integer
          format: int32
        example: 10
      - name: names
        in: query
        description: "Performs the operation on the unique name specified. Enter multiple\
          \ names in comma-separated format. For example, `name01,name02`."
        required: false
        style: form
        explode: false
        schema:
          type: array
          items:
            type: string
      - name: offset
        in: query
        description: The starting position based on the results of the query in relation
          to the full set of response objects returned.
        required: false
        style: form
        explode: true
        schema:
          minimum: 0
          type: integer
          format: int32
        example: 10
      - name: sort
        in: query
        description: "Returns the response objects in the order specified. Set `sort`\
          \ to the name in the response by which to sort. Sorting can be performed\
          \ on any of the names in the response, and the objects can be sorted in\
          \ ascending or descending order. By default, the response objects are sorted\
          \ in ascending order. To sort in descending order, append the minus sign\
          \ (`-`) to the name. A single request can be sorted on multiple objects.\
          \ For example, you can sort all volumes from largest to smallest volume\
          \ size, and then sort volumes of the same size in ascending order by volume\
          \ name. To sort on multiple names, list the names as comma-separated values."
        required: false
        style: form
        explode: false
        schema:
          type: array
          items:
            pattern: "^[a-z]+(_[a-z]+)*-?"
            type: string
      - name: total_item_count
        in: query
        description: "If set to `true`, the `total_item_count` matching the specified\
          \ query parameters is calculated and returned in the response. If set to\
          \ `false`, the `total_item_count` is `null` in the response. This may speed\
          \ up queries where the `total_item_count` is large. If not specified, defaults\
          \ to `false`."
        required: false
        style: form
        explode: true
        schema:
          type: boolean
      responses:
        "200":
          description: OK
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/inline_response_200_17'
    post:
      tags:
      - API Clients
      summary: Create an API client
      description: "Creates an API client. Newly created API clients are disabled\
        \ by default. Enable an API client through the `PATCH` method. The `names`,\
        \ `max_role`, `issuer`, and `public_key` parameters are required."
      parameters:
      - name: Authorization
        in: header
        description: "Access token (in JWT format) required to use any API endpoint\
          \ (except `/oauth2`, `/login`, and `/logout`)"
        required: false
        style: simple
        explode: false
        schema:
          type: string
      - name: X-Request-ID
        in: header
        description: Supplied by client during request or generated by server.
        required: false
        style: simple
        explode: false
        schema:
          type: string
      - name: names
        in: query
        description: "Performs the operation on the unique name specified. Enter multiple\
          \ names in comma-separated format. For example, `name01,name02`."
        required: false
        style: form
        explode: false
        schema:
          type: array
          items:
            type: string
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/2_8_apiclients_body'
        required: true
      responses:
        "200":
          description: OK
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/inline_response_200_18'
    delete:
      tags:
      - API Clients
      summary: Delete an API client
      description: "Deletes an API client. The `ids` or `names` parameter is required,\
        \ but cannot be set together."
      parameters:
      - name: Authorization
        in: header
        description: "Access token (in JWT format) required to use any API endpoint\
          \ (except `/oauth2`, `/login`, and `/logout`)"
        required: false
        style: simple
        explode: false
        schema:
          type: string
      - name: X-Request-ID
        in: header
        description: Supplied by client during request or generated by server.
        required: false
        style: simple
        explode: false
        schema:
          type: string
      - name: ids
        in: query
        description: Performs the operation on the unique resource IDs specified.
          Enter multiple resource IDs in comma-separated format. The `ids` and `names`
          parameters cannot be provided together.
        required: false
        style: form
        explode: false
        schema:
          type: array
          items:
            type: string
      - name: names
        in: query
        description: "Performs the operation on the unique name specified. Enter multiple\
          \ names in comma-separated format. For example, `name01,name02`."
        required: false
        style: form
        explode: false
        schema:
          type: array
          items:
            type: string
      responses:
        "200":
          description: OK
    patch:
      tags:
      - API Clients
      summary: Manage an API client
      description: "Enables or disables an API client. The `ids` or `names` parameter\
        \ is required, but cannot be set together."
      parameters:
      - name: Authorization
        in: header
        description: "Access token (in JWT format) required to use any API endpoint\
          \ (except `/oauth2`, `/login`, and `/logout`)"
        required: false
        style: simple
        explode: false
        schema:
          type: string
      - name: X-Request-ID
        in: header
        description: Supplied by client during request or generated by server.
        required: false
        style: simple
        explode: false
        schema:
          type: string
      - name: ids
        in: query
        description: Performs the operation on the unique resource IDs specified.
          Enter multiple resource IDs in comma-separated format. The `ids` and `names`
          parameters cannot be provided together.
        required: false
        style: form
        explode: false
        schema:
          type: array
          items:
            type: string
      - name: names
        in: query
        description: "Performs the operation on the unique name specified. Enter multiple\
          \ names in comma-separated format. For example, `name01,name02`."
        required: false
        style: form
        explode: false
        schema:
          type: array
          items:
            type: string
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/2_8_apiclients_body_1'
        required: true
      responses:
        "200":
          description: OK
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/inline_response_200_18'
  /api/2.8/apps:
    get:
      tags:
      - Apps
      summary: List apps
      description: Displays a list of installed apps.
      parameters:
      - name: Authorization
        in: header
        description: "Access token (in JWT format) required to use any API endpoint\
          \ (except `/oauth2`, `/login`, and `/logout`)"
        required: false
        style: simple
        explode: false
        schema:
          type: string
      - name: X-Request-ID
        in: header
        description: Supplied by client during request or generated by server.
        required: false
        style: simple
        explode: false
        schema:
          type: string
      - name: continuation_token
        in: query
        description: A token used to retrieve the next page of data with some consistency
          guaranteed. The token is a Base64 encoded value. Set `continuation_token`
          to the system-generated token taken from the `x-next-token` header field
          of the response. A query has reached its last page when the response does
          not include a token. Pagination requires the `limit` and `continuation_token`
          query parameters.
        required: false
        style: form
        explode: true
        schema:
          type: string
      - name: filter
        in: query
        description: Narrows down the results to only the response objects that satisfy
          the filter criteria.
        required: false
        style: form
        explode: true
        schema:
          type: string
      - name: limit
        in: query
        description: "Limits the size of the response to the specified number of objects\
          \ on each page. To return the total number of resources, set `limit=0`.\
          \ The total number of resources is returned as a `total_item_count` value.\
          \ If the page size requested is larger than the system maximum limit, the\
          \ server returns the maximum limit, disregarding the requested page size."
        required: false
        style: form
        explode: true
        schema:
          minimum: 1
          type: integer
          format: int32
        example: 10
      - name: names
        in: query
        description: "Performs the operation on the unique name specified. Enter multiple\
          \ names in comma-separated format. For example, `name01,name02`."
        required: false
        style: form
        explode: false
        schema:
          type: array
          items:
            type: string
      - name: offset
        in: query
        description: The starting position based on the results of the query in relation
          to the full set of response objects returned.
        required: false
        style: form
        explode: true
        schema:
          minimum: 0
          type: integer
          format: int32
        example: 10
      - name: sort
        in: query
        description: "Returns the response objects in the order specified. Set `sort`\
          \ to the name in the response by which to sort. Sorting can be performed\
          \ on any of the names in the response, and the objects can be sorted in\
          \ ascending or descending order. By default, the response objects are sorted\
          \ in ascending order. To sort in descending order, append the minus sign\
          \ (`-`) to the name. A single request can be sorted on multiple objects.\
          \ For example, you can sort all volumes from largest to smallest volume\
          \ size, and then sort volumes of the same size in ascending order by volume\
          \ name. To sort on multiple names, list the names as comma-separated values."
        required: false
        style: form
        explode: false
        schema:
          type: array
          items:
            pattern: "^[a-z]+(_[a-z]+)*-?"
            type: string
      - name: total_item_count
        in: query
        description: "If set to `true`, the `total_item_count` matching the specified\
          \ query parameters is calculated and returned in the response. If set to\
          \ `false`, the `total_item_count` is `null` in the response. This may speed\
          \ up queries where the `total_item_count` is large. If not specified, defaults\
          \ to `false`."
        required: false
        style: form
        explode: true
        schema:
          type: boolean
      responses:
        "200":
          description: OK
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/inline_response_200_19'
    patch:
      tags:
      - Apps
      summary: Modify app
      description: Modifies an installed app or modifies Virtual Network Computing
        (VNC) access for apps that are being patched.
      parameters:
      - name: Authorization
        in: header
        description: "Access token (in JWT format) required to use any API endpoint\
          \ (except `/oauth2`, `/login`, and `/logout`)"
        required: false
        style: simple
        explode: false
        schema:
          type: string
      - name: X-Request-ID
        in: header
        description: Supplied by client during request or generated by server.
        required: false
        style: simple
        explode: false
        schema:
          type: string
      - name: names
        in: query
        description: "Performs the operation on the unique name specified. For example,\
          \ `name01`. Enter multiple names in comma-separated format."
        required: true
        style: form
        explode: false
        schema:
          type: array
          items:
            type: string
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/App'
        required: true
      responses:
        "200":
          description: OK
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/inline_response_200_20'
  /api/2.8/apps/nodes:
    get:
      tags:
      - Apps
      summary: List app nodes
      description: Displays a list of installed apps and their nodes.
      parameters:
      - name: Authorization
        in: header
        description: "Access token (in JWT format) required to use any API endpoint\
          \ (except `/oauth2`, `/login`, and `/logout`)"
        required: false
        style: simple
        explode: false
        schema:
          type: string
      - name: X-Request-ID
        in: header
        description: Supplied by client during request or generated by server.
        required: false
        style: simple
        explode: false
        schema:
          type: string
      - name: continuation_token
        in: query
        description: A token used to retrieve the next page of data with some consistency
          guaranteed. The token is a Base64 encoded value. Set `continuation_token`
          to the system-generated token taken from the `x-next-token` header field
          of the response. A query has reached its last page when the response does
          not include a token. Pagination requires the `limit` and `continuation_token`
          query parameters.
        required: false
        style: form
        explode: true
        schema:
          type: string
      - name: app_names
        in: query
        description: The name of the installed app. Enter multiple names in comma-separated
          format.
        required: false
        style: form
        explode: false
        schema:
          type: array
          items:
            type: string
      - name: filter
        in: query
        description: Narrows down the results to only the response objects that satisfy
          the filter criteria.
        required: false
        style: form
        explode: true
        schema:
          type: string
      - name: limit
        in: query
        description: "Limits the size of the response to the specified number of objects\
          \ on each page. To return the total number of resources, set `limit=0`.\
          \ The total number of resources is returned as a `total_item_count` value.\
          \ If the page size requested is larger than the system maximum limit, the\
          \ server returns the maximum limit, disregarding the requested page size."
        required: false
        style: form
        explode: true
        schema:
          minimum: 1
          type: integer
          format: int32
        example: 10
      - name: offset
        in: query
        description: The starting position based on the results of the query in relation
          to the full set of response objects returned.
        required: false
        style: form
        explode: true
        schema:
          minimum: 0
          type: integer
          format: int32
        example: 10
      - name: sort
        in: query
        description: "Returns the response objects in the order specified. Set `sort`\
          \ to the name in the response by which to sort. Sorting can be performed\
          \ on any of the names in the response, and the objects can be sorted in\
          \ ascending or descending order. By default, the response objects are sorted\
          \ in ascending order. To sort in descending order, append the minus sign\
          \ (`-`) to the name. A single request can be sorted on multiple objects.\
          \ For example, you can sort all volumes from largest to smallest volume\
          \ size, and then sort volumes of the same size in ascending order by volume\
          \ name. To sort on multiple names, list the names as comma-separated values."
        required: false
        style: form
        explode: false
        schema:
          type: array
          items:
            pattern: "^[a-z]+(_[a-z]+)*-?"
            type: string
      - name: total_item_count
        in: query
        description: "If set to `true`, the `total_item_count` matching the specified\
          \ query parameters is calculated and returned in the response. If set to\
          \ `false`, the `total_item_count` is `null` in the response. This may speed\
          \ up queries where the `total_item_count` is large. If not specified, defaults\
          \ to `false`."
        required: false
        style: form
        explode: true
        schema:
          type: boolean
      responses:
        "200":
          description: OK
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/inline_response_200_21'
  /api/2.8/arrays:
    get:
      tags:
      - Arrays
      summary: List arrays
      description: Displays a list of connection paths to each of the connected arrays.
      parameters:
      - name: Authorization
        in: header
        description: "Access token (in JWT format) required to use any API endpoint\
          \ (except `/oauth2`, `/login`, and `/logout`)"
        required: false
        style: simple
        explode: false
        schema:
          type: string
      - name: X-Request-ID
        in: header
        description: Supplied by client during request or generated by server.
        required: false
        style: simple
        explode: false
        schema:
          type: string
      - name: filter
        in: query
        description: Narrows down the results to only the response objects that satisfy
          the filter criteria.
        required: false
        style: form
        explode: true
        schema:
          type: string
      - name: limit
        in: query
        description: "Limits the size of the response to the specified number of objects\
          \ on each page. To return the total number of resources, set `limit=0`.\
          \ The total number of resources is returned as a `total_item_count` value.\
          \ If the page size requested is larger than the system maximum limit, the\
          \ server returns the maximum limit, disregarding the requested page size."
        required: false
        style: form
        explode: true
        schema:
          minimum: 1
          type: integer
          format: int32
        example: 10
      - name: offset
        in: query
        description: The starting position based on the results of the query in relation
          to the full set of response objects returned.
        required: false
        style: form
        explode: true
        schema:
          minimum: 0
          type: integer
          format: int32
        example: 10
      - name: sort
        in: query
        description: "Returns the response objects in the order specified. Set `sort`\
          \ to the name in the response by which to sort. Sorting can be performed\
          \ on any of the names in the response, and the objects can be sorted in\
          \ ascending or descending order. By default, the response objects are sorted\
          \ in ascending order. To sort in descending order, append the minus sign\
          \ (`-`) to the name. A single request can be sorted on multiple objects.\
          \ For example, you can sort all volumes from largest to smallest volume\
          \ size, and then sort volumes of the same size in ascending order by volume\
          \ name. To sort on multiple names, list the names as comma-separated values."
        required: false
        style: form
        explode: false
        schema:
          type: array
          items:
            pattern: "^[a-z]+(_[a-z]+)*-?"
            type: string
      - name: total_item_count
        in: query
        description: "If set to `true`, the `total_item_count` matching the specified\
          \ query parameters is calculated and returned in the response. If set to\
          \ `false`, the `total_item_count` is `null` in the response. This may speed\
          \ up queries where the `total_item_count` is large. If not specified, defaults\
          \ to `false`."
        required: false
        style: form
        explode: true
        schema:
          type: boolean
      responses:
        "200":
          description: OK
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/inline_response_200_22'
    delete:
      tags:
      - Arrays
      summary: Delete an array
      description: "Deletes an array. For physical appliances, deleting an array restores\
        \ the hardware to factory settings. This entails deleting all data, metadata,\
        \ configuration, and logs; the array returns to the state it was in prior\
        \ to any configuration changes being made. If the hardware is reused, it must\
        \ be as a different array with a new ID. For virtual appliances, deleting\
        \ an array puts it into an unusable state. Virtual resources (e.g., virtual\
        \ machines) can later be freed, which deletes any remaining data, metadata,\
        \ configuration, and logs. Prior to factory reset, an array must be manually\
        \ prepared (e.g., all volumes and snapshots must be eradicated) and a factory\
        \ reset token must be created."
      parameters:
      - name: Authorization
        in: header
        description: "Access token (in JWT format) required to use any API endpoint\
          \ (except `/oauth2`, `/login`, and `/logout`)"
        required: false
        style: simple
        explode: false
        schema:
          type: string
      - name: X-Request-ID
        in: header
        description: Supplied by client during request or generated by server.
        required: false
        style: simple
        explode: false
        schema:
          type: string
      - name: eradicate_all_data
        in: query
        description: Set to `true` to perform a factory reset.
        required: false
        style: form
        explode: true
        schema:
          type: boolean
      - name: factory_reset_token
        in: query
        description: A token required to perform a factory reset.
        required: false
        style: form
        explode: true
        schema:
          type: integer
          format: int64
      responses:
        "200":
          description: OK
    patch:
      tags:
      - Arrays
      summary: Modify an array
      description: "Modifies general array properties such as the array name, login\
        \ banner, idle timeout for management sessions, and NTP servers."
      parameters:
      - name: Authorization
        in: header
        description: "Access token (in JWT format) required to use any API endpoint\
          \ (except `/oauth2`, `/login`, and `/logout`)"
        required: false
        style: simple
        explode: false
        schema:
          type: string
      - name: X-Request-ID
        in: header
        description: Supplied by client during request or generated by server.
        required: false
        style: simple
        explode: false
        schema:
          type: string
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/Array'
        required: true
      responses:
        "200":
          description: OK
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/inline_response_200_23'
  /api/2.8/arrays/cloud-provider-tags:
    get:
      tags:
      - Arrays
      summary: List user tags on the cloud.
      description: Displays the list of user tags on deployed cloud resources of a
        CBS array.
      parameters:
      - name: Authorization
        in: header
        description: "Access token (in JWT format) required to use any API endpoint\
          \ (except `/oauth2`, `/login`, and `/logout`)"
        required: false
        style: simple
        explode: false
        schema:
          type: string
      - name: X-Request-ID
        in: header
        description: Supplied by client during request or generated by server.
        required: false
        style: simple
        explode: false
        schema:
          type: string
      - name: continuation_token
        in: query
        description: A token used to retrieve the next page of data with some consistency
          guaranteed. The token is a Base64 encoded value. Set `continuation_token`
          to the system-generated token taken from the `x-next-token` header field
          of the response. A query has reached its last page when the response does
          not include a token. Pagination requires the `limit` and `continuation_token`
          query parameters.
        required: false
        style: form
        explode: true
        schema:
          type: string
      - name: filter
        in: query
        description: Narrows down the results to only the response objects that satisfy
          the filter criteria.
        required: false
        style: form
        explode: true
        schema:
          type: string
      - name: limit
        in: query
        description: "Limits the size of the response to the specified number of objects\
          \ on each page. To return the total number of resources, set `limit=0`.\
          \ The total number of resources is returned as a `total_item_count` value.\
          \ If the page size requested is larger than the system maximum limit, the\
          \ server returns the maximum limit, disregarding the requested page size."
        required: false
        style: form
        explode: true
        schema:
          minimum: 1
          type: integer
          format: int32
        example: 10
      - name: offset
        in: query
        description: The starting position based on the results of the query in relation
          to the full set of response objects returned.
        required: false
        style: form
        explode: true
        schema:
          minimum: 0
          type: integer
          format: int32
        example: 10
      - name: sort
        in: query
        description: "Returns the response objects in the order specified. Set `sort`\
          \ to the name in the response by which to sort. Sorting can be performed\
          \ on any of the names in the response, and the objects can be sorted in\
          \ ascending or descending order. By default, the response objects are sorted\
          \ in ascending order. To sort in descending order, append the minus sign\
          \ (`-`) to the name. A single request can be sorted on multiple objects.\
          \ For example, you can sort all volumes from largest to smallest volume\
          \ size, and then sort volumes of the same size in ascending order by volume\
          \ name. To sort on multiple names, list the names as comma-separated values."
        required: false
        style: form
        explode: false
        schema:
          type: array
          items:
            pattern: "^[a-z]+(_[a-z]+)*-?"
            type: string
      - name: total_item_count
        in: query
        description: "If set to `true`, the `total_item_count` matching the specified\
          \ query parameters is calculated and returned in the response. If set to\
          \ `false`, the `total_item_count` is `null` in the response. This may speed\
          \ up queries where the `total_item_count` is large. If not specified, defaults\
          \ to `false`."
        required: false
        style: form
        explode: true
        schema:
          type: boolean
      responses:
        "200":
          description: OK
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/inline_response_200_24'
    delete:
      tags:
      - Arrays
      summary: Delete user tags from the cloud.
      description: Deletes user tags from deployed cloud resources of a CBS array.
      parameters:
      - name: Authorization
        in: header
        description: "Access token (in JWT format) required to use any API endpoint\
          \ (except `/oauth2`, `/login`, and `/logout`)"
        required: false
        style: simple
        explode: false
        schema:
          type: string
      - name: X-Request-ID
        in: header
        description: Supplied by client during request or generated by server.
        required: false
        style: simple
        explode: false
        schema:
          type: string
      - name: keys
        in: query
        description: A comma-separated list of tag keys.
        required: false
        style: form
        explode: false
        schema:
          type: array
          items:
            type: string
      responses:
        "200":
          description: OK
  /api/2.8/arrays/cloud-provider-tags/batch:
    put:
      tags:
      - Arrays
      summary: Update user tags on the cloud.
      description: Updates users tags to deployed cloud resources of a CBS array.
      parameters:
      - name: Authorization
        in: header
        description: "Access token (in JWT format) required to use any API endpoint\
          \ (except `/oauth2`, `/login`, and `/logout`)"
        required: false
        style: simple
        explode: false
        schema:
          type: string
      - name: X-Request-ID
        in: header
        description: Supplied by client during request or generated by server.
        required: false
        style: simple
        explode: false
        schema:
          type: string
      requestBody:
        description: "A list of tags to be created or, if already existing, updated."
        content:
          application/json:
            schema:
              maxItems: 50
              minItems: 1
              uniqueItems: true
              type: array
              items:
                $ref: '#/components/schemas/CloudProviderTag'
        required: true
      responses:
        "200":
          description: OK
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/inline_response_200_25'
  /api/2.8/arrays/eula:
    get:
      tags:
      - Arrays
      summary: List End User Agreement and signature
      description: Displays the End User Agreement and signature.
      parameters:
      - name: Authorization
        in: header
        description: "Access token (in JWT format) required to use any API endpoint\
          \ (except `/oauth2`, `/login`, and `/logout`)"
        required: false
        style: simple
        explode: false
        schema:
          type: string
      - name: X-Request-ID
        in: header
        description: Supplied by client during request or generated by server.
        required: false
        style: simple
        explode: false
        schema:
          type: string
      - name: filter
        in: query
        description: Narrows down the results to only the response objects that satisfy
          the filter criteria.
        required: false
        style: form
        explode: true
        schema:
          type: string
      - name: limit
        in: query
        description: "Limits the size of the response to the specified number of objects\
          \ on each page. To return the total number of resources, set `limit=0`.\
          \ The total number of resources is returned as a `total_item_count` value.\
          \ If the page size requested is larger than the system maximum limit, the\
          \ server returns the maximum limit, disregarding the requested page size."
        required: false
        style: form
        explode: true
        schema:
          minimum: 1
          type: integer
          format: int32
        example: 10
      - name: offset
        in: query
        description: The starting position based on the results of the query in relation
          to the full set of response objects returned.
        required: false
        style: form
        explode: true
        schema:
          minimum: 0
          type: integer
          format: int32
        example: 10
      - name: sort
        in: query
        description: "Returns the response objects in the order specified. Set `sort`\
          \ to the name in the response by which to sort. Sorting can be performed\
          \ on any of the names in the response, and the objects can be sorted in\
          \ ascending or descending order. By default, the response objects are sorted\
          \ in ascending order. To sort in descending order, append the minus sign\
          \ (`-`) to the name. A single request can be sorted on multiple objects.\
          \ For example, you can sort all volumes from largest to smallest volume\
          \ size, and then sort volumes of the same size in ascending order by volume\
          \ name. To sort on multiple names, list the names as comma-separated values."
        required: false
        style: form
        explode: false
        schema:
          type: array
          items:
            pattern: "^[a-z]+(_[a-z]+)*-?"
            type: string
      - name: total_item_count
        in: query
        description: "If set to `true`, the `total_item_count` matching the specified\
          \ query parameters is calculated and returned in the response. If set to\
          \ `false`, the `total_item_count` is `null` in the response. This may speed\
          \ up queries where the `total_item_count` is large. If not specified, defaults\
          \ to `false`."
        required: false
        style: form
        explode: true
        schema:
          type: boolean
      responses:
        "200":
          description: OK
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/inline_response_200_26'
    patch:
      tags:
      - Arrays
      summary: Modify signature on the End User Agreement
      description: Modifies the signature on the End User Agreement.
      parameters:
      - name: Authorization
        in: header
        description: "Access token (in JWT format) required to use any API endpoint\
          \ (except `/oauth2`, `/login`, and `/logout`)"
        required: false
        style: simple
        explode: false
        schema:
          type: string
      - name: X-Request-ID
        in: header
        description: Supplied by client during request or generated by server.
        required: false
        style: simple
        explode: false
        schema:
          type: string
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/arrays_eula_body'
        required: true
      responses:
        "200":
          description: OK
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/inline_response_200_27'
  /api/2.8/arrays/factory-reset-token:
    get:
      tags:
      - Arrays
      summary: List factory reset tokens
      description: Displays a list of tokens used to perform a factory reset on the
        array.
      parameters:
      - name: Authorization
        in: header
        description: "Access token (in JWT format) required to use any API endpoint\
          \ (except `/oauth2`, `/login`, and `/logout`)"
        required: false
        style: simple
        explode: false
        schema:
          type: string
      - name: X-Request-ID
        in: header
        description: Supplied by client during request or generated by server.
        required: false
        style: simple
        explode: false
        schema:
          type: string
      - name: filter
        in: query
        description: Narrows down the results to only the response objects that satisfy
          the filter criteria.
        required: false
        style: form
        explode: true
        schema:
          type: string
      - name: limit
        in: query
        description: "Limits the size of the response to the specified number of objects\
          \ on each page. To return the total number of resources, set `limit=0`.\
          \ The total number of resources is returned as a `total_item_count` value.\
          \ If the page size requested is larger than the system maximum limit, the\
          \ server returns the maximum limit, disregarding the requested page size."
        required: false
        style: form
        explode: true
        schema:
          minimum: 1
          type: integer
          format: int32
        example: 10
      - name: offset
        in: query
        description: The starting position based on the results of the query in relation
          to the full set of response objects returned.
        required: false
        style: form
        explode: true
        schema:
          minimum: 0
          type: integer
          format: int32
        example: 10
      - name: sort
        in: query
        description: "Returns the response objects in the order specified. Set `sort`\
          \ to the name in the response by which to sort. Sorting can be performed\
          \ on any of the names in the response, and the objects can be sorted in\
          \ ascending or descending order. By default, the response objects are sorted\
          \ in ascending order. To sort in descending order, append the minus sign\
          \ (`-`) to the name. A single request can be sorted on multiple objects.\
          \ For example, you can sort all volumes from largest to smallest volume\
          \ size, and then sort volumes of the same size in ascending order by volume\
          \ name. To sort on multiple names, list the names as comma-separated values."
        required: false
        style: form
        explode: false
        schema:
          type: array
          items:
            pattern: "^[a-z]+(_[a-z]+)*-?"
            type: string
      - name: total_item_count
        in: query
        description: "If set to `true`, the `total_item_count` matching the specified\
          \ query parameters is calculated and returned in the response. If set to\
          \ `false`, the `total_item_count` is `null` in the response. This may speed\
          \ up queries where the `total_item_count` is large. If not specified, defaults\
          \ to `false`."
        required: false
        style: form
        explode: true
        schema:
          type: boolean
      responses:
        "200":
          description: OK
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/inline_response_200_28'
    post:
      tags:
      - Arrays
      summary: Create a factory reset token
      description: "Creates a token that can be used to perform a factory reset on\
        \ the array. Factory reset tokens can only be created after the array has\
        \ been prepared for reset (e.g., all volumes and snapshots must first be eradicated).\
        \ After a token has been created, operations that would take the array out\
        \ of the prepared state are disabled (e.g., creating volumes) until all tokens\
        \ have been deleted."
      parameters:
      - name: Authorization
        in: header
        description: "Access token (in JWT format) required to use any API endpoint\
          \ (except `/oauth2`, `/login`, and `/logout`)"
        required: false
        style: simple
        explode: false
        schema:
          type: string
      - name: X-Request-ID
        in: header
        description: Supplied by client during request or generated by server.
        required: false
        style: simple
        explode: false
        schema:
          type: string
      responses:
        "200":
          description: OK
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/inline_response_200_29'
    delete:
      tags:
      - Arrays
      summary: Delete a factory reset token
      description: Deletes an existing token that could be used to perform a factory
        reset on the array.
      responses:
        "200":
          description: OK
  /api/2.8/arrays/ntp-test:
    get:
      tags:
      - Arrays
      summary: List NTP test results
      description: Displays test results for configured NTP servers.
      parameters:
      - name: Authorization
        in: header
        description: "Access token (in JWT format) required to use any API endpoint\
          \ (except `/oauth2`, `/login`, and `/logout`)"
        required: false
        style: simple
        explode: false
        schema:
          type: string
      - name: X-Request-ID
        in: header
        description: Supplied by client during request or generated by server.
        required: false
        style: simple
        explode: false
        schema:
          type: string
      responses:
        "200":
          description: OK
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/inline_response_200_30'
  /api/2.8/arrays/performance:
    get:
      tags:
      - Arrays
      summary: List array front-end performance data
      description: "Displays real-time and historical front-end performance data at\
        \ the array level including latency, bandwidth, IOPS, average I/O size, and\
        \ queue depth."
      parameters:
      - name: Authorization
        in: header
        description: "Access token (in JWT format) required to use any API endpoint\
          \ (except `/oauth2`, `/login`, and `/logout`)"
        required: false
        style: simple
        explode: false
        schema:
          type: string
      - name: X-Request-ID
        in: header
        description: Supplied by client during request or generated by server.
        required: false
        style: simple
        explode: false
        schema:
          type: string
      - name: filter
        in: query
        description: Narrows down the results to only the response objects that satisfy
          the filter criteria.
        required: false
        style: form
        explode: true
        schema:
          type: string
      - name: end_time
        in: query
        description: "Displays historical performance data for the specified time\
          \ window, where `start_time` is the beginning of the time window, and `end_time`\
          \ is the end of the time window. The `start_time` and `end_time` parameters\
          \ are specified in milliseconds since the UNIX epoch. If `start_time` is\
          \ not specified, the start time will default to one resolution before the\
          \ end time, meaning that the most recent sample of performance data will\
          \ be displayed. If `end_time`is not specified, the end time will default\
          \ to the current time. Include the `resolution` parameter to display the\
          \ performance data at the specified resolution. If not specified, `resolution`\
          \ defaults to the lowest valid resolution."
        required: false
        style: form
        explode: true
        schema:
          type: integer
          format: int64
      - name: resolution
        in: query
        description: "The number of milliseconds between samples of historical data.\
          \ For array-wide performance metrics (`/arrays/performance` endpoint), valid\
          \ values are `1000` (1 second), `30000` (30 seconds), `300000` (5 minutes),\
          \ `1800000` (30 minutes), `7200000` (2 hours), `28800000` (8 hours), and\
          \ `86400000` (24 hours). For performance metrics on storage objects (`<object\
          \ name>/performance` endpoint), such as volumes, valid values are `30000`\
          \ (30 seconds), `300000` (5 minutes), `1800000` (30 minutes), `7200000`\
          \ (2 hours), `28800000` (8 hours), and `86400000` (24 hours). For space\
          \ metrics, (`<object name>/space` endpoint), valid values are `300000` (5\
          \ minutes), `1800000` (30 minutes), `7200000` (2 hours), `28800000` (8 hours),\
          \ and `86400000` (24 hours). Include the `start_time` parameter to display\
          \ the performance data starting at the specified start time. If `start_time`\
          \ is not specified, the start time will default to one resolution before\
          \ the end time, meaning that the most recent sample of performance data\
          \ will be displayed. Include the `end_time` parameter to display the performance\
          \ data until the specified end time. If `end_time`is not specified, the\
          \ end time will default to the current time. If the `resolution` parameter\
          \ is not specified but either the `start_time` or `end_time` parameter is,\
          \ then `resolution` will default to the lowest valid resolution."
        required: false
        style: form
        explode: true
        schema:
          minimum: 0
          type: integer
          format: int64
        example: 30000
      - name: start_time
        in: query
        description: "Displays historical performance data for the specified time\
          \ window, where `start_time` is the beginning of the time window, and `end_time`\
          \ is the end of the time window. The `start_time` and `end_time` parameters\
          \ are specified in milliseconds since the UNIX epoch. If `start_time` is\
          \ not specified, the start time will default to one resolution before the\
          \ end time, meaning that the most recent sample of performance data will\
          \ be displayed. If `end_time`is not specified, the end time will default\
          \ to the current time. Include the `resolution` parameter to display the\
          \ performance data at the specified resolution. If not specified, `resolution`\
          \ defaults to the lowest valid resolution."
        required: false
        style: form
        explode: true
        schema:
          type: integer
          format: int64
      - name: protocol
        in: query
        description: "Protocol type. Valid values are `nfs`, `smb`, and `all`."
        required: false
        style: form
        explode: true
        schema:
          type: string
      - name: protocol_group
        in: query
        description: "Protocol group type. Valid values are `block`, `file`, and `all`."
        required: false
        style: form
        explode: true
        schema:
          type: string
      - name: limit
        in: query
        description: "Limits the size of the response to the specified number of objects\
          \ on each page. To return the total number of resources, set `limit=0`.\
          \ The total number of resources is returned as a `total_item_count` value.\
          \ If the page size requested is larger than the system maximum limit, the\
          \ server returns the maximum limit, disregarding the requested page size."
        required: false
        style: form
        explode: true
        schema:
          minimum: 1
          type: integer
          format: int32
        example: 10
      - name: offset
        in: query
        description: The starting position based on the results of the query in relation
          to the full set of response objects returned.
        required: false
        style: form
        explode: true
        schema:
          minimum: 0
          type: integer
          format: int32
        example: 10
      - name: sort
        in: query
        description: "Returns the response objects in the order specified. Set `sort`\
          \ to the name in the response by which to sort. Sorting can be performed\
          \ on any of the names in the response, and the objects can be sorted in\
          \ ascending or descending order. By default, the response objects are sorted\
          \ in ascending order. To sort in descending order, append the minus sign\
          \ (`-`) to the name. A single request can be sorted on multiple objects.\
          \ For example, you can sort all volumes from largest to smallest volume\
          \ size, and then sort volumes of the same size in ascending order by volume\
          \ name. To sort on multiple names, list the names as comma-separated values."
        required: false
        style: form
        explode: false
        schema:
          type: array
          items:
            pattern: "^[a-z]+(_[a-z]+)*-?"
            type: string
      - name: total_item_count
        in: query
        description: "If set to `true`, the `total_item_count` matching the specified\
          \ query parameters is calculated and returned in the response. If set to\
          \ `false`, the `total_item_count` is `null` in the response. This may speed\
          \ up queries where the `total_item_count` is large. If not specified, defaults\
          \ to `false`."
        required: false
        style: form
        explode: true
        schema:
          type: boolean
      responses:
        "200":
          description: OK
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/inline_response_200_31'
  /api/2.8/arrays/space:
    get:
      tags:
      - Arrays
      summary: List array space information
      description: "Displays real-time and historical array space information including\
        \ unique volume and snapshot space, shared space, data reduction, provisioned\
        \ capacity, usable capacity, and parity."
      parameters:
      - name: Authorization
        in: header
        description: "Access token (in JWT format) required to use any API endpoint\
          \ (except `/oauth2`, `/login`, and `/logout`)"
        required: false
        style: simple
        explode: false
        schema:
          type: string
      - name: X-Request-ID
        in: header
        description: Supplied by client during request or generated by server.
        required: false
        style: simple
        explode: false
        schema:
          type: string
      - name: filter
        in: query
        description: Narrows down the results to only the response objects that satisfy
          the filter criteria.
        required: false
        style: form
        explode: true
        schema:
          type: string
      - name: end_time
        in: query
        description: "Displays historical performance data for the specified time\
          \ window, where `start_time` is the beginning of the time window, and `end_time`\
          \ is the end of the time window. The `start_time` and `end_time` parameters\
          \ are specified in milliseconds since the UNIX epoch. If `start_time` is\
          \ not specified, the start time will default to one resolution before the\
          \ end time, meaning that the most recent sample of performance data will\
          \ be displayed. If `end_time`is not specified, the end time will default\
          \ to the current time. Include the `resolution` parameter to display the\
          \ performance data at the specified resolution. If not specified, `resolution`\
          \ defaults to the lowest valid resolution."
        required: false
        style: form
        explode: true
        schema:
          type: integer
          format: int64
      - name: resolution
        in: query
        description: "The number of milliseconds between samples of historical data.\
          \ For array-wide performance metrics (`/arrays/performance` endpoint), valid\
          \ values are `1000` (1 second), `30000` (30 seconds), `300000` (5 minutes),\
          \ `1800000` (30 minutes), `7200000` (2 hours), `28800000` (8 hours), and\
          \ `86400000` (24 hours). For performance metrics on storage objects (`<object\
          \ name>/performance` endpoint), such as volumes, valid values are `30000`\
          \ (30 seconds), `300000` (5 minutes), `1800000` (30 minutes), `7200000`\
          \ (2 hours), `28800000` (8 hours), and `86400000` (24 hours). For space\
          \ metrics, (`<object name>/space` endpoint), valid values are `300000` (5\
          \ minutes), `1800000` (30 minutes), `7200000` (2 hours), `28800000` (8 hours),\
          \ and `86400000` (24 hours). Include the `start_time` parameter to display\
          \ the performance data starting at the specified start time. If `start_time`\
          \ is not specified, the start time will default to one resolution before\
          \ the end time, meaning that the most recent sample of performance data\
          \ will be displayed. Include the `end_time` parameter to display the performance\
          \ data until the specified end time. If `end_time`is not specified, the\
          \ end time will default to the current time. If the `resolution` parameter\
          \ is not specified but either the `start_time` or `end_time` parameter is,\
          \ then `resolution` will default to the lowest valid resolution."
        required: false
        style: form
        explode: true
        schema:
          minimum: 0
          type: integer
          format: int64
        example: 30000
      - name: start_time
        in: query
        description: "Displays historical performance data for the specified time\
          \ window, where `start_time` is the beginning of the time window, and `end_time`\
          \ is the end of the time window. The `start_time` and `end_time` parameters\
          \ are specified in milliseconds since the UNIX epoch. If `start_time` is\
          \ not specified, the start time will default to one resolution before the\
          \ end time, meaning that the most recent sample of performance data will\
          \ be displayed. If `end_time`is not specified, the end time will default\
          \ to the current time. Include the `resolution` parameter to display the\
          \ performance data at the specified resolution. If not specified, `resolution`\
          \ defaults to the lowest valid resolution."
        required: false
        style: form
        explode: true
        schema:
          type: integer
          format: int64
      - name: limit
        in: query
        description: "Limits the size of the response to the specified number of objects\
          \ on each page. To return the total number of resources, set `limit=0`.\
          \ The total number of resources is returned as a `total_item_count` value.\
          \ If the page size requested is larger than the system maximum limit, the\
          \ server returns the maximum limit, disregarding the requested page size."
        required: false
        style: form
        explode: true
        schema:
          minimum: 1
          type: integer
          format: int32
        example: 10
      - name: offset
        in: query
        description: The starting position based on the results of the query in relation
          to the full set of response objects returned.
        required: false
        style: form
        explode: true
        schema:
          minimum: 0
          type: integer
          format: int32
        example: 10
      - name: sort
        in: query
        description: "Returns the response objects in the order specified. Set `sort`\
          \ to the name in the response by which to sort. Sorting can be performed\
          \ on any of the names in the response, and the objects can be sorted in\
          \ ascending or descending order. By default, the response objects are sorted\
          \ in ascending order. To sort in descending order, append the minus sign\
          \ (`-`) to the name. A single request can be sorted on multiple objects.\
          \ For example, you can sort all volumes from largest to smallest volume\
          \ size, and then sort volumes of the same size in ascending order by volume\
          \ name. To sort on multiple names, list the names as comma-separated values."
        required: false
        style: form
        explode: false
        schema:
          type: array
          items:
            pattern: "^[a-z]+(_[a-z]+)*-?"
            type: string
      - name: total_item_count
        in: query
        description: "If set to `true`, the `total_item_count` matching the specified\
          \ query parameters is calculated and returned in the response. If set to\
          \ `false`, the `total_item_count` is `null` in the response. This may speed\
          \ up queries where the `total_item_count` is large. If not specified, defaults\
          \ to `false`."
        required: false
        style: form
        explode: true
        schema:
          type: boolean
      responses:
        "200":
          description: OK
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/inline_response_200_32'
  /api/2.8/array-connections:
    get:
      tags:
      - Array Connections
      summary: List connected arrays
      description: Display a list of connected arrays.
      parameters:
      - name: Authorization
        in: header
        description: "Access token (in JWT format) required to use any API endpoint\
          \ (except `/oauth2`, `/login`, and `/logout`)"
        required: false
        style: simple
        explode: false
        schema:
          type: string
      - name: X-Request-ID
        in: header
        description: Supplied by client during request or generated by server.
        required: false
        style: simple
        explode: false
        schema:
          type: string
      - name: continuation_token
        in: query
        description: A token used to retrieve the next page of data with some consistency
          guaranteed. The token is a Base64 encoded value. Set `continuation_token`
          to the system-generated token taken from the `x-next-token` header field
          of the response. A query has reached its last page when the response does
          not include a token. Pagination requires the `limit` and `continuation_token`
          query parameters.
        required: false
        style: form
        explode: true
        schema:
          type: string
      - name: filter
        in: query
        description: Narrows down the results to only the response objects that satisfy
          the filter criteria.
        required: false
        style: form
        explode: true
        schema:
          type: string
      - name: limit
        in: query
        description: "Limits the size of the response to the specified number of objects\
          \ on each page. To return the total number of resources, set `limit=0`.\
          \ The total number of resources is returned as a `total_item_count` value.\
          \ If the page size requested is larger than the system maximum limit, the\
          \ server returns the maximum limit, disregarding the requested page size."
        required: false
        style: form
        explode: true
        schema:
          minimum: 1
          type: integer
          format: int32
        example: 10
      - name: names
        in: query
        description: "Performs the operation on the unique name specified. Enter multiple\
          \ names in comma-separated format. For example, `name01,name02`."
        required: false
        style: form
        explode: false
        schema:
          type: array
          items:
            type: string
      - name: offset
        in: query
        description: The starting position based on the results of the query in relation
          to the full set of response objects returned.
        required: false
        style: form
        explode: true
        schema:
          minimum: 0
          type: integer
          format: int32
        example: 10
      - name: sort
        in: query
        description: "Returns the response objects in the order specified. Set `sort`\
          \ to the name in the response by which to sort. Sorting can be performed\
          \ on any of the names in the response, and the objects can be sorted in\
          \ ascending or descending order. By default, the response objects are sorted\
          \ in ascending order. To sort in descending order, append the minus sign\
          \ (`-`) to the name. A single request can be sorted on multiple objects.\
          \ For example, you can sort all volumes from largest to smallest volume\
          \ size, and then sort volumes of the same size in ascending order by volume\
          \ name. To sort on multiple names, list the names as comma-separated values."
        required: false
        style: form
        explode: false
        schema:
          type: array
          items:
            pattern: "^[a-z]+(_[a-z]+)*-?"
            type: string
      - name: total_item_count
        in: query
        description: "If set to `true`, the `total_item_count` matching the specified\
          \ query parameters is calculated and returned in the response. If set to\
          \ `false`, the `total_item_count` is `null` in the response. This may speed\
          \ up queries where the `total_item_count` is large. If not specified, defaults\
          \ to `false`."
        required: false
        style: form
        explode: true
        schema:
          type: boolean
      responses:
        "200":
          description: OK
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/inline_response_200_33'
    post:
      tags:
      - Array Connections
      summary: Create an array connection
      description: Creates a connection between the current array and the specified
        array.
      parameters:
      - name: Authorization
        in: header
        description: "Access token (in JWT format) required to use any API endpoint\
          \ (except `/oauth2`, `/login`, and `/logout`)"
        required: false
        style: simple
        explode: false
        schema:
          type: string
      - name: X-Request-ID
        in: header
        description: Supplied by client during request or generated by server.
        required: false
        style: simple
        explode: false
        schema:
          type: string
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/2_8_arrayconnections_body'
        required: true
      responses:
        "200":
          description: OK
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/inline_response_200_34'
    delete:
      tags:
      - Array Connections
      summary: Delete an array connection
      description: Deletes the connection to the current array from the specified
        array.
      parameters:
      - name: Authorization
        in: header
        description: "Access token (in JWT format) required to use any API endpoint\
          \ (except `/oauth2`, `/login`, and `/logout`)"
        required: false
        style: simple
        explode: false
        schema:
          type: string
      - name: X-Request-ID
        in: header
        description: Supplied by client during request or generated by server.
        required: false
        style: simple
        explode: false
        schema:
          type: string
      - name: names
        in: query
        description: "Performs the operation on the unique name specified. Enter multiple\
          \ names in comma-separated format. For example, `name01,name02`."
        required: false
        style: form
        explode: false
        schema:
          type: array
          items:
            type: string
      responses:
        "200":
          description: OK
    patch:
      tags:
      - Array Connections
      summary: Modify an array connection
      description: Modifies the bandwidth throttling attributes for a connected array.
      parameters:
      - name: Authorization
        in: header
        description: "Access token (in JWT format) required to use any API endpoint\
          \ (except `/oauth2`, `/login`, and `/logout`)"
        required: false
        style: simple
        explode: false
        schema:
          type: string
      - name: X-Request-ID
        in: header
        description: Supplied by client during request or generated by server.
        required: false
        style: simple
        explode: false
        schema:
          type: string
      - name: names
        in: query
        description: "Performs the operation on the unique name specified. Enter multiple\
          \ names in comma-separated format. For example, `name01,name02`."
        required: false
        style: form
        explode: false
        schema:
          type: array
          items:
            type: string
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/2_8_arrayconnections_body_1'
        required: true
      responses:
        "200":
          description: OK
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/inline_response_200_34'
  /api/2.8/array-connections/connection-key:
    get:
      tags:
      - Array Connections
      summary: List connection key
      description: Displays the connection key for the array.
      responses:
        "200":
          description: OK
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/inline_response_200_35'
  /api/2.8/array-connections/path:
    get:
      tags:
      - Array Connections
      summary: List connection path
      description: Displays the connection path from the array where the connection
        was made.
      parameters:
      - name: Authorization
        in: header
        description: "Access token (in JWT format) required to use any API endpoint\
          \ (except `/oauth2`, `/login`, and `/logout`)"
        required: false
        style: simple
        explode: false
        schema:
          type: string
      - name: X-Request-ID
        in: header
        description: Supplied by client during request or generated by server.
        required: false
        style: simple
        explode: false
        schema:
          type: string
      - name: continuation_token
        in: query
        description: A token used to retrieve the next page of data with some consistency
          guaranteed. The token is a Base64 encoded value. Set `continuation_token`
          to the system-generated token taken from the `x-next-token` header field
          of the response. A query has reached its last page when the response does
          not include a token. Pagination requires the `limit` and `continuation_token`
          query parameters.
        required: false
        style: form
        explode: true
        schema:
          type: string
      - name: filter
        in: query
        description: Narrows down the results to only the response objects that satisfy
          the filter criteria.
        required: false
        style: form
        explode: true
        schema:
          type: string
      - name: limit
        in: query
        description: "Limits the size of the response to the specified number of objects\
          \ on each page. To return the total number of resources, set `limit=0`.\
          \ The total number of resources is returned as a `total_item_count` value.\
          \ If the page size requested is larger than the system maximum limit, the\
          \ server returns the maximum limit, disregarding the requested page size."
        required: false
        style: form
        explode: true
        schema:
          minimum: 1
          type: integer
          format: int32
        example: 10
      - name: names
        in: query
        description: "Performs the operation on the unique name specified. Enter multiple\
          \ names in comma-separated format. For example, `name01,name02`."
        required: false
        style: form
        explode: false
        schema:
          type: array
          items:
            type: string
      - name: offset
        in: query
        description: The starting position based on the results of the query in relation
          to the full set of response objects returned.
        required: false
        style: form
        explode: true
        schema:
          minimum: 0
          type: integer
          format: int32
        example: 10
      - name: sort
        in: query
        description: "Returns the response objects in the order specified. Set `sort`\
          \ to the name in the response by which to sort. Sorting can be performed\
          \ on any of the names in the response, and the objects can be sorted in\
          \ ascending or descending order. By default, the response objects are sorted\
          \ in ascending order. To sort in descending order, append the minus sign\
          \ (`-`) to the name. A single request can be sorted on multiple objects.\
          \ For example, you can sort all volumes from largest to smallest volume\
          \ size, and then sort volumes of the same size in ascending order by volume\
          \ name. To sort on multiple names, list the names as comma-separated values."
        required: false
        style: form
        explode: false
        schema:
          type: array
          items:
            pattern: "^[a-z]+(_[a-z]+)*-?"
            type: string
      - name: total_item_count
        in: query
        description: "If set to `true`, the `total_item_count` matching the specified\
          \ query parameters is calculated and returned in the response. If set to\
          \ `false`, the `total_item_count` is `null` in the response. This may speed\
          \ up queries where the `total_item_count` is large. If not specified, defaults\
          \ to `false`."
        required: false
        style: form
        explode: true
        schema:
          type: boolean
      responses:
        "200":
          description: OK
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/inline_response_200_36'
  /api/2.8/audits:
    get:
      tags:
      - Audits
      summary: List audits
      description: Displays a list of audits.
      parameters:
      - name: Authorization
        in: header
        description: "Access token (in JWT format) required to use any API endpoint\
          \ (except `/oauth2`, `/login`, and `/logout`)"
        required: false
        style: simple
        explode: false
        schema:
          type: string
      - name: X-Request-ID
        in: header
        description: Supplied by client during request or generated by server.
        required: false
        style: simple
        explode: false
        schema:
          type: string
      - name: continuation_token
        in: query
        description: A token used to retrieve the next page of data with some consistency
          guaranteed. The token is a Base64 encoded value. Set `continuation_token`
          to the system-generated token taken from the `x-next-token` header field
          of the response. A query has reached its last page when the response does
          not include a token. Pagination requires the `limit` and `continuation_token`
          query parameters.
        required: false
        style: form
        explode: true
        schema:
          type: string
      - name: filter
        in: query
        description: Narrows down the results to only the response objects that satisfy
          the filter criteria.
        required: false
        style: form
        explode: true
        schema:
          type: string
      - name: ids
        in: query
        description: Performs the operation on the unique resource IDs specified.
          Enter multiple resource IDs in comma-separated format. The `ids` and `names`
          parameters cannot be provided together.
        required: false
        style: form
        explode: false
        schema:
          type: array
          items:
            type: string
      - name: limit
        in: query
        description: "Limits the size of the response to the specified number of objects\
          \ on each page. To return the total number of resources, set `limit=0`.\
          \ The total number of resources is returned as a `total_item_count` value.\
          \ If the page size requested is larger than the system maximum limit, the\
          \ server returns the maximum limit, disregarding the requested page size."
        required: false
        style: form
        explode: true
        schema:
          minimum: 1
          type: integer
          format: int32
        example: 10
      - name: names
        in: query
        description: "Performs the operation on the unique name specified. Enter multiple\
          \ names in comma-separated format. For example, `name01,name02`."
        required: false
        style: form
        explode: false
        schema:
          type: array
          items:
            type: string
      - name: offset
        in: query
        description: The starting position based on the results of the query in relation
          to the full set of response objects returned.
        required: false
        style: form
        explode: true
        schema:
          minimum: 0
          type: integer
          format: int32
        example: 10
      - name: sort
        in: query
        description: "Returns the response objects in the order specified. Set `sort`\
          \ to the name in the response by which to sort. Sorting can be performed\
          \ on any of the names in the response, and the objects can be sorted in\
          \ ascending or descending order. By default, the response objects are sorted\
          \ in ascending order. To sort in descending order, append the minus sign\
          \ (`-`) to the name. A single request can be sorted on multiple objects.\
          \ For example, you can sort all volumes from largest to smallest volume\
          \ size, and then sort volumes of the same size in ascending order by volume\
          \ name. To sort on multiple names, list the names as comma-separated values."
        required: false
        style: form
        explode: false
        schema:
          type: array
          items:
            pattern: "^[a-z]+(_[a-z]+)*-?"
            type: string
      - name: total_item_count
        in: query
        description: "If set to `true`, the `total_item_count` matching the specified\
          \ query parameters is calculated and returned in the response. If set to\
          \ `false`, the `total_item_count` is `null` in the response. This may speed\
          \ up queries where the `total_item_count` is large. If not specified, defaults\
          \ to `false`."
        required: false
        style: form
        explode: true
        schema:
          type: boolean
      responses:
        "200":
          description: OK
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/inline_response_200_37'
  /api/2.8/certificates:
    get:
      tags:
      - Certificates
      summary: List certificate attributes
      description: Displays certificate attributes.
      parameters:
      - name: Authorization
        in: header
        description: "Access token (in JWT format) required to use any API endpoint\
          \ (except `/oauth2`, `/login`, and `/logout`)"
        required: false
        style: simple
        explode: false
        schema:
          type: string
      - name: X-Request-ID
        in: header
        description: Supplied by client during request or generated by server.
        required: false
        style: simple
        explode: false
        schema:
          type: string
      - name: continuation_token
        in: query
        description: A token used to retrieve the next page of data with some consistency
          guaranteed. The token is a Base64 encoded value. Set `continuation_token`
          to the system-generated token taken from the `x-next-token` header field
          of the response. A query has reached its last page when the response does
          not include a token. Pagination requires the `limit` and `continuation_token`
          query parameters.
        required: false
        style: form
        explode: true
        schema:
          type: string
      - name: filter
        in: query
        description: Narrows down the results to only the response objects that satisfy
          the filter criteria.
        required: false
        style: form
        explode: true
        schema:
          type: string
      - name: limit
        in: query
        description: "Limits the size of the response to the specified number of objects\
          \ on each page. To return the total number of resources, set `limit=0`.\
          \ The total number of resources is returned as a `total_item_count` value.\
          \ If the page size requested is larger than the system maximum limit, the\
          \ server returns the maximum limit, disregarding the requested page size."
        required: false
        style: form
        explode: true
        schema:
          minimum: 1
          type: integer
          format: int32
        example: 10
      - name: names
        in: query
        description: "Performs the operation on the unique name specified. Enter multiple\
          \ names in comma-separated format. For example, `name01,name02`."
        required: false
        style: form
        explode: false
        schema:
          type: array
          items:
            type: string
      - name: offset
        in: query
        description: The starting position based on the results of the query in relation
          to the full set of response objects returned.
        required: false
        style: form
        explode: true
        schema:
          minimum: 0
          type: integer
          format: int32
        example: 10
      - name: sort
        in: query
        description: "Returns the response objects in the order specified. Set `sort`\
          \ to the name in the response by which to sort. Sorting can be performed\
          \ on any of the names in the response, and the objects can be sorted in\
          \ ascending or descending order. By default, the response objects are sorted\
          \ in ascending order. To sort in descending order, append the minus sign\
          \ (`-`) to the name. A single request can be sorted on multiple objects.\
          \ For example, you can sort all volumes from largest to smallest volume\
          \ size, and then sort volumes of the same size in ascending order by volume\
          \ name. To sort on multiple names, list the names as comma-separated values."
        required: false
        style: form
        explode: false
        schema:
          type: array
          items:
            pattern: "^[a-z]+(_[a-z]+)*-?"
            type: string
      - name: total_item_count
        in: query
        description: "If set to `true`, the `total_item_count` matching the specified\
          \ query parameters is calculated and returned in the response. If set to\
          \ `false`, the `total_item_count` is `null` in the response. This may speed\
          \ up queries where the `total_item_count` is large. If not specified, defaults\
          \ to `false`."
        required: false
        style: form
        explode: true
        schema:
          type: boolean
      responses:
        "200":
          description: OK
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/inline_response_200_38'
    post:
      tags:
      - Certificates
      summary: Create certificate
      description: Creates a certificate object and specifies the valid time period
        and organization details of the certificate. A certificate can be imported
        or manually configured.
      parameters:
      - name: Authorization
        in: header
        description: "Access token (in JWT format) required to use any API endpoint\
          \ (except `/oauth2`, `/login`, and `/logout`)"
        required: false
        style: simple
        explode: false
        schema:
          type: string
      - name: X-Request-ID
        in: header
        description: Supplied by client during request or generated by server.
        required: false
        style: simple
        explode: false
        schema:
          type: string
      - name: names
        in: query
        description: "Performs the operation on the unique name specified. Enter multiple\
          \ names in comma-separated format. For example, `name01,name02`."
        required: false
        style: form
        explode: false
        schema:
          type: array
          items:
            type: string
      requestBody:
        $ref: '#/components/requestBodies/Certificate'
      responses:
        "200":
          description: Returns the newly created certificate object.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/inline_response_200_39'
    delete:
      tags:
      - Certificates
      summary: Delete certificate
      description: Deletes a specific certificate object.
      parameters:
      - name: Authorization
        in: header
        description: "Access token (in JWT format) required to use any API endpoint\
          \ (except `/oauth2`, `/login`, and `/logout`)"
        required: false
        style: simple
        explode: false
        schema:
          type: string
      - name: X-Request-ID
        in: header
        description: Supplied by client during request or generated by server.
        required: false
        style: simple
        explode: false
        schema:
          type: string
      - name: names
        in: query
        description: "Performs the operation on the unique name specified. Enter multiple\
          \ names in comma-separated format. For example, `name01,name02`."
        required: false
        style: form
        explode: false
        schema:
          type: array
          items:
            type: string
      responses:
        "200":
          description: OK
    patch:
      tags:
      - Certificates
      summary: Modify certificates
      description: "Modifies certificate attributes. When you modify the attributes\
        \ of a self-signed certificate, Purity//FA replaces the existing certificate\
        \ with a new certificate, which is generated with the specified attributes."
      parameters:
      - name: Authorization
        in: header
        description: "Access token (in JWT format) required to use any API endpoint\
          \ (except `/oauth2`, `/login`, and `/logout`)"
        required: false
        style: simple
        explode: false
        schema:
          type: string
      - name: X-Request-ID
        in: header
        description: Supplied by client during request or generated by server.
        required: false
        style: simple
        explode: false
        schema:
          type: string
      - name: names
        in: query
        description: "Performs the operation on the unique name specified. Enter multiple\
          \ names in comma-separated format. For example, `name01,name02`."
        required: false
        style: form
        explode: false
        schema:
          type: array
          items:
            type: string
      - name: generate_new_key
        in: query
        description: "If set to `true`, a new private key is generated when generating\
          \ a new certificate with the specified attributes. This may not be set to\
          \ `true` when importing a certificate and private key, and may not be set\
          \ to `false` when generating a new self-signed certificate to replace a\
          \ certificate that was imported. Default setting is `false`."
        required: false
        style: form
        explode: true
        schema:
          type: boolean
      requestBody:
        $ref: '#/components/requestBodies/Certificate'
      responses:
        "200":
          description: Returns the newly updated certificate object.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/inline_response_200_39'
  /api/2.8/certificates/certificate-signing-requests:
    post:
      tags:
      - Certificates
      summary: Create certificate signing request
      description: Creates a certificate signing request based on the certificate
        type and parameters.
      parameters:
      - name: Authorization
        in: header
        description: "Access token (in JWT format) required to use any API endpoint\
          \ (except `/oauth2`, `/login`, and `/logout`)"
        required: false
        style: simple
        explode: false
        schema:
          type: string
      - name: X-Request-ID
        in: header
        description: Supplied by client during request or generated by server.
        required: false
        style: simple
        explode: false
        schema:
          type: string
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/certificates_certificatesigningrequests_body'
        required: true
      responses:
        "200":
          description: Returns the newly created certificate object.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/inline_response_200_40'
  /api/2.8/connections:
    get:
      tags:
      - Connections
      summary: List volume connections
      description: "Displays a list of connections between a volume and its hosts\
        \ and host groups, and the logical unit numbers (LUNs) used by the associated\
        \ hosts to address these volumes."
      parameters:
      - name: Authorization
        in: header
        description: "Access token (in JWT format) required to use any API endpoint\
          \ (except `/oauth2`, `/login`, and `/logout`)"
        required: false
        style: simple
        explode: false
        schema:
          type: string
      - name: X-Request-ID
        in: header
        description: Supplied by client during request or generated by server.
        required: false
        style: simple
        explode: false
        schema:
          type: string
      - name: continuation_token
        in: query
        description: A token used to retrieve the next page of data with some consistency
          guaranteed. The token is a Base64 encoded value. Set `continuation_token`
          to the system-generated token taken from the `x-next-token` header field
          of the response. A query has reached its last page when the response does
          not include a token. Pagination requires the `limit` and `continuation_token`
          query parameters.
        required: false
        style: form
        explode: true
        schema:
          type: string
      - name: filter
        in: query
        description: Narrows down the results to only the response objects that satisfy
          the filter criteria.
        required: false
        style: form
        explode: true
        schema:
          type: string
      - name: host_group_names
        in: query
        description: "Performs the operation on the host group specified. Enter multiple\
          \ names in comma-separated format. A request cannot include a mix of multiple\
          \ objects with multiple names. For example, a request cannot include a mix\
          \ of multiple host group names and volume names; instead, at least one of\
          \ the objects (e.g., `host_group_names`) must be set to only one name (e.g.,\
          \ `hgroup01`)."
        required: false
        style: form
        explode: false
        schema:
          type: array
          items:
            type: string
      - name: host_names
        in: query
        description: "Performs the operation on the hosts specified. Enter multiple\
          \ names in comma-separated format. For example, `host01,host02`. A request\
          \ cannot include a mix of multiple objects with multiple names. For example,\
          \ a request cannot include a mix of multiple host names and volume names;\
          \ instead, at least one of the objects (e.g., `host_names`) must be set\
          \ to only one name (e.g., `host01`)."
        required: false
        style: form
        explode: false
        schema:
          type: array
          items:
            type: string
      - name: limit
        in: query
        description: "Limits the size of the response to the specified number of objects\
          \ on each page. To return the total number of resources, set `limit=0`.\
          \ The total number of resources is returned as a `total_item_count` value.\
          \ If the page size requested is larger than the system maximum limit, the\
          \ server returns the maximum limit, disregarding the requested page size."
        required: false
        style: form
        explode: true
        schema:
          minimum: 1
          type: integer
          format: int32
        example: 10
      - name: offset
        in: query
        description: The starting position based on the results of the query in relation
          to the full set of response objects returned.
        required: false
        style: form
        explode: true
        schema:
          minimum: 0
          type: integer
          format: int32
        example: 10
      - name: protocol_endpoint_names
        in: query
        description: "Performs the operation on the protocol endpoints specified.\
          \ Enter multiple names in comma-separated format. For example, `pe01,pe02`.\
          \ A request cannot include a mix of multiple objects with multiple names.\
          \ For example, a request cannot include a mix of multiple protocol endpoint\
          \ names and host names; instead, at least one of the objects (e.g., `protocol_endpoint_names`)\
          \ must be set to one name (e.g., `pe01`)."
        required: false
        style: form
        explode: false
        schema:
          type: array
          items:
            type: string
      - name: sort
        in: query
        description: "Returns the response objects in the order specified. Set `sort`\
          \ to the name in the response by which to sort. Sorting can be performed\
          \ on any of the names in the response, and the objects can be sorted in\
          \ ascending or descending order. By default, the response objects are sorted\
          \ in ascending order. To sort in descending order, append the minus sign\
          \ (`-`) to the name. A single request can be sorted on multiple objects.\
          \ For example, you can sort all volumes from largest to smallest volume\
          \ size, and then sort volumes of the same size in ascending order by volume\
          \ name. To sort on multiple names, list the names as comma-separated values."
        required: false
        style: form
        explode: false
        schema:
          type: array
          items:
            pattern: "^[a-z]+(_[a-z]+)*-?"
            type: string
      - name: total_item_count
        in: query
        description: "If set to `true`, the `total_item_count` matching the specified\
          \ query parameters is calculated and returned in the response. If set to\
          \ `false`, the `total_item_count` is `null` in the response. This may speed\
          \ up queries where the `total_item_count` is large. If not specified, defaults\
          \ to `false`."
        required: false
        style: form
        explode: true
        schema:
          type: boolean
      - name: volume_names
        in: query
        description: "Performs the operation on the volume specified. Enter multiple\
          \ names in comma-separated format. For example, `vol01,vol02`. A request\
          \ cannot include a mix of multiple objects with multiple names. For example,\
          \ a request cannot include a mix of multiple volume names and host names;\
          \ instead, at least one of the objects (e.g., `volume_names`) must be set\
          \ to only one name (e.g., `vol01`)."
        required: false
        style: form
        explode: false
        schema:
          type: array
          items:
            type: string
      responses:
        "200":
          description: OK
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/inline_response_200_41'
    post:
      tags:
      - Connections
      summary: Create a connection between a volume and host or host group
      description: Creates a connection between a volume and a host or host group.
        The `volume_names` and `host_names` or `host_group_names` query parameters
        are required.
      parameters:
      - name: Authorization
        in: header
        description: "Access token (in JWT format) required to use any API endpoint\
          \ (except `/oauth2`, `/login`, and `/logout`)"
        required: false
        style: simple
        explode: false
        schema:
          type: string
      - name: X-Request-ID
        in: header
        description: Supplied by client during request or generated by server.
        required: false
        style: simple
        explode: false
        schema:
          type: string
      - name: host_group_names
        in: query
        description: "Performs the operation on the host group specified. Enter multiple\
          \ names in comma-separated format. A request cannot include a mix of multiple\
          \ objects with multiple names. For example, a request cannot include a mix\
          \ of multiple host group names and volume names; instead, at least one of\
          \ the objects (e.g., `host_group_names`) must be set to only one name (e.g.,\
          \ `hgroup01`)."
        required: false
        style: form
        explode: false
        schema:
          type: array
          items:
            type: string
      - name: host_names
        in: query
        description: "Performs the operation on the hosts specified. Enter multiple\
          \ names in comma-separated format. For example, `host01,host02`. A request\
          \ cannot include a mix of multiple objects with multiple names. For example,\
          \ a request cannot include a mix of multiple host names and volume names;\
          \ instead, at least one of the objects (e.g., `host_names`) must be set\
          \ to only one name (e.g., `host01`)."
        required: false
        style: form
        explode: false
        schema:
          type: array
          items:
            type: string
      - name: volume_names
        in: query
        description: "Performs the operation on the volume specified. Enter multiple\
          \ names in comma-separated format. For example, `vol01,vol02`. A request\
          \ cannot include a mix of multiple objects with multiple names. For example,\
          \ a request cannot include a mix of multiple volume names and host names;\
          \ instead, at least one of the objects (e.g., `volume_names`) must be set\
          \ to only one name (e.g., `vol01`)."
        required: false
        style: form
        explode: false
        schema:
          type: array
          items:
            type: string
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/2_8_connections_body'
      responses:
        "200":
          description: OK
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/inline_response_200_42'
    delete:
      tags:
      - Connections
      summary: Delete a connection between a volume and its host or host group
      description: Deletes the connection between a volume and its associated host
        or host group. The `volume_names` and `host_names` or `host_group_names` query
        parameters are required.
      parameters:
      - name: Authorization
        in: header
        description: "Access token (in JWT format) required to use any API endpoint\
          \ (except `/oauth2`, `/login`, and `/logout`)"
        required: false
        style: simple
        explode: false
        schema:
          type: string
      - name: X-Request-ID
        in: header
        description: Supplied by client during request or generated by server.
        required: false
        style: simple
        explode: false
        schema:
          type: string
      - name: host_group_names
        in: query
        description: "Performs the operation on the host group specified. Enter multiple\
          \ names in comma-separated format. A request cannot include a mix of multiple\
          \ objects with multiple names. For example, a request cannot include a mix\
          \ of multiple host group names and volume names; instead, at least one of\
          \ the objects (e.g., `host_group_names`) must be set to only one name (e.g.,\
          \ `hgroup01`)."
        required: false
        style: form
        explode: false
        schema:
          type: array
          items:
            type: string
      - name: host_names
        in: query
        description: "Performs the operation on the hosts specified. Enter multiple\
          \ names in comma-separated format. For example, `host01,host02`. A request\
          \ cannot include a mix of multiple objects with multiple names. For example,\
          \ a request cannot include a mix of multiple host names and volume names;\
          \ instead, at least one of the objects (e.g., `host_names`) must be set\
          \ to only one name (e.g., `host01`)."
        required: false
        style: form
        explode: false
        schema:
          type: array
          items:
            type: string
      - name: volume_names
        in: query
        description: "Performs the operation on the volume specified. Enter multiple\
          \ names in comma-separated format. For example, `vol01,vol02`. A request\
          \ cannot include a mix of multiple objects with multiple names. For example,\
          \ a request cannot include a mix of multiple volume names and host names;\
          \ instead, at least one of the objects (e.g., `volume_names`) must be set\
          \ to only one name (e.g., `vol01`)."
        required: false
        style: form
        explode: false
        schema:
          type: array
          items:
            type: string
      responses:
        "200":
          description: OK
  /api/2.8/controllers:
    get:
      tags:
      - Controllers
      summary: List controller information and status
      description: "Displays the name, mode, FlashArray model, Purity//FA software\
        \ version, and status of each controller in the array."
      parameters:
      - name: Authorization
        in: header
        description: "Access token (in JWT format) required to use any API endpoint\
          \ (except `/oauth2`, `/login`, and `/logout`)"
        required: false
        style: simple
        explode: false
        schema:
          type: string
      - name: X-Request-ID
        in: header
        description: Supplied by client during request or generated by server.
        required: false
        style: simple
        explode: false
        schema:
          type: string
      - name: continuation_token
        in: query
        description: A token used to retrieve the next page of data with some consistency
          guaranteed. The token is a Base64 encoded value. Set `continuation_token`
          to the system-generated token taken from the `x-next-token` header field
          of the response. A query has reached its last page when the response does
          not include a token. Pagination requires the `limit` and `continuation_token`
          query parameters.
        required: false
        style: form
        explode: true
        schema:
          type: string
      - name: filter
        in: query
        description: Narrows down the results to only the response objects that satisfy
          the filter criteria.
        required: false
        style: form
        explode: true
        schema:
          type: string
      - name: limit
        in: query
        description: "Limits the size of the response to the specified number of objects\
          \ on each page. To return the total number of resources, set `limit=0`.\
          \ The total number of resources is returned as a `total_item_count` value.\
          \ If the page size requested is larger than the system maximum limit, the\
          \ server returns the maximum limit, disregarding the requested page size."
        required: false
        style: form
        explode: true
        schema:
          minimum: 1
          type: integer
          format: int32
        example: 10
      - name: names
        in: query
        description: "Performs the operation on the unique name specified. Enter multiple\
          \ names in comma-separated format. For example, `name01,name02`."
        required: false
        style: form
        explode: false
        schema:
          type: array
          items:
            type: string
      - name: offset
        in: query
        description: The starting position based on the results of the query in relation
          to the full set of response objects returned.
        required: false
        style: form
        explode: true
        schema:
          minimum: 0
          type: integer
          format: int32
        example: 10
      - name: sort
        in: query
        description: "Returns the response objects in the order specified. Set `sort`\
          \ to the name in the response by which to sort. Sorting can be performed\
          \ on any of the names in the response, and the objects can be sorted in\
          \ ascending or descending order. By default, the response objects are sorted\
          \ in ascending order. To sort in descending order, append the minus sign\
          \ (`-`) to the name. A single request can be sorted on multiple objects.\
          \ For example, you can sort all volumes from largest to smallest volume\
          \ size, and then sort volumes of the same size in ascending order by volume\
          \ name. To sort on multiple names, list the names as comma-separated values."
        required: false
        style: form
        explode: false
        schema:
          type: array
          items:
            pattern: "^[a-z]+(_[a-z]+)*-?"
            type: string
      - name: total_item_count
        in: query
        description: "If set to `true`, the `total_item_count` matching the specified\
          \ query parameters is calculated and returned in the response. If set to\
          \ `false`, the `total_item_count` is `null` in the response. This may speed\
          \ up queries where the `total_item_count` is large. If not specified, defaults\
          \ to `false`."
        required: false
        style: form
        explode: true
        schema:
          type: boolean
      responses:
        "200":
          description: OK
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/inline_response_200_43'
  /api/2.8/directories:
    get:
      tags:
      - Directories
      summary: List directories
      description: "Displays a list of directories, including those pending eradication."
      parameters:
      - name: Authorization
        in: header
        description: "Access token (in JWT format) required to use any API endpoint\
          \ (except `/oauth2`, `/login`, and `/logout`)"
        required: false
        style: simple
        explode: false
        schema:
          type: string
      - name: X-Request-ID
        in: header
        description: Supplied by client during request or generated by server.
        required: false
        style: simple
        explode: false
        schema:
          type: string
      - name: continuation_token
        in: query
        description: A token used to retrieve the next page of data with some consistency
          guaranteed. The token is a Base64 encoded value. Set `continuation_token`
          to the system-generated token taken from the `x-next-token` header field
          of the response. A query has reached its last page when the response does
          not include a token. Pagination requires the `limit` and `continuation_token`
          query parameters.
        required: false
        style: form
        explode: true
        schema:
          type: string
      - name: destroyed
        in: query
        description: "If set to `true`, lists only destroyed objects that are in the\
          \ eradication pending state. If set to `false`, lists only objects that\
          \ are not destroyed. For destroyed objects, the time remaining is displayed\
          \ in milliseconds."
        required: false
        style: form
        explode: true
        schema:
          type: boolean
      - name: file_system_ids
        in: query
        description: Performs the operation on the file system ID specified. Enter
          multiple file system IDs in comma-separated format. The `file_system_ids`
          and `file_system_names` parameters cannot be provided together.
        required: false
        style: form
        explode: false
        schema:
          type: array
          items:
            type: string
      - name: file_system_names
        in: query
        description: "Performs the operation on the file system name specified. Enter\
          \ multiple file system names in comma-separated format. For example, `filesystem01,filesystem02`."
        required: false
        style: form
        explode: false
        schema:
          type: array
          items:
            type: string
      - name: filter
        in: query
        description: Narrows down the results to only the response objects that satisfy
          the filter criteria.
        required: false
        style: form
        explode: true
        schema:
          type: string
      - name: ids
        in: query
        description: Performs the operation on the unique resource IDs specified.
          Enter multiple resource IDs in comma-separated format. The `ids` and `names`
          parameters cannot be provided together.
        required: false
        style: form
        explode: false
        schema:
          type: array
          items:
            type: string
      - name: limit
        in: query
        description: "Limits the size of the response to the specified number of objects\
          \ on each page. To return the total number of resources, set `limit=0`.\
          \ The total number of resources is returned as a `total_item_count` value.\
          \ If the page size requested is larger than the system maximum limit, the\
          \ server returns the maximum limit, disregarding the requested page size."
        required: false
        style: form
        explode: true
        schema:
          minimum: 1
          type: integer
          format: int32
        example: 10
      - name: names
        in: query
        description: "Performs the operation on the unique name specified. Enter multiple\
          \ names in comma-separated format. For example, `name01,name02`."
        required: false
        style: form
        explode: false
        schema:
          type: array
          items:
            type: string
      - name: offset
        in: query
        description: The starting position based on the results of the query in relation
          to the full set of response objects returned.
        required: false
        style: form
        explode: true
        schema:
          minimum: 0
          type: integer
          format: int32
        example: 10
      - name: sort
        in: query
        description: "Returns the response objects in the order specified. Set `sort`\
          \ to the name in the response by which to sort. Sorting can be performed\
          \ on any of the names in the response, and the objects can be sorted in\
          \ ascending or descending order. By default, the response objects are sorted\
          \ in ascending order. To sort in descending order, append the minus sign\
          \ (`-`) to the name. A single request can be sorted on multiple objects.\
          \ For example, you can sort all volumes from largest to smallest volume\
          \ size, and then sort volumes of the same size in ascending order by volume\
          \ name. To sort on multiple names, list the names as comma-separated values."
        required: false
        style: form
        explode: false
        schema:
          type: array
          items:
            pattern: "^[a-z]+(_[a-z]+)*-?"
            type: string
      - name: total_item_count
        in: query
        description: "If set to `true`, the `total_item_count` matching the specified\
          \ query parameters is calculated and returned in the response. If set to\
          \ `false`, the `total_item_count` is `null` in the response. This may speed\
          \ up queries where the `total_item_count` is large. If not specified, defaults\
          \ to `false`."
        required: false
        style: form
        explode: true
        schema:
          type: boolean
      - name: total_only
        in: query
        description: "If set to `true`, returns the aggregate value of all items after\
          \ filtering. Where it makes more sense, the average value is displayed instead.\
          \ The values are displayed for each name where meaningful. If `total_only=true`,\
          \ the `items` list will be empty."
        required: false
        style: form
        explode: true
        schema:
          type: boolean
      responses:
        "200":
          description: OK
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/inline_response_200_44'
    post:
      tags:
      - Directories
      summary: Create directory
      description: "Creates a managed directory at the specified path. The managed\
        \ directory name must consist of a file system name prefix and a managed directory\
        \ name suffix (separated with '&#58;'). The suffix must be between 1 and 63\
        \ characters (alphanumeric and '-') in length and begin and end with a letter\
        \ or number. The suffix must include at least one letter or '-'. Set `names`\
        \ to create a managed directory with the specified full managed directory\
        \ name, or set `file_system_names` or `file_system_ids` in the query parameters\
        \ and `suffix` in the body parameters to create a managed directory in the\
        \ specified file system with the specified suffix. These two options are exclusive."
      parameters:
      - name: Authorization
        in: header
        description: "Access token (in JWT format) required to use any API endpoint\
          \ (except `/oauth2`, `/login`, and `/logout`)"
        required: false
        style: simple
        explode: false
        schema:
          type: string
      - name: X-Request-ID
        in: header
        description: Supplied by client during request or generated by server.
        required: false
        style: simple
        explode: false
        schema:
          type: string
      - name: names
        in: query
        description: "Performs the operation on the unique name specified. Enter multiple\
          \ names in comma-separated format. For example, `name01,name02`."
        required: false
        style: form
        explode: false
        schema:
          type: array
          items:
            type: string
      - name: file_system_names
        in: query
        description: "Performs the operation on the file system name specified. Enter\
          \ multiple file system names in comma-separated format. For example, `filesystem01,filesystem02`."
        required: false
        style: form
        explode: false
        schema:
          type: array
          items:
            type: string
      - name: file_system_ids
        in: query
        description: Performs the operation on the file system ID specified. Enter
          multiple file system IDs in comma-separated format. The `file_system_ids`
          and `file_system_names` parameters cannot be provided together.
        required: false
        style: form
        explode: false
        schema:
          type: array
          items:
            type: string
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/2_8_directories_body'
        required: true
      responses:
        "200":
          description: OK
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/inline_response_200_45'
    delete:
      tags:
      - Directories
      summary: Delete managed directories
      description: "Deletes one or more managed directories. To be deleted, a managed\
        \ directory must be empty and not attached to any enabled export policies.\
        \ Deleted managed directories cannot be recovered. The `ids` or `names` parameter\
        \ is required, but cannot be set together."
      parameters:
      - name: Authorization
        in: header
        description: "Access token (in JWT format) required to use any API endpoint\
          \ (except `/oauth2`, `/login`, and `/logout`)"
        required: false
        style: simple
        explode: false
        schema:
          type: string
      - name: X-Request-ID
        in: header
        description: Supplied by client during request or generated by server.
        required: false
        style: simple
        explode: false
        schema:
          type: string
      - name: ids
        in: query
        description: Performs the operation on the unique resource IDs specified.
          Enter multiple resource IDs in comma-separated format. The `ids` and `names`
          parameters cannot be provided together.
        required: false
        style: form
        explode: false
        schema:
          type: array
          items:
            type: string
      - name: names
        in: query
        description: "Performs the operation on the unique name specified. Enter multiple\
          \ names in comma-separated format. For example, `name01,name02`."
        required: false
        style: form
        explode: false
        schema:
          type: array
          items:
            type: string
      responses:
        "200":
          description: OK
    patch:
      tags:
      - Directories
      summary: Modify a managed directory
      description: "Modifies a managed directory. To rename a managed directory, set\
        \ `name` to the new name. The `ids` or `names` parameter is required, but\
        \ cannot be set together. The `name` or `directory_name` parameter is required."
      parameters:
      - name: Authorization
        in: header
        description: "Access token (in JWT format) required to use any API endpoint\
          \ (except `/oauth2`, `/login`, and `/logout`)"
        required: false
        style: simple
        explode: false
        schema:
          type: string
      - name: X-Request-ID
        in: header
        description: Supplied by client during request or generated by server.
        required: false
        style: simple
        explode: false
        schema:
          type: string
      - name: ids
        in: query
        description: Performs the operation on the unique resource IDs specified.
          Enter multiple resource IDs in comma-separated format. The `ids` and `names`
          parameters cannot be provided together.
        required: false
        style: form
        explode: false
        schema:
          type: array
          items:
            type: string
      - name: names
        in: query
        description: "Performs the operation on the unique name specified. Enter multiple\
          \ names in comma-separated format. For example, `name01,name02`."
        required: false
        style: form
        explode: false
        schema:
          type: array
          items:
            type: string
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/2_8_directories_body_1'
        required: true
      responses:
        "200":
          description: OK
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/inline_response_200_45'
  /api/2.8/directories/performance:
    get:
      tags:
      - Directories
      summary: List directory performance data
      description: "Displays real-time and historical performance data, real-time\
        \ latency data, and average I/O sizes for each directory and as a total of\
        \ all directories across the entire array."
      parameters:
      - name: Authorization
        in: header
        description: "Access token (in JWT format) required to use any API endpoint\
          \ (except `/oauth2`, `/login`, and `/logout`)"
        required: false
        style: simple
        explode: false
        schema:
          type: string
      - name: X-Request-ID
        in: header
        description: Supplied by client during request or generated by server.
        required: false
        style: simple
        explode: false
        schema:
          type: string
      - name: destroyed
        in: query
        description: "If set to `true`, lists only destroyed objects that are in the\
          \ eradication pending state. If set to `false`, lists only objects that\
          \ are not destroyed. For destroyed objects, the time remaining is displayed\
          \ in milliseconds."
        required: false
        style: form
        explode: true
        schema:
          type: boolean
      - name: filter
        in: query
        description: Narrows down the results to only the response objects that satisfy
          the filter criteria.
        required: false
        style: form
        explode: true
        schema:
          type: string
      - name: end_time
        in: query
        description: "Displays historical performance data for the specified time\
          \ window, where `start_time` is the beginning of the time window, and `end_time`\
          \ is the end of the time window. The `start_time` and `end_time` parameters\
          \ are specified in milliseconds since the UNIX epoch. If `start_time` is\
          \ not specified, the start time will default to one resolution before the\
          \ end time, meaning that the most recent sample of performance data will\
          \ be displayed. If `end_time`is not specified, the end time will default\
          \ to the current time. Include the `resolution` parameter to display the\
          \ performance data at the specified resolution. If not specified, `resolution`\
          \ defaults to the lowest valid resolution."
        required: false
        style: form
        explode: true
        schema:
          type: integer
          format: int64
      - name: resolution
        in: query
        description: "The number of milliseconds between samples of historical data.\
          \ For array-wide performance metrics (`/arrays/performance` endpoint), valid\
          \ values are `1000` (1 second), `30000` (30 seconds), `300000` (5 minutes),\
          \ `1800000` (30 minutes), `7200000` (2 hours), `28800000` (8 hours), and\
          \ `86400000` (24 hours). For performance metrics on storage objects (`<object\
          \ name>/performance` endpoint), such as volumes, valid values are `30000`\
          \ (30 seconds), `300000` (5 minutes), `1800000` (30 minutes), `7200000`\
          \ (2 hours), `28800000` (8 hours), and `86400000` (24 hours). For space\
          \ metrics, (`<object name>/space` endpoint), valid values are `300000` (5\
          \ minutes), `1800000` (30 minutes), `7200000` (2 hours), `28800000` (8 hours),\
          \ and `86400000` (24 hours). Include the `start_time` parameter to display\
          \ the performance data starting at the specified start time. If `start_time`\
          \ is not specified, the start time will default to one resolution before\
          \ the end time, meaning that the most recent sample of performance data\
          \ will be displayed. Include the `end_time` parameter to display the performance\
          \ data until the specified end time. If `end_time`is not specified, the\
          \ end time will default to the current time. If the `resolution` parameter\
          \ is not specified but either the `start_time` or `end_time` parameter is,\
          \ then `resolution` will default to the lowest valid resolution."
        required: false
        style: form
        explode: true
        schema:
          minimum: 0
          type: integer
          format: int64
        example: 30000
      - name: start_time
        in: query
        description: "Displays historical performance data for the specified time\
          \ window, where `start_time` is the beginning of the time window, and `end_time`\
          \ is the end of the time window. The `start_time` and `end_time` parameters\
          \ are specified in milliseconds since the UNIX epoch. If `start_time` is\
          \ not specified, the start time will default to one resolution before the\
          \ end time, meaning that the most recent sample of performance data will\
          \ be displayed. If `end_time`is not specified, the end time will default\
          \ to the current time. Include the `resolution` parameter to display the\
          \ performance data at the specified resolution. If not specified, `resolution`\
          \ defaults to the lowest valid resolution."
        required: false
        style: form
        explode: true
        schema:
          type: integer
          format: int64
      - name: ids
        in: query
        description: Performs the operation on the unique resource IDs specified.
          Enter multiple resource IDs in comma-separated format. The `ids` and `names`
          parameters cannot be provided together.
        required: false
        style: form
        explode: false
        schema:
          type: array
          items:
            type: string
      - name: limit
        in: query
        description: "Limits the size of the response to the specified number of objects\
          \ on each page. To return the total number of resources, set `limit=0`.\
          \ The total number of resources is returned as a `total_item_count` value.\
          \ If the page size requested is larger than the system maximum limit, the\
          \ server returns the maximum limit, disregarding the requested page size."
        required: false
        style: form
        explode: true
        schema:
          minimum: 1
          type: integer
          format: int32
        example: 10
      - name: names
        in: query
        description: "Performs the operation on the unique name specified. Enter multiple\
          \ names in comma-separated format. For example, `name01,name02`."
        required: false
        style: form
        explode: false
        schema:
          type: array
          items:
            type: string
      - name: offset
        in: query
        description: The starting position based on the results of the query in relation
          to the full set of response objects returned.
        required: false
        style: form
        explode: true
        schema:
          minimum: 0
          type: integer
          format: int32
        example: 10
      - name: protocol
        in: query
        description: "Protocol type. Valid values are `nfs`, `smb`, and `all`."
        required: false
        style: form
        explode: true
        schema:
          type: string
      - name: protocol_group
        in: query
        description: "Protocol group type. Valid values are `block`, `file`, and `all`."
        required: false
        style: form
        explode: true
        schema:
          type: string
      - name: sort
        in: query
        description: "Returns the response objects in the order specified. Set `sort`\
          \ to the name in the response by which to sort. Sorting can be performed\
          \ on any of the names in the response, and the objects can be sorted in\
          \ ascending or descending order. By default, the response objects are sorted\
          \ in ascending order. To sort in descending order, append the minus sign\
          \ (`-`) to the name. A single request can be sorted on multiple objects.\
          \ For example, you can sort all volumes from largest to smallest volume\
          \ size, and then sort volumes of the same size in ascending order by volume\
          \ name. To sort on multiple names, list the names as comma-separated values."
        required: false
        style: form
        explode: false
        schema:
          type: array
          items:
            pattern: "^[a-z]+(_[a-z]+)*-?"
            type: string
      - name: total_item_count
        in: query
        description: "If set to `true`, the `total_item_count` matching the specified\
          \ query parameters is calculated and returned in the response. If set to\
          \ `false`, the `total_item_count` is `null` in the response. This may speed\
          \ up queries where the `total_item_count` is large. If not specified, defaults\
          \ to `false`."
        required: false
        style: form
        explode: true
        schema:
          type: boolean
      - name: total_only
        in: query
        description: "If set to `true`, returns the aggregate value of all items after\
          \ filtering. Where it makes more sense, the average value is displayed instead.\
          \ The values are displayed for each name where meaningful. If `total_only=true`,\
          \ the `items` list will be empty."
        required: false
        style: form
        explode: true
        schema:
          type: boolean
      responses:
        "200":
          description: OK
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/inline_response_200_46'
  /api/2.8/directories/policies:
    get:
      tags:
      - Directories
      summary: List policies
      description: Displays a list of policies that are attached to directories.
      parameters:
      - name: Authorization
        in: header
        description: "Access token (in JWT format) required to use any API endpoint\
          \ (except `/oauth2`, `/login`, and `/logout`)"
        required: false
        style: simple
        explode: false
        schema:
          type: string
      - name: X-Request-ID
        in: header
        description: Supplied by client during request or generated by server.
        required: false
        style: simple
        explode: false
        schema:
          type: string
      - name: continuation_token
        in: query
        description: A token used to retrieve the next page of data with some consistency
          guaranteed. The token is a Base64 encoded value. Set `continuation_token`
          to the system-generated token taken from the `x-next-token` header field
          of the response. A query has reached its last page when the response does
          not include a token. Pagination requires the `limit` and `continuation_token`
          query parameters.
        required: false
        style: form
        explode: true
        schema:
          type: string
      - name: destroyed
        in: query
        description: "If set to `true`, lists only destroyed objects that are in the\
          \ eradication pending state. If set to `false`, lists only objects that\
          \ are not destroyed. For destroyed objects, the time remaining is displayed\
          \ in milliseconds."
        required: false
        style: form
        explode: true
        schema:
          type: boolean
      - name: filter
        in: query
        description: Narrows down the results to only the response objects that satisfy
          the filter criteria.
        required: false
        style: form
        explode: true
        schema:
          type: string
      - name: limit
        in: query
        description: "Limits the size of the response to the specified number of objects\
          \ on each page. To return the total number of resources, set `limit=0`.\
          \ The total number of resources is returned as a `total_item_count` value.\
          \ If the page size requested is larger than the system maximum limit, the\
          \ server returns the maximum limit, disregarding the requested page size."
        required: false
        style: form
        explode: true
        schema:
          minimum: 1
          type: integer
          format: int32
        example: 10
      - name: member_ids
        in: query
        description: Performs the operation on the unique member IDs specified. Enter
          multiple member IDs in comma-separated format. The `member_ids` and `member_names`
          parameters cannot be provided together.
        required: false
        style: form
        explode: false
        schema:
          type: array
          items:
            type: string
      - name: member_names
        in: query
        description: "Performs the operation on the unique member name specified.\
          \ Examples of members include volumes, hosts, host groups, and directories.\
          \ Enter multiple names in comma-separated format. For example, `vol01,vol02`."
        required: false
        style: form
        explode: false
        schema:
          type: array
          items:
            type: string
      - name: policy_ids
        in: query
        description: Performs the operation on the unique policy IDs specified. Enter
          multiple policy IDs in comma-separated format. The `policy_ids` and `policy_names`
          parameters cannot be provided together.
        required: false
        style: form
        explode: false
        schema:
          type: array
          items:
            type: string
      - name: policy_names
        in: query
        description: "Performs the operation on the policy names specified. Enter\
          \ multiple policy names in comma-separated format. For example, `name01,name02`."
        required: false
        style: form
        explode: false
        schema:
          type: array
          items:
            type: string
      - name: offset
        in: query
        description: The starting position based on the results of the query in relation
          to the full set of response objects returned.
        required: false
        style: form
        explode: true
        schema:
          minimum: 0
          type: integer
          format: int32
        example: 10
      - name: sort
        in: query
        description: "Returns the response objects in the order specified. Set `sort`\
          \ to the name in the response by which to sort. Sorting can be performed\
          \ on any of the names in the response, and the objects can be sorted in\
          \ ascending or descending order. By default, the response objects are sorted\
          \ in ascending order. To sort in descending order, append the minus sign\
          \ (`-`) to the name. A single request can be sorted on multiple objects.\
          \ For example, you can sort all volumes from largest to smallest volume\
          \ size, and then sort volumes of the same size in ascending order by volume\
          \ name. To sort on multiple names, list the names as comma-separated values."
        required: false
        style: form
        explode: false
        schema:
          type: array
          items:
            pattern: "^[a-z]+(_[a-z]+)*-?"
            type: string
      - name: total_item_count
        in: query
        description: "If set to `true`, the `total_item_count` matching the specified\
          \ query parameters is calculated and returned in the response. If set to\
          \ `false`, the `total_item_count` is `null` in the response. This may speed\
          \ up queries where the `total_item_count` is large. If not specified, defaults\
          \ to `false`."
        required: false
        style: form
        explode: true
        schema:
          type: boolean
      responses:
        "200":
          description: OK
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/inline_response_200_47'
  /api/2.8/directories/policies/nfs:
    get:
      tags:
      - Directories
      summary: List NFS policies attached to a directory
      description: Displays a list of NFS policies that are attached to directories.
      parameters:
      - name: Authorization
        in: header
        description: "Access token (in JWT format) required to use any API endpoint\
          \ (except `/oauth2`, `/login`, and `/logout`)"
        required: false
        style: simple
        explode: false
        schema:
          type: string
      - name: X-Request-ID
        in: header
        description: Supplied by client during request or generated by server.
        required: false
        style: simple
        explode: false
        schema:
          type: string
      - name: continuation_token
        in: query
        description: A token used to retrieve the next page of data with some consistency
          guaranteed. The token is a Base64 encoded value. Set `continuation_token`
          to the system-generated token taken from the `x-next-token` header field
          of the response. A query has reached its last page when the response does
          not include a token. Pagination requires the `limit` and `continuation_token`
          query parameters.
        required: false
        style: form
        explode: true
        schema:
          type: string
      - name: destroyed
        in: query
        description: "If set to `true`, lists only destroyed objects that are in the\
          \ eradication pending state. If set to `false`, lists only objects that\
          \ are not destroyed. For destroyed objects, the time remaining is displayed\
          \ in milliseconds."
        required: false
        style: form
        explode: true
        schema:
          type: boolean
      - name: filter
        in: query
        description: Narrows down the results to only the response objects that satisfy
          the filter criteria.
        required: false
        style: form
        explode: true
        schema:
          type: string
      - name: limit
        in: query
        description: "Limits the size of the response to the specified number of objects\
          \ on each page. To return the total number of resources, set `limit=0`.\
          \ The total number of resources is returned as a `total_item_count` value.\
          \ If the page size requested is larger than the system maximum limit, the\
          \ server returns the maximum limit, disregarding the requested page size."
        required: false
        style: form
        explode: true
        schema:
          minimum: 1
          type: integer
          format: int32
        example: 10
      - name: member_ids
        in: query
        description: Performs the operation on the unique member IDs specified. Enter
          multiple member IDs in comma-separated format. The `member_ids` and `member_names`
          parameters cannot be provided together.
        required: false
        style: form
        explode: false
        schema:
          type: array
          items:
            type: string
      - name: member_names
        in: query
        description: "Performs the operation on the unique member name specified.\
          \ Examples of members include volumes, hosts, host groups, and directories.\
          \ Enter multiple names in comma-separated format. For example, `vol01,vol02`."
        required: false
        style: form
        explode: false
        schema:
          type: array
          items:
            type: string
      - name: policy_ids
        in: query
        description: Performs the operation on the unique policy IDs specified. Enter
          multiple policy IDs in comma-separated format. The `policy_ids` and `policy_names`
          parameters cannot be provided together.
        required: false
        style: form
        explode: false
        schema:
          type: array
          items:
            type: string
      - name: policy_names
        in: query
        description: "Performs the operation on the policy names specified. Enter\
          \ multiple policy names in comma-separated format. For example, `name01,name02`."
        required: false
        style: form
        explode: false
        schema:
          type: array
          items:
            type: string
      - name: offset
        in: query
        description: The starting position based on the results of the query in relation
          to the full set of response objects returned.
        required: false
        style: form
        explode: true
        schema:
          minimum: 0
          type: integer
          format: int32
        example: 10
      - name: sort
        in: query
        description: "Returns the response objects in the order specified. Set `sort`\
          \ to the name in the response by which to sort. Sorting can be performed\
          \ on any of the names in the response, and the objects can be sorted in\
          \ ascending or descending order. By default, the response objects are sorted\
          \ in ascending order. To sort in descending order, append the minus sign\
          \ (`-`) to the name. A single request can be sorted on multiple objects.\
          \ For example, you can sort all volumes from largest to smallest volume\
          \ size, and then sort volumes of the same size in ascending order by volume\
          \ name. To sort on multiple names, list the names as comma-separated values."
        required: false
        style: form
        explode: false
        schema:
          type: array
          items:
            pattern: "^[a-z]+(_[a-z]+)*-?"
            type: string
      - name: total_item_count
        in: query
        description: "If set to `true`, the `total_item_count` matching the specified\
          \ query parameters is calculated and returned in the response. If set to\
          \ `false`, the `total_item_count` is `null` in the response. This may speed\
          \ up queries where the `total_item_count` is large. If not specified, defaults\
          \ to `false`."
        required: false
        style: form
        explode: true
        schema:
          type: boolean
      responses:
        "200":
          description: OK
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/inline_response_200_48'
    post:
      tags:
      - Directories
      summary: Create a membership between a directory with one or more NFS policies
      description: Creates a membership between a directory with one or more NFS policies.
        The `member_ids` or `member_names` parameter is required but cannot be set
        together.
      parameters:
      - name: Authorization
        in: header
        description: "Access token (in JWT format) required to use any API endpoint\
          \ (except `/oauth2`, `/login`, and `/logout`)"
        required: false
        style: simple
        explode: false
        schema:
          type: string
      - name: X-Request-ID
        in: header
        description: Supplied by client during request or generated by server.
        required: false
        style: simple
        explode: false
        schema:
          type: string
      - name: member_ids
        in: query
        description: Performs the operation on the unique member IDs specified. Enter
          multiple member IDs in comma-separated format. The `member_ids` and `member_names`
          parameters cannot be provided together.
        required: false
        style: form
        explode: false
        schema:
          type: array
          items:
            type: string
      - name: member_names
        in: query
        description: "Performs the operation on the unique member name specified.\
          \ Examples of members include volumes, hosts, host groups, and directories.\
          \ Enter multiple names in comma-separated format. For example, `vol01,vol02`."
        required: false
        style: form
        explode: false
        schema:
          type: array
          items:
            type: string
      requestBody:
        $ref: '#/components/requestBodies/Policies2'
      responses:
        "200":
          description: OK
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/inline_response_200_49'
    delete:
      tags:
      - Directories
      summary: Delete a membership between a directory and one or more NFS policies
      description: "Deletes a membership between a directory with one or more NFS\
        \ policies. The `policy_ids` or `policy_names` parameter is required, but\
        \ cannot be set together. The `member_ids` or `member_names` parameter is\
        \ required, but cannot be set together."
      parameters:
      - name: Authorization
        in: header
        description: "Access token (in JWT format) required to use any API endpoint\
          \ (except `/oauth2`, `/login`, and `/logout`)"
        required: false
        style: simple
        explode: false
        schema:
          type: string
      - name: X-Request-ID
        in: header
        description: Supplied by client during request or generated by server.
        required: false
        style: simple
        explode: false
        schema:
          type: string
      - name: member_ids
        in: query
        description: Performs the operation on the unique member IDs specified. Enter
          multiple member IDs in comma-separated format. The `member_ids` and `member_names`
          parameters cannot be provided together.
        required: false
        style: form
        explode: false
        schema:
          type: array
          items:
            type: string
      - name: member_names
        in: query
        description: "Performs the operation on the unique member name specified.\
          \ Examples of members include volumes, hosts, host groups, and directories.\
          \ Enter multiple names in comma-separated format. For example, `vol01,vol02`."
        required: false
        style: form
        explode: false
        schema:
          type: array
          items:
            type: string
      - name: policy_ids
        in: query
        description: Performs the operation on the unique policy IDs specified. Enter
          multiple policy IDs in comma-separated format. The `policy_ids` and `policy_names`
          parameters cannot be provided together.
        required: false
        style: form
        explode: false
        schema:
          type: array
          items:
            type: string
      - name: policy_names
        in: query
        description: "Performs the operation on the policy names specified. Enter\
          \ multiple policy names in comma-separated format. For example, `name01,name02`."
        required: false
        style: form
        explode: false
        schema:
          type: array
          items:
            type: string
      responses:
        "200":
          description: OK
  /api/2.8/directories/policies/quota:
    get:
      tags:
      - Directories
      summary: List quota policies attached to a directory
      description: Displays a list of quota policies that are attached to directories.
      parameters:
      - name: Authorization
        in: header
        description: "Access token (in JWT format) required to use any API endpoint\
          \ (except `/oauth2`, `/login`, and `/logout`)"
        required: false
        style: simple
        explode: false
        schema:
          type: string
      - name: X-Request-ID
        in: header
        description: Supplied by client during request or generated by server.
        required: false
        style: simple
        explode: false
        schema:
          type: string
      - name: continuation_token
        in: query
        description: A token used to retrieve the next page of data with some consistency
          guaranteed. The token is a Base64 encoded value. Set `continuation_token`
          to the system-generated token taken from the `x-next-token` header field
          of the response. A query has reached its last page when the response does
          not include a token. Pagination requires the `limit` and `continuation_token`
          query parameters.
        required: false
        style: form
        explode: true
        schema:
          type: string
      - name: destroyed
        in: query
        description: "If set to `true`, lists only destroyed objects that are in the\
          \ eradication pending state. If set to `false`, lists only objects that\
          \ are not destroyed. For destroyed objects, the time remaining is displayed\
          \ in milliseconds."
        required: false
        style: form
        explode: true
        schema:
          type: boolean
      - name: filter
        in: query
        description: Narrows down the results to only the response objects that satisfy
          the filter criteria.
        required: false
        style: form
        explode: true
        schema:
          type: string
      - name: limit
        in: query
        description: "Limits the size of the response to the specified number of objects\
          \ on each page. To return the total number of resources, set `limit=0`.\
          \ The total number of resources is returned as a `total_item_count` value.\
          \ If the page size requested is larger than the system maximum limit, the\
          \ server returns the maximum limit, disregarding the requested page size."
        required: false
        style: form
        explode: true
        schema:
          minimum: 1
          type: integer
          format: int32
        example: 10
      - name: member_ids
        in: query
        description: Performs the operation on the unique member IDs specified. Enter
          multiple member IDs in comma-separated format. The `member_ids` and `member_names`
          parameters cannot be provided together.
        required: false
        style: form
        explode: false
        schema:
          type: array
          items:
            type: string
      - name: member_names
        in: query
        description: "Performs the operation on the unique member name specified.\
          \ Examples of members include volumes, hosts, host groups, and directories.\
          \ Enter multiple names in comma-separated format. For example, `vol01,vol02`."
        required: false
        style: form
        explode: false
        schema:
          type: array
          items:
            type: string
      - name: policy_ids
        in: query
        description: Performs the operation on the unique policy IDs specified. Enter
          multiple policy IDs in comma-separated format. The `policy_ids` and `policy_names`
          parameters cannot be provided together.
        required: false
        style: form
        explode: false
        schema:
          type: array
          items:
            type: string
      - name: policy_names
        in: query
        description: "Performs the operation on the policy names specified. Enter\
          \ multiple policy names in comma-separated format. For example, `name01,name02`."
        required: false
        style: form
        explode: false
        schema:
          type: array
          items:
            type: string
      - name: offset
        in: query
        description: The starting position based on the results of the query in relation
          to the full set of response objects returned.
        required: false
        style: form
        explode: true
        schema:
          minimum: 0
          type: integer
          format: int32
        example: 10
      - name: sort
        in: query
        description: "Returns the response objects in the order specified. Set `sort`\
          \ to the name in the response by which to sort. Sorting can be performed\
          \ on any of the names in the response, and the objects can be sorted in\
          \ ascending or descending order. By default, the response objects are sorted\
          \ in ascending order. To sort in descending order, append the minus sign\
          \ (`-`) to the name. A single request can be sorted on multiple objects.\
          \ For example, you can sort all volumes from largest to smallest volume\
          \ size, and then sort volumes of the same size in ascending order by volume\
          \ name. To sort on multiple names, list the names as comma-separated values."
        required: false
        style: form
        explode: false
        schema:
          type: array
          items:
            pattern: "^[a-z]+(_[a-z]+)*-?"
            type: string
      - name: total_item_count
        in: query
        description: "If set to `true`, the `total_item_count` matching the specified\
          \ query parameters is calculated and returned in the response. If set to\
          \ `false`, the `total_item_count` is `null` in the response. This may speed\
          \ up queries where the `total_item_count` is large. If not specified, defaults\
          \ to `false`."
        required: false
        style: form
        explode: true
        schema:
          type: boolean
      responses:
        "200":
          description: OK
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/inline_response_200_47'
    post:
      tags:
      - Directories
      summary: Create a membership between a directory with one or more quota policies
      description: "Creates a membership between a directory with one or more quota\
        \ policies. The `member_ids` or `member_names` parameter is required, but\
        \ cannot be set together."
      parameters:
      - name: Authorization
        in: header
        description: "Access token (in JWT format) required to use any API endpoint\
          \ (except `/oauth2`, `/login`, and `/logout`)"
        required: false
        style: simple
        explode: false
        schema:
          type: string
      - name: X-Request-ID
        in: header
        description: Supplied by client during request or generated by server.
        required: false
        style: simple
        explode: false
        schema:
          type: string
      - name: member_ids
        in: query
        description: Performs the operation on the unique member IDs specified. Enter
          multiple member IDs in comma-separated format. The `member_ids` and `member_names`
          parameters cannot be provided together.
        required: false
        style: form
        explode: false
        schema:
          type: array
          items:
            type: string
      - name: member_names
        in: query
        description: "Performs the operation on the unique member name specified.\
          \ Examples of members include volumes, hosts, host groups, and directories.\
          \ Enter multiple names in comma-separated format. For example, `vol01,vol02`."
        required: false
        style: form
        explode: false
        schema:
          type: array
          items:
            type: string
      - name: ignore_usage
        in: query
        description: "Flag used to override checks for quota management operations.\
          \ If set to `true`, directory usage is not checked against the `quota_limits`\
          \ that are set. If set to `false`, the actual logical bytes in use are prevented\
          \ from exceeding the limits set on the directory. Client operations might\
          \ be impacted. If the limit exceeds the quota, the client operation is not\
          \ allowed. If not specified, defaults to `false`."
        required: false
        style: form
        explode: true
        schema:
          type: boolean
      requestBody:
        $ref: '#/components/requestBodies/Policies'
      responses:
        "200":
          description: OK
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/inline_response_200_50'
    delete:
      tags:
      - Directories
      summary: Delete a membership between a directory and one or more quota policies
      description: "Deletes a membership between a directory with one or more quota\
        \ policies. The `policy_ids` or `policy_names` parameter is required, but\
        \ cannot be set together. The `member_ids` or `member_names` parameter is\
        \ required, but cannot be set together."
      parameters:
      - name: Authorization
        in: header
        description: "Access token (in JWT format) required to use any API endpoint\
          \ (except `/oauth2`, `/login`, and `/logout`)"
        required: false
        style: simple
        explode: false
        schema:
          type: string
      - name: X-Request-ID
        in: header
        description: Supplied by client during request or generated by server.
        required: false
        style: simple
        explode: false
        schema:
          type: string
      - name: member_ids
        in: query
        description: Performs the operation on the unique member IDs specified. Enter
          multiple member IDs in comma-separated format. The `member_ids` and `member_names`
          parameters cannot be provided together.
        required: false
        style: form
        explode: false
        schema:
          type: array
          items:
            type: string
      - name: member_names
        in: query
        description: "Performs the operation on the unique member name specified.\
          \ Examples of members include volumes, hosts, host groups, and directories.\
          \ Enter multiple names in comma-separated format. For example, `vol01,vol02`."
        required: false
        style: form
        explode: false
        schema:
          type: array
          items:
            type: string
      - name: policy_ids
        in: query
        description: Performs the operation on the unique policy IDs specified. Enter
          multiple policy IDs in comma-separated format. The `policy_ids` and `policy_names`
          parameters cannot be provided together.
        required: false
        style: form
        explode: false
        schema:
          type: array
          items:
            type: string
      - name: policy_names
        in: query
        description: "Performs the operation on the policy names specified. Enter\
          \ multiple policy names in comma-separated format. For example, `name01,name02`."
        required: false
        style: form
        explode: false
        schema:
          type: array
          items:
            type: string
      responses:
        "200":
          description: OK
  /api/2.8/directories/policies/smb:
    get:
      tags:
      - Directories
      summary: List SMB policies attached to a directory
      description: Displays a list of SMB policies that are attached to directories.
      parameters:
      - name: Authorization
        in: header
        description: "Access token (in JWT format) required to use any API endpoint\
          \ (except `/oauth2`, `/login`, and `/logout`)"
        required: false
        style: simple
        explode: false
        schema:
          type: string
      - name: X-Request-ID
        in: header
        description: Supplied by client during request or generated by server.
        required: false
        style: simple
        explode: false
        schema:
          type: string
      - name: continuation_token
        in: query
        description: A token used to retrieve the next page of data with some consistency
          guaranteed. The token is a Base64 encoded value. Set `continuation_token`
          to the system-generated token taken from the `x-next-token` header field
          of the response. A query has reached its last page when the response does
          not include a token. Pagination requires the `limit` and `continuation_token`
          query parameters.
        required: false
        style: form
        explode: true
        schema:
          type: string
      - name: destroyed
        in: query
        description: "If set to `true`, lists only destroyed objects that are in the\
          \ eradication pending state. If set to `false`, lists only objects that\
          \ are not destroyed. For destroyed objects, the time remaining is displayed\
          \ in milliseconds."
        required: false
        style: form
        explode: true
        schema:
          type: boolean
      - name: filter
        in: query
        description: Narrows down the results to only the response objects that satisfy
          the filter criteria.
        required: false
        style: form
        explode: true
        schema:
          type: string
      - name: limit
        in: query
        description: "Limits the size of the response to the specified number of objects\
          \ on each page. To return the total number of resources, set `limit=0`.\
          \ The total number of resources is returned as a `total_item_count` value.\
          \ If the page size requested is larger than the system maximum limit, the\
          \ server returns the maximum limit, disregarding the requested page size."
        required: false
        style: form
        explode: true
        schema:
          minimum: 1
          type: integer
          format: int32
        example: 10
      - name: member_ids
        in: query
        description: Performs the operation on the unique member IDs specified. Enter
          multiple member IDs in comma-separated format. The `member_ids` and `member_names`
          parameters cannot be provided together.
        required: false
        style: form
        explode: false
        schema:
          type: array
          items:
            type: string
      - name: member_names
        in: query
        description: "Performs the operation on the unique member name specified.\
          \ Examples of members include volumes, hosts, host groups, and directories.\
          \ Enter multiple names in comma-separated format. For example, `vol01,vol02`."
        required: false
        style: form
        explode: false
        schema:
          type: array
          items:
            type: string
      - name: policy_ids
        in: query
        description: Performs the operation on the unique policy IDs specified. Enter
          multiple policy IDs in comma-separated format. The `policy_ids` and `policy_names`
          parameters cannot be provided together.
        required: false
        style: form
        explode: false
        schema:
          type: array
          items:
            type: string
      - name: policy_names
        in: query
        description: "Performs the operation on the policy names specified. Enter\
          \ multiple policy names in comma-separated format. For example, `name01,name02`."
        required: false
        style: form
        explode: false
        schema:
          type: array
          items:
            type: string
      - name: offset
        in: query
        description: The starting position based on the results of the query in relation
          to the full set of response objects returned.
        required: false
        style: form
        explode: true
        schema:
          minimum: 0
          type: integer
          format: int32
        example: 10
      - name: sort
        in: query
        description: "Returns the response objects in the order specified. Set `sort`\
          \ to the name in the response by which to sort. Sorting can be performed\
          \ on any of the names in the response, and the objects can be sorted in\
          \ ascending or descending order. By default, the response objects are sorted\
          \ in ascending order. To sort in descending order, append the minus sign\
          \ (`-`) to the name. A single request can be sorted on multiple objects.\
          \ For example, you can sort all volumes from largest to smallest volume\
          \ size, and then sort volumes of the same size in ascending order by volume\
          \ name. To sort on multiple names, list the names as comma-separated values."
        required: false
        style: form
        explode: false
        schema:
          type: array
          items:
            pattern: "^[a-z]+(_[a-z]+)*-?"
            type: string
      - name: total_item_count
        in: query
        description: "If set to `true`, the `total_item_count` matching the specified\
          \ query parameters is calculated and returned in the response. If set to\
          \ `false`, the `total_item_count` is `null` in the response. This may speed\
          \ up queries where the `total_item_count` is large. If not specified, defaults\
          \ to `false`."
        required: false
        style: form
        explode: true
        schema:
          type: boolean
      responses:
        "200":
          description: OK
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/inline_response_200_48'
    post:
      tags:
      - Directories
      summary: Create a membership between a directory with one or more NFS policies
      description: "Creates a membership between a directory with one or more NFS\
        \ policies. The `member_ids` or `member_names` parameter is required, but\
        \ cannot be set together."
      parameters:
      - name: Authorization
        in: header
        description: "Access token (in JWT format) required to use any API endpoint\
          \ (except `/oauth2`, `/login`, and `/logout`)"
        required: false
        style: simple
        explode: false
        schema:
          type: string
      - name: X-Request-ID
        in: header
        description: Supplied by client during request or generated by server.
        required: false
        style: simple
        explode: false
        schema:
          type: string
      - name: member_ids
        in: query
        description: Performs the operation on the unique member IDs specified. Enter
          multiple member IDs in comma-separated format. The `member_ids` and `member_names`
          parameters cannot be provided together.
        required: false
        style: form
        explode: false
        schema:
          type: array
          items:
            type: string
      - name: member_names
        in: query
        description: "Performs the operation on the unique member name specified.\
          \ Examples of members include volumes, hosts, host groups, and directories.\
          \ Enter multiple names in comma-separated format. For example, `vol01,vol02`."
        required: false
        style: form
        explode: false
        schema:
          type: array
          items:
            type: string
      requestBody:
        $ref: '#/components/requestBodies/Policies2'
      responses:
        "200":
          description: OK
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/inline_response_200_49'
    delete:
      tags:
      - Directories
      summary: Delete a membership between a directory and one or more SMB policies
      description: "Deletes a membership between a directory with one or more SMB\
        \ policies. The `policy_ids` or `policy_names` parameter is required, but\
        \ cannot be set together. The `member_ids` or `member_names` parameter is\
        \ required, but cannot be set together."
      parameters:
      - name: Authorization
        in: header
        description: "Access token (in JWT format) required to use any API endpoint\
          \ (except `/oauth2`, `/login`, and `/logout`)"
        required: false
        style: simple
        explode: false
        schema:
          type: string
      - name: X-Request-ID
        in: header
        description: Supplied by client during request or generated by server.
        required: false
        style: simple
        explode: false
        schema:
          type: string
      - name: member_ids
        in: query
        description: Performs the operation on the unique member IDs specified. Enter
          multiple member IDs in comma-separated format. The `member_ids` and `member_names`
          parameters cannot be provided together.
        required: false
        style: form
        explode: false
        schema:
          type: array
          items:
            type: string
      - name: member_names
        in: query
        description: "Performs the operation on the unique member name specified.\
          \ Examples of members include volumes, hosts, host groups, and directories.\
          \ Enter multiple names in comma-separated format. For example, `vol01,vol02`."
        required: false
        style: form
        explode: false
        schema:
          type: array
          items:
            type: string
      - name: policy_ids
        in: query
        description: Performs the operation on the unique policy IDs specified. Enter
          multiple policy IDs in comma-separated format. The `policy_ids` and `policy_names`
          parameters cannot be provided together.
        required: false
        style: form
        explode: false
        schema:
          type: array
          items:
            type: string
      - name: policy_names
        in: query
        description: "Performs the operation on the policy names specified. Enter\
          \ multiple policy names in comma-separated format. For example, `name01,name02`."
        required: false
        style: form
        explode: false
        schema:
          type: array
          items:
            type: string
      responses:
        "200":
          description: OK
  /api/2.8/directories/policies/snapshot:
    get:
      tags:
      - Directories
      summary: List snapshot policies attached to a directory
      description: Displays a list of snapshot policies that are attached to directories.
      parameters:
      - name: Authorization
        in: header
        description: "Access token (in JWT format) required to use any API endpoint\
          \ (except `/oauth2`, `/login`, and `/logout`)"
        required: false
        style: simple
        explode: false
        schema:
          type: string
      - name: X-Request-ID
        in: header
        description: Supplied by client during request or generated by server.
        required: false
        style: simple
        explode: false
        schema:
          type: string
      - name: continuation_token
        in: query
        description: A token used to retrieve the next page of data with some consistency
          guaranteed. The token is a Base64 encoded value. Set `continuation_token`
          to the system-generated token taken from the `x-next-token` header field
          of the response. A query has reached its last page when the response does
          not include a token. Pagination requires the `limit` and `continuation_token`
          query parameters.
        required: false
        style: form
        explode: true
        schema:
          type: string
      - name: destroyed
        in: query
        description: "If set to `true`, lists only destroyed objects that are in the\
          \ eradication pending state. If set to `false`, lists only objects that\
          \ are not destroyed. For destroyed objects, the time remaining is displayed\
          \ in milliseconds."
        required: false
        style: form
        explode: true
        schema:
          type: boolean
      - name: filter
        in: query
        description: Narrows down the results to only the response objects that satisfy
          the filter criteria.
        required: false
        style: form
        explode: true
        schema:
          type: string
      - name: limit
        in: query
        description: "Limits the size of the response to the specified number of objects\
          \ on each page. To return the total number of resources, set `limit=0`.\
          \ The total number of resources is returned as a `total_item_count` value.\
          \ If the page size requested is larger than the system maximum limit, the\
          \ server returns the maximum limit, disregarding the requested page size."
        required: false
        style: form
        explode: true
        schema:
          minimum: 1
          type: integer
          format: int32
        example: 10
      - name: member_ids
        in: query
        description: Performs the operation on the unique member IDs specified. Enter
          multiple member IDs in comma-separated format. The `member_ids` and `member_names`
          parameters cannot be provided together.
        required: false
        style: form
        explode: false
        schema:
          type: array
          items:
            type: string
      - name: member_names
        in: query
        description: "Performs the operation on the unique member name specified.\
          \ Examples of members include volumes, hosts, host groups, and directories.\
          \ Enter multiple names in comma-separated format. For example, `vol01,vol02`."
        required: false
        style: form
        explode: false
        schema:
          type: array
          items:
            type: string
      - name: policy_ids
        in: query
        description: Performs the operation on the unique policy IDs specified. Enter
          multiple policy IDs in comma-separated format. The `policy_ids` and `policy_names`
          parameters cannot be provided together.
        required: false
        style: form
        explode: false
        schema:
          type: array
          items:
            type: string
      - name: policy_names
        in: query
        description: "Performs the operation on the policy names specified. Enter\
          \ multiple policy names in comma-separated format. For example, `name01,name02`."
        required: false
        style: form
        explode: false
        schema:
          type: array
          items:
            type: string
      - name: offset
        in: query
        description: The starting position based on the results of the query in relation
          to the full set of response objects returned.
        required: false
        style: form
        explode: true
        schema:
          minimum: 0
          type: integer
          format: int32
        example: 10
      - name: sort
        in: query
        description: "Returns the response objects in the order specified. Set `sort`\
          \ to the name in the response by which to sort. Sorting can be performed\
          \ on any of the names in the response, and the objects can be sorted in\
          \ ascending or descending order. By default, the response objects are sorted\
          \ in ascending order. To sort in descending order, append the minus sign\
          \ (`-`) to the name. A single request can be sorted on multiple objects.\
          \ For example, you can sort all volumes from largest to smallest volume\
          \ size, and then sort volumes of the same size in ascending order by volume\
          \ name. To sort on multiple names, list the names as comma-separated values."
        required: false
        style: form
        explode: false
        schema:
          type: array
          items:
            pattern: "^[a-z]+(_[a-z]+)*-?"
            type: string
      - name: total_item_count
        in: query
        description: "If set to `true`, the `total_item_count` matching the specified\
          \ query parameters is calculated and returned in the response. If set to\
          \ `false`, the `total_item_count` is `null` in the response. This may speed\
          \ up queries where the `total_item_count` is large. If not specified, defaults\
          \ to `false`."
        required: false
        style: form
        explode: true
        schema:
          type: boolean
      responses:
        "200":
          description: OK
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/inline_response_200_47'
    post:
      tags:
      - Directories
      summary: Create a membership between a directory with one or more snapshot policies
      description: "Creates a membership between a directory with one or more snapshot\
        \ policies. The `member_ids` or `member_names` parameter is required, but\
        \ cannot be set together."
      parameters:
      - name: Authorization
        in: header
        description: "Access token (in JWT format) required to use any API endpoint\
          \ (except `/oauth2`, `/login`, and `/logout`)"
        required: false
        style: simple
        explode: false
        schema:
          type: string
      - name: X-Request-ID
        in: header
        description: Supplied by client during request or generated by server.
        required: false
        style: simple
        explode: false
        schema:
          type: string
      - name: member_ids
        in: query
        description: Performs the operation on the unique member IDs specified. Enter
          multiple member IDs in comma-separated format. The `member_ids` and `member_names`
          parameters cannot be provided together.
        required: false
        style: form
        explode: false
        schema:
          type: array
          items:
            type: string
      - name: member_names
        in: query
        description: "Performs the operation on the unique member name specified.\
          \ Examples of members include volumes, hosts, host groups, and directories.\
          \ Enter multiple names in comma-separated format. For example, `vol01,vol02`."
        required: false
        style: form
        explode: false
        schema:
          type: array
          items:
            type: string
      requestBody:
        $ref: '#/components/requestBodies/Policies'
      responses:
        "200":
          description: OK
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/inline_response_200_50'
    delete:
      tags:
      - Directories
      summary: Delete a membership between a directory and one or more snapshot policies
      description: "Deletes a membership between a directory with one or more snapshot\
        \ policies. The `policy_ids` or `policy_names` parameter is required, but\
        \ cannot be set together. The `member_ids` or `member_names` parameter is\
        \ required, but cannot be set together."
      parameters:
      - name: Authorization
        in: header
        description: "Access token (in JWT format) required to use any API endpoint\
          \ (except `/oauth2`, `/login`, and `/logout`)"
        required: false
        style: simple
        explode: false
        schema:
          type: string
      - name: X-Request-ID
        in: header
        description: Supplied by client during request or generated by server.
        required: false
        style: simple
        explode: false
        schema:
          type: string
      - name: member_ids
        in: query
        description: Performs the operation on the unique member IDs specified. Enter
          multiple member IDs in comma-separated format. The `member_ids` and `member_names`
          parameters cannot be provided together.
        required: false
        style: form
        explode: false
        schema:
          type: array
          items:
            type: string
      - name: member_names
        in: query
        description: "Performs the operation on the unique member name specified.\
          \ Examples of members include volumes, hosts, host groups, and directories.\
          \ Enter multiple names in comma-separated format. For example, `vol01,vol02`."
        required: false
        style: form
        explode: false
        schema:
          type: array
          items:
            type: string
      - name: policy_ids
        in: query
        description: Performs the operation on the unique policy IDs specified. Enter
          multiple policy IDs in comma-separated format. The `policy_ids` and `policy_names`
          parameters cannot be provided together.
        required: false
        style: form
        explode: false
        schema:
          type: array
          items:
            type: string
      - name: policy_names
        in: query
        description: "Performs the operation on the policy names specified. Enter\
          \ multiple policy names in comma-separated format. For example, `name01,name02`."
        required: false
        style: form
        explode: false
        schema:
          type: array
          items:
            type: string
      responses:
        "200":
          description: OK
  /api/2.8/directories/space:
    get:
      tags:
      - Directories
      summary: List directory space information
      description: Displays physical storage consumption data for each directory.
      parameters:
      - name: Authorization
        in: header
        description: "Access token (in JWT format) required to use any API endpoint\
          \ (except `/oauth2`, `/login`, and `/logout`)"
        required: false
        style: simple
        explode: false
        schema:
          type: string
      - name: X-Request-ID
        in: header
        description: Supplied by client during request or generated by server.
        required: false
        style: simple
        explode: false
        schema:
          type: string
      - name: destroyed
        in: query
        description: "If set to `true`, lists only destroyed objects that are in the\
          \ eradication pending state. If set to `false`, lists only objects that\
          \ are not destroyed. For destroyed objects, the time remaining is displayed\
          \ in milliseconds."
        required: false
        style: form
        explode: true
        schema:
          type: boolean
      - name: filter
        in: query
        description: Narrows down the results to only the response objects that satisfy
          the filter criteria.
        required: false
        style: form
        explode: true
        schema:
          type: string
      - name: end_time
        in: query
        description: "Displays historical performance data for the specified time\
          \ window, where `start_time` is the beginning of the time window, and `end_time`\
          \ is the end of the time window. The `start_time` and `end_time` parameters\
          \ are specified in milliseconds since the UNIX epoch. If `start_time` is\
          \ not specified, the start time will default to one resolution before the\
          \ end time, meaning that the most recent sample of performance data will\
          \ be displayed. If `end_time`is not specified, the end time will default\
          \ to the current time. Include the `resolution` parameter to display the\
          \ performance data at the specified resolution. If not specified, `resolution`\
          \ defaults to the lowest valid resolution."
        required: false
        style: form
        explode: true
        schema:
          type: integer
          format: int64
      - name: resolution
        in: query
        description: "The number of milliseconds between samples of historical data.\
          \ For array-wide performance metrics (`/arrays/performance` endpoint), valid\
          \ values are `1000` (1 second), `30000` (30 seconds), `300000` (5 minutes),\
          \ `1800000` (30 minutes), `7200000` (2 hours), `28800000` (8 hours), and\
          \ `86400000` (24 hours). For performance metrics on storage objects (`<object\
          \ name>/performance` endpoint), such as volumes, valid values are `30000`\
          \ (30 seconds), `300000` (5 minutes), `1800000` (30 minutes), `7200000`\
          \ (2 hours), `28800000` (8 hours), and `86400000` (24 hours). For space\
          \ metrics, (`<object name>/space` endpoint), valid values are `300000` (5\
          \ minutes), `1800000` (30 minutes), `7200000` (2 hours), `28800000` (8 hours),\
          \ and `86400000` (24 hours). Include the `start_time` parameter to display\
          \ the performance data starting at the specified start time. If `start_time`\
          \ is not specified, the start time will default to one resolution before\
          \ the end time, meaning that the most recent sample of performance data\
          \ will be displayed. Include the `end_time` parameter to display the performance\
          \ data until the specified end time. If `end_time`is not specified, the\
          \ end time will default to the current time. If the `resolution` parameter\
          \ is not specified but either the `start_time` or `end_time` parameter is,\
          \ then `resolution` will default to the lowest valid resolution."
        required: false
        style: form
        explode: true
        schema:
          minimum: 0
          type: integer
          format: int64
        example: 30000
      - name: start_time
        in: query
        description: "Displays historical performance data for the specified time\
          \ window, where `start_time` is the beginning of the time window, and `end_time`\
          \ is the end of the time window. The `start_time` and `end_time` parameters\
          \ are specified in milliseconds since the UNIX epoch. If `start_time` is\
          \ not specified, the start time will default to one resolution before the\
          \ end time, meaning that the most recent sample of performance data will\
          \ be displayed. If `end_time`is not specified, the end time will default\
          \ to the current time. Include the `resolution` parameter to display the\
          \ performance data at the specified resolution. If not specified, `resolution`\
          \ defaults to the lowest valid resolution."
        required: false
        style: form
        explode: true
        schema:
          type: integer
          format: int64
      - name: ids
        in: query
        description: Performs the operation on the unique resource IDs specified.
          Enter multiple resource IDs in comma-separated format. The `ids` and `names`
          parameters cannot be provided together.
        required: false
        style: form
        explode: false
        schema:
          type: array
          items:
            type: string
      - name: limit
        in: query
        description: "Limits the size of the response to the specified number of objects\
          \ on each page. To return the total number of resources, set `limit=0`.\
          \ The total number of resources is returned as a `total_item_count` value.\
          \ If the page size requested is larger than the system maximum limit, the\
          \ server returns the maximum limit, disregarding the requested page size."
        required: false
        style: form
        explode: true
        schema:
          minimum: 1
          type: integer
          format: int32
        example: 10
      - name: names
        in: query
        description: "Performs the operation on the unique name specified. Enter multiple\
          \ names in comma-separated format. For example, `name01,name02`."
        required: false
        style: form
        explode: false
        schema:
          type: array
          items:
            type: string
      - name: offset
        in: query
        description: The starting position based on the results of the query in relation
          to the full set of response objects returned.
        required: false
        style: form
        explode: true
        schema:
          minimum: 0
          type: integer
          format: int32
        example: 10
      - name: sort
        in: query
        description: "Returns the response objects in the order specified. Set `sort`\
          \ to the name in the response by which to sort. Sorting can be performed\
          \ on any of the names in the response, and the objects can be sorted in\
          \ ascending or descending order. By default, the response objects are sorted\
          \ in ascending order. To sort in descending order, append the minus sign\
          \ (`-`) to the name. A single request can be sorted on multiple objects.\
          \ For example, you can sort all volumes from largest to smallest volume\
          \ size, and then sort volumes of the same size in ascending order by volume\
          \ name. To sort on multiple names, list the names as comma-separated values."
        required: false
        style: form
        explode: false
        schema:
          type: array
          items:
            pattern: "^[a-z]+(_[a-z]+)*-?"
            type: string
      - name: total_item_count
        in: query
        description: "If set to `true`, the `total_item_count` matching the specified\
          \ query parameters is calculated and returned in the response. If set to\
          \ `false`, the `total_item_count` is `null` in the response. This may speed\
          \ up queries where the `total_item_count` is large. If not specified, defaults\
          \ to `false`."
        required: false
        style: form
        explode: true
        schema:
          type: boolean
      - name: total_only
        in: query
        description: "If set to `true`, returns the aggregate value of all items after\
          \ filtering. Where it makes more sense, the average value is displayed instead.\
          \ The values are displayed for each name where meaningful. If `total_only=true`,\
          \ the `items` list will be empty."
        required: false
        style: form
        explode: true
        schema:
          type: boolean
      responses:
        "200":
          description: OK
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/inline_response_200_51'
  /api/2.8/directory-exports:
    get:
      tags:
      - Directory Exports
      summary: List directory exports
      description: Displays a list of directory exports.
      parameters:
      - name: Authorization
        in: header
        description: "Access token (in JWT format) required to use any API endpoint\
          \ (except `/oauth2`, `/login`, and `/logout`)"
        required: false
        style: simple
        explode: false
        schema:
          type: string
      - name: X-Request-ID
        in: header
        description: Supplied by client during request or generated by server.
        required: false
        style: simple
        explode: false
        schema:
          type: string
      - name: continuation_token
        in: query
        description: A token used to retrieve the next page of data with some consistency
          guaranteed. The token is a Base64 encoded value. Set `continuation_token`
          to the system-generated token taken from the `x-next-token` header field
          of the response. A query has reached its last page when the response does
          not include a token. Pagination requires the `limit` and `continuation_token`
          query parameters.
        required: false
        style: form
        explode: true
        schema:
          type: string
      - name: destroyed
        in: query
        description: "If set to `true`, lists only destroyed objects that are in the\
          \ eradication pending state. If set to `false`, lists only objects that\
          \ are not destroyed. For destroyed objects, the time remaining is displayed\
          \ in milliseconds."
        required: false
        style: form
        explode: true
        schema:
          type: boolean
      - name: directory_ids
        in: query
        description: Performs the operation on the unique managed directory IDs specified.
          Enter multiple managed directory IDs in comma-separated format. The `directory_ids`
          and `directory_names` parameters cannot be provided together.
        required: false
        style: form
        explode: false
        schema:
          type: array
          items:
            type: string
      - name: directory_names
        in: query
        description: "Performs the operation on the managed directory names specified.\
          \ Enter multiple full managed directory names in comma-separated format.\
          \ For example, `fs:dir01,fs:dir02`."
        required: false
        style: form
        explode: false
        schema:
          type: array
          items:
            type: string
      - name: export_names
        in: query
        description: "Performs the operation on the export names specified. Enter\
          \ multiple names in comma-separated format. For example, `name01,name02`."
        required: false
        style: form
        explode: false
        schema:
          type: array
          items:
            type: string
      - name: filter
        in: query
        description: Narrows down the results to only the response objects that satisfy
          the filter criteria.
        required: false
        style: form
        explode: true
        schema:
          type: string
      - name: limit
        in: query
        description: "Limits the size of the response to the specified number of objects\
          \ on each page. To return the total number of resources, set `limit=0`.\
          \ The total number of resources is returned as a `total_item_count` value.\
          \ If the page size requested is larger than the system maximum limit, the\
          \ server returns the maximum limit, disregarding the requested page size."
        required: false
        style: form
        explode: true
        schema:
          minimum: 1
          type: integer
          format: int32
        example: 10
      - name: offset
        in: query
        description: The starting position based on the results of the query in relation
          to the full set of response objects returned.
        required: false
        style: form
        explode: true
        schema:
          minimum: 0
          type: integer
          format: int32
        example: 10
      - name: policy_ids
        in: query
        description: Performs the operation on the unique policy IDs specified. Enter
          multiple policy IDs in comma-separated format. The `policy_ids` and `policy_names`
          parameters cannot be provided together.
        required: false
        style: form
        explode: false
        schema:
          type: array
          items:
            type: string
      - name: policy_names
        in: query
        description: "Performs the operation on the policy names specified. Enter\
          \ multiple policy names in comma-separated format. For example, `name01,name02`."
        required: false
        style: form
        explode: false
        schema:
          type: array
          items:
            type: string
      - name: sort
        in: query
        description: "Returns the response objects in the order specified. Set `sort`\
          \ to the name in the response by which to sort. Sorting can be performed\
          \ on any of the names in the response, and the objects can be sorted in\
          \ ascending or descending order. By default, the response objects are sorted\
          \ in ascending order. To sort in descending order, append the minus sign\
          \ (`-`) to the name. A single request can be sorted on multiple objects.\
          \ For example, you can sort all volumes from largest to smallest volume\
          \ size, and then sort volumes of the same size in ascending order by volume\
          \ name. To sort on multiple names, list the names as comma-separated values."
        required: false
        style: form
        explode: false
        schema:
          type: array
          items:
            pattern: "^[a-z]+(_[a-z]+)*-?"
            type: string
      - name: total_item_count
        in: query
        description: "If set to `true`, the `total_item_count` matching the specified\
          \ query parameters is calculated and returned in the response. If set to\
          \ `false`, the `total_item_count` is `null` in the response. This may speed\
          \ up queries where the `total_item_count` is large. If not specified, defaults\
          \ to `false`."
        required: false
        style: form
        explode: true
        schema:
          type: boolean
      responses:
        "200":
          description: OK
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/inline_response_200_52'
    post:
      tags:
      - Directory Exports
      summary: Create directory exports
      description: "Creates an export of a managed directory. The `directory_ids`\
        \ or `directory_names` parameter is required, but cannot be set together.\
        \ The `policy_ids` or `policy_names` parameter is required, but cannot be\
        \ set together."
      parameters:
      - name: Authorization
        in: header
        description: "Access token (in JWT format) required to use any API endpoint\
          \ (except `/oauth2`, `/login`, and `/logout`)"
        required: false
        style: simple
        explode: false
        schema:
          type: string
      - name: X-Request-ID
        in: header
        description: Supplied by client during request or generated by server.
        required: false
        style: simple
        explode: false
        schema:
          type: string
      - name: directory_ids
        in: query
        description: Performs the operation on the unique managed directory IDs specified.
          Enter multiple managed directory IDs in comma-separated format. The `directory_ids`
          and `directory_names` parameters cannot be provided together.
        required: false
        style: form
        explode: false
        schema:
          type: array
          items:
            type: string
      - name: directory_names
        in: query
        description: "Performs the operation on the managed directory names specified.\
          \ Enter multiple full managed directory names in comma-separated format.\
          \ For example, `fs:dir01,fs:dir02`."
        required: false
        style: form
        explode: false
        schema:
          type: array
          items:
            type: string
      - name: policy_ids
        in: query
        description: Performs the operation on the unique policy IDs specified. Enter
          multiple policy IDs in comma-separated format. The `policy_ids` and `policy_names`
          parameters cannot be provided together.
        required: false
        style: form
        explode: false
        schema:
          type: array
          items:
            type: string
      - name: policy_names
        in: query
        description: "Performs the operation on the policy names specified. Enter\
          \ multiple policy names in comma-separated format. For example, `name01,name02`."
        required: false
        style: form
        explode: false
        schema:
          type: array
          items:
            type: string
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/2_8_directoryexports_body'
        required: true
      responses:
        "200":
          description: OK
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/inline_response_200_53'
    delete:
      tags:
      - Directory Exports
      summary: Delete directory exports
      description: "Deletes one or more directory exports. If any of the `export_names`\
        \ is not unique across the system, `policy_ids` or `policy_names` must be\
        \ specified to determine the exports."
      parameters:
      - name: Authorization
        in: header
        description: "Access token (in JWT format) required to use any API endpoint\
          \ (except `/oauth2`, `/login`, and `/logout`)"
        required: false
        style: simple
        explode: false
        schema:
          type: string
      - name: X-Request-ID
        in: header
        description: Supplied by client during request or generated by server.
        required: false
        style: simple
        explode: false
        schema:
          type: string
      - name: export_names
        in: query
        description: "Performs the operation on the export names specified. Enter\
          \ multiple names in comma-separated format. For example, `name01,name02`."
        required: false
        style: form
        explode: false
        schema:
          type: array
          items:
            type: string
      - name: policy_ids
        in: query
        description: Performs the operation on the unique policy IDs specified. Enter
          multiple policy IDs in comma-separated format. The `policy_ids` and `policy_names`
          parameters cannot be provided together.
        required: false
        style: form
        explode: false
        schema:
          type: array
          items:
            type: string
      - name: policy_names
        in: query
        description: "Performs the operation on the policy names specified. Enter\
          \ multiple policy names in comma-separated format. For example, `name01,name02`."
        required: false
        style: form
        explode: false
        schema:
          type: array
          items:
            type: string
      responses:
        "200":
          description: OK
  /api/2.8/directory-quotas:
    get:
      tags:
      - Directory Quotas
      summary: List directories with attached quota policies
      description: Displays a list of directories and the quota policies attached
        to them. Directories with multiple policies are listed repeatedly (once per
        policy). The directories without a policy attached are not listed.
      parameters:
      - name: Authorization
        in: header
        description: "Access token (in JWT format) required to use any API endpoint\
          \ (except `/oauth2`, `/login`, and `/logout`)"
        required: false
        style: simple
        explode: false
        schema:
          type: string
      - name: X-Request-ID
        in: header
        description: Supplied by client during request or generated by server.
        required: false
        style: simple
        explode: false
        schema:
          type: string
      - name: continuation_token
        in: query
        description: A token used to retrieve the next page of data with some consistency
          guaranteed. The token is a Base64 encoded value. Set `continuation_token`
          to the system-generated token taken from the `x-next-token` header field
          of the response. A query has reached its last page when the response does
          not include a token. Pagination requires the `limit` and `continuation_token`
          query parameters.
        required: false
        style: form
        explode: true
        schema:
          type: string
      - name: directory_ids
        in: query
        description: Performs the operation on the unique managed directory IDs specified.
          Enter multiple managed directory IDs in comma-separated format. The `directory_ids`
          and `directory_names` parameters cannot be provided together.
        required: false
        style: form
        explode: false
        schema:
          type: array
          items:
            type: string
      - name: directory_names
        in: query
        description: "Performs the operation on the managed directory names specified.\
          \ Enter multiple full managed directory names in comma-separated format.\
          \ For example, `fs:dir01,fs:dir02`."
        required: false
        style: form
        explode: false
        schema:
          type: array
          items:
            type: string
      - name: filter
        in: query
        description: Narrows down the results to only the response objects that satisfy
          the filter criteria.
        required: false
        style: form
        explode: true
        schema:
          type: string
      - name: limit
        in: query
        description: "Limits the size of the response to the specified number of objects\
          \ on each page. To return the total number of resources, set `limit=0`.\
          \ The total number of resources is returned as a `total_item_count` value.\
          \ If the page size requested is larger than the system maximum limit, the\
          \ server returns the maximum limit, disregarding the requested page size."
        required: false
        style: form
        explode: true
        schema:
          minimum: 1
          type: integer
          format: int32
        example: 10
      - name: offset
        in: query
        description: The starting position based on the results of the query in relation
          to the full set of response objects returned.
        required: false
        style: form
        explode: true
        schema:
          minimum: 0
          type: integer
          format: int32
        example: 10
      - name: policy_ids
        in: query
        description: Performs the operation on the unique policy IDs specified. Enter
          multiple policy IDs in comma-separated format. The `policy_ids` and `policy_names`
          parameters cannot be provided together.
        required: false
        style: form
        explode: false
        schema:
          type: array
          items:
            type: string
      - name: policy_names
        in: query
        description: "Performs the operation on the policy names specified. Enter\
          \ multiple policy names in comma-separated format. For example, `name01,name02`."
        required: false
        style: form
        explode: false
        schema:
          type: array
          items:
            type: string
      - name: sort
        in: query
        description: "Returns the response objects in the order specified. Set `sort`\
          \ to the name in the response by which to sort. Sorting can be performed\
          \ on any of the names in the response, and the objects can be sorted in\
          \ ascending or descending order. By default, the response objects are sorted\
          \ in ascending order. To sort in descending order, append the minus sign\
          \ (`-`) to the name. A single request can be sorted on multiple objects.\
          \ For example, you can sort all volumes from largest to smallest volume\
          \ size, and then sort volumes of the same size in ascending order by volume\
          \ name. To sort on multiple names, list the names as comma-separated values."
        required: false
        style: form
        explode: false
        schema:
          type: array
          items:
            pattern: "^[a-z]+(_[a-z]+)*-?"
            type: string
      - name: total_item_count
        in: query
        description: "If set to `true`, the `total_item_count` matching the specified\
          \ query parameters is calculated and returned in the response. If set to\
          \ `false`, the `total_item_count` is `null` in the response. This may speed\
          \ up queries where the `total_item_count` is large. If not specified, defaults\
          \ to `false`."
        required: false
        style: form
        explode: true
        schema:
          type: boolean
      responses:
        "200":
          description: OK
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/inline_response_200_54'
  /api/2.8/directory-services:
    get:
      tags:
      - Directory Services
      summary: List directory services configuration
      description: Displays the role-based access control (RBAC) group configuration
        settings for manageability.
      parameters:
      - name: Authorization
        in: header
        description: "Access token (in JWT format) required to use any API endpoint\
          \ (except `/oauth2`, `/login`, and `/logout`)"
        required: false
        style: simple
        explode: false
        schema:
          type: string
      - name: X-Request-ID
        in: header
        description: Supplied by client during request or generated by server.
        required: false
        style: simple
        explode: false
        schema:
          type: string
      - name: continuation_token
        in: query
        description: A token used to retrieve the next page of data with some consistency
          guaranteed. The token is a Base64 encoded value. Set `continuation_token`
          to the system-generated token taken from the `x-next-token` header field
          of the response. A query has reached its last page when the response does
          not include a token. Pagination requires the `limit` and `continuation_token`
          query parameters.
        required: false
        style: form
        explode: true
        schema:
          type: string
      - name: filter
        in: query
        description: Narrows down the results to only the response objects that satisfy
          the filter criteria.
        required: false
        style: form
        explode: true
        schema:
          type: string
      - name: limit
        in: query
        description: "Limits the size of the response to the specified number of objects\
          \ on each page. To return the total number of resources, set `limit=0`.\
          \ The total number of resources is returned as a `total_item_count` value.\
          \ If the page size requested is larger than the system maximum limit, the\
          \ server returns the maximum limit, disregarding the requested page size."
        required: false
        style: form
        explode: true
        schema:
          minimum: 1
          type: integer
          format: int32
        example: 10
      - name: names
        in: query
        description: "Performs the operation on the unique name specified. Enter multiple\
          \ names in comma-separated format. For example, `name01,name02`."
        required: false
        style: form
        explode: false
        schema:
          type: array
          items:
            type: string
      - name: offset
        in: query
        description: The starting position based on the results of the query in relation
          to the full set of response objects returned.
        required: false
        style: form
        explode: true
        schema:
          minimum: 0
          type: integer
          format: int32
        example: 10
      - name: sort
        in: query
        description: "Returns the response objects in the order specified. Set `sort`\
          \ to the name in the response by which to sort. Sorting can be performed\
          \ on any of the names in the response, and the objects can be sorted in\
          \ ascending or descending order. By default, the response objects are sorted\
          \ in ascending order. To sort in descending order, append the minus sign\
          \ (`-`) to the name. A single request can be sorted on multiple objects.\
          \ For example, you can sort all volumes from largest to smallest volume\
          \ size, and then sort volumes of the same size in ascending order by volume\
          \ name. To sort on multiple names, list the names as comma-separated values."
        required: false
        style: form
        explode: false
        schema:
          type: array
          items:
            pattern: "^[a-z]+(_[a-z]+)*-?"
            type: string
      - name: total_item_count
        in: query
        description: "If set to `true`, the `total_item_count` matching the specified\
          \ query parameters is calculated and returned in the response. If set to\
          \ `false`, the `total_item_count` is `null` in the response. This may speed\
          \ up queries where the `total_item_count` is large. If not specified, defaults\
          \ to `false`."
        required: false
        style: form
        explode: true
        schema:
          type: boolean
      responses:
        "200":
          description: OK
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/inline_response_200_55'
    patch:
      tags:
      - Directory Services
      summary: Modify directory services configuration
      description: Modifies the directory service configuration.
      parameters:
      - name: Authorization
        in: header
        description: "Access token (in JWT format) required to use any API endpoint\
          \ (except `/oauth2`, `/login`, and `/logout`)"
        required: false
        style: simple
        explode: false
        schema:
          type: string
      - name: X-Request-ID
        in: header
        description: Supplied by client during request or generated by server.
        required: false
        style: simple
        explode: false
        schema:
          type: string
      - name: names
        in: query
        description: "Performs the operation on the unique name specified. For example,\
          \ `name01`. Enter multiple names in comma-separated format."
        required: true
        style: form
        explode: false
        schema:
          type: array
          items:
            type: string
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/DirectoryService'
        required: true
      responses:
        "200":
          description: OK
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/inline_response_200_56'
  /api/2.8/directory-services/roles:
    get:
      tags:
      - Directory Services
      summary: List directory services roles
      description: Displays the role-based access control (RBAC) group role settings.
      parameters:
      - name: Authorization
        in: header
        description: "Access token (in JWT format) required to use any API endpoint\
          \ (except `/oauth2`, `/login`, and `/logout`)"
        required: false
        style: simple
        explode: false
        schema:
          type: string
      - name: X-Request-ID
        in: header
        description: Supplied by client during request or generated by server.
        required: false
        style: simple
        explode: false
        schema:
          type: string
      - name: continuation_token
        in: query
        description: A token used to retrieve the next page of data with some consistency
          guaranteed. The token is a Base64 encoded value. Set `continuation_token`
          to the system-generated token taken from the `x-next-token` header field
          of the response. A query has reached its last page when the response does
          not include a token. Pagination requires the `limit` and `continuation_token`
          query parameters.
        required: false
        style: form
        explode: true
        schema:
          type: string
      - name: filter
        in: query
        description: Narrows down the results to only the response objects that satisfy
          the filter criteria.
        required: false
        style: form
        explode: true
        schema:
          type: string
      - name: limit
        in: query
        description: "Limits the size of the response to the specified number of objects\
          \ on each page. To return the total number of resources, set `limit=0`.\
          \ The total number of resources is returned as a `total_item_count` value.\
          \ If the page size requested is larger than the system maximum limit, the\
          \ server returns the maximum limit, disregarding the requested page size."
        required: false
        style: form
        explode: true
        schema:
          minimum: 1
          type: integer
          format: int32
        example: 10
      - name: offset
        in: query
        description: The starting position based on the results of the query in relation
          to the full set of response objects returned.
        required: false
        style: form
        explode: true
        schema:
          minimum: 0
          type: integer
          format: int32
        example: 10
      - name: role_names
        in: query
        description: "Performs the operation on the unique roles specified. For example,\
          \ `array_admin`. Enter multiple roles in comma-separated format."
        required: false
        style: form
        explode: false
        schema:
          type: array
          items:
            type: string
      - name: sort
        in: query
        description: "Returns the response objects in the order specified. Set `sort`\
          \ to the name in the response by which to sort. Sorting can be performed\
          \ on any of the names in the response, and the objects can be sorted in\
          \ ascending or descending order. By default, the response objects are sorted\
          \ in ascending order. To sort in descending order, append the minus sign\
          \ (`-`) to the name. A single request can be sorted on multiple objects.\
          \ For example, you can sort all volumes from largest to smallest volume\
          \ size, and then sort volumes of the same size in ascending order by volume\
          \ name. To sort on multiple names, list the names as comma-separated values."
        required: false
        style: form
        explode: false
        schema:
          type: array
          items:
            pattern: "^[a-z]+(_[a-z]+)*-?"
            type: string
      - name: total_item_count
        in: query
        description: "If set to `true`, the `total_item_count` matching the specified\
          \ query parameters is calculated and returned in the response. If set to\
          \ `false`, the `total_item_count` is `null` in the response. This may speed\
          \ up queries where the `total_item_count` is large. If not specified, defaults\
          \ to `false`."
        required: false
        style: form
        explode: true
        schema:
          type: boolean
      responses:
        "200":
          description: OK
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/inline_response_200_57'
    patch:
      tags:
      - Directory Services
      summary: Modify directory services roles
      description: "Modifies directory services roles, mapping them to their configured\
        \ `group` and `group_base` in the directory service."
      parameters:
      - name: Authorization
        in: header
        description: "Access token (in JWT format) required to use any API endpoint\
          \ (except `/oauth2`, `/login`, and `/logout`)"
        required: false
        style: simple
        explode: false
        schema:
          type: string
      - name: X-Request-ID
        in: header
        description: Supplied by client during request or generated by server.
        required: false
        style: simple
        explode: false
        schema:
          type: string
      - name: role_names
        in: query
        description: "Performs the operation on the unique roles specified. For example,\
          \ `array_admin`. Enter multiple roles in comma-separated format."
        required: true
        style: form
        explode: false
        schema:
          type: array
          items:
            type: string
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/DirectoryServiceRole'
        required: true
      responses:
        "200":
          description: OK
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/inline_response_200_58'
  /api/2.8/directory-services/test:
    get:
      tags:
      - Directory Services
      summary: List directory services test results
      description: Displays the directory services test and displays the results.
        The test verifies that URIs can be resolved and that the array can bind and
        query the tree using the bind user credentials. The test also verifies that
        the array can find all configured groups to ensure the common names and group
        base are correctly configured.
      parameters:
      - name: Authorization
        in: header
        description: "Access token (in JWT format) required to use any API endpoint\
          \ (except `/oauth2`, `/login`, and `/logout`)"
        required: false
        style: simple
        explode: false
        schema:
          type: string
      - name: X-Request-ID
        in: header
        description: Supplied by client during request or generated by server.
        required: false
        style: simple
        explode: false
        schema:
          type: string
      - name: continuation_token
        in: query
        description: A token used to retrieve the next page of data with some consistency
          guaranteed. The token is a Base64 encoded value. Set `continuation_token`
          to the system-generated token taken from the `x-next-token` header field
          of the response. A query has reached its last page when the response does
          not include a token. Pagination requires the `limit` and `continuation_token`
          query parameters.
        required: false
        style: form
        explode: true
        schema:
          type: string
      - name: filter
        in: query
        description: Narrows down the results to only the response objects that satisfy
          the filter criteria.
        required: false
        style: form
        explode: true
        schema:
          type: string
      - name: limit
        in: query
        description: "Limits the size of the response to the specified number of objects\
          \ on each page. To return the total number of resources, set `limit=0`.\
          \ The total number of resources is returned as a `total_item_count` value.\
          \ If the page size requested is larger than the system maximum limit, the\
          \ server returns the maximum limit, disregarding the requested page size."
        required: false
        style: form
        explode: true
        schema:
          minimum: 1
          type: integer
          format: int32
        example: 10
      - name: names
        in: query
        description: "Performs the operation on the unique name specified. For example,\
          \ `name01`. Enter multiple names in comma-separated format."
        required: true
        style: form
        explode: false
        schema:
          type: array
          items:
            type: string
      - name: offset
        in: query
        description: The starting position based on the results of the query in relation
          to the full set of response objects returned.
        required: false
        style: form
        explode: true
        schema:
          minimum: 0
          type: integer
          format: int32
        example: 10
      - name: sort
        in: query
        description: "Returns the response objects in the order specified. Set `sort`\
          \ to the name in the response by which to sort. Sorting can be performed\
          \ on any of the names in the response, and the objects can be sorted in\
          \ ascending or descending order. By default, the response objects are sorted\
          \ in ascending order. To sort in descending order, append the minus sign\
          \ (`-`) to the name. A single request can be sorted on multiple objects.\
          \ For example, you can sort all volumes from largest to smallest volume\
          \ size, and then sort volumes of the same size in ascending order by volume\
          \ name. To sort on multiple names, list the names as comma-separated values."
        required: false
        style: form
        explode: false
        schema:
          type: array
          items:
            pattern: "^[a-z]+(_[a-z]+)*-?"
            type: string
      - name: total_item_count
        in: query
        description: "If set to `true`, the `total_item_count` matching the specified\
          \ query parameters is calculated and returned in the response. If set to\
          \ `false`, the `total_item_count` is `null` in the response. This may speed\
          \ up queries where the `total_item_count` is large. If not specified, defaults\
          \ to `false`."
        required: false
        style: form
        explode: true
        schema:
          type: boolean
      responses:
        "200":
          description: OK
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/inline_response_200_59'
  /api/2.8/directory-snapshots:
    get:
      tags:
      - Directory Snapshots
      summary: List directory snapshots
      description: "Displays a list of directory snapshots, including those pending\
        \ eradication."
      parameters:
      - name: Authorization
        in: header
        description: "Access token (in JWT format) required to use any API endpoint\
          \ (except `/oauth2`, `/login`, and `/logout`)"
        required: false
        style: simple
        explode: false
        schema:
          type: string
      - name: X-Request-ID
        in: header
        description: Supplied by client during request or generated by server.
        required: false
        style: simple
        explode: false
        schema:
          type: string
      - name: continuation_token
        in: query
        description: A token used to retrieve the next page of data with some consistency
          guaranteed. The token is a Base64 encoded value. Set `continuation_token`
          to the system-generated token taken from the `x-next-token` header field
          of the response. A query has reached its last page when the response does
          not include a token. Pagination requires the `limit` and `continuation_token`
          query parameters.
        required: false
        style: form
        explode: true
        schema:
          type: string
      - name: destroyed
        in: query
        description: "If set to `true`, lists only destroyed objects that are in the\
          \ eradication pending state. If set to `false`, lists only objects that\
          \ are not destroyed. For destroyed objects, the time remaining is displayed\
          \ in milliseconds."
        required: false
        style: form
        explode: true
        schema:
          type: boolean
      - name: filter
        in: query
        description: Narrows down the results to only the response objects that satisfy
          the filter criteria.
        required: false
        style: form
        explode: true
        schema:
          type: string
      - name: ids
        in: query
        description: Performs the operation on the unique resource IDs specified.
          Enter multiple resource IDs in comma-separated format. The `ids` and `names`
          parameters cannot be provided together.
        required: false
        style: form
        explode: false
        schema:
          type: array
          items:
            type: string
      - name: limit
        in: query
        description: "Limits the size of the response to the specified number of objects\
          \ on each page. To return the total number of resources, set `limit=0`.\
          \ The total number of resources is returned as a `total_item_count` value.\
          \ If the page size requested is larger than the system maximum limit, the\
          \ server returns the maximum limit, disregarding the requested page size."
        required: false
        style: form
        explode: true
        schema:
          minimum: 1
          type: integer
          format: int32
        example: 10
      - name: names
        in: query
        description: "Performs the operation on the unique name specified. Enter multiple\
          \ names in comma-separated format. For example, `name01,name02`."
        required: false
        style: form
        explode: false
        schema:
          type: array
          items:
            type: string
      - name: offset
        in: query
        description: The starting position based on the results of the query in relation
          to the full set of response objects returned.
        required: false
        style: form
        explode: true
        schema:
          minimum: 0
          type: integer
          format: int32
        example: 10
      - name: sort
        in: query
        description: "Returns the response objects in the order specified. Set `sort`\
          \ to the name in the response by which to sort. Sorting can be performed\
          \ on any of the names in the response, and the objects can be sorted in\
          \ ascending or descending order. By default, the response objects are sorted\
          \ in ascending order. To sort in descending order, append the minus sign\
          \ (`-`) to the name. A single request can be sorted on multiple objects.\
          \ For example, you can sort all volumes from largest to smallest volume\
          \ size, and then sort volumes of the same size in ascending order by volume\
          \ name. To sort on multiple names, list the names as comma-separated values."
        required: false
        style: form
        explode: false
        schema:
          type: array
          items:
            pattern: "^[a-z]+(_[a-z]+)*-?"
            type: string
      - name: source_ids
        in: query
        description: Performs the operation on the source ID specified. Enter multiple
          source IDs in comma-separated format.
        required: false
        style: form
        explode: false
        schema:
          type: array
          items:
            type: string
      - name: source_names
        in: query
        description: "Performs the operation on the source name specified. Enter multiple\
          \ source names in comma-separated format. For example, `name01,name02`."
        required: false
        style: form
        explode: false
        schema:
          type: array
          items:
            type: string
      - name: total_item_count
        in: query
        description: "If set to `true`, the `total_item_count` matching the specified\
          \ query parameters is calculated and returned in the response. If set to\
          \ `false`, the `total_item_count` is `null` in the response. This may speed\
          \ up queries where the `total_item_count` is large. If not specified, defaults\
          \ to `false`."
        required: false
        style: form
        explode: true
        schema:
          type: boolean
      - name: total_only
        in: query
        description: "If set to `true`, returns the aggregate value of all items after\
          \ filtering. Where it makes more sense, the average value is displayed instead.\
          \ The values are displayed for each name where meaningful. If `total_only=true`,\
          \ the `items` list will be empty."
        required: false
        style: form
        explode: true
        schema:
          type: boolean
      responses:
        "200":
          description: OK
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/inline_response_200_60'
    post:
      tags:
      - Directory Snapshots
      summary: Create directory snapshot
      description: "Creates a snapshot of the contents of a directory. The `source_ids`\
        \ or `source_names` parameter is required, but cannot be set together."
      parameters:
      - name: Authorization
        in: header
        description: "Access token (in JWT format) required to use any API endpoint\
          \ (except `/oauth2`, `/login`, and `/logout`)"
        required: false
        style: simple
        explode: false
        schema:
          type: string
      - name: X-Request-ID
        in: header
        description: Supplied by client during request or generated by server.
        required: false
        style: simple
        explode: false
        schema:
          type: string
      - name: source_ids
        in: query
        description: Performs the operation on the source ID specified. Enter multiple
          source IDs in comma-separated format.
        required: false
        style: form
        explode: false
        schema:
          type: array
          items:
            type: string
      - name: source_names
        in: query
        description: "Performs the operation on the source name specified. Enter multiple\
          \ source names in comma-separated format. For example, `name01,name02`."
        required: false
        style: form
        explode: false
        schema:
          type: array
          items:
            type: string
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/2_8_directorysnapshots_body'
        required: true
      responses:
        "200":
          description: OK
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/inline_response_200_61'
    delete:
      tags:
      - Directory Snapshots
      summary: Delete directory snapshot
      description: "Deletes a directory snapshot that has been destroyed and is pending\
        \ eradication. Eradicated directory snapshots cannot be recovered. Directory\
        \ snapshots are destroyed by using the PATCH method. The `ids` or `names`\
        \ parameter is required, but cannot be set together."
      parameters:
      - name: Authorization
        in: header
        description: "Access token (in JWT format) required to use any API endpoint\
          \ (except `/oauth2`, `/login`, and `/logout`)"
        required: false
        style: simple
        explode: false
        schema:
          type: string
      - name: X-Request-ID
        in: header
        description: Supplied by client during request or generated by server.
        required: false
        style: simple
        explode: false
        schema:
          type: string
      - name: ids
        in: query
        description: Performs the operation on the unique resource IDs specified.
          Enter multiple resource IDs in comma-separated format. The `ids` and `names`
          parameters cannot be provided together.
        required: false
        style: form
        explode: false
        schema:
          type: array
          items:
            type: string
      - name: names
        in: query
        description: "Performs the operation on the unique name specified. Enter multiple\
          \ names in comma-separated format. For example, `name01,name02`."
        required: false
        style: form
        explode: false
        schema:
          type: array
          items:
            type: string
      responses:
        "200":
          description: OK
    patch:
      tags:
      - Directory Snapshots
      summary: Modify directory snapshot
      description: "Modifies a directory snapshot. You can destroy, recover, or update\
        \ the policy or time remaining of a directory snapshot. To destroy a directory\
        \ snapshot, set `destroyed=true`. To recover a directory snapshot that has\
        \ been destroyed and is pending eradication, set `destroyed=false`. The `ids`\
        \ or `names` parameter is required, but cannot be set together."
      parameters:
      - name: Authorization
        in: header
        description: "Access token (in JWT format) required to use any API endpoint\
          \ (except `/oauth2`, `/login`, and `/logout`)"
        required: false
        style: simple
        explode: false
        schema:
          type: string
      - name: X-Request-ID
        in: header
        description: Supplied by client during request or generated by server.
        required: false
        style: simple
        explode: false
        schema:
          type: string
      - name: ids
        in: query
        description: Performs the operation on the unique resource IDs specified.
          Enter multiple resource IDs in comma-separated format. The `ids` and `names`
          parameters cannot be provided together.
        required: false
        style: form
        explode: false
        schema:
          type: array
          items:
            type: string
      - name: names
        in: query
        description: "Performs the operation on the unique name specified. Enter multiple\
          \ names in comma-separated format. For example, `name01,name02`."
        required: false
        style: form
        explode: false
        schema:
          type: array
          items:
            type: string
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/2_8_directorysnapshots_body_1'
        required: true
      responses:
        "200":
          description: OK
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/inline_response_200_61'
  /api/2.8/dns:
    get:
      tags:
      - DNS
      summary: List DNS parameters
      description: "Displays the current DNS parameters of the array, including domain\
        \ suffix and name servers."
      parameters:
      - name: Authorization
        in: header
        description: "Access token (in JWT format) required to use any API endpoint\
          \ (except `/oauth2`, `/login`, and `/logout`)"
        required: false
        style: simple
        explode: false
        schema:
          type: string
      - name: X-Request-ID
        in: header
        description: Supplied by client during request or generated by server.
        required: false
        style: simple
        explode: false
        schema:
          type: string
      - name: filter
        in: query
        description: Narrows down the results to only the response objects that satisfy
          the filter criteria.
        required: false
        style: form
        explode: true
        schema:
          type: string
      - name: limit
        in: query
        description: "Limits the size of the response to the specified number of objects\
          \ on each page. To return the total number of resources, set `limit=0`.\
          \ The total number of resources is returned as a `total_item_count` value.\
          \ If the page size requested is larger than the system maximum limit, the\
          \ server returns the maximum limit, disregarding the requested page size."
        required: false
        style: form
        explode: true
        schema:
          minimum: 1
          type: integer
          format: int32
        example: 10
      - name: offset
        in: query
        description: The starting position based on the results of the query in relation
          to the full set of response objects returned.
        required: false
        style: form
        explode: true
        schema:
          minimum: 0
          type: integer
          format: int32
        example: 10
      - name: sort
        in: query
        description: "Returns the response objects in the order specified. Set `sort`\
          \ to the name in the response by which to sort. Sorting can be performed\
          \ on any of the names in the response, and the objects can be sorted in\
          \ ascending or descending order. By default, the response objects are sorted\
          \ in ascending order. To sort in descending order, append the minus sign\
          \ (`-`) to the name. A single request can be sorted on multiple objects.\
          \ For example, you can sort all volumes from largest to smallest volume\
          \ size, and then sort volumes of the same size in ascending order by volume\
          \ name. To sort on multiple names, list the names as comma-separated values."
        required: false
        style: form
        explode: false
        schema:
          type: array
          items:
            pattern: "^[a-z]+(_[a-z]+)*-?"
            type: string
      - name: total_item_count
        in: query
        description: "If set to `true`, the `total_item_count` matching the specified\
          \ query parameters is calculated and returned in the response. If set to\
          \ `false`, the `total_item_count` is `null` in the response. This may speed\
          \ up queries where the `total_item_count` is large. If not specified, defaults\
          \ to `false`."
        required: false
        style: form
        explode: true
        schema:
          type: boolean
      responses:
        "200":
          description: OK
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/inline_response_200_62'
    patch:
      tags:
      - DNS
      summary: Modify DNS parameters
      description: "Modifies the DNS parameters of an array, including the domain\
        \ suffix and the list of DNS name server IP addresses."
      parameters:
      - name: Authorization
        in: header
        description: "Access token (in JWT format) required to use any API endpoint\
          \ (except `/oauth2`, `/login`, and `/logout`)"
        required: false
        style: simple
        explode: false
        schema:
          type: string
      - name: X-Request-ID
        in: header
        description: Supplied by client during request or generated by server.
        required: false
        style: simple
        explode: false
        schema:
          type: string
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/2_8_dns_body'
        required: true
      responses:
        "200":
          description: OK
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/inline_response_200_63'
  /api/2.8/drives:
    get:
      tags:
      - Drives
      summary: "List flash, NVRAM, and cache modules"
      description: "Displays a list of flash, NVRAM, and cache modules that are installed\
        \ in the array along with their attributes and status."
      parameters:
      - name: Authorization
        in: header
        description: "Access token (in JWT format) required to use any API endpoint\
          \ (except `/oauth2`, `/login`, and `/logout`)"
        required: false
        style: simple
        explode: false
        schema:
          type: string
      - name: X-Request-ID
        in: header
        description: Supplied by client during request or generated by server.
        required: false
        style: simple
        explode: false
        schema:
          type: string
      - name: continuation_token
        in: query
        description: A token used to retrieve the next page of data with some consistency
          guaranteed. The token is a Base64 encoded value. Set `continuation_token`
          to the system-generated token taken from the `x-next-token` header field
          of the response. A query has reached its last page when the response does
          not include a token. Pagination requires the `limit` and `continuation_token`
          query parameters.
        required: false
        style: form
        explode: true
        schema:
          type: string
      - name: filter
        in: query
        description: Narrows down the results to only the response objects that satisfy
          the filter criteria.
        required: false
        style: form
        explode: true
        schema:
          type: string
      - name: limit
        in: query
        description: "Limits the size of the response to the specified number of objects\
          \ on each page. To return the total number of resources, set `limit=0`.\
          \ The total number of resources is returned as a `total_item_count` value.\
          \ If the page size requested is larger than the system maximum limit, the\
          \ server returns the maximum limit, disregarding the requested page size."
        required: false
        style: form
        explode: true
        schema:
          minimum: 1
          type: integer
          format: int32
        example: 10
      - name: names
        in: query
        description: "Performs the operation on the unique name specified. Enter multiple\
          \ names in comma-separated format. For example, `name01,name02`."
        required: false
        style: form
        explode: false
        schema:
          type: array
          items:
            type: string
      - name: offset
        in: query
        description: The starting position based on the results of the query in relation
          to the full set of response objects returned.
        required: false
        style: form
        explode: true
        schema:
          minimum: 0
          type: integer
          format: int32
        example: 10
      - name: sort
        in: query
        description: "Returns the response objects in the order specified. Set `sort`\
          \ to the name in the response by which to sort. Sorting can be performed\
          \ on any of the names in the response, and the objects can be sorted in\
          \ ascending or descending order. By default, the response objects are sorted\
          \ in ascending order. To sort in descending order, append the minus sign\
          \ (`-`) to the name. A single request can be sorted on multiple objects.\
          \ For example, you can sort all volumes from largest to smallest volume\
          \ size, and then sort volumes of the same size in ascending order by volume\
          \ name. To sort on multiple names, list the names as comma-separated values."
        required: false
        style: form
        explode: false
        schema:
          type: array
          items:
            pattern: "^[a-z]+(_[a-z]+)*-?"
            type: string
      - name: total_item_count
        in: query
        description: "If set to `true`, the `total_item_count` matching the specified\
          \ query parameters is calculated and returned in the response. If set to\
          \ `false`, the `total_item_count` is `null` in the response. This may speed\
          \ up queries where the `total_item_count` is large. If not specified, defaults\
          \ to `false`."
        required: false
        style: form
        explode: true
        schema:
          type: boolean
      responses:
        "200":
          description: OK
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/inline_response_200_64'
    patch:
      tags:
      - Drives
      summary: Modify flash and NVRAM modules
      description: Modifies flash and NVRAM modules that have been added or connected
        but not yet admitted to the array.
      parameters:
      - name: Authorization
        in: header
        description: "Access token (in JWT format) required to use any API endpoint\
          \ (except `/oauth2`, `/login`, and `/logout`)"
        required: false
        style: simple
        explode: false
        schema:
          type: string
      - name: X-Request-ID
        in: header
        description: Supplied by client during request or generated by server.
        required: false
        style: simple
        explode: false
        schema:
          type: string
      - name: admit
        in: query
        description: "If `true`, admits any `unadmitted` drives into the system."
        required: false
        style: form
        explode: true
        schema:
          type: boolean
      responses:
        "200":
          description: OK
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/inline_response_200_65'
  /api/2.8/file-systems:
    get:
      tags:
      - File Systems
      summary: List file systems
      description: "Displays a list of file systems, including those pending eradication."
      parameters:
      - name: Authorization
        in: header
        description: "Access token (in JWT format) required to use any API endpoint\
          \ (except `/oauth2`, `/login`, and `/logout`)"
        required: false
        style: simple
        explode: false
        schema:
          type: string
      - name: X-Request-ID
        in: header
        description: Supplied by client during request or generated by server.
        required: false
        style: simple
        explode: false
        schema:
          type: string
      - name: continuation_token
        in: query
        description: A token used to retrieve the next page of data with some consistency
          guaranteed. The token is a Base64 encoded value. Set `continuation_token`
          to the system-generated token taken from the `x-next-token` header field
          of the response. A query has reached its last page when the response does
          not include a token. Pagination requires the `limit` and `continuation_token`
          query parameters.
        required: false
        style: form
        explode: true
        schema:
          type: string
      - name: destroyed
        in: query
        description: "If set to `true`, lists only destroyed objects that are in the\
          \ eradication pending state. If set to `false`, lists only objects that\
          \ are not destroyed. For destroyed objects, the time remaining is displayed\
          \ in milliseconds."
        required: false
        style: form
        explode: true
        schema:
          type: boolean
      - name: filter
        in: query
        description: Narrows down the results to only the response objects that satisfy
          the filter criteria.
        required: false
        style: form
        explode: true
        schema:
          type: string
      - name: ids
        in: query
        description: Performs the operation on the unique resource IDs specified.
          Enter multiple resource IDs in comma-separated format. The `ids` and `names`
          parameters cannot be provided together.
        required: false
        style: form
        explode: false
        schema:
          type: array
          items:
            type: string
      - name: limit
        in: query
        description: "Limits the size of the response to the specified number of objects\
          \ on each page. To return the total number of resources, set `limit=0`.\
          \ The total number of resources is returned as a `total_item_count` value.\
          \ If the page size requested is larger than the system maximum limit, the\
          \ server returns the maximum limit, disregarding the requested page size."
        required: false
        style: form
        explode: true
        schema:
          minimum: 1
          type: integer
          format: int32
        example: 10
      - name: names
        in: query
        description: "Performs the operation on the unique name specified. Enter multiple\
          \ names in comma-separated format. For example, `name01,name02`."
        required: false
        style: form
        explode: false
        schema:
          type: array
          items:
            type: string
      - name: offset
        in: query
        description: The starting position based on the results of the query in relation
          to the full set of response objects returned.
        required: false
        style: form
        explode: true
        schema:
          minimum: 0
          type: integer
          format: int32
        example: 10
      - name: sort
        in: query
        description: "Returns the response objects in the order specified. Set `sort`\
          \ to the name in the response by which to sort. Sorting can be performed\
          \ on any of the names in the response, and the objects can be sorted in\
          \ ascending or descending order. By default, the response objects are sorted\
          \ in ascending order. To sort in descending order, append the minus sign\
          \ (`-`) to the name. A single request can be sorted on multiple objects.\
          \ For example, you can sort all volumes from largest to smallest volume\
          \ size, and then sort volumes of the same size in ascending order by volume\
          \ name. To sort on multiple names, list the names as comma-separated values."
        required: false
        style: form
        explode: false
        schema:
          type: array
          items:
            pattern: "^[a-z]+(_[a-z]+)*-?"
            type: string
      - name: total_item_count
        in: query
        description: "If set to `true`, the `total_item_count` matching the specified\
          \ query parameters is calculated and returned in the response. If set to\
          \ `false`, the `total_item_count` is `null` in the response. This may speed\
          \ up queries where the `total_item_count` is large. If not specified, defaults\
          \ to `false`."
        required: false
        style: form
        explode: true
        schema:
          type: boolean
      responses:
        "200":
          description: OK
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/inline_response_200_66'
    post:
      tags:
      - File Systems
      summary: Create file system
      description: Creates one or more file systems.
      parameters:
      - name: Authorization
        in: header
        description: "Access token (in JWT format) required to use any API endpoint\
          \ (except `/oauth2`, `/login`, and `/logout`)"
        required: false
        style: simple
        explode: false
        schema:
          type: string
      - name: X-Request-ID
        in: header
        description: Supplied by client during request or generated by server.
        required: false
        style: simple
        explode: false
        schema:
          type: string
      - name: names
        in: query
        description: "Performs the operation on the unique name specified. For example,\
          \ `name01`. Enter multiple names in comma-separated format."
        required: true
        style: form
        explode: false
        schema:
          type: array
          items:
            type: string
      responses:
        "200":
          description: OK
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/inline_response_200_67'
    delete:
      tags:
      - File Systems
      summary: Delete file system
      description: Deletes a file system that has been destroyed and is pending eradication.
        Eradicated file systems cannot be recovered. File systems are destroyed using
        the PATCH method.
      parameters:
      - name: Authorization
        in: header
        description: "Access token (in JWT format) required to use any API endpoint\
          \ (except `/oauth2`, `/login`, and `/logout`)"
        required: false
        style: simple
        explode: false
        schema:
          type: string
      - name: X-Request-ID
        in: header
        description: Supplied by client during request or generated by server.
        required: false
        style: simple
        explode: false
        schema:
          type: string
      - name: ids
        in: query
        description: Performs the operation on the unique resource IDs specified.
          Enter multiple resource IDs in comma-separated format. The `ids` and `names`
          parameters cannot be provided together.
        required: false
        style: form
        explode: false
        schema:
          type: array
          items:
            type: string
      - name: names
        in: query
        description: "Performs the operation on the unique name specified. Enter multiple\
          \ names in comma-separated format. For example, `name01,name02`."
        required: false
        style: form
        explode: false
        schema:
          type: array
          items:
            type: string
      responses:
        "200":
          description: OK
    patch:
      tags:
      - File Systems
      summary: Modify a file system
      description: "Modifies a file system. You can rename, destroy, or recover a\
        \ file system. To rename a file system, set `name` to the new name. To destroy\
        \ a file system, set `destroyed=true`. To recover a file system that has been\
        \ destroyed and is pending eradication, set `destroyed=false`."
      parameters:
      - name: Authorization
        in: header
        description: "Access token (in JWT format) required to use any API endpoint\
          \ (except `/oauth2`, `/login`, and `/logout`)"
        required: false
        style: simple
        explode: false
        schema:
          type: string
      - name: X-Request-ID
        in: header
        description: Supplied by client during request or generated by server.
        required: false
        style: simple
        explode: false
        schema:
          type: string
      - name: ids
        in: query
        description: Performs the operation on the unique resource IDs specified.
          Enter multiple resource IDs in comma-separated format. The `ids` and `names`
          parameters cannot be provided together.
        required: false
        style: form
        explode: false
        schema:
          type: array
          items:
            type: string
      - name: names
        in: query
        description: "Performs the operation on the unique name specified. Enter multiple\
          \ names in comma-separated format. For example, `name01,name02`."
        required: false
        style: form
        explode: false
        schema:
          type: array
          items:
            type: string
      requestBody:
        $ref: '#/components/requestBodies/FileSystem'
      responses:
        "200":
          description: OK
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/inline_response_200_67'
  /api/2.8/hardware:
    get:
      tags:
      - Hardware
      summary: List hardware component information
      description: Displays a list of hardware slots and bays and status of installed
        components.
      parameters:
      - name: Authorization
        in: header
        description: "Access token (in JWT format) required to use any API endpoint\
          \ (except `/oauth2`, `/login`, and `/logout`)"
        required: false
        style: simple
        explode: false
        schema:
          type: string
      - name: X-Request-ID
        in: header
        description: Supplied by client during request or generated by server.
        required: false
        style: simple
        explode: false
        schema:
          type: string
      - name: filter
        in: query
        description: Narrows down the results to only the response objects that satisfy
          the filter criteria.
        required: false
        style: form
        explode: true
        schema:
          type: string
      - name: limit
        in: query
        description: "Limits the size of the response to the specified number of objects\
          \ on each page. To return the total number of resources, set `limit=0`.\
          \ The total number of resources is returned as a `total_item_count` value.\
          \ If the page size requested is larger than the system maximum limit, the\
          \ server returns the maximum limit, disregarding the requested page size."
        required: false
        style: form
        explode: true
        schema:
          minimum: 1
          type: integer
          format: int32
        example: 10
      - name: names
        in: query
        description: "Performs the operation on the unique name specified. Enter multiple\
          \ names in comma-separated format. For example, `name01,name02`."
        required: false
        style: form
        explode: false
        schema:
          type: array
          items:
            type: string
      - name: offset
        in: query
        description: The starting position based on the results of the query in relation
          to the full set of response objects returned.
        required: false
        style: form
        explode: true
        schema:
          minimum: 0
          type: integer
          format: int32
        example: 10
      - name: sort
        in: query
        description: "Returns the response objects in the order specified. Set `sort`\
          \ to the name in the response by which to sort. Sorting can be performed\
          \ on any of the names in the response, and the objects can be sorted in\
          \ ascending or descending order. By default, the response objects are sorted\
          \ in ascending order. To sort in descending order, append the minus sign\
          \ (`-`) to the name. A single request can be sorted on multiple objects.\
          \ For example, you can sort all volumes from largest to smallest volume\
          \ size, and then sort volumes of the same size in ascending order by volume\
          \ name. To sort on multiple names, list the names as comma-separated values."
        required: false
        style: form
        explode: false
        schema:
          type: array
          items:
            pattern: "^[a-z]+(_[a-z]+)*-?"
            type: string
      - name: total_item_count
        in: query
        description: "If set to `true`, the `total_item_count` matching the specified\
          \ query parameters is calculated and returned in the response. If set to\
          \ `false`, the `total_item_count` is `null` in the response. This may speed\
          \ up queries where the `total_item_count` is large. If not specified, defaults\
          \ to `false`."
        required: false
        style: form
        explode: true
        schema:
          type: boolean
      responses:
        "200":
          description: OK
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/inline_response_200_68'
    patch:
      tags:
      - Hardware
      summary: Modify visual identification
      description: "Modifies the visual identification of a specified hardware component,\
        \ and causing the ID LED to turn on or off."
      parameters:
      - name: Authorization
        in: header
        description: "Access token (in JWT format) required to use any API endpoint\
          \ (except `/oauth2`, `/login`, and `/logout`)"
        required: false
        style: simple
        explode: false
        schema:
          type: string
      - name: X-Request-ID
        in: header
        description: Supplied by client during request or generated by server.
        required: false
        style: simple
        explode: false
        schema:
          type: string
      - name: names
        in: query
        description: "Performs the operation on the unique name specified. Enter multiple\
          \ names in comma-separated format. For example, `name01,name02`."
        required: false
        style: form
        explode: false
        schema:
          type: array
          items:
            type: string
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/2_8_hardware_body'
        required: true
      responses:
        "200":
          description: OK
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/inline_response_200_69'
  /api/2.8/host-groups:
    get:
      tags:
      - Host Groups
      summary: List host groups
      description: Returns a list of host groups.
      parameters:
      - name: Authorization
        in: header
        description: "Access token (in JWT format) required to use any API endpoint\
          \ (except `/oauth2`, `/login`, and `/logout`)"
        required: false
        style: simple
        explode: false
        schema:
          type: string
      - name: X-Request-ID
        in: header
        description: Supplied by client during request or generated by server.
        required: false
        style: simple
        explode: false
        schema:
          type: string
      - name: continuation_token
        in: query
        description: A token used to retrieve the next page of data with some consistency
          guaranteed. The token is a Base64 encoded value. Set `continuation_token`
          to the system-generated token taken from the `x-next-token` header field
          of the response. A query has reached its last page when the response does
          not include a token. Pagination requires the `limit` and `continuation_token`
          query parameters.
        required: false
        style: form
        explode: true
        schema:
          type: string
      - name: filter
        in: query
        description: Narrows down the results to only the response objects that satisfy
          the filter criteria.
        required: false
        style: form
        explode: true
        schema:
          type: string
      - name: limit
        in: query
        description: "Limits the size of the response to the specified number of objects\
          \ on each page. To return the total number of resources, set `limit=0`.\
          \ The total number of resources is returned as a `total_item_count` value.\
          \ If the page size requested is larger than the system maximum limit, the\
          \ server returns the maximum limit, disregarding the requested page size."
        required: false
        style: form
        explode: true
        schema:
          minimum: 1
          type: integer
          format: int32
        example: 10
      - name: names
        in: query
        description: "Performs the operation on the unique name specified. Enter multiple\
          \ names in comma-separated format. For example, `name01,name02`."
        required: false
        style: form
        explode: false
        schema:
          type: array
          items:
            type: string
      - name: offset
        in: query
        description: The starting position based on the results of the query in relation
          to the full set of response objects returned.
        required: false
        style: form
        explode: true
        schema:
          minimum: 0
          type: integer
          format: int32
        example: 10
      - name: sort
        in: query
        description: "Returns the response objects in the order specified. Set `sort`\
          \ to the name in the response by which to sort. Sorting can be performed\
          \ on any of the names in the response, and the objects can be sorted in\
          \ ascending or descending order. By default, the response objects are sorted\
          \ in ascending order. To sort in descending order, append the minus sign\
          \ (`-`) to the name. A single request can be sorted on multiple objects.\
          \ For example, you can sort all volumes from largest to smallest volume\
          \ size, and then sort volumes of the same size in ascending order by volume\
          \ name. To sort on multiple names, list the names as comma-separated values."
        required: false
        style: form
        explode: false
        schema:
          type: array
          items:
            pattern: "^[a-z]+(_[a-z]+)*-?"
            type: string
      - name: total_item_count
        in: query
        description: "If set to `true`, the `total_item_count` matching the specified\
          \ query parameters is calculated and returned in the response. If set to\
          \ `false`, the `total_item_count` is `null` in the response. This may speed\
          \ up queries where the `total_item_count` is large. If not specified, defaults\
          \ to `false`."
        required: false
        style: form
        explode: true
        schema:
          type: boolean
      responses:
        "200":
          description: OK
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/inline_response_200_70'
    post:
      tags:
      - Host Groups
      summary: Create a host group
      description: Creates a host group. The `names` query parameter is required.
      parameters:
      - name: Authorization
        in: header
        description: "Access token (in JWT format) required to use any API endpoint\
          \ (except `/oauth2`, `/login`, and `/logout`)"
        required: false
        style: simple
        explode: false
        schema:
          type: string
      - name: X-Request-ID
        in: header
        description: Supplied by client during request or generated by server.
        required: false
        style: simple
        explode: false
        schema:
          type: string
      - name: names
        in: query
        description: "Performs the operation on the unique name specified. Enter multiple\
          \ names in comma-separated format. For example, `name01,name02`."
        required: false
        style: form
        explode: false
        schema:
          type: array
          items:
            type: string
      responses:
        "200":
          description: OK
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/inline_response_200_71'
    delete:
      tags:
      - Host Groups
      summary: Delete a host group
      description: Deletes a host group. The `names` query parameter is required.
      parameters:
      - name: Authorization
        in: header
        description: "Access token (in JWT format) required to use any API endpoint\
          \ (except `/oauth2`, `/login`, and `/logout`)"
        required: false
        style: simple
        explode: false
        schema:
          type: string
      - name: X-Request-ID
        in: header
        description: Supplied by client during request or generated by server.
        required: false
        style: simple
        explode: false
        schema:
          type: string
      - name: names
        in: query
        description: "Performs the operation on the unique name specified. Enter multiple\
          \ names in comma-separated format. For example, `name01,name02`."
        required: false
        style: form
        explode: false
        schema:
          type: array
          items:
            type: string
      responses:
        "200":
          description: OK
    patch:
      tags:
      - Host Groups
      summary: Manage a host group
      description: Manages a host group. The `names` query parameter is required.
      parameters:
      - name: Authorization
        in: header
        description: "Access token (in JWT format) required to use any API endpoint\
          \ (except `/oauth2`, `/login`, and `/logout`)"
        required: false
        style: simple
        explode: false
        schema:
          type: string
      - name: X-Request-ID
        in: header
        description: Supplied by client during request or generated by server.
        required: false
        style: simple
        explode: false
        schema:
          type: string
      - name: names
        in: query
        description: "Performs the operation on the unique name specified. Enter multiple\
          \ names in comma-separated format. For example, `name01,name02`."
        required: false
        style: form
        explode: false
        schema:
          type: array
          items:
            type: string
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/2_8_hostgroups_body'
        required: true
      responses:
        "200":
          description: OK
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/inline_response_200_71'
  /api/2.8/host-groups/hosts:
    get:
      tags:
      - Host Groups
      summary: List host groups that are associated with hosts
      description: Returns a list of host groups that are associated with hosts.
      parameters:
      - name: Authorization
        in: header
        description: "Access token (in JWT format) required to use any API endpoint\
          \ (except `/oauth2`, `/login`, and `/logout`)"
        required: false
        style: simple
        explode: false
        schema:
          type: string
      - name: X-Request-ID
        in: header
        description: Supplied by client during request or generated by server.
        required: false
        style: simple
        explode: false
        schema:
          type: string
      - name: continuation_token
        in: query
        description: A token used to retrieve the next page of data with some consistency
          guaranteed. The token is a Base64 encoded value. Set `continuation_token`
          to the system-generated token taken from the `x-next-token` header field
          of the response. A query has reached its last page when the response does
          not include a token. Pagination requires the `limit` and `continuation_token`
          query parameters.
        required: false
        style: form
        explode: true
        schema:
          type: string
      - name: filter
        in: query
        description: Narrows down the results to only the response objects that satisfy
          the filter criteria.
        required: false
        style: form
        explode: true
        schema:
          type: string
      - name: group_names
        in: query
        description: "Performs the operation on the unique group name specified. Examples\
          \ of groups include host groups, pods, protection groups, and volume groups.\
          \ Enter multiple names in comma-separated format. For example, `hgroup01,hgroup02`."
        required: false
        style: form
        explode: false
        schema:
          type: array
          items:
            type: string
      - name: limit
        in: query
        description: "Limits the size of the response to the specified number of objects\
          \ on each page. To return the total number of resources, set `limit=0`.\
          \ The total number of resources is returned as a `total_item_count` value.\
          \ If the page size requested is larger than the system maximum limit, the\
          \ server returns the maximum limit, disregarding the requested page size."
        required: false
        style: form
        explode: true
        schema:
          minimum: 1
          type: integer
          format: int32
        example: 10
      - name: member_names
        in: query
        description: "Performs the operation on the unique member name specified.\
          \ Examples of members include volumes, hosts, host groups, and directories.\
          \ Enter multiple names in comma-separated format. For example, `vol01,vol02`."
        required: false
        style: form
        explode: false
        schema:
          type: array
          items:
            type: string
      - name: offset
        in: query
        description: The starting position based on the results of the query in relation
          to the full set of response objects returned.
        required: false
        style: form
        explode: true
        schema:
          minimum: 0
          type: integer
          format: int32
        example: 10
      - name: sort
        in: query
        description: "Returns the response objects in the order specified. Set `sort`\
          \ to the name in the response by which to sort. Sorting can be performed\
          \ on any of the names in the response, and the objects can be sorted in\
          \ ascending or descending order. By default, the response objects are sorted\
          \ in ascending order. To sort in descending order, append the minus sign\
          \ (`-`) to the name. A single request can be sorted on multiple objects.\
          \ For example, you can sort all volumes from largest to smallest volume\
          \ size, and then sort volumes of the same size in ascending order by volume\
          \ name. To sort on multiple names, list the names as comma-separated values."
        required: false
        style: form
        explode: false
        schema:
          type: array
          items:
            pattern: "^[a-z]+(_[a-z]+)*-?"
            type: string
      - name: total_item_count
        in: query
        description: "If set to `true`, the `total_item_count` matching the specified\
          \ query parameters is calculated and returned in the response. If set to\
          \ `false`, the `total_item_count` is `null` in the response. This may speed\
          \ up queries where the `total_item_count` is large. If not specified, defaults\
          \ to `false`."
        required: false
        style: form
        explode: true
        schema:
          type: boolean
      responses:
        "200":
          description: OK
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/inline_response_200_72'
    post:
      tags:
      - Host Groups
      summary: Add a host to a host group
      description: "Adds a host to a host group. Adding a host to a host group automatically\
        \ connects the host to all volumes associated with the group. Multiple hosts\
        \ can be belong to a host group, but a host can only belong to one host group.\
        \ Hosts can be added to host groups at any time. The `group_names` and `member_names`\
        \ parameters are required and must be set together, and only one host group\
        \ can be specified at a time."
      parameters:
      - name: Authorization
        in: header
        description: "Access token (in JWT format) required to use any API endpoint\
          \ (except `/oauth2`, `/login`, and `/logout`)"
        required: false
        style: simple
        explode: false
        schema:
          type: string
      - name: X-Request-ID
        in: header
        description: Supplied by client during request or generated by server.
        required: false
        style: simple
        explode: false
        schema:
          type: string
      - name: group_names
        in: query
        description: "Performs the operation on the unique group name specified. Examples\
          \ of groups include host groups, pods, protection groups, and volume groups.\
          \ Enter multiple names in comma-separated format. For example, `hgroup01,hgroup02`."
        required: false
        style: form
        explode: false
        schema:
          type: array
          items:
            type: string
      - name: member_names
        in: query
        description: "Performs the operation on the unique member name specified.\
          \ Examples of members include volumes, hosts, host groups, and directories.\
          \ Enter multiple names in comma-separated format. For example, `vol01,vol02`."
        required: false
        style: form
        explode: false
        schema:
          type: array
          items:
            type: string
      responses:
        "200":
          description: OK
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/inline_response_200_73'
    delete:
      tags:
      - Host Groups
      summary: Remove a host from a host group
      description: "Removes a host from a host group. Removing a host from a host\
        \ group automatically disconnects the host from all volumes associated with\
        \ the group. Hosts can be removed from host groups at any time. The `group_names`\
        \ and `member_names` parameters are required and must be set together, and\
        \ only one host group can be specified at a time."
      parameters:
      - name: Authorization
        in: header
        description: "Access token (in JWT format) required to use any API endpoint\
          \ (except `/oauth2`, `/login`, and `/logout`)"
        required: false
        style: simple
        explode: false
        schema:
          type: string
      - name: X-Request-ID
        in: header
        description: Supplied by client during request or generated by server.
        required: false
        style: simple
        explode: false
        schema:
          type: string
      - name: group_names
        in: query
        description: "Performs the operation on the unique group name specified. Examples\
          \ of groups include host groups, pods, protection groups, and volume groups.\
          \ Enter multiple names in comma-separated format. For example, `hgroup01,hgroup02`."
        required: false
        style: form
        explode: false
        schema:
          type: array
          items:
            type: string
      - name: member_names
        in: query
        description: "Performs the operation on the unique member name specified.\
          \ Examples of members include volumes, hosts, host groups, and directories.\
          \ Enter multiple names in comma-separated format. For example, `vol01,vol02`."
        required: false
        style: form
        explode: false
        schema:
          type: array
          items:
            type: string
      responses:
        "200":
          description: OK
  /api/2.8/host-groups/performance:
    get:
      tags:
      - Host Groups
      summary: List host group performance data
      description: "Displays real-time and historical performance data, real-time\
        \ latency data, and average I/O sizes across all volumes, displayed both by\
        \ host group and as a total across all host groups."
      parameters:
      - name: Authorization
        in: header
        description: "Access token (in JWT format) required to use any API endpoint\
          \ (except `/oauth2`, `/login`, and `/logout`)"
        required: false
        style: simple
        explode: false
        schema:
          type: string
      - name: X-Request-ID
        in: header
        description: Supplied by client during request or generated by server.
        required: false
        style: simple
        explode: false
        schema:
          type: string
      - name: filter
        in: query
        description: Narrows down the results to only the response objects that satisfy
          the filter criteria.
        required: false
        style: form
        explode: true
        schema:
          type: string
      - name: limit
        in: query
        description: "Limits the size of the response to the specified number of objects\
          \ on each page. To return the total number of resources, set `limit=0`.\
          \ The total number of resources is returned as a `total_item_count` value.\
          \ If the page size requested is larger than the system maximum limit, the\
          \ server returns the maximum limit, disregarding the requested page size."
        required: false
        style: form
        explode: true
        schema:
          minimum: 1
          type: integer
          format: int32
        example: 10
      - name: names
        in: query
        description: "Performs the operation on the unique name specified. Enter multiple\
          \ names in comma-separated format. For example, `name01,name02`."
        required: false
        style: form
        explode: false
        schema:
          type: array
          items:
            type: string
      - name: offset
        in: query
        description: The starting position based on the results of the query in relation
          to the full set of response objects returned.
        required: false
        style: form
        explode: true
        schema:
          minimum: 0
          type: integer
          format: int32
        example: 10
      - name: sort
        in: query
        description: "Returns the response objects in the order specified. Set `sort`\
          \ to the name in the response by which to sort. Sorting can be performed\
          \ on any of the names in the response, and the objects can be sorted in\
          \ ascending or descending order. By default, the response objects are sorted\
          \ in ascending order. To sort in descending order, append the minus sign\
          \ (`-`) to the name. A single request can be sorted on multiple objects.\
          \ For example, you can sort all volumes from largest to smallest volume\
          \ size, and then sort volumes of the same size in ascending order by volume\
          \ name. To sort on multiple names, list the names as comma-separated values."
        required: false
        style: form
        explode: false
        schema:
          type: array
          items:
            pattern: "^[a-z]+(_[a-z]+)*-?"
            type: string
      - name: total_item_count
        in: query
        description: "If set to `true`, the `total_item_count` matching the specified\
          \ query parameters is calculated and returned in the response. If set to\
          \ `false`, the `total_item_count` is `null` in the response. This may speed\
          \ up queries where the `total_item_count` is large. If not specified, defaults\
          \ to `false`."
        required: false
        style: form
        explode: true
        schema:
          type: boolean
      - name: total_only
        in: query
        description: "If set to `true`, returns the aggregate value of all items after\
          \ filtering. Where it makes more sense, the average value is displayed instead.\
          \ The values are displayed for each name where meaningful. If `total_only=true`,\
          \ the `items` list will be empty."
        required: false
        style: form
        explode: true
        schema:
          type: boolean
      responses:
        "200":
          description: OK
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/inline_response_200_74'
  /api/2.8/host-groups/performance/by-array:
    get:
      tags:
      - Host Groups
      summary: List host group performance data by array
      description: "Displays real-time and historical performance data, real-time\
        \ latency data, and average I/O size data. The displayed data is for each\
        \ volume that is connected to a host group on the current array and for each\
        \ volume that is connected to a host group on any remote arrays that are visible\
        \ to the current array. The data is displayed as a total across all host groups\
        \ on each array and by individual host group."
      parameters:
      - name: Authorization
        in: header
        description: "Access token (in JWT format) required to use any API endpoint\
          \ (except `/oauth2`, `/login`, and `/logout`)"
        required: false
        style: simple
        explode: false
        schema:
          type: string
      - name: X-Request-ID
        in: header
        description: Supplied by client during request or generated by server.
        required: false
        style: simple
        explode: false
        schema:
          type: string
      - name: filter
        in: query
        description: Narrows down the results to only the response objects that satisfy
          the filter criteria.
        required: false
        style: form
        explode: true
        schema:
          type: string
      - name: limit
        in: query
        description: "Limits the size of the response to the specified number of objects\
          \ on each page. To return the total number of resources, set `limit=0`.\
          \ The total number of resources is returned as a `total_item_count` value.\
          \ If the page size requested is larger than the system maximum limit, the\
          \ server returns the maximum limit, disregarding the requested page size."
        required: false
        style: form
        explode: true
        schema:
          minimum: 1
          type: integer
          format: int32
        example: 10
      - name: names
        in: query
        description: "Performs the operation on the unique name specified. Enter multiple\
          \ names in comma-separated format. For example, `name01,name02`."
        required: false
        style: form
        explode: false
        schema:
          type: array
          items:
            type: string
      - name: offset
        in: query
        description: The starting position based on the results of the query in relation
          to the full set of response objects returned.
        required: false
        style: form
        explode: true
        schema:
          minimum: 0
          type: integer
          format: int32
        example: 10
      - name: sort
        in: query
        description: "Returns the response objects in the order specified. Set `sort`\
          \ to the name in the response by which to sort. Sorting can be performed\
          \ on any of the names in the response, and the objects can be sorted in\
          \ ascending or descending order. By default, the response objects are sorted\
          \ in ascending order. To sort in descending order, append the minus sign\
          \ (`-`) to the name. A single request can be sorted on multiple objects.\
          \ For example, you can sort all volumes from largest to smallest volume\
          \ size, and then sort volumes of the same size in ascending order by volume\
          \ name. To sort on multiple names, list the names as comma-separated values."
        required: false
        style: form
        explode: false
        schema:
          type: array
          items:
            pattern: "^[a-z]+(_[a-z]+)*-?"
            type: string
      - name: total_item_count
        in: query
        description: "If set to `true`, the `total_item_count` matching the specified\
          \ query parameters is calculated and returned in the response. If set to\
          \ `false`, the `total_item_count` is `null` in the response. This may speed\
          \ up queries where the `total_item_count` is large. If not specified, defaults\
          \ to `false`."
        required: false
        style: form
        explode: true
        schema:
          type: boolean
      - name: total_only
        in: query
        description: "If set to `true`, returns the aggregate value of all items after\
          \ filtering. Where it makes more sense, the average value is displayed instead.\
          \ The values are displayed for each name where meaningful. If `total_only=true`,\
          \ the `items` list will be empty."
        required: false
        style: form
        explode: true
        schema:
          type: boolean
      responses:
        "200":
          description: OK
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/inline_response_200_75'
  /api/2.8/host-groups/protection-groups:
    get:
      tags:
      - Host Groups
      summary: List host groups that are members of protection groups
      description: Displays a list of host group members that belong to one or more
        protection groups.
      parameters:
      - name: Authorization
        in: header
        description: "Access token (in JWT format) required to use any API endpoint\
          \ (except `/oauth2`, `/login`, and `/logout`)"
        required: false
        style: simple
        explode: false
        schema:
          type: string
      - name: X-Request-ID
        in: header
        description: Supplied by client during request or generated by server.
        required: false
        style: simple
        explode: false
        schema:
          type: string
      - name: continuation_token
        in: query
        description: A token used to retrieve the next page of data with some consistency
          guaranteed. The token is a Base64 encoded value. Set `continuation_token`
          to the system-generated token taken from the `x-next-token` header field
          of the response. A query has reached its last page when the response does
          not include a token. Pagination requires the `limit` and `continuation_token`
          query parameters.
        required: false
        style: form
        explode: true
        schema:
          type: string
      - name: filter
        in: query
        description: Narrows down the results to only the response objects that satisfy
          the filter criteria.
        required: false
        style: form
        explode: true
        schema:
          type: string
      - name: group_names
        in: query
        description: "Performs the operation on the unique group name specified. Examples\
          \ of groups include host groups, pods, protection groups, and volume groups.\
          \ Enter multiple names in comma-separated format. For example, `hgroup01,hgroup02`."
        required: false
        style: form
        explode: false
        schema:
          type: array
          items:
            type: string
      - name: limit
        in: query
        description: "Limits the size of the response to the specified number of objects\
          \ on each page. To return the total number of resources, set `limit=0`.\
          \ The total number of resources is returned as a `total_item_count` value.\
          \ If the page size requested is larger than the system maximum limit, the\
          \ server returns the maximum limit, disregarding the requested page size."
        required: false
        style: form
        explode: true
        schema:
          minimum: 1
          type: integer
          format: int32
        example: 10
      - name: member_names
        in: query
        description: "Performs the operation on the unique member name specified.\
          \ Examples of members include volumes, hosts, host groups, and directories.\
          \ Enter multiple names in comma-separated format. For example, `vol01,vol02`."
        required: false
        style: form
        explode: false
        schema:
          type: array
          items:
            type: string
      - name: offset
        in: query
        description: The starting position based on the results of the query in relation
          to the full set of response objects returned.
        required: false
        style: form
        explode: true
        schema:
          minimum: 0
          type: integer
          format: int32
        example: 10
      - name: sort
        in: query
        description: "Returns the response objects in the order specified. Set `sort`\
          \ to the name in the response by which to sort. Sorting can be performed\
          \ on any of the names in the response, and the objects can be sorted in\
          \ ascending or descending order. By default, the response objects are sorted\
          \ in ascending order. To sort in descending order, append the minus sign\
          \ (`-`) to the name. A single request can be sorted on multiple objects.\
          \ For example, you can sort all volumes from largest to smallest volume\
          \ size, and then sort volumes of the same size in ascending order by volume\
          \ name. To sort on multiple names, list the names as comma-separated values."
        required: false
        style: form
        explode: false
        schema:
          type: array
          items:
            pattern: "^[a-z]+(_[a-z]+)*-?"
            type: string
      - name: total_item_count
        in: query
        description: "If set to `true`, the `total_item_count` matching the specified\
          \ query parameters is calculated and returned in the response. If set to\
          \ `false`, the `total_item_count` is `null` in the response. This may speed\
          \ up queries where the `total_item_count` is large. If not specified, defaults\
          \ to `false`."
        required: false
        style: form
        explode: true
        schema:
          type: boolean
      responses:
        "200":
          description: OK
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/inline_response_200_72'
    post:
      tags:
      - Host Groups
      summary: Create a host group
      description: "Creates a host group member and assigns to a protection group.\
        \ Members that are already in the protection group are not affected. For asynchronous\
        \ replication, only members of the same type can belong to a protection group.\
        \ The `group_names` parameter represents the name of the protection group,\
        \ and the `member_names` parameter represents the name of the host group.\
        \ The `group_names` and `member_names` parameters are required and must be\
        \ set together."
      parameters:
      - name: Authorization
        in: header
        description: "Access token (in JWT format) required to use any API endpoint\
          \ (except `/oauth2`, `/login`, and `/logout`)"
        required: false
        style: simple
        explode: false
        schema:
          type: string
      - name: X-Request-ID
        in: header
        description: Supplied by client during request or generated by server.
        required: false
        style: simple
        explode: false
        schema:
          type: string
      - name: group_names
        in: query
        description: "Performs the operation on the unique group name specified. Examples\
          \ of groups include host groups, pods, protection groups, and volume groups.\
          \ Enter multiple names in comma-separated format. For example, `hgroup01,hgroup02`."
        required: false
        style: form
        explode: false
        schema:
          type: array
          items:
            type: string
      - name: member_names
        in: query
        description: "Performs the operation on the unique member name specified.\
          \ Examples of members include volumes, hosts, host groups, and directories.\
          \ Enter multiple names in comma-separated format. For example, `vol01,vol02`."
        required: false
        style: form
        explode: false
        schema:
          type: array
          items:
            type: string
      responses:
        "200":
          description: OK
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/inline_response_200_73'
    delete:
      tags:
      - Host Groups
      summary: Delete a host group from a protection group
      description: "Deletes a host group member from a protection group. After the\
        \ member has been removed, it is no longer protected by the group. Any protection\
        \ group snapshots that were taken before the member was removed are not affected.\
        \ Removing a member from a protection group does not delete the member from\
        \ the array, and the member can be added back to the protection group at any\
        \ time. The `group_names` parameter represents the name of the protection\
        \ group, and the `member_names` parameter represents the name of the host\
        \ group. The `group_names` and `member_names` parameters are required and\
        \ must be set together."
      parameters:
      - name: Authorization
        in: header
        description: "Access token (in JWT format) required to use any API endpoint\
          \ (except `/oauth2`, `/login`, and `/logout`)"
        required: false
        style: simple
        explode: false
        schema:
          type: string
      - name: X-Request-ID
        in: header
        description: Supplied by client during request or generated by server.
        required: false
        style: simple
        explode: false
        schema:
          type: string
      - name: group_names
        in: query
        description: "Performs the operation on the unique group name specified. Examples\
          \ of groups include host groups, pods, protection groups, and volume groups.\
          \ Enter multiple names in comma-separated format. For example, `hgroup01,hgroup02`."
        required: false
        style: form
        explode: false
        schema:
          type: array
          items:
            type: string
      - name: member_names
        in: query
        description: "Performs the operation on the unique member name specified.\
          \ Examples of members include volumes, hosts, host groups, and directories.\
          \ Enter multiple names in comma-separated format. For example, `vol01,vol02`."
        required: false
        style: form
        explode: false
        schema:
          type: array
          items:
            type: string
      responses:
        "200":
          description: OK
  /api/2.8/host-groups/space:
    get:
      tags:
      - Host Groups
      summary: List host group space information
      description: Returns provisioned (virtual) size and physical storage consumption
        data for each host group.
      parameters:
      - name: Authorization
        in: header
        description: "Access token (in JWT format) required to use any API endpoint\
          \ (except `/oauth2`, `/login`, and `/logout`)"
        required: false
        style: simple
        explode: false
        schema:
          type: string
      - name: X-Request-ID
        in: header
        description: Supplied by client during request or generated by server.
        required: false
        style: simple
        explode: false
        schema:
          type: string
      - name: filter
        in: query
        description: Narrows down the results to only the response objects that satisfy
          the filter criteria.
        required: false
        style: form
        explode: true
        schema:
          type: string
      - name: limit
        in: query
        description: "Limits the size of the response to the specified number of objects\
          \ on each page. To return the total number of resources, set `limit=0`.\
          \ The total number of resources is returned as a `total_item_count` value.\
          \ If the page size requested is larger than the system maximum limit, the\
          \ server returns the maximum limit, disregarding the requested page size."
        required: false
        style: form
        explode: true
        schema:
          minimum: 1
          type: integer
          format: int32
        example: 10
      - name: names
        in: query
        description: "Performs the operation on the unique name specified. Enter multiple\
          \ names in comma-separated format. For example, `name01,name02`."
        required: false
        style: form
        explode: false
        schema:
          type: array
          items:
            type: string
      - name: offset
        in: query
        description: The starting position based on the results of the query in relation
          to the full set of response objects returned.
        required: false
        style: form
        explode: true
        schema:
          minimum: 0
          type: integer
          format: int32
        example: 10
      - name: sort
        in: query
        description: "Returns the response objects in the order specified. Set `sort`\
          \ to the name in the response by which to sort. Sorting can be performed\
          \ on any of the names in the response, and the objects can be sorted in\
          \ ascending or descending order. By default, the response objects are sorted\
          \ in ascending order. To sort in descending order, append the minus sign\
          \ (`-`) to the name. A single request can be sorted on multiple objects.\
          \ For example, you can sort all volumes from largest to smallest volume\
          \ size, and then sort volumes of the same size in ascending order by volume\
          \ name. To sort on multiple names, list the names as comma-separated values."
        required: false
        style: form
        explode: false
        schema:
          type: array
          items:
            pattern: "^[a-z]+(_[a-z]+)*-?"
            type: string
      - name: total_item_count
        in: query
        description: "If set to `true`, the `total_item_count` matching the specified\
          \ query parameters is calculated and returned in the response. If set to\
          \ `false`, the `total_item_count` is `null` in the response. This may speed\
          \ up queries where the `total_item_count` is large. If not specified, defaults\
          \ to `false`."
        required: false
        style: form
        explode: true
        schema:
          type: boolean
      responses:
        "200":
          description: OK
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/inline_response_200_76'
  /api/2.8/hosts:
    get:
      tags:
      - Hosts
      summary: List hosts
      description: Returns a list of hosts.
      parameters:
      - name: Authorization
        in: header
        description: "Access token (in JWT format) required to use any API endpoint\
          \ (except `/oauth2`, `/login`, and `/logout`)"
        required: false
        style: simple
        explode: false
        schema:
          type: string
      - name: X-Request-ID
        in: header
        description: Supplied by client during request or generated by server.
        required: false
        style: simple
        explode: false
        schema:
          type: string
      - name: continuation_token
        in: query
        description: A token used to retrieve the next page of data with some consistency
          guaranteed. The token is a Base64 encoded value. Set `continuation_token`
          to the system-generated token taken from the `x-next-token` header field
          of the response. A query has reached its last page when the response does
          not include a token. Pagination requires the `limit` and `continuation_token`
          query parameters.
        required: false
        style: form
        explode: true
        schema:
          type: string
      - name: filter
        in: query
        description: Narrows down the results to only the response objects that satisfy
          the filter criteria.
        required: false
        style: form
        explode: true
        schema:
          type: string
      - name: limit
        in: query
        description: "Limits the size of the response to the specified number of objects\
          \ on each page. To return the total number of resources, set `limit=0`.\
          \ The total number of resources is returned as a `total_item_count` value.\
          \ If the page size requested is larger than the system maximum limit, the\
          \ server returns the maximum limit, disregarding the requested page size."
        required: false
        style: form
        explode: true
        schema:
          minimum: 1
          type: integer
          format: int32
        example: 10
      - name: names
        in: query
        description: "Performs the operation on the unique name specified. Enter multiple\
          \ names in comma-separated format. For example, `name01,name02`."
        required: false
        style: form
        explode: false
        schema:
          type: array
          items:
            type: string
      - name: offset
        in: query
        description: The starting position based on the results of the query in relation
          to the full set of response objects returned.
        required: false
        style: form
        explode: true
        schema:
          minimum: 0
          type: integer
          format: int32
        example: 10
      - name: sort
        in: query
        description: "Returns the response objects in the order specified. Set `sort`\
          \ to the name in the response by which to sort. Sorting can be performed\
          \ on any of the names in the response, and the objects can be sorted in\
          \ ascending or descending order. By default, the response objects are sorted\
          \ in ascending order. To sort in descending order, append the minus sign\
          \ (`-`) to the name. A single request can be sorted on multiple objects.\
          \ For example, you can sort all volumes from largest to smallest volume\
          \ size, and then sort volumes of the same size in ascending order by volume\
          \ name. To sort on multiple names, list the names as comma-separated values."
        required: false
        style: form
        explode: false
        schema:
          type: array
          items:
            pattern: "^[a-z]+(_[a-z]+)*-?"
            type: string
      - name: total_item_count
        in: query
        description: "If set to `true`, the `total_item_count` matching the specified\
          \ query parameters is calculated and returned in the response. If set to\
          \ `false`, the `total_item_count` is `null` in the response. This may speed\
          \ up queries where the `total_item_count` is large. If not specified, defaults\
          \ to `false`."
        required: false
        style: form
        explode: true
        schema:
          type: boolean
      responses:
        "200":
          description: OK
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/inline_response_200_77'
    post:
      tags:
      - Hosts
      summary: Create a host
      description: Creates a host. The `names` query parameter is required.
      parameters:
      - name: Authorization
        in: header
        description: "Access token (in JWT format) required to use any API endpoint\
          \ (except `/oauth2`, `/login`, and `/logout`)"
        required: false
        style: simple
        explode: false
        schema:
          type: string
      - name: X-Request-ID
        in: header
        description: Supplied by client during request or generated by server.
        required: false
        style: simple
        explode: false
        schema:
          type: string
      - name: names
        in: query
        description: "Performs the operation on the unique name specified. Enter multiple\
          \ names in comma-separated format. For example, `name01,name02`."
        required: false
        style: form
        explode: false
        schema:
          type: array
          items:
            type: string
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/2_8_hosts_body'
        required: true
      responses:
        "200":
          description: OK
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/inline_response_200_78'
    delete:
      tags:
      - Hosts
      summary: Delete a host
      description: "Deletes an existing host. All volumes that are connected to the\
        \ host, either through private or shared connections, must be disconnected\
        \ from the host before the host can be deleted. The `names` query parameter\
        \ is required."
      parameters:
      - name: Authorization
        in: header
        description: "Access token (in JWT format) required to use any API endpoint\
          \ (except `/oauth2`, `/login`, and `/logout`)"
        required: false
        style: simple
        explode: false
        schema:
          type: string
      - name: X-Request-ID
        in: header
        description: Supplied by client during request or generated by server.
        required: false
        style: simple
        explode: false
        schema:
          type: string
      - name: names
        in: query
        description: "Performs the operation on the unique name specified. Enter multiple\
          \ names in comma-separated format. For example, `name01,name02`."
        required: false
        style: form
        explode: false
        schema:
          type: array
          items:
            type: string
      responses:
        "200":
          description: OK
    patch:
      tags:
      - Hosts
      summary: Manage a host
      description: "Manages an existing host, including its storage network addresses,\
        \ CHAP, host personality, and preferred arrays, or associate a host to a host\
        \ group. The `names` query parameter is required."
      parameters:
      - name: Authorization
        in: header
        description: "Access token (in JWT format) required to use any API endpoint\
          \ (except `/oauth2`, `/login`, and `/logout`)"
        required: false
        style: simple
        explode: false
        schema:
          type: string
      - name: X-Request-ID
        in: header
        description: Supplied by client during request or generated by server.
        required: false
        style: simple
        explode: false
        schema:
          type: string
      - name: names
        in: query
        description: "Performs the operation on the unique name specified. Enter multiple\
          \ names in comma-separated format. For example, `name01,name02`."
        required: false
        style: form
        explode: false
        schema:
          type: array
          items:
            type: string
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/2_8_hosts_body_1'
        required: true
      responses:
        "200":
          description: OK
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/inline_response_200_78'
  /api/2.8/hosts/host-groups:
    get:
      tags:
      - Hosts
      summary: List hosts that are associated with host groups
      description: Returns a list of hosts that are associated with host groups.
      parameters:
      - name: Authorization
        in: header
        description: "Access token (in JWT format) required to use any API endpoint\
          \ (except `/oauth2`, `/login`, and `/logout`)"
        required: false
        style: simple
        explode: false
        schema:
          type: string
      - name: X-Request-ID
        in: header
        description: Supplied by client during request or generated by server.
        required: false
        style: simple
        explode: false
        schema:
          type: string
      - name: continuation_token
        in: query
        description: A token used to retrieve the next page of data with some consistency
          guaranteed. The token is a Base64 encoded value. Set `continuation_token`
          to the system-generated token taken from the `x-next-token` header field
          of the response. A query has reached its last page when the response does
          not include a token. Pagination requires the `limit` and `continuation_token`
          query parameters.
        required: false
        style: form
        explode: true
        schema:
          type: string
      - name: filter
        in: query
        description: Narrows down the results to only the response objects that satisfy
          the filter criteria.
        required: false
        style: form
        explode: true
        schema:
          type: string
      - name: group_names
        in: query
        description: "Performs the operation on the unique group name specified. Examples\
          \ of groups include host groups, pods, protection groups, and volume groups.\
          \ Enter multiple names in comma-separated format. For example, `hgroup01,hgroup02`."
        required: false
        style: form
        explode: false
        schema:
          type: array
          items:
            type: string
      - name: limit
        in: query
        description: "Limits the size of the response to the specified number of objects\
          \ on each page. To return the total number of resources, set `limit=0`.\
          \ The total number of resources is returned as a `total_item_count` value.\
          \ If the page size requested is larger than the system maximum limit, the\
          \ server returns the maximum limit, disregarding the requested page size."
        required: false
        style: form
        explode: true
        schema:
          minimum: 1
          type: integer
          format: int32
        example: 10
      - name: member_names
        in: query
        description: "Performs the operation on the unique member name specified.\
          \ Examples of members include volumes, hosts, host groups, and directories.\
          \ Enter multiple names in comma-separated format. For example, `vol01,vol02`."
        required: false
        style: form
        explode: false
        schema:
          type: array
          items:
            type: string
      - name: offset
        in: query
        description: The starting position based on the results of the query in relation
          to the full set of response objects returned.
        required: false
        style: form
        explode: true
        schema:
          minimum: 0
          type: integer
          format: int32
        example: 10
      - name: sort
        in: query
        description: "Returns the response objects in the order specified. Set `sort`\
          \ to the name in the response by which to sort. Sorting can be performed\
          \ on any of the names in the response, and the objects can be sorted in\
          \ ascending or descending order. By default, the response objects are sorted\
          \ in ascending order. To sort in descending order, append the minus sign\
          \ (`-`) to the name. A single request can be sorted on multiple objects.\
          \ For example, you can sort all volumes from largest to smallest volume\
          \ size, and then sort volumes of the same size in ascending order by volume\
          \ name. To sort on multiple names, list the names as comma-separated values."
        required: false
        style: form
        explode: false
        schema:
          type: array
          items:
            pattern: "^[a-z]+(_[a-z]+)*-?"
            type: string
      - name: total_item_count
        in: query
        description: "If set to `true`, the `total_item_count` matching the specified\
          \ query parameters is calculated and returned in the response. If set to\
          \ `false`, the `total_item_count` is `null` in the response. This may speed\
          \ up queries where the `total_item_count` is large. If not specified, defaults\
          \ to `false`."
        required: false
        style: form
        explode: true
        schema:
          type: boolean
      responses:
        "200":
          description: OK
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/inline_response_200_72'
    post:
      tags:
      - Hosts
      summary: Add a host to a host group
      description: "Adds a host to a host group. Adding a host to a host group automatically\
        \ connects the host to all volumes associated with the group. Multiple hosts\
        \ can be belong to a host group, but a host can only belong to one host group.\
        \ Hosts can be added to host groups at any time. The `group_names` and `member_names`\
        \ parameters are required and must be set together, and only one host group\
        \ can be specified at a time."
      parameters:
      - name: Authorization
        in: header
        description: "Access token (in JWT format) required to use any API endpoint\
          \ (except `/oauth2`, `/login`, and `/logout`)"
        required: false
        style: simple
        explode: false
        schema:
          type: string
      - name: X-Request-ID
        in: header
        description: Supplied by client during request or generated by server.
        required: false
        style: simple
        explode: false
        schema:
          type: string
      - name: group_names
        in: query
        description: "Performs the operation on the unique group name specified. Examples\
          \ of groups include host groups, pods, protection groups, and volume groups.\
          \ Enter multiple names in comma-separated format. For example, `hgroup01,hgroup02`."
        required: false
        style: form
        explode: false
        schema:
          type: array
          items:
            type: string
      - name: member_names
        in: query
        description: "Performs the operation on the unique member name specified.\
          \ Examples of members include volumes, hosts, host groups, and directories.\
          \ Enter multiple names in comma-separated format. For example, `vol01,vol02`."
        required: false
        style: form
        explode: false
        schema:
          type: array
          items:
            type: string
      responses:
        "200":
          description: OK
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/inline_response_200_73'
    delete:
      tags:
      - Hosts
      summary: Remove a host from a host group
      description: "Removes a host from a host group. Removing a host from a host\
        \ group automatically disconnects the host from all volumes associated with\
        \ the group. Hosts can be removed from host groups at any time. The `group_names`\
        \ and `member_names` parameters are required and must be set together, and\
        \ only one host group can be specified at a time."
      parameters:
      - name: Authorization
        in: header
        description: "Access token (in JWT format) required to use any API endpoint\
          \ (except `/oauth2`, `/login`, and `/logout`)"
        required: false
        style: simple
        explode: false
        schema:
          type: string
      - name: X-Request-ID
        in: header
        description: Supplied by client during request or generated by server.
        required: false
        style: simple
        explode: false
        schema:
          type: string
      - name: group_names
        in: query
        description: "Performs the operation on the unique group name specified. Examples\
          \ of groups include host groups, pods, protection groups, and volume groups.\
          \ Enter multiple names in comma-separated format. For example, `hgroup01,hgroup02`."
        required: false
        style: form
        explode: false
        schema:
          type: array
          items:
            type: string
      - name: member_names
        in: query
        description: "Performs the operation on the unique member name specified.\
          \ Examples of members include volumes, hosts, host groups, and directories.\
          \ Enter multiple names in comma-separated format. For example, `vol01,vol02`."
        required: false
        style: form
        explode: false
        schema:
          type: array
          items:
            type: string
      responses:
        "200":
          description: OK
  /api/2.8/hosts/performance:
    get:
      tags:
      - Hosts
      summary: List host performance data
      description: "Displays real-time and historical performance data, real-time\
        \ latency data, and average I/O sizes across all volumes, displayed both by\
        \ host and as a total across all hosts."
      parameters:
      - name: Authorization
        in: header
        description: "Access token (in JWT format) required to use any API endpoint\
          \ (except `/oauth2`, `/login`, and `/logout`)"
        required: false
        style: simple
        explode: false
        schema:
          type: string
      - name: X-Request-ID
        in: header
        description: Supplied by client during request or generated by server.
        required: false
        style: simple
        explode: false
        schema:
          type: string
      - name: filter
        in: query
        description: Narrows down the results to only the response objects that satisfy
          the filter criteria.
        required: false
        style: form
        explode: true
        schema:
          type: string
      - name: limit
        in: query
        description: "Limits the size of the response to the specified number of objects\
          \ on each page. To return the total number of resources, set `limit=0`.\
          \ The total number of resources is returned as a `total_item_count` value.\
          \ If the page size requested is larger than the system maximum limit, the\
          \ server returns the maximum limit, disregarding the requested page size."
        required: false
        style: form
        explode: true
        schema:
          minimum: 1
          type: integer
          format: int32
        example: 10
      - name: names
        in: query
        description: "Performs the operation on the unique name specified. Enter multiple\
          \ names in comma-separated format. For example, `name01,name02`."
        required: false
        style: form
        explode: false
        schema:
          type: array
          items:
            type: string
      - name: offset
        in: query
        description: The starting position based on the results of the query in relation
          to the full set of response objects returned.
        required: false
        style: form
        explode: true
        schema:
          minimum: 0
          type: integer
          format: int32
        example: 10
      - name: sort
        in: query
        description: "Returns the response objects in the order specified. Set `sort`\
          \ to the name in the response by which to sort. Sorting can be performed\
          \ on any of the names in the response, and the objects can be sorted in\
          \ ascending or descending order. By default, the response objects are sorted\
          \ in ascending order. To sort in descending order, append the minus sign\
          \ (`-`) to the name. A single request can be sorted on multiple objects.\
          \ For example, you can sort all volumes from largest to smallest volume\
          \ size, and then sort volumes of the same size in ascending order by volume\
          \ name. To sort on multiple names, list the names as comma-separated values."
        required: false
        style: form
        explode: false
        schema:
          type: array
          items:
            pattern: "^[a-z]+(_[a-z]+)*-?"
            type: string
      - name: total_item_count
        in: query
        description: "If set to `true`, the `total_item_count` matching the specified\
          \ query parameters is calculated and returned in the response. If set to\
          \ `false`, the `total_item_count` is `null` in the response. This may speed\
          \ up queries where the `total_item_count` is large. If not specified, defaults\
          \ to `false`."
        required: false
        style: form
        explode: true
        schema:
          type: boolean
      - name: total_only
        in: query
        description: "If set to `true`, returns the aggregate value of all items after\
          \ filtering. Where it makes more sense, the average value is displayed instead.\
          \ The values are displayed for each name where meaningful. If `total_only=true`,\
          \ the `items` list will be empty."
        required: false
        style: form
        explode: true
        schema:
          type: boolean
      responses:
        "200":
          description: OK
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/inline_response_200_74'
  /api/2.8/hosts/performance/balance:
    get:
      tags:
      - Hosts
      summary: List host performance balance
      description: Displays the I/O balance statistics for host paths.
      parameters:
      - name: Authorization
        in: header
        description: "Access token (in JWT format) required to use any API endpoint\
          \ (except `/oauth2`, `/login`, and `/logout`)"
        required: false
        style: simple
        explode: false
        schema:
          type: string
      - name: X-Request-ID
        in: header
        description: Supplied by client during request or generated by server.
        required: false
        style: simple
        explode: false
        schema:
          type: string
      - name: filter
        in: query
        description: Narrows down the results to only the response objects that satisfy
          the filter criteria.
        required: false
        style: form
        explode: true
        schema:
          type: string
      - name: limit
        in: query
        description: "Limits the size of the response to the specified number of objects\
          \ on each page. To return the total number of resources, set `limit=0`.\
          \ The total number of resources is returned as a `total_item_count` value.\
          \ If the page size requested is larger than the system maximum limit, the\
          \ server returns the maximum limit, disregarding the requested page size."
        required: false
        style: form
        explode: true
        schema:
          minimum: 1
          type: integer
          format: int32
        example: 10
      - name: names
        in: query
        description: "Performs the operation on the unique name specified. Enter multiple\
          \ names in comma-separated format. For example, `name01,name02`."
        required: false
        style: form
        explode: false
        schema:
          type: array
          items:
            type: string
      - name: offset
        in: query
        description: The starting position based on the results of the query in relation
          to the full set of response objects returned.
        required: false
        style: form
        explode: true
        schema:
          minimum: 0
          type: integer
          format: int32
        example: 10
      - name: sort
        in: query
        description: "Returns the response objects in the order specified. Set `sort`\
          \ to the name in the response by which to sort. Sorting can be performed\
          \ on any of the names in the response, and the objects can be sorted in\
          \ ascending or descending order. By default, the response objects are sorted\
          \ in ascending order. To sort in descending order, append the minus sign\
          \ (`-`) to the name. A single request can be sorted on multiple objects.\
          \ For example, you can sort all volumes from largest to smallest volume\
          \ size, and then sort volumes of the same size in ascending order by volume\
          \ name. To sort on multiple names, list the names as comma-separated values."
        required: false
        style: form
        explode: false
        schema:
          type: array
          items:
            pattern: "^[a-z]+(_[a-z]+)*-?"
            type: string
      - name: total_item_count
        in: query
        description: "If set to `true`, the `total_item_count` matching the specified\
          \ query parameters is calculated and returned in the response. If set to\
          \ `false`, the `total_item_count` is `null` in the response. This may speed\
          \ up queries where the `total_item_count` is large. If not specified, defaults\
          \ to `false`."
        required: false
        style: form
        explode: true
        schema:
          type: boolean
      responses:
        "200":
          description: OK
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/inline_response_200_79'
  /api/2.8/hosts/performance/by-array:
    get:
      tags:
      - Hosts
      summary: List host performance data by array
      description: "Displays real-time and historical performance data, real-time\
        \ latency data, and average I/O size data. The data returned is for each volume\
        \ that is connected to a host on the current array and for each volume that\
        \ is connected to a host on any remote arrays that are visible to the current\
        \ array. The data is displayed as a total across all hosts on each array and\
        \ by individual host."
      parameters:
      - name: Authorization
        in: header
        description: "Access token (in JWT format) required to use any API endpoint\
          \ (except `/oauth2`, `/login`, and `/logout`)"
        required: false
        style: simple
        explode: false
        schema:
          type: string
      - name: X-Request-ID
        in: header
        description: Supplied by client during request or generated by server.
        required: false
        style: simple
        explode: false
        schema:
          type: string
      - name: filter
        in: query
        description: Narrows down the results to only the response objects that satisfy
          the filter criteria.
        required: false
        style: form
        explode: true
        schema:
          type: string
      - name: limit
        in: query
        description: "Limits the size of the response to the specified number of objects\
          \ on each page. To return the total number of resources, set `limit=0`.\
          \ The total number of resources is returned as a `total_item_count` value.\
          \ If the page size requested is larger than the system maximum limit, the\
          \ server returns the maximum limit, disregarding the requested page size."
        required: false
        style: form
        explode: true
        schema:
          minimum: 1
          type: integer
          format: int32
        example: 10
      - name: names
        in: query
        description: "Performs the operation on the unique name specified. Enter multiple\
          \ names in comma-separated format. For example, `name01,name02`."
        required: false
        style: form
        explode: false
        schema:
          type: array
          items:
            type: string
      - name: offset
        in: query
        description: The starting position based on the results of the query in relation
          to the full set of response objects returned.
        required: false
        style: form
        explode: true
        schema:
          minimum: 0
          type: integer
          format: int32
        example: 10
      - name: sort
        in: query
        description: "Returns the response objects in the order specified. Set `sort`\
          \ to the name in the response by which to sort. Sorting can be performed\
          \ on any of the names in the response, and the objects can be sorted in\
          \ ascending or descending order. By default, the response objects are sorted\
          \ in ascending order. To sort in descending order, append the minus sign\
          \ (`-`) to the name. A single request can be sorted on multiple objects.\
          \ For example, you can sort all volumes from largest to smallest volume\
          \ size, and then sort volumes of the same size in ascending order by volume\
          \ name. To sort on multiple names, list the names as comma-separated values."
        required: false
        style: form
        explode: false
        schema:
          type: array
          items:
            pattern: "^[a-z]+(_[a-z]+)*-?"
            type: string
      - name: total_item_count
        in: query
        description: "If set to `true`, the `total_item_count` matching the specified\
          \ query parameters is calculated and returned in the response. If set to\
          \ `false`, the `total_item_count` is `null` in the response. This may speed\
          \ up queries where the `total_item_count` is large. If not specified, defaults\
          \ to `false`."
        required: false
        style: form
        explode: true
        schema:
          type: boolean
      - name: total_only
        in: query
        description: "If set to `true`, returns the aggregate value of all items after\
          \ filtering. Where it makes more sense, the average value is displayed instead.\
          \ The values are displayed for each name where meaningful. If `total_only=true`,\
          \ the `items` list will be empty."
        required: false
        style: form
        explode: true
        schema:
          type: boolean
      responses:
        "200":
          description: OK
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/inline_response_200_75'
  /api/2.8/hosts/protection-groups:
    get:
      tags:
      - Hosts
      summary: List hosts that are members of protection groups
      description: Displays a list of host members that belong to one or more protection
        groups.
      parameters:
      - name: Authorization
        in: header
        description: "Access token (in JWT format) required to use any API endpoint\
          \ (except `/oauth2`, `/login`, and `/logout`)"
        required: false
        style: simple
        explode: false
        schema:
          type: string
      - name: X-Request-ID
        in: header
        description: Supplied by client during request or generated by server.
        required: false
        style: simple
        explode: false
        schema:
          type: string
      - name: continuation_token
        in: query
        description: A token used to retrieve the next page of data with some consistency
          guaranteed. The token is a Base64 encoded value. Set `continuation_token`
          to the system-generated token taken from the `x-next-token` header field
          of the response. A query has reached its last page when the response does
          not include a token. Pagination requires the `limit` and `continuation_token`
          query parameters.
        required: false
        style: form
        explode: true
        schema:
          type: string
      - name: filter
        in: query
        description: Narrows down the results to only the response objects that satisfy
          the filter criteria.
        required: false
        style: form
        explode: true
        schema:
          type: string
      - name: group_names
        in: query
        description: "Performs the operation on the unique group name specified. Examples\
          \ of groups include host groups, pods, protection groups, and volume groups.\
          \ Enter multiple names in comma-separated format. For example, `hgroup01,hgroup02`."
        required: false
        style: form
        explode: false
        schema:
          type: array
          items:
            type: string
      - name: limit
        in: query
        description: "Limits the size of the response to the specified number of objects\
          \ on each page. To return the total number of resources, set `limit=0`.\
          \ The total number of resources is returned as a `total_item_count` value.\
          \ If the page size requested is larger than the system maximum limit, the\
          \ server returns the maximum limit, disregarding the requested page size."
        required: false
        style: form
        explode: true
        schema:
          minimum: 1
          type: integer
          format: int32
        example: 10
      - name: member_names
        in: query
        description: "Performs the operation on the unique member name specified.\
          \ Examples of members include volumes, hosts, host groups, and directories.\
          \ Enter multiple names in comma-separated format. For example, `vol01,vol02`."
        required: false
        style: form
        explode: false
        schema:
          type: array
          items:
            type: string
      - name: offset
        in: query
        description: The starting position based on the results of the query in relation
          to the full set of response objects returned.
        required: false
        style: form
        explode: true
        schema:
          minimum: 0
          type: integer
          format: int32
        example: 10
      - name: sort
        in: query
        description: "Returns the response objects in the order specified. Set `sort`\
          \ to the name in the response by which to sort. Sorting can be performed\
          \ on any of the names in the response, and the objects can be sorted in\
          \ ascending or descending order. By default, the response objects are sorted\
          \ in ascending order. To sort in descending order, append the minus sign\
          \ (`-`) to the name. A single request can be sorted on multiple objects.\
          \ For example, you can sort all volumes from largest to smallest volume\
          \ size, and then sort volumes of the same size in ascending order by volume\
          \ name. To sort on multiple names, list the names as comma-separated values."
        required: false
        style: form
        explode: false
        schema:
          type: array
          items:
            pattern: "^[a-z]+(_[a-z]+)*-?"
            type: string
      - name: total_item_count
        in: query
        description: "If set to `true`, the `total_item_count` matching the specified\
          \ query parameters is calculated and returned in the response. If set to\
          \ `false`, the `total_item_count` is `null` in the response. This may speed\
          \ up queries where the `total_item_count` is large. If not specified, defaults\
          \ to `false`."
        required: false
        style: form
        explode: true
        schema:
          type: boolean
      responses:
        "200":
          description: OK
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/inline_response_200_72'
    post:
      tags:
      - Hosts
      summary: Create a host
      description: "Creates a host member and adds it to a protection group. Members\
        \ that are already in the protection group are not affected. For asynchronous\
        \ replication, only members of the same type can belong to a protection group.\
        \ The `group_names` parameter represents the name of the protection group,\
        \ and the `member_names` parameter represents the name of the host. The `group_names`\
        \ and `member_names` parameters are required and must be set together."
      parameters:
      - name: Authorization
        in: header
        description: "Access token (in JWT format) required to use any API endpoint\
          \ (except `/oauth2`, `/login`, and `/logout`)"
        required: false
        style: simple
        explode: false
        schema:
          type: string
      - name: X-Request-ID
        in: header
        description: Supplied by client during request or generated by server.
        required: false
        style: simple
        explode: false
        schema:
          type: string
      - name: group_names
        in: query
        description: "Performs the operation on the unique group name specified. Examples\
          \ of groups include host groups, pods, protection groups, and volume groups.\
          \ Enter multiple names in comma-separated format. For example, `hgroup01,hgroup02`."
        required: false
        style: form
        explode: false
        schema:
          type: array
          items:
            type: string
      - name: member_names
        in: query
        description: "Performs the operation on the unique member name specified.\
          \ Examples of members include volumes, hosts, host groups, and directories.\
          \ Enter multiple names in comma-separated format. For example, `vol01,vol02`."
        required: false
        style: form
        explode: false
        schema:
          type: array
          items:
            type: string
      responses:
        "200":
          description: OK
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/inline_response_200_73'
    delete:
      tags:
      - Hosts
      summary: Delete a host from a protection group
      description: "Deletes a host member from a protection group. After the member\
        \ has been removed, it is no longer protected by the group. Any protection\
        \ group snapshots that were taken before the member was removed are not affected.\
        \ Removing a member from a protection group does not delete the member from\
        \ the array, and the member can be added back to the protection group at any\
        \ time. The `group_names` parameter represents the name of the protection\
        \ group, and the `member_names` parameter represents the name of the host.\
        \ The `group_names` and `member_names` parameters are required and must be\
        \ set together."
      parameters:
      - name: Authorization
        in: header
        description: "Access token (in JWT format) required to use any API endpoint\
          \ (except `/oauth2`, `/login`, and `/logout`)"
        required: false
        style: simple
        explode: false
        schema:
          type: string
      - name: X-Request-ID
        in: header
        description: Supplied by client during request or generated by server.
        required: false
        style: simple
        explode: false
        schema:
          type: string
      - name: group_names
        in: query
        description: "Performs the operation on the unique group name specified. Examples\
          \ of groups include host groups, pods, protection groups, and volume groups.\
          \ Enter multiple names in comma-separated format. For example, `hgroup01,hgroup02`."
        required: false
        style: form
        explode: false
        schema:
          type: array
          items:
            type: string
      - name: member_names
        in: query
        description: "Performs the operation on the unique member name specified.\
          \ Examples of members include volumes, hosts, host groups, and directories.\
          \ Enter multiple names in comma-separated format. For example, `vol01,vol02`."
        required: false
        style: form
        explode: false
        schema:
          type: array
          items:
            type: string
      responses:
        "200":
          description: OK
  /api/2.8/hosts/space:
    get:
      tags:
      - Hosts
      summary: List host space information
      description: Returns provisioned (virtual) size and physical storage consumption
        data for each host.
      parameters:
      - name: Authorization
        in: header
        description: "Access token (in JWT format) required to use any API endpoint\
          \ (except `/oauth2`, `/login`, and `/logout`)"
        required: false
        style: simple
        explode: false
        schema:
          type: string
      - name: X-Request-ID
        in: header
        description: Supplied by client during request or generated by server.
        required: false
        style: simple
        explode: false
        schema:
          type: string
      - name: filter
        in: query
        description: Narrows down the results to only the response objects that satisfy
          the filter criteria.
        required: false
        style: form
        explode: true
        schema:
          type: string
      - name: limit
        in: query
        description: "Limits the size of the response to the specified number of objects\
          \ on each page. To return the total number of resources, set `limit=0`.\
          \ The total number of resources is returned as a `total_item_count` value.\
          \ If the page size requested is larger than the system maximum limit, the\
          \ server returns the maximum limit, disregarding the requested page size."
        required: false
        style: form
        explode: true
        schema:
          minimum: 1
          type: integer
          format: int32
        example: 10
      - name: names
        in: query
        description: "Performs the operation on the unique name specified. Enter multiple\
          \ names in comma-separated format. For example, `name01,name02`."
        required: false
        style: form
        explode: false
        schema:
          type: array
          items:
            type: string
      - name: offset
        in: query
        description: The starting position based on the results of the query in relation
          to the full set of response objects returned.
        required: false
        style: form
        explode: true
        schema:
          minimum: 0
          type: integer
          format: int32
        example: 10
      - name: sort
        in: query
        description: "Returns the response objects in the order specified. Set `sort`\
          \ to the name in the response by which to sort. Sorting can be performed\
          \ on any of the names in the response, and the objects can be sorted in\
          \ ascending or descending order. By default, the response objects are sorted\
          \ in ascending order. To sort in descending order, append the minus sign\
          \ (`-`) to the name. A single request can be sorted on multiple objects.\
          \ For example, you can sort all volumes from largest to smallest volume\
          \ size, and then sort volumes of the same size in ascending order by volume\
          \ name. To sort on multiple names, list the names as comma-separated values."
        required: false
        style: form
        explode: false
        schema:
          type: array
          items:
            pattern: "^[a-z]+(_[a-z]+)*-?"
            type: string
      - name: total_item_count
        in: query
        description: "If set to `true`, the `total_item_count` matching the specified\
          \ query parameters is calculated and returned in the response. If set to\
          \ `false`, the `total_item_count` is `null` in the response. This may speed\
          \ up queries where the `total_item_count` is large. If not specified, defaults\
          \ to `false`."
        required: false
        style: form
        explode: true
        schema:
          type: boolean
      responses:
        "200":
          description: OK
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/inline_response_200_76'
  /api/2.8/kmip:
    get:
      tags:
      - KMIP
      summary: List KMIP server objects
      description: Displays the list of KMIP server objects.
      parameters:
      - name: Authorization
        in: header
        description: "Access token (in JWT format) required to use any API endpoint\
          \ (except `/oauth2`, `/login`, and `/logout`)"
        required: false
        style: simple
        explode: false
        schema:
          type: string
      - name: X-Request-ID
        in: header
        description: Supplied by client during request or generated by server.
        required: false
        style: simple
        explode: false
        schema:
          type: string
      - name: continuation_token
        in: query
        description: A token used to retrieve the next page of data with some consistency
          guaranteed. The token is a Base64 encoded value. Set `continuation_token`
          to the system-generated token taken from the `x-next-token` header field
          of the response. A query has reached its last page when the response does
          not include a token. Pagination requires the `limit` and `continuation_token`
          query parameters.
        required: false
        style: form
        explode: true
        schema:
          type: string
      - name: filter
        in: query
        description: Narrows down the results to only the response objects that satisfy
          the filter criteria.
        required: false
        style: form
        explode: true
        schema:
          type: string
      - name: limit
        in: query
        description: "Limits the size of the response to the specified number of objects\
          \ on each page. To return the total number of resources, set `limit=0`.\
          \ The total number of resources is returned as a `total_item_count` value.\
          \ If the page size requested is larger than the system maximum limit, the\
          \ server returns the maximum limit, disregarding the requested page size."
        required: false
        style: form
        explode: true
        schema:
          minimum: 1
          type: integer
          format: int32
        example: 10
      - name: names
        in: query
        description: "Performs the operation on the unique name specified. Enter multiple\
          \ names in comma-separated format. For example, `name01,name02`."
        required: false
        style: form
        explode: false
        schema:
          type: array
          items:
            type: string
      - name: offset
        in: query
        description: The starting position based on the results of the query in relation
          to the full set of response objects returned.
        required: false
        style: form
        explode: true
        schema:
          minimum: 0
          type: integer
          format: int32
        example: 10
      - name: sort
        in: query
        description: "Returns the response objects in the order specified. Set `sort`\
          \ to the name in the response by which to sort. Sorting can be performed\
          \ on any of the names in the response, and the objects can be sorted in\
          \ ascending or descending order. By default, the response objects are sorted\
          \ in ascending order. To sort in descending order, append the minus sign\
          \ (`-`) to the name. A single request can be sorted on multiple objects.\
          \ For example, you can sort all volumes from largest to smallest volume\
          \ size, and then sort volumes of the same size in ascending order by volume\
          \ name. To sort on multiple names, list the names as comma-separated values."
        required: false
        style: form
        explode: false
        schema:
          type: array
          items:
            pattern: "^[a-z]+(_[a-z]+)*-?"
            type: string
      - name: total_item_count
        in: query
        description: "If set to `true`, the `total_item_count` matching the specified\
          \ query parameters is calculated and returned in the response. If set to\
          \ `false`, the `total_item_count` is `null` in the response. This may speed\
          \ up queries where the `total_item_count` is large. If not specified, defaults\
          \ to `false`."
        required: false
        style: form
        explode: true
        schema:
          type: boolean
      responses:
        "200":
          description: OK
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/inline_response_200_80'
    post:
      tags:
      - KMIP
      summary: Create KMIP server object
      description: Creates KMIP server objects.
      parameters:
      - name: Authorization
        in: header
        description: "Access token (in JWT format) required to use any API endpoint\
          \ (except `/oauth2`, `/login`, and `/logout`)"
        required: false
        style: simple
        explode: false
        schema:
          type: string
      - name: X-Request-ID
        in: header
        description: Supplied by client during request or generated by server.
        required: false
        style: simple
        explode: false
        schema:
          type: string
      - name: names
        in: query
        description: "Performs the operation on the unique name specified. Enter multiple\
          \ names in comma-separated format. For example, `name01,name02`."
        required: false
        style: form
        explode: false
        schema:
          type: array
          items:
            type: string
      requestBody:
        $ref: '#/components/requestBodies/Kmip'
      responses:
        "200":
          description: Returns the newly created KMIP server object.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/inline_response_200_81'
    delete:
      tags:
      - KMIP
      summary: Delete KMIP server object
      description: Deletes KMIP server objects.
      parameters:
      - name: Authorization
        in: header
        description: "Access token (in JWT format) required to use any API endpoint\
          \ (except `/oauth2`, `/login`, and `/logout`)"
        required: false
        style: simple
        explode: false
        schema:
          type: string
      - name: X-Request-ID
        in: header
        description: Supplied by client during request or generated by server.
        required: false
        style: simple
        explode: false
        schema:
          type: string
      - name: names
        in: query
        description: "Performs the operation on the unique name specified. Enter multiple\
          \ names in comma-separated format. For example, `name01,name02`."
        required: false
        style: form
        explode: false
        schema:
          type: array
          items:
            type: string
      responses:
        "200":
          description: OK
    patch:
      tags:
      - KMIP
      summary: Modify KMIP attributes
      description: Modifies one or more attributes of KMIP server objects.
      parameters:
      - name: Authorization
        in: header
        description: "Access token (in JWT format) required to use any API endpoint\
          \ (except `/oauth2`, `/login`, and `/logout`)"
        required: false
        style: simple
        explode: false
        schema:
          type: string
      - name: X-Request-ID
        in: header
        description: Supplied by client during request or generated by server.
        required: false
        style: simple
        explode: false
        schema:
          type: string
      - name: names
        in: query
        description: "Performs the operation on the unique name specified. Enter multiple\
          \ names in comma-separated format. For example, `name01,name02`."
        required: false
        style: form
        explode: false
        schema:
          type: array
          items:
            type: string
      requestBody:
        $ref: '#/components/requestBodies/Kmip'
      responses:
        "200":
          description: OK
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/inline_response_200_81'
  /api/2.8/kmip/test:
    get:
      tags:
      - KMIP
      summary: Lists KMIP connection tests
      description: Displays communication data between a FlashArray and KMIP server.
      parameters:
      - name: Authorization
        in: header
        description: "Access token (in JWT format) required to use any API endpoint\
          \ (except `/oauth2`, `/login`, and `/logout`)"
        required: false
        style: simple
        explode: false
        schema:
          type: string
      - name: X-Request-ID
        in: header
        description: Supplied by client during request or generated by server.
        required: false
        style: simple
        explode: false
        schema:
          type: string
      - name: names
        in: query
        description: "Performs the operation on the unique name specified. For example,\
          \ `name01`. Enter multiple names in comma-separated format."
        required: true
        style: form
        explode: false
        schema:
          type: array
          items:
            type: string
      responses:
        "200":
          description: OK
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/inline_response_200_82'
  /api/2.8/maintenance-windows:
    get:
      tags:
      - Maintenance Windows
      summary: List maintenance window details
      description: "Displays maintenance window details, including start time, end\
        \ time, and maintenance type."
      parameters:
      - name: Authorization
        in: header
        description: "Access token (in JWT format) required to use any API endpoint\
          \ (except `/oauth2`, `/login`, and `/logout`)"
        required: false
        style: simple
        explode: false
        schema:
          type: string
      - name: X-Request-ID
        in: header
        description: Supplied by client during request or generated by server.
        required: false
        style: simple
        explode: false
        schema:
          type: string
      - name: continuation_token
        in: query
        description: A token used to retrieve the next page of data with some consistency
          guaranteed. The token is a Base64 encoded value. Set `continuation_token`
          to the system-generated token taken from the `x-next-token` header field
          of the response. A query has reached its last page when the response does
          not include a token. Pagination requires the `limit` and `continuation_token`
          query parameters.
        required: false
        style: form
        explode: true
        schema:
          type: string
      - name: filter
        in: query
        description: Narrows down the results to only the response objects that satisfy
          the filter criteria.
        required: false
        style: form
        explode: true
        schema:
          type: string
      - name: limit
        in: query
        description: "Limits the size of the response to the specified number of objects\
          \ on each page. To return the total number of resources, set `limit=0`.\
          \ The total number of resources is returned as a `total_item_count` value.\
          \ If the page size requested is larger than the system maximum limit, the\
          \ server returns the maximum limit, disregarding the requested page size."
        required: false
        style: form
        explode: true
        schema:
          minimum: 1
          type: integer
          format: int32
        example: 10
      - name: names
        in: query
        description: "Performs the operation on the unique name specified. Enter multiple\
          \ names in comma-separated format. For example, `name01,name02`."
        required: false
        style: form
        explode: false
        schema:
          type: array
          items:
            type: string
      - name: offset
        in: query
        description: The starting position based on the results of the query in relation
          to the full set of response objects returned.
        required: false
        style: form
        explode: true
        schema:
          minimum: 0
          type: integer
          format: int32
        example: 10
      - name: sort
        in: query
        description: "Returns the response objects in the order specified. Set `sort`\
          \ to the name in the response by which to sort. Sorting can be performed\
          \ on any of the names in the response, and the objects can be sorted in\
          \ ascending or descending order. By default, the response objects are sorted\
          \ in ascending order. To sort in descending order, append the minus sign\
          \ (`-`) to the name. A single request can be sorted on multiple objects.\
          \ For example, you can sort all volumes from largest to smallest volume\
          \ size, and then sort volumes of the same size in ascending order by volume\
          \ name. To sort on multiple names, list the names as comma-separated values."
        required: false
        style: form
        explode: false
        schema:
          type: array
          items:
            pattern: "^[a-z]+(_[a-z]+)*-?"
            type: string
      - name: total_item_count
        in: query
        description: "If set to `true`, the `total_item_count` matching the specified\
          \ query parameters is calculated and returned in the response. If set to\
          \ `false`, the `total_item_count` is `null` in the response. This may speed\
          \ up queries where the `total_item_count` is large. If not specified, defaults\
          \ to `false`."
        required: false
        style: form
        explode: true
        schema:
          type: boolean
      responses:
        "200":
          description: OK
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/inline_response_200_83'
    post:
      tags:
      - Maintenance Windows
      summary: Create a maintenance window
      description: Creates a maintenance window that suppresses alerts for a specified
        period of time. A maintenance window can be manually closed at any time. The
        `names` and `timeout` parameters are required. Set the `names` parameter to
        `environment`.
      parameters:
      - name: Authorization
        in: header
        description: "Access token (in JWT format) required to use any API endpoint\
          \ (except `/oauth2`, `/login`, and `/logout`)"
        required: false
        style: simple
        explode: false
        schema:
          type: string
      - name: X-Request-ID
        in: header
        description: Supplied by client during request or generated by server.
        required: false
        style: simple
        explode: false
        schema:
          type: string
      - name: names
        in: query
        description: "Performs the operation on the unique name specified. Enter multiple\
          \ names in comma-separated format. For example, `name01,name02`."
        required: false
        style: form
        explode: false
        schema:
          type: array
          items:
            type: string
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/2_8_maintenancewindows_body'
        required: true
      responses:
        "200":
          description: OK
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/inline_response_200_84'
    delete:
      tags:
      - Maintenance Windows
      summary: Delete maintenance window
      description: Deletes an open maintenance window before its scheduled end (`expire`)
        time. The `names` parameter is required and must be set to `environment`.
      parameters:
      - name: Authorization
        in: header
        description: "Access token (in JWT format) required to use any API endpoint\
          \ (except `/oauth2`, `/login`, and `/logout`)"
        required: false
        style: simple
        explode: false
        schema:
          type: string
      - name: X-Request-ID
        in: header
        description: Supplied by client during request or generated by server.
        required: false
        style: simple
        explode: false
        schema:
          type: string
      - name: names
        in: query
        description: "Performs the operation on the unique name specified. Enter multiple\
          \ names in comma-separated format. For example, `name01,name02`."
        required: false
        style: form
        explode: false
        schema:
          type: array
          items:
            type: string
      responses:
        "200":
          description: OK
  /api/2.8/network-interfaces:
    get:
      tags:
      - Network Interfaces
      summary: List network interfaces
      description: Displays all network interfaces for all controllers on the array.
      parameters:
      - name: Authorization
        in: header
        description: "Access token (in JWT format) required to use any API endpoint\
          \ (except `/oauth2`, `/login`, and `/logout`)"
        required: false
        style: simple
        explode: false
        schema:
          type: string
      - name: X-Request-ID
        in: header
        description: Supplied by client during request or generated by server.
        required: false
        style: simple
        explode: false
        schema:
          type: string
      - name: continuation_token
        in: query
        description: A token used to retrieve the next page of data with some consistency
          guaranteed. The token is a Base64 encoded value. Set `continuation_token`
          to the system-generated token taken from the `x-next-token` header field
          of the response. A query has reached its last page when the response does
          not include a token. Pagination requires the `limit` and `continuation_token`
          query parameters.
        required: false
        style: form
        explode: true
        schema:
          type: string
      - name: filter
        in: query
        description: Narrows down the results to only the response objects that satisfy
          the filter criteria.
        required: false
        style: form
        explode: true
        schema:
          type: string
      - name: limit
        in: query
        description: "Limits the size of the response to the specified number of objects\
          \ on each page. To return the total number of resources, set `limit=0`.\
          \ The total number of resources is returned as a `total_item_count` value.\
          \ If the page size requested is larger than the system maximum limit, the\
          \ server returns the maximum limit, disregarding the requested page size."
        required: false
        style: form
        explode: true
        schema:
          minimum: 1
          type: integer
          format: int32
        example: 10
      - name: names
        in: query
        description: "Performs the operation on the unique name specified. Enter multiple\
          \ names in comma-separated format. For example, `name01,name02`."
        required: false
        style: form
        explode: false
        schema:
          type: array
          items:
            type: string
      - name: offset
        in: query
        description: The starting position based on the results of the query in relation
          to the full set of response objects returned.
        required: false
        style: form
        explode: true
        schema:
          minimum: 0
          type: integer
          format: int32
        example: 10
      - name: sort
        in: query
        description: "Returns the response objects in the order specified. Set `sort`\
          \ to the name in the response by which to sort. Sorting can be performed\
          \ on any of the names in the response, and the objects can be sorted in\
          \ ascending or descending order. By default, the response objects are sorted\
          \ in ascending order. To sort in descending order, append the minus sign\
          \ (`-`) to the name. A single request can be sorted on multiple objects.\
          \ For example, you can sort all volumes from largest to smallest volume\
          \ size, and then sort volumes of the same size in ascending order by volume\
          \ name. To sort on multiple names, list the names as comma-separated values."
        required: false
        style: form
        explode: false
        schema:
          type: array
          items:
            pattern: "^[a-z]+(_[a-z]+)*-?"
            type: string
      - name: total_item_count
        in: query
        description: "If set to `true`, the `total_item_count` matching the specified\
          \ query parameters is calculated and returned in the response. If set to\
          \ `false`, the `total_item_count` is `null` in the response. This may speed\
          \ up queries where the `total_item_count` is large. If not specified, defaults\
          \ to `false`."
        required: false
        style: form
        explode: true
        schema:
          type: boolean
      responses:
        "200":
          description: OK
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/inline_response_200_85'
    post:
      tags:
      - Network Interfaces
      summary: Create network interface
      description: Creates a network interface on a controller on the array.
      parameters:
      - name: Authorization
        in: header
        description: "Access token (in JWT format) required to use any API endpoint\
          \ (except `/oauth2`, `/login`, and `/logout`)"
        required: false
        style: simple
        explode: false
        schema:
          type: string
      - name: X-Request-ID
        in: header
        description: Supplied by client during request or generated by server.
        required: false
        style: simple
        explode: false
        schema:
          type: string
      - name: names
        in: query
        description: "Performs the operation on the unique name specified. Enter multiple\
          \ names in comma-separated format. For example, `name01,name02`."
        required: false
        style: form
        explode: false
        schema:
          type: array
          items:
            type: string
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/2_8_networkinterfaces_body'
        required: true
      responses:
        "200":
          description: OK
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/inline_response_200_86'
    delete:
      tags:
      - Network Interfaces
      summary: Delete network interface
      description: Deletes a network interface on a controller.
      parameters:
      - name: Authorization
        in: header
        description: "Access token (in JWT format) required to use any API endpoint\
          \ (except `/oauth2`, `/login`, and `/logout`)"
        required: false
        style: simple
        explode: false
        schema:
          type: string
      - name: X-Request-ID
        in: header
        description: Supplied by client during request or generated by server.
        required: false
        style: simple
        explode: false
        schema:
          type: string
      - name: names
        in: query
        description: "Performs the operation on the unique name specified. Enter multiple\
          \ names in comma-separated format. For example, `name01,name02`."
        required: false
        style: form
        explode: false
        schema:
          type: array
          items:
            type: string
      responses:
        "200":
          description: OK
    patch:
      tags:
      - Network Interfaces
      summary: Modify network interface
      description: Modifies a network interface on a controller.
      parameters:
      - name: Authorization
        in: header
        description: "Access token (in JWT format) required to use any API endpoint\
          \ (except `/oauth2`, `/login`, and `/logout`)"
        required: false
        style: simple
        explode: false
        schema:
          type: string
      - name: X-Request-ID
        in: header
        description: Supplied by client during request or generated by server.
        required: false
        style: simple
        explode: false
        schema:
          type: string
      - name: names
        in: query
        description: "Performs the operation on the unique name specified. Enter multiple\
          \ names in comma-separated format. For example, `name01,name02`."
        required: false
        style: form
        explode: false
        schema:
          type: array
          items:
            type: string
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/2_8_networkinterfaces_body_1'
        required: true
      responses:
        "200":
          description: OK
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/inline_response_200_86'
  /api/2.8/network-interfaces/performance:
    get:
      tags:
      - Network Interfaces
      summary: List network performance statistics
      description: "Displays network statistics, historical bandwidth, and error reporting\
        \ for all specified network interfaces."
      parameters:
      - name: Authorization
        in: header
        description: "Access token (in JWT format) required to use any API endpoint\
          \ (except `/oauth2`, `/login`, and `/logout`)"
        required: false
        style: simple
        explode: false
        schema:
          type: string
      - name: X-Request-ID
        in: header
        description: Supplied by client during request or generated by server.
        required: false
        style: simple
        explode: false
        schema:
          type: string
      - name: filter
        in: query
        description: Narrows down the results to only the response objects that satisfy
          the filter criteria.
        required: false
        style: form
        explode: true
        schema:
          type: string
      - name: end_time
        in: query
        description: "Displays historical performance data for the specified time\
          \ window, where `start_time` is the beginning of the time window, and `end_time`\
          \ is the end of the time window. The `start_time` and `end_time` parameters\
          \ are specified in milliseconds since the UNIX epoch. If `start_time` is\
          \ not specified, the start time will default to one resolution before the\
          \ end time, meaning that the most recent sample of performance data will\
          \ be displayed. If `end_time`is not specified, the end time will default\
          \ to the current time. Include the `resolution` parameter to display the\
          \ performance data at the specified resolution. If not specified, `resolution`\
          \ defaults to the lowest valid resolution."
        required: false
        style: form
        explode: true
        schema:
          type: integer
          format: int64
      - name: resolution
        in: query
        description: "The number of milliseconds between samples of historical data.\
          \ For array-wide performance metrics (`/arrays/performance` endpoint), valid\
          \ values are `1000` (1 second), `30000` (30 seconds), `300000` (5 minutes),\
          \ `1800000` (30 minutes), `7200000` (2 hours), `28800000` (8 hours), and\
          \ `86400000` (24 hours). For performance metrics on storage objects (`<object\
          \ name>/performance` endpoint), such as volumes, valid values are `30000`\
          \ (30 seconds), `300000` (5 minutes), `1800000` (30 minutes), `7200000`\
          \ (2 hours), `28800000` (8 hours), and `86400000` (24 hours). For space\
          \ metrics, (`<object name>/space` endpoint), valid values are `300000` (5\
          \ minutes), `1800000` (30 minutes), `7200000` (2 hours), `28800000` (8 hours),\
          \ and `86400000` (24 hours). Include the `start_time` parameter to display\
          \ the performance data starting at the specified start time. If `start_time`\
          \ is not specified, the start time will default to one resolution before\
          \ the end time, meaning that the most recent sample of performance data\
          \ will be displayed. Include the `end_time` parameter to display the performance\
          \ data until the specified end time. If `end_time`is not specified, the\
          \ end time will default to the current time. If the `resolution` parameter\
          \ is not specified but either the `start_time` or `end_time` parameter is,\
          \ then `resolution` will default to the lowest valid resolution."
        required: false
        style: form
        explode: true
        schema:
          minimum: 0
          type: integer
          format: int64
        example: 30000
      - name: start_time
        in: query
        description: "Displays historical performance data for the specified time\
          \ window, where `start_time` is the beginning of the time window, and `end_time`\
          \ is the end of the time window. The `start_time` and `end_time` parameters\
          \ are specified in milliseconds since the UNIX epoch. If `start_time` is\
          \ not specified, the start time will default to one resolution before the\
          \ end time, meaning that the most recent sample of performance data will\
          \ be displayed. If `end_time`is not specified, the end time will default\
          \ to the current time. Include the `resolution` parameter to display the\
          \ performance data at the specified resolution. If not specified, `resolution`\
          \ defaults to the lowest valid resolution."
        required: false
        style: form
        explode: true
        schema:
          type: integer
          format: int64
      - name: limit
        in: query
        description: "Limits the size of the response to the specified number of objects\
          \ on each page. To return the total number of resources, set `limit=0`.\
          \ The total number of resources is returned as a `total_item_count` value.\
          \ If the page size requested is larger than the system maximum limit, the\
          \ server returns the maximum limit, disregarding the requested page size."
        required: false
        style: form
        explode: true
        schema:
          minimum: 1
          type: integer
          format: int32
        example: 10
      - name: names
        in: query
        description: "Performs the operation on the unique name specified. Enter multiple\
          \ names in comma-separated format. For example, `name01,name02`."
        required: false
        style: form
        explode: false
        schema:
          type: array
          items:
            type: string
      - name: offset
        in: query
        description: The starting position based on the results of the query in relation
          to the full set of response objects returned.
        required: false
        style: form
        explode: true
        schema:
          minimum: 0
          type: integer
          format: int32
        example: 10
      - name: sort
        in: query
        description: "Returns the response objects in the order specified. Set `sort`\
          \ to the name in the response by which to sort. Sorting can be performed\
          \ on any of the names in the response, and the objects can be sorted in\
          \ ascending or descending order. By default, the response objects are sorted\
          \ in ascending order. To sort in descending order, append the minus sign\
          \ (`-`) to the name. A single request can be sorted on multiple objects.\
          \ For example, you can sort all volumes from largest to smallest volume\
          \ size, and then sort volumes of the same size in ascending order by volume\
          \ name. To sort on multiple names, list the names as comma-separated values."
        required: false
        style: form
        explode: false
        schema:
          type: array
          items:
            pattern: "^[a-z]+(_[a-z]+)*-?"
            type: string
      - name: total_item_count
        in: query
        description: "If set to `true`, the `total_item_count` matching the specified\
          \ query parameters is calculated and returned in the response. If set to\
          \ `false`, the `total_item_count` is `null` in the response. This may speed\
          \ up queries where the `total_item_count` is large. If not specified, defaults\
          \ to `false`."
        required: false
        style: form
        explode: true
        schema:
          type: boolean
      - name: total_only
        in: query
        description: "If set to `true`, returns the aggregate value of all items after\
          \ filtering. Where it makes more sense, the average value is displayed instead.\
          \ The values are displayed for each name where meaningful. If `total_only=true`,\
          \ the `items` list will be empty."
        required: false
        style: form
        explode: true
        schema:
          type: boolean
      responses:
        "200":
          description: OK
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/inline_response_200_87'
  /api/2.8/offloads:
    get:
      tags:
      - Offloads
      summary: List offload targets
      description: Displays a list of offload targets that are connected to the array.
      parameters:
      - name: Authorization
        in: header
        description: "Access token (in JWT format) required to use any API endpoint\
          \ (except `/oauth2`, `/login`, and `/logout`)"
        required: false
        style: simple
        explode: false
        schema:
          type: string
      - name: X-Request-ID
        in: header
        description: Supplied by client during request or generated by server.
        required: false
        style: simple
        explode: false
        schema:
          type: string
      - name: filter
        in: query
        description: Narrows down the results to only the response objects that satisfy
          the filter criteria.
        required: false
        style: form
        explode: true
        schema:
          type: string
      - name: limit
        in: query
        description: "Limits the size of the response to the specified number of objects\
          \ on each page. To return the total number of resources, set `limit=0`.\
          \ The total number of resources is returned as a `total_item_count` value.\
          \ If the page size requested is larger than the system maximum limit, the\
          \ server returns the maximum limit, disregarding the requested page size."
        required: false
        style: form
        explode: true
        schema:
          minimum: 1
          type: integer
          format: int32
        example: 10
      - name: names
        in: query
        description: "Performs the operation on the unique name specified. Enter multiple\
          \ names in comma-separated format. For example, `name01,name02`."
        required: false
        style: form
        explode: false
        schema:
          type: array
          items:
            type: string
      - name: offset
        in: query
        description: The starting position based on the results of the query in relation
          to the full set of response objects returned.
        required: false
        style: form
        explode: true
        schema:
          minimum: 0
          type: integer
          format: int32
        example: 10
      - name: protocol
        in: query
        description: "Protocol type. Valid values are `azure`, `google-cloud`, `nfs`,\
          \ and `s3`."
        required: false
        style: form
        explode: true
        schema:
          type: string
      - name: sort
        in: query
        description: "Returns the response objects in the order specified. Set `sort`\
          \ to the name in the response by which to sort. Sorting can be performed\
          \ on any of the names in the response, and the objects can be sorted in\
          \ ascending or descending order. By default, the response objects are sorted\
          \ in ascending order. To sort in descending order, append the minus sign\
          \ (`-`) to the name. A single request can be sorted on multiple objects.\
          \ For example, you can sort all volumes from largest to smallest volume\
          \ size, and then sort volumes of the same size in ascending order by volume\
          \ name. To sort on multiple names, list the names as comma-separated values."
        required: false
        style: form
        explode: false
        schema:
          type: array
          items:
            pattern: "^[a-z]+(_[a-z]+)*-?"
            type: string
      - name: total_item_count
        in: query
        description: "If set to `true`, the `total_item_count` matching the specified\
          \ query parameters is calculated and returned in the response. If set to\
          \ `false`, the `total_item_count` is `null` in the response. This may speed\
          \ up queries where the `total_item_count` is large. If not specified, defaults\
          \ to `false`."
        required: false
        style: form
        explode: true
        schema:
          type: boolean
      - name: total_only
        in: query
        description: "If set to `true`, returns the aggregate value of all items after\
          \ filtering. Where it makes more sense, the average value is displayed instead.\
          \ The values are displayed for each name where meaningful. If `total_only=true`,\
          \ the `items` list will be empty."
        required: false
        style: form
        explode: true
        schema:
          type: boolean
      responses:
        "200":
          description: OK
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/inline_response_200_88'
    post:
      tags:
      - Offloads
      summary: Create offload target
      description: "Creates an offload target, connecting it to an array. Before you\
        \ can connect to, manage, and replicate to an offload target, the Purity Run\
        \ app must be installed. For more information about Purity//FA apps, see the\
        \ Apps section of this guide."
      parameters:
      - name: Authorization
        in: header
        description: "Access token (in JWT format) required to use any API endpoint\
          \ (except `/oauth2`, `/login`, and `/logout`)"
        required: false
        style: simple
        explode: false
        schema:
          type: string
      - name: X-Request-ID
        in: header
        description: Supplied by client during request or generated by server.
        required: false
        style: simple
        explode: false
        schema:
          type: string
      - name: initialize
        in: query
        description: "If set to `true`, initializes the Amazon S3/Azure Blob container/Google\
          \ Cloud Storage in preparation for offloading. The parameter must be set\
          \ to `true` if this is the first time the array is connecting to the offload\
          \ target."
        required: false
        style: form
        explode: true
        schema:
          type: boolean
      - name: names
        in: query
        description: "Performs the operation on the unique name specified. Enter multiple\
          \ names in comma-separated format. For example, `name01,name02`."
        required: false
        style: form
        explode: false
        schema:
          type: array
          items:
            type: string
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/2_8_offloads_body'
        required: true
      responses:
        "200":
          description: OK
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/inline_response_200_89'
    delete:
      tags:
      - Offloads
      summary: Delete offload target
      description: Deletes an offload target.
      parameters:
      - name: Authorization
        in: header
        description: "Access token (in JWT format) required to use any API endpoint\
          \ (except `/oauth2`, `/login`, and `/logout`)"
        required: false
        style: simple
        explode: false
        schema:
          type: string
      - name: X-Request-ID
        in: header
        description: Supplied by client during request or generated by server.
        required: false
        style: simple
        explode: false
        schema:
          type: string
      - name: names
        in: query
        description: "Performs the operation on the unique name specified. Enter multiple\
          \ names in comma-separated format. For example, `name01,name02`."
        required: false
        style: form
        explode: false
        schema:
          type: array
          items:
            type: string
      responses:
        "200":
          description: OK
  /api/2.8/pods:
    get:
      tags:
      - Pods
      summary: List pods
      description: Displays a list of pods that are stretched to this array.
      parameters:
      - name: Authorization
        in: header
        description: "Access token (in JWT format) required to use any API endpoint\
          \ (except `/oauth2`, `/login`, and `/logout`)"
        required: false
        style: simple
        explode: false
        schema:
          type: string
      - name: X-Request-ID
        in: header
        description: Supplied by client during request or generated by server.
        required: false
        style: simple
        explode: false
        schema:
          type: string
      - name: continuation_token
        in: query
        description: A token used to retrieve the next page of data with some consistency
          guaranteed. The token is a Base64 encoded value. Set `continuation_token`
          to the system-generated token taken from the `x-next-token` header field
          of the response. A query has reached its last page when the response does
          not include a token. Pagination requires the `limit` and `continuation_token`
          query parameters.
        required: false
        style: form
        explode: true
        schema:
          type: string
      - name: destroyed
        in: query
        description: "If set to `true`, lists only destroyed objects that are in the\
          \ eradication pending state. If set to `false`, lists only objects that\
          \ are not destroyed. For destroyed objects, the time remaining is displayed\
          \ in milliseconds."
        required: false
        style: form
        explode: true
        schema:
          type: boolean
      - name: filter
        in: query
        description: Narrows down the results to only the response objects that satisfy
          the filter criteria.
        required: false
        style: form
        explode: true
        schema:
          type: string
      - name: ids
        in: query
        description: Performs the operation on the unique resource IDs specified.
          Enter multiple resource IDs in comma-separated format. The `ids` and `names`
          parameters cannot be provided together.
        required: false
        style: form
        explode: false
        schema:
          type: array
          items:
            type: string
      - name: limit
        in: query
        description: "Limits the size of the response to the specified number of objects\
          \ on each page. To return the total number of resources, set `limit=0`.\
          \ The total number of resources is returned as a `total_item_count` value.\
          \ If the page size requested is larger than the system maximum limit, the\
          \ server returns the maximum limit, disregarding the requested page size."
        required: false
        style: form
        explode: true
        schema:
          minimum: 1
          type: integer
          format: int32
        example: 10
      - name: names
        in: query
        description: "Performs the operation on the unique name specified. Enter multiple\
          \ names in comma-separated format. For example, `name01,name02`."
        required: false
        style: form
        explode: false
        schema:
          type: array
          items:
            type: string
      - name: offset
        in: query
        description: The starting position based on the results of the query in relation
          to the full set of response objects returned.
        required: false
        style: form
        explode: true
        schema:
          minimum: 0
          type: integer
          format: int32
        example: 10
      - name: sort
        in: query
        description: "Returns the response objects in the order specified. Set `sort`\
          \ to the name in the response by which to sort. Sorting can be performed\
          \ on any of the names in the response, and the objects can be sorted in\
          \ ascending or descending order. By default, the response objects are sorted\
          \ in ascending order. To sort in descending order, append the minus sign\
          \ (`-`) to the name. A single request can be sorted on multiple objects.\
          \ For example, you can sort all volumes from largest to smallest volume\
          \ size, and then sort volumes of the same size in ascending order by volume\
          \ name. To sort on multiple names, list the names as comma-separated values."
        required: false
        style: form
        explode: false
        schema:
          type: array
          items:
            pattern: "^[a-z]+(_[a-z]+)*-?"
            type: string
      - name: total_item_count
        in: query
        description: "If set to `true`, the `total_item_count` matching the specified\
          \ query parameters is calculated and returned in the response. If set to\
          \ `false`, the `total_item_count` is `null` in the response. This may speed\
          \ up queries where the `total_item_count` is large. If not specified, defaults\
          \ to `false`."
        required: false
        style: form
        explode: true
        schema:
          type: boolean
      - name: total_only
        in: query
        description: "If set to `true`, returns the aggregate value of all items after\
          \ filtering. Where it makes more sense, the average value is displayed instead.\
          \ The values are displayed for each name where meaningful. If `total_only=true`,\
          \ the `items` list will be empty."
        required: false
        style: form
        explode: true
        schema:
          type: boolean
      responses:
        "200":
          description: OK
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/inline_response_200_90'
    post:
      tags:
      - Pods
      summary: Create a pod
      description: "Creates a pod on the local array. Each pod must be given a name\
        \ that is unique across the arrays to which they are stretched, so a pod cannot\
        \ be stretched to an array that already contains a pod with the same name.\
        \ After a pod has been created, add volumes and protection groups to the pod,\
        \ and then stretch the pod to another (connected) array."
      parameters:
      - name: Authorization
        in: header
        description: "Access token (in JWT format) required to use any API endpoint\
          \ (except `/oauth2`, `/login`, and `/logout`)"
        required: false
        style: simple
        explode: false
        schema:
          type: string
      - name: X-Request-ID
        in: header
        description: Supplied by client during request or generated by server.
        required: false
        style: simple
        explode: false
        schema:
          type: string
      - name: names
        in: query
        description: "Performs the operation on the unique name specified. Enter multiple\
          \ names in comma-separated format. For example, `name01,name02`."
        required: false
        style: form
        explode: false
        schema:
          type: array
          items:
            type: string
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/2_8_pods_body'
        required: true
      responses:
        "200":
          description: OK
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/inline_response_200_91'
    delete:
      tags:
      - Pods
      summary: Delete a pod
      description: "Deletes a pod that has been destroyed and is pending eradication.\
        \ Eradicated pods cannot be recovered. Pods are destroyed using the PATCH\
        \ method. The `ids` or `names` parameter is required, but cannot be set together."
      parameters:
      - name: Authorization
        in: header
        description: "Access token (in JWT format) required to use any API endpoint\
          \ (except `/oauth2`, `/login`, and `/logout`)"
        required: false
        style: simple
        explode: false
        schema:
          type: string
      - name: X-Request-ID
        in: header
        description: Supplied by client during request or generated by server.
        required: false
        style: simple
        explode: false
        schema:
          type: string
      - name: ids
        in: query
        description: Performs the operation on the unique resource IDs specified.
          Enter multiple resource IDs in comma-separated format. The `ids` and `names`
          parameters cannot be provided together.
        required: false
        style: form
        explode: false
        schema:
          type: array
          items:
            type: string
      - name: names
        in: query
        description: "Performs the operation on the unique name specified. Enter multiple\
          \ names in comma-separated format. For example, `name01,name02`."
        required: false
        style: form
        explode: false
        schema:
          type: array
          items:
            type: string
      - name: eradicate_contents
        in: query
        description: "Set to `true` to eradicate contents (e.g., volumes, protection\
          \ groups, snapshots) and containers (e.g., pods, volume groups). This enables\
          \ you to eradicate containers with contents."
        required: false
        style: form
        explode: true
        schema:
          type: boolean
      responses:
        "200":
          description: OK
    patch:
      tags:
      - Pods
      summary: Modify a pod
      description: Modifies pod details.
      parameters:
      - name: Authorization
        in: header
        description: "Access token (in JWT format) required to use any API endpoint\
          \ (except `/oauth2`, `/login`, and `/logout`)"
        required: false
        style: simple
        explode: false
        schema:
          type: string
      - name: X-Request-ID
        in: header
        description: Supplied by client during request or generated by server.
        required: false
        style: simple
        explode: false
        schema:
          type: string
      - name: ids
        in: query
        description: Performs the operation on the unique resource IDs specified.
          Enter multiple resource IDs in comma-separated format. The `ids` and `names`
          parameters cannot be provided together.
        required: false
        style: form
        explode: false
        schema:
          type: array
          items:
            type: string
      - name: names
        in: query
        description: "Performs the operation on the unique name specified. Enter multiple\
          \ names in comma-separated format. For example, `name01,name02`."
        required: false
        style: form
        explode: false
        schema:
          type: array
          items:
            type: string
      - name: abort_quiesce
        in: query
        description: Set to `true` to promote the pod when the `pod-replica-link`
          is in the `quiescing` state and abort when waiting for the `pod-replica-link`
          to complete the quiescing operation.
        required: false
        style: form
        explode: true
        schema:
          type: boolean
      - name: quiesce
        in: query
        description: Set to `true` to demote the pod after the `pod-replica-link`
          goes into `quiesced` state and allow the pod to become a target of the remote
          pod. This ensures that all local data has been replicated to the remote
          pod before the pod is demoted.
        required: false
        style: form
        explode: true
        schema:
          type: boolean
      - name: skip_quiesce
        in: query
        description: Set to `true` to demote the pod without quiescing the `pod-replica-link`
          and allow the pod to become a target of the remote pod. This stops all pending
          replication to the remote pod.
        required: false
        style: form
        explode: true
        schema:
          type: boolean
      - name: promote_from
        in: query
        description: "The `undo-demote` pod that should be used to promote the pod.\
          \ After the pod has been promoted, it will have the same data as the `undo-demote`\
          \ pod and the `undo-demote` pod will be eradicated."
        required: false
        style: form
        explode: true
        schema:
          type: string
      - name: destroy_contents
        in: query
        description: "Set to `true` to destroy contents (e.g., volumes, protection\
          \ groups, snapshots) and containers (e.g., pods, volume groups). This enables\
          \ you to destroy containers with contents."
        required: false
        style: form
        explode: true
        schema:
          type: boolean
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/2_8_pods_body_1'
        required: true
      responses:
        "200":
          description: OK
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/inline_response_200_91'
  /api/2.8/pods/arrays:
    get:
      tags:
      - Pods
      summary: List pods and their the array members
      description: Returns a list of pods and the local and remote arrays over which
        the pods are stretched. The optional `group_names` parameter represents the
        name of the pod. The optional `member_names` parameter represents the name
        of the array over which the pod is stretched.
      parameters:
      - name: Authorization
        in: header
        description: "Access token (in JWT format) required to use any API endpoint\
          \ (except `/oauth2`, `/login`, and `/logout`)"
        required: false
        style: simple
        explode: false
        schema:
          type: string
      - name: X-Request-ID
        in: header
        description: Supplied by client during request or generated by server.
        required: false
        style: simple
        explode: false
        schema:
          type: string
      - name: filter
        in: query
        description: Narrows down the results to only the response objects that satisfy
          the filter criteria.
        required: false
        style: form
        explode: true
        schema:
          type: string
      - name: group_names
        in: query
        description: "Performs the operation on the unique group name specified. Examples\
          \ of groups include host groups, pods, protection groups, and volume groups.\
          \ Enter multiple names in comma-separated format. For example, `hgroup01,hgroup02`."
        required: false
        style: form
        explode: false
        schema:
          type: array
          items:
            type: string
      - name: group_ids
        in: query
        description: A comma-separated list of group IDs.
        required: false
        style: form
        explode: false
        schema:
          type: array
          items:
            type: string
      - name: limit
        in: query
        description: "Limits the size of the response to the specified number of objects\
          \ on each page. To return the total number of resources, set `limit=0`.\
          \ The total number of resources is returned as a `total_item_count` value.\
          \ If the page size requested is larger than the system maximum limit, the\
          \ server returns the maximum limit, disregarding the requested page size."
        required: false
        style: form
        explode: true
        schema:
          minimum: 1
          type: integer
          format: int32
        example: 10
      - name: member_names
        in: query
        description: "Performs the operation on the unique member name specified.\
          \ Examples of members include volumes, hosts, host groups, and directories.\
          \ Enter multiple names in comma-separated format. For example, `vol01,vol02`."
        required: false
        style: form
        explode: false
        schema:
          type: array
          items:
            type: string
      - name: member_ids
        in: query
        description: Performs the operation on the unique member IDs specified. Enter
          multiple member IDs in comma-separated format. The `member_ids` and `member_names`
          parameters cannot be provided together.
        required: false
        style: form
        explode: false
        schema:
          type: array
          items:
            type: string
      - name: offset
        in: query
        description: The starting position based on the results of the query in relation
          to the full set of response objects returned.
        required: false
        style: form
        explode: true
        schema:
          minimum: 0
          type: integer
          format: int32
        example: 10
      - name: sort
        in: query
        description: "Returns the response objects in the order specified. Set `sort`\
          \ to the name in the response by which to sort. Sorting can be performed\
          \ on any of the names in the response, and the objects can be sorted in\
          \ ascending or descending order. By default, the response objects are sorted\
          \ in ascending order. To sort in descending order, append the minus sign\
          \ (`-`) to the name. A single request can be sorted on multiple objects.\
          \ For example, you can sort all volumes from largest to smallest volume\
          \ size, and then sort volumes of the same size in ascending order by volume\
          \ name. To sort on multiple names, list the names as comma-separated values."
        required: false
        style: form
        explode: false
        schema:
          type: array
          items:
            pattern: "^[a-z]+(_[a-z]+)*-?"
            type: string
      - name: total_item_count
        in: query
        description: "If set to `true`, the `total_item_count` matching the specified\
          \ query parameters is calculated and returned in the response. If set to\
          \ `false`, the `total_item_count` is `null` in the response. This may speed\
          \ up queries where the `total_item_count` is large. If not specified, defaults\
          \ to `false`."
        required: false
        style: form
        explode: true
        schema:
          type: boolean
      responses:
        "200":
          description: OK
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/inline_response_200_92'
    post:
      tags:
      - Pods
      summary: Stretch a pod to an array
      description: "Stretches a pod to an array. When a pod is stretched to an array,\
        \ the data in the arrays over which the pod is stretched is synchronously\
        \ replicated. The `group_names` parameter represents the name of the pod to\
        \ be stretched. The `member_names` parameter represents the name of the array\
        \ over which the pod is to be stretched. The `group_names` and `member_names`\
        \ parameters are required and must be set together."
      parameters:
      - name: Authorization
        in: header
        description: "Access token (in JWT format) required to use any API endpoint\
          \ (except `/oauth2`, `/login`, and `/logout`)"
        required: false
        style: simple
        explode: false
        schema:
          type: string
      - name: X-Request-ID
        in: header
        description: Supplied by client during request or generated by server.
        required: false
        style: simple
        explode: false
        schema:
          type: string
      - name: group_names
        in: query
        description: "Performs the operation on the unique group name specified. Examples\
          \ of groups include host groups, pods, protection groups, and volume groups.\
          \ Enter multiple names in comma-separated format. For example, `hgroup01,hgroup02`."
        required: false
        style: form
        explode: false
        schema:
          type: array
          items:
            type: string
      - name: group_ids
        in: query
        description: A comma-separated list of group IDs.
        required: false
        style: form
        explode: false
        schema:
          type: array
          items:
            type: string
      - name: member_names
        in: query
        description: "Performs the operation on the unique member name specified.\
          \ Examples of members include volumes, hosts, host groups, and directories.\
          \ Enter multiple names in comma-separated format. For example, `vol01,vol02`."
        required: false
        style: form
        explode: false
        schema:
          type: array
          items:
            type: string
      - name: member_ids
        in: query
        description: Performs the operation on the unique member IDs specified. Enter
          multiple member IDs in comma-separated format. The `member_ids` and `member_names`
          parameters cannot be provided together.
        required: false
        style: form
        explode: false
        schema:
          type: array
          items:
            type: string
      responses:
        "200":
          description: OK
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/inline_response_200_93'
    delete:
      tags:
      - Pods
      summary: Unstretch a pod from an array
      description: "Unstretches a pod from an array, collapsing the pod to a single\
        \ array. Unstretch a pod from an array when the volumes within the stretched\
        \ pod no longer need to be synchronously replicated between the two arrays.\
        \ After a pod has been unstretched, synchronous replication stops. A destroyed\
        \ version of the pod with \"restretch\" appended to the pod name is created\
        \ on the array that no longer has the pod. The restretch pod represents a\
        \ point-in-time snapshot of the pod, just before it was unstretched. The restretch\
        \ pod enters an eradication pending period starting from the time that the\
        \ pod was unstretched. A restretch can pod can be cloned or destroyed, but\
        \ it cannot be explicitly recovered. The `group_names` parameter represents\
        \ the name of the pod to be unstretched. The `member_names` parameter represents\
        \ the name of the array from which the pod is to be unstretched. The `group_names`\
        \ and `member_names` parameters are required and must be set together."
      parameters:
      - name: Authorization
        in: header
        description: "Access token (in JWT format) required to use any API endpoint\
          \ (except `/oauth2`, `/login`, and `/logout`)"
        required: false
        style: simple
        explode: false
        schema:
          type: string
      - name: X-Request-ID
        in: header
        description: Supplied by client during request or generated by server.
        required: false
        style: simple
        explode: false
        schema:
          type: string
      - name: group_names
        in: query
        description: "Performs the operation on the unique group name specified. Examples\
          \ of groups include host groups, pods, protection groups, and volume groups.\
          \ Enter multiple names in comma-separated format. For example, `hgroup01,hgroup02`."
        required: false
        style: form
        explode: false
        schema:
          type: array
          items:
            type: string
      - name: group_ids
        in: query
        description: A comma-separated list of group IDs.
        required: false
        style: form
        explode: false
        schema:
          type: array
          items:
            type: string
      - name: member_names
        in: query
        description: "Performs the operation on the unique member name specified.\
          \ Examples of members include volumes, hosts, host groups, and directories.\
          \ Enter multiple names in comma-separated format. For example, `vol01,vol02`."
        required: false
        style: form
        explode: false
        schema:
          type: array
          items:
            type: string
      - name: member_ids
        in: query
        description: Performs the operation on the unique member IDs specified. Enter
          multiple member IDs in comma-separated format. The `member_ids` and `member_names`
          parameters cannot be provided together.
        required: false
        style: form
        explode: false
        schema:
          type: array
          items:
            type: string
      - name: with_unknown
        in: query
        description: "If set to `true`, unstretches the specified pod from the specified\
          \ array by force. Use the `with_unknown` parameter in the following rare\
          \ event&#58; the local array goes offline while the pod is still stretched\
          \ across two arrays, the status of the remote array becomes unknown, and\
          \ there is no guarantee that the pod is online elsewhere."
        required: false
        style: form
        explode: true
        schema:
          type: boolean
      responses:
        "200":
          description: OK
  /api/2.8/pods/performance:
    get:
      tags:
      - Pods
      summary: List pod performance data
      description: "Returns real-time and historical performance data, real-time latency\
        \ data, and average I/O sizes across all pods, displayed both by pod and as\
        \ a total across all pods."
      parameters:
      - name: Authorization
        in: header
        description: "Access token (in JWT format) required to use any API endpoint\
          \ (except `/oauth2`, `/login`, and `/logout`)"
        required: false
        style: simple
        explode: false
        schema:
          type: string
      - name: X-Request-ID
        in: header
        description: Supplied by client during request or generated by server.
        required: false
        style: simple
        explode: false
        schema:
          type: string
      - name: destroyed
        in: query
        description: "If set to `true`, lists only destroyed objects that are in the\
          \ eradication pending state. If set to `false`, lists only objects that\
          \ are not destroyed. For destroyed objects, the time remaining is displayed\
          \ in milliseconds."
        required: false
        style: form
        explode: true
        schema:
          type: boolean
      - name: filter
        in: query
        description: Narrows down the results to only the response objects that satisfy
          the filter criteria.
        required: false
        style: form
        explode: true
        schema:
          type: string
      - name: end_time
        in: query
        description: "Displays historical performance data for the specified time\
          \ window, where `start_time` is the beginning of the time window, and `end_time`\
          \ is the end of the time window. The `start_time` and `end_time` parameters\
          \ are specified in milliseconds since the UNIX epoch. If `start_time` is\
          \ not specified, the start time will default to one resolution before the\
          \ end time, meaning that the most recent sample of performance data will\
          \ be displayed. If `end_time`is not specified, the end time will default\
          \ to the current time. Include the `resolution` parameter to display the\
          \ performance data at the specified resolution. If not specified, `resolution`\
          \ defaults to the lowest valid resolution."
        required: false
        style: form
        explode: true
        schema:
          type: integer
          format: int64
      - name: resolution
        in: query
        description: "The number of milliseconds between samples of historical data.\
          \ For array-wide performance metrics (`/arrays/performance` endpoint), valid\
          \ values are `1000` (1 second), `30000` (30 seconds), `300000` (5 minutes),\
          \ `1800000` (30 minutes), `7200000` (2 hours), `28800000` (8 hours), and\
          \ `86400000` (24 hours). For performance metrics on storage objects (`<object\
          \ name>/performance` endpoint), such as volumes, valid values are `30000`\
          \ (30 seconds), `300000` (5 minutes), `1800000` (30 minutes), `7200000`\
          \ (2 hours), `28800000` (8 hours), and `86400000` (24 hours). For space\
          \ metrics, (`<object name>/space` endpoint), valid values are `300000` (5\
          \ minutes), `1800000` (30 minutes), `7200000` (2 hours), `28800000` (8 hours),\
          \ and `86400000` (24 hours). Include the `start_time` parameter to display\
          \ the performance data starting at the specified start time. If `start_time`\
          \ is not specified, the start time will default to one resolution before\
          \ the end time, meaning that the most recent sample of performance data\
          \ will be displayed. Include the `end_time` parameter to display the performance\
          \ data until the specified end time. If `end_time`is not specified, the\
          \ end time will default to the current time. If the `resolution` parameter\
          \ is not specified but either the `start_time` or `end_time` parameter is,\
          \ then `resolution` will default to the lowest valid resolution."
        required: false
        style: form
        explode: true
        schema:
          minimum: 0
          type: integer
          format: int64
        example: 30000
      - name: start_time
        in: query
        description: "Displays historical performance data for the specified time\
          \ window, where `start_time` is the beginning of the time window, and `end_time`\
          \ is the end of the time window. The `start_time` and `end_time` parameters\
          \ are specified in milliseconds since the UNIX epoch. If `start_time` is\
          \ not specified, the start time will default to one resolution before the\
          \ end time, meaning that the most recent sample of performance data will\
          \ be displayed. If `end_time`is not specified, the end time will default\
          \ to the current time. Include the `resolution` parameter to display the\
          \ performance data at the specified resolution. If not specified, `resolution`\
          \ defaults to the lowest valid resolution."
        required: false
        style: form
        explode: true
        schema:
          type: integer
          format: int64
      - name: ids
        in: query
        description: Performs the operation on the unique resource IDs specified.
          Enter multiple resource IDs in comma-separated format. The `ids` and `names`
          parameters cannot be provided together.
        required: false
        style: form
        explode: false
        schema:
          type: array
          items:
            type: string
      - name: limit
        in: query
        description: "Limits the size of the response to the specified number of objects\
          \ on each page. To return the total number of resources, set `limit=0`.\
          \ The total number of resources is returned as a `total_item_count` value.\
          \ If the page size requested is larger than the system maximum limit, the\
          \ server returns the maximum limit, disregarding the requested page size."
        required: false
        style: form
        explode: true
        schema:
          minimum: 1
          type: integer
          format: int32
        example: 10
      - name: names
        in: query
        description: "Performs the operation on the unique name specified. Enter multiple\
          \ names in comma-separated format. For example, `name01,name02`."
        required: false
        style: form
        explode: false
        schema:
          type: array
          items:
            type: string
      - name: offset
        in: query
        description: The starting position based on the results of the query in relation
          to the full set of response objects returned.
        required: false
        style: form
        explode: true
        schema:
          minimum: 0
          type: integer
          format: int32
        example: 10
      - name: sort
        in: query
        description: "Returns the response objects in the order specified. Set `sort`\
          \ to the name in the response by which to sort. Sorting can be performed\
          \ on any of the names in the response, and the objects can be sorted in\
          \ ascending or descending order. By default, the response objects are sorted\
          \ in ascending order. To sort in descending order, append the minus sign\
          \ (`-`) to the name. A single request can be sorted on multiple objects.\
          \ For example, you can sort all volumes from largest to smallest volume\
          \ size, and then sort volumes of the same size in ascending order by volume\
          \ name. To sort on multiple names, list the names as comma-separated values."
        required: false
        style: form
        explode: false
        schema:
          type: array
          items:
            pattern: "^[a-z]+(_[a-z]+)*-?"
            type: string
      - name: total_item_count
        in: query
        description: "If set to `true`, the `total_item_count` matching the specified\
          \ query parameters is calculated and returned in the response. If set to\
          \ `false`, the `total_item_count` is `null` in the response. This may speed\
          \ up queries where the `total_item_count` is large. If not specified, defaults\
          \ to `false`."
        required: false
        style: form
        explode: true
        schema:
          type: boolean
      - name: total_only
        in: query
        description: "If set to `true`, returns the aggregate value of all items after\
          \ filtering. Where it makes more sense, the average value is displayed instead.\
          \ The values are displayed for each name where meaningful. If `total_only=true`,\
          \ the `items` list will be empty."
        required: false
        style: form
        explode: true
        schema:
          type: boolean
      responses:
        "200":
          description: OK
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/inline_response_200_94'
  /api/2.8/pods/performance/by-array:
    get:
      tags:
      - Pods
      summary: List pod performance data by array
      description: "Returns real-time and historical performance data, real-time latency\
        \ data, and average I/O size data. The data is displayed as a total across\
        \ all pods on the local array and by individual pod."
      parameters:
      - name: Authorization
        in: header
        description: "Access token (in JWT format) required to use any API endpoint\
          \ (except `/oauth2`, `/login`, and `/logout`)"
        required: false
        style: simple
        explode: false
        schema:
          type: string
      - name: X-Request-ID
        in: header
        description: Supplied by client during request or generated by server.
        required: false
        style: simple
        explode: false
        schema:
          type: string
      - name: destroyed
        in: query
        description: "If set to `true`, lists only destroyed objects that are in the\
          \ eradication pending state. If set to `false`, lists only objects that\
          \ are not destroyed. For destroyed objects, the time remaining is displayed\
          \ in milliseconds."
        required: false
        style: form
        explode: true
        schema:
          type: boolean
      - name: filter
        in: query
        description: Narrows down the results to only the response objects that satisfy
          the filter criteria.
        required: false
        style: form
        explode: true
        schema:
          type: string
      - name: end_time
        in: query
        description: "Displays historical performance data for the specified time\
          \ window, where `start_time` is the beginning of the time window, and `end_time`\
          \ is the end of the time window. The `start_time` and `end_time` parameters\
          \ are specified in milliseconds since the UNIX epoch. If `start_time` is\
          \ not specified, the start time will default to one resolution before the\
          \ end time, meaning that the most recent sample of performance data will\
          \ be displayed. If `end_time`is not specified, the end time will default\
          \ to the current time. Include the `resolution` parameter to display the\
          \ performance data at the specified resolution. If not specified, `resolution`\
          \ defaults to the lowest valid resolution."
        required: false
        style: form
        explode: true
        schema:
          type: integer
          format: int64
      - name: resolution
        in: query
        description: "The number of milliseconds between samples of historical data.\
          \ For array-wide performance metrics (`/arrays/performance` endpoint), valid\
          \ values are `1000` (1 second), `30000` (30 seconds), `300000` (5 minutes),\
          \ `1800000` (30 minutes), `7200000` (2 hours), `28800000` (8 hours), and\
          \ `86400000` (24 hours). For performance metrics on storage objects (`<object\
          \ name>/performance` endpoint), such as volumes, valid values are `30000`\
          \ (30 seconds), `300000` (5 minutes), `1800000` (30 minutes), `7200000`\
          \ (2 hours), `28800000` (8 hours), and `86400000` (24 hours). For space\
          \ metrics, (`<object name>/space` endpoint), valid values are `300000` (5\
          \ minutes), `1800000` (30 minutes), `7200000` (2 hours), `28800000` (8 hours),\
          \ and `86400000` (24 hours). Include the `start_time` parameter to display\
          \ the performance data starting at the specified start time. If `start_time`\
          \ is not specified, the start time will default to one resolution before\
          \ the end time, meaning that the most recent sample of performance data\
          \ will be displayed. Include the `end_time` parameter to display the performance\
          \ data until the specified end time. If `end_time`is not specified, the\
          \ end time will default to the current time. If the `resolution` parameter\
          \ is not specified but either the `start_time` or `end_time` parameter is,\
          \ then `resolution` will default to the lowest valid resolution."
        required: false
        style: form
        explode: true
        schema:
          minimum: 0
          type: integer
          format: int64
        example: 30000
      - name: start_time
        in: query
        description: "Displays historical performance data for the specified time\
          \ window, where `start_time` is the beginning of the time window, and `end_time`\
          \ is the end of the time window. The `start_time` and `end_time` parameters\
          \ are specified in milliseconds since the UNIX epoch. If `start_time` is\
          \ not specified, the start time will default to one resolution before the\
          \ end time, meaning that the most recent sample of performance data will\
          \ be displayed. If `end_time`is not specified, the end time will default\
          \ to the current time. Include the `resolution` parameter to display the\
          \ performance data at the specified resolution. If not specified, `resolution`\
          \ defaults to the lowest valid resolution."
        required: false
        style: form
        explode: true
        schema:
          type: integer
          format: int64
      - name: ids
        in: query
        description: Performs the operation on the unique resource IDs specified.
          Enter multiple resource IDs in comma-separated format. The `ids` and `names`
          parameters cannot be provided together.
        required: false
        style: form
        explode: false
        schema:
          type: array
          items:
            type: string
      - name: limit
        in: query
        description: "Limits the size of the response to the specified number of objects\
          \ on each page. To return the total number of resources, set `limit=0`.\
          \ The total number of resources is returned as a `total_item_count` value.\
          \ If the page size requested is larger than the system maximum limit, the\
          \ server returns the maximum limit, disregarding the requested page size."
        required: false
        style: form
        explode: true
        schema:
          minimum: 1
          type: integer
          format: int32
        example: 10
      - name: names
        in: query
        description: "Performs the operation on the unique name specified. Enter multiple\
          \ names in comma-separated format. For example, `name01,name02`."
        required: false
        style: form
        explode: false
        schema:
          type: array
          items:
            type: string
      - name: offset
        in: query
        description: The starting position based on the results of the query in relation
          to the full set of response objects returned.
        required: false
        style: form
        explode: true
        schema:
          minimum: 0
          type: integer
          format: int32
        example: 10
      - name: sort
        in: query
        description: "Returns the response objects in the order specified. Set `sort`\
          \ to the name in the response by which to sort. Sorting can be performed\
          \ on any of the names in the response, and the objects can be sorted in\
          \ ascending or descending order. By default, the response objects are sorted\
          \ in ascending order. To sort in descending order, append the minus sign\
          \ (`-`) to the name. A single request can be sorted on multiple objects.\
          \ For example, you can sort all volumes from largest to smallest volume\
          \ size, and then sort volumes of the same size in ascending order by volume\
          \ name. To sort on multiple names, list the names as comma-separated values."
        required: false
        style: form
        explode: false
        schema:
          type: array
          items:
            pattern: "^[a-z]+(_[a-z]+)*-?"
            type: string
      - name: total_item_count
        in: query
        description: "If set to `true`, the `total_item_count` matching the specified\
          \ query parameters is calculated and returned in the response. If set to\
          \ `false`, the `total_item_count` is `null` in the response. This may speed\
          \ up queries where the `total_item_count` is large. If not specified, defaults\
          \ to `false`."
        required: false
        style: form
        explode: true
        schema:
          type: boolean
      - name: total_only
        in: query
        description: "If set to `true`, returns the aggregate value of all items after\
          \ filtering. Where it makes more sense, the average value is displayed instead.\
          \ The values are displayed for each name where meaningful. If `total_only=true`,\
          \ the `items` list will be empty."
        required: false
        style: form
        explode: true
        schema:
          type: boolean
      responses:
        "200":
          description: OK
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/inline_response_200_95'
  /api/2.8/pods/performance/replication:
    get:
      tags:
      - Pods
      summary: List pod replication performance data
      description: "Displays pod replication performance data. The data returned is\
        \ the real-time and historical performance data for each replication type\
        \ at the pod level. Values include `continuous`, `periodic`, `resync`, and\
        \ `sync`."
      parameters:
      - name: Authorization
        in: header
        description: "Access token (in JWT format) required to use any API endpoint\
          \ (except `/oauth2`, `/login`, and `/logout`)"
        required: false
        style: simple
        explode: false
        schema:
          type: string
      - name: X-Request-ID
        in: header
        description: Supplied by client during request or generated by server.
        required: false
        style: simple
        explode: false
        schema:
          type: string
      - name: destroyed
        in: query
        description: "If set to `true`, lists only destroyed objects that are in the\
          \ eradication pending state. If set to `false`, lists only objects that\
          \ are not destroyed. For destroyed objects, the time remaining is displayed\
          \ in milliseconds."
        required: false
        style: form
        explode: true
        schema:
          type: boolean
      - name: filter
        in: query
        description: Narrows down the results to only the response objects that satisfy
          the filter criteria.
        required: false
        style: form
        explode: true
        schema:
          type: string
      - name: end_time
        in: query
        description: "Displays historical performance data for the specified time\
          \ window, where `start_time` is the beginning of the time window, and `end_time`\
          \ is the end of the time window. The `start_time` and `end_time` parameters\
          \ are specified in milliseconds since the UNIX epoch. If `start_time` is\
          \ not specified, the start time will default to one resolution before the\
          \ end time, meaning that the most recent sample of performance data will\
          \ be displayed. If `end_time`is not specified, the end time will default\
          \ to the current time. Include the `resolution` parameter to display the\
          \ performance data at the specified resolution. If not specified, `resolution`\
          \ defaults to the lowest valid resolution."
        required: false
        style: form
        explode: true
        schema:
          type: integer
          format: int64
      - name: resolution
        in: query
        description: "The number of milliseconds between samples of historical data.\
          \ For array-wide performance metrics (`/arrays/performance` endpoint), valid\
          \ values are `1000` (1 second), `30000` (30 seconds), `300000` (5 minutes),\
          \ `1800000` (30 minutes), `7200000` (2 hours), `28800000` (8 hours), and\
          \ `86400000` (24 hours). For performance metrics on storage objects (`<object\
          \ name>/performance` endpoint), such as volumes, valid values are `30000`\
          \ (30 seconds), `300000` (5 minutes), `1800000` (30 minutes), `7200000`\
          \ (2 hours), `28800000` (8 hours), and `86400000` (24 hours). For space\
          \ metrics, (`<object name>/space` endpoint), valid values are `300000` (5\
          \ minutes), `1800000` (30 minutes), `7200000` (2 hours), `28800000` (8 hours),\
          \ and `86400000` (24 hours). Include the `start_time` parameter to display\
          \ the performance data starting at the specified start time. If `start_time`\
          \ is not specified, the start time will default to one resolution before\
          \ the end time, meaning that the most recent sample of performance data\
          \ will be displayed. Include the `end_time` parameter to display the performance\
          \ data until the specified end time. If `end_time`is not specified, the\
          \ end time will default to the current time. If the `resolution` parameter\
          \ is not specified but either the `start_time` or `end_time` parameter is,\
          \ then `resolution` will default to the lowest valid resolution."
        required: false
        style: form
        explode: true
        schema:
          minimum: 0
          type: integer
          format: int64
        example: 30000
      - name: start_time
        in: query
        description: "Displays historical performance data for the specified time\
          \ window, where `start_time` is the beginning of the time window, and `end_time`\
          \ is the end of the time window. The `start_time` and `end_time` parameters\
          \ are specified in milliseconds since the UNIX epoch. If `start_time` is\
          \ not specified, the start time will default to one resolution before the\
          \ end time, meaning that the most recent sample of performance data will\
          \ be displayed. If `end_time`is not specified, the end time will default\
          \ to the current time. Include the `resolution` parameter to display the\
          \ performance data at the specified resolution. If not specified, `resolution`\
          \ defaults to the lowest valid resolution."
        required: false
        style: form
        explode: true
        schema:
          type: integer
          format: int64
      - name: ids
        in: query
        description: Performs the operation on the unique resource IDs specified.
          Enter multiple resource IDs in comma-separated format. The `ids` and `names`
          parameters cannot be provided together.
        required: false
        style: form
        explode: false
        schema:
          type: array
          items:
            type: string
      - name: limit
        in: query
        description: "Limits the size of the response to the specified number of objects\
          \ on each page. To return the total number of resources, set `limit=0`.\
          \ The total number of resources is returned as a `total_item_count` value.\
          \ If the page size requested is larger than the system maximum limit, the\
          \ server returns the maximum limit, disregarding the requested page size."
        required: false
        style: form
        explode: true
        schema:
          minimum: 1
          type: integer
          format: int32
        example: 10
      - name: names
        in: query
        description: "Performs the operation on the unique name specified. Enter multiple\
          \ names in comma-separated format. For example, `name01,name02`."
        required: false
        style: form
        explode: false
        schema:
          type: array
          items:
            type: string
      - name: offset
        in: query
        description: The starting position based on the results of the query in relation
          to the full set of response objects returned.
        required: false
        style: form
        explode: true
        schema:
          minimum: 0
          type: integer
          format: int32
        example: 10
      - name: sort
        in: query
        description: "Returns the response objects in the order specified. Set `sort`\
          \ to the name in the response by which to sort. Sorting can be performed\
          \ on any of the names in the response, and the objects can be sorted in\
          \ ascending or descending order. By default, the response objects are sorted\
          \ in ascending order. To sort in descending order, append the minus sign\
          \ (`-`) to the name. A single request can be sorted on multiple objects.\
          \ For example, you can sort all volumes from largest to smallest volume\
          \ size, and then sort volumes of the same size in ascending order by volume\
          \ name. To sort on multiple names, list the names as comma-separated values."
        required: false
        style: form
        explode: false
        schema:
          type: array
          items:
            pattern: "^[a-z]+(_[a-z]+)*-?"
            type: string
      - name: total_item_count
        in: query
        description: "If set to `true`, the `total_item_count` matching the specified\
          \ query parameters is calculated and returned in the response. If set to\
          \ `false`, the `total_item_count` is `null` in the response. This may speed\
          \ up queries where the `total_item_count` is large. If not specified, defaults\
          \ to `false`."
        required: false
        style: form
        explode: true
        schema:
          type: boolean
      - name: total_only
        in: query
        description: "If set to `true`, only return the aggregate value of all items\
          \ after filtering. For real-time performance, the values are aggregated\
          \ for the latest timestamp. For historical performance, the values are aggregated\
          \ for each timestamp from `start_time` to `end_time`. Where it makes more\
          \ sense, the average value is displayed instead. The values are displayed\
          \ for each name where meaningful. If `total_only=true`, the `items` list\
          \ will be empty."
        required: false
        style: form
        explode: true
        schema:
          type: boolean
      responses:
        "200":
          description: OK
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/inline_response_200_96'
  /api/2.8/pods/performance/replication/by-array:
    get:
      tags:
      - Pods
      summary: List pod replication performance data by array
      description: "Displays pod replication performance data, organized by array.\
        \ The data returned is the real-time and historical performance data for each\
        \ replication type at the pod level. Values include `continuous`, `periodic`,\
        \ `resync`, and `sync`."
      parameters:
      - name: Authorization
        in: header
        description: "Access token (in JWT format) required to use any API endpoint\
          \ (except `/oauth2`, `/login`, and `/logout`)"
        required: false
        style: simple
        explode: false
        schema:
          type: string
      - name: X-Request-ID
        in: header
        description: Supplied by client during request or generated by server.
        required: false
        style: simple
        explode: false
        schema:
          type: string
      - name: destroyed
        in: query
        description: "If set to `true`, lists only destroyed objects that are in the\
          \ eradication pending state. If set to `false`, lists only objects that\
          \ are not destroyed. For destroyed objects, the time remaining is displayed\
          \ in milliseconds."
        required: false
        style: form
        explode: true
        schema:
          type: boolean
      - name: filter
        in: query
        description: Narrows down the results to only the response objects that satisfy
          the filter criteria.
        required: false
        style: form
        explode: true
        schema:
          type: string
      - name: end_time
        in: query
        description: "Displays historical performance data for the specified time\
          \ window, where `start_time` is the beginning of the time window, and `end_time`\
          \ is the end of the time window. The `start_time` and `end_time` parameters\
          \ are specified in milliseconds since the UNIX epoch. If `start_time` is\
          \ not specified, the start time will default to one resolution before the\
          \ end time, meaning that the most recent sample of performance data will\
          \ be displayed. If `end_time`is not specified, the end time will default\
          \ to the current time. Include the `resolution` parameter to display the\
          \ performance data at the specified resolution. If not specified, `resolution`\
          \ defaults to the lowest valid resolution."
        required: false
        style: form
        explode: true
        schema:
          type: integer
          format: int64
      - name: resolution
        in: query
        description: "The number of milliseconds between samples of historical data.\
          \ For array-wide performance metrics (`/arrays/performance` endpoint), valid\
          \ values are `1000` (1 second), `30000` (30 seconds), `300000` (5 minutes),\
          \ `1800000` (30 minutes), `7200000` (2 hours), `28800000` (8 hours), and\
          \ `86400000` (24 hours). For performance metrics on storage objects (`<object\
          \ name>/performance` endpoint), such as volumes, valid values are `30000`\
          \ (30 seconds), `300000` (5 minutes), `1800000` (30 minutes), `7200000`\
          \ (2 hours), `28800000` (8 hours), and `86400000` (24 hours). For space\
          \ metrics, (`<object name>/space` endpoint), valid values are `300000` (5\
          \ minutes), `1800000` (30 minutes), `7200000` (2 hours), `28800000` (8 hours),\
          \ and `86400000` (24 hours). Include the `start_time` parameter to display\
          \ the performance data starting at the specified start time. If `start_time`\
          \ is not specified, the start time will default to one resolution before\
          \ the end time, meaning that the most recent sample of performance data\
          \ will be displayed. Include the `end_time` parameter to display the performance\
          \ data until the specified end time. If `end_time`is not specified, the\
          \ end time will default to the current time. If the `resolution` parameter\
          \ is not specified but either the `start_time` or `end_time` parameter is,\
          \ then `resolution` will default to the lowest valid resolution."
        required: false
        style: form
        explode: true
        schema:
          minimum: 0
          type: integer
          format: int64
        example: 30000
      - name: start_time
        in: query
        description: "Displays historical performance data for the specified time\
          \ window, where `start_time` is the beginning of the time window, and `end_time`\
          \ is the end of the time window. The `start_time` and `end_time` parameters\
          \ are specified in milliseconds since the UNIX epoch. If `start_time` is\
          \ not specified, the start time will default to one resolution before the\
          \ end time, meaning that the most recent sample of performance data will\
          \ be displayed. If `end_time`is not specified, the end time will default\
          \ to the current time. Include the `resolution` parameter to display the\
          \ performance data at the specified resolution. If not specified, `resolution`\
          \ defaults to the lowest valid resolution."
        required: false
        style: form
        explode: true
        schema:
          type: integer
          format: int64
      - name: ids
        in: query
        description: Performs the operation on the unique resource IDs specified.
          Enter multiple resource IDs in comma-separated format. The `ids` and `names`
          parameters cannot be provided together.
        required: false
        style: form
        explode: false
        schema:
          type: array
          items:
            type: string
      - name: limit
        in: query
        description: "Limits the size of the response to the specified number of objects\
          \ on each page. To return the total number of resources, set `limit=0`.\
          \ The total number of resources is returned as a `total_item_count` value.\
          \ If the page size requested is larger than the system maximum limit, the\
          \ server returns the maximum limit, disregarding the requested page size."
        required: false
        style: form
        explode: true
        schema:
          minimum: 1
          type: integer
          format: int32
        example: 10
      - name: names
        in: query
        description: "Performs the operation on the unique name specified. Enter multiple\
          \ names in comma-separated format. For example, `name01,name02`."
        required: false
        style: form
        explode: false
        schema:
          type: array
          items:
            type: string
      - name: offset
        in: query
        description: The starting position based on the results of the query in relation
          to the full set of response objects returned.
        required: false
        style: form
        explode: true
        schema:
          minimum: 0
          type: integer
          format: int32
        example: 10
      - name: sort
        in: query
        description: "Returns the response objects in the order specified. Set `sort`\
          \ to the name in the response by which to sort. Sorting can be performed\
          \ on any of the names in the response, and the objects can be sorted in\
          \ ascending or descending order. By default, the response objects are sorted\
          \ in ascending order. To sort in descending order, append the minus sign\
          \ (`-`) to the name. A single request can be sorted on multiple objects.\
          \ For example, you can sort all volumes from largest to smallest volume\
          \ size, and then sort volumes of the same size in ascending order by volume\
          \ name. To sort on multiple names, list the names as comma-separated values."
        required: false
        style: form
        explode: false
        schema:
          type: array
          items:
            pattern: "^[a-z]+(_[a-z]+)*-?"
            type: string
      - name: total_item_count
        in: query
        description: "If set to `true`, the `total_item_count` matching the specified\
          \ query parameters is calculated and returned in the response. If set to\
          \ `false`, the `total_item_count` is `null` in the response. This may speed\
          \ up queries where the `total_item_count` is large. If not specified, defaults\
          \ to `false`."
        required: false
        style: form
        explode: true
        schema:
          type: boolean
      - name: total_only
        in: query
        description: "If set to `true`, returns the aggregate value of all items after\
          \ filtering. Where it makes more sense, the average value is displayed instead.\
          \ The values are displayed for each name where meaningful. If `total_only=true`,\
          \ the `items` list will be empty."
        required: false
        style: form
        explode: true
        schema:
          type: boolean
      responses:
        "200":
          description: OK
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/inline_response_200_97'
  /api/2.8/pods/space:
    get:
      tags:
      - Pods
      summary: List pod space information
      description: Displays provisioned (virtual) size and physical storage consumption
        data for each pod on the local array.
      parameters:
      - name: names
        in: query
        description: "Performs the operation on the unique name specified. Enter multiple\
          \ names in comma-separated format. For example, `name01,name02`."
        required: false
        style: form
        explode: false
        schema:
          type: array
          items:
            type: string
      - name: Authorization
        in: header
        description: "Access token (in JWT format) required to use any API endpoint\
          \ (except `/oauth2`, `/login`, and `/logout`)"
        required: false
        style: simple
        explode: false
        schema:
          type: string
      - name: X-Request-ID
        in: header
        description: Supplied by client during request or generated by server.
        required: false
        style: simple
        explode: false
        schema:
          type: string
      - name: destroyed
        in: query
        description: "If set to `true`, lists only destroyed objects that are in the\
          \ eradication pending state. If set to `false`, lists only objects that\
          \ are not destroyed. For destroyed objects, the time remaining is displayed\
          \ in milliseconds."
        required: false
        style: form
        explode: true
        schema:
          type: boolean
      - name: filter
        in: query
        description: Narrows down the results to only the response objects that satisfy
          the filter criteria.
        required: false
        style: form
        explode: true
        schema:
          type: string
      - name: end_time
        in: query
        description: "Displays historical performance data for the specified time\
          \ window, where `start_time` is the beginning of the time window, and `end_time`\
          \ is the end of the time window. The `start_time` and `end_time` parameters\
          \ are specified in milliseconds since the UNIX epoch. If `start_time` is\
          \ not specified, the start time will default to one resolution before the\
          \ end time, meaning that the most recent sample of performance data will\
          \ be displayed. If `end_time`is not specified, the end time will default\
          \ to the current time. Include the `resolution` parameter to display the\
          \ performance data at the specified resolution. If not specified, `resolution`\
          \ defaults to the lowest valid resolution."
        required: false
        style: form
        explode: true
        schema:
          type: integer
          format: int64
      - name: resolution
        in: query
        description: "The number of milliseconds between samples of historical data.\
          \ For array-wide performance metrics (`/arrays/performance` endpoint), valid\
          \ values are `1000` (1 second), `30000` (30 seconds), `300000` (5 minutes),\
          \ `1800000` (30 minutes), `7200000` (2 hours), `28800000` (8 hours), and\
          \ `86400000` (24 hours). For performance metrics on storage objects (`<object\
          \ name>/performance` endpoint), such as volumes, valid values are `30000`\
          \ (30 seconds), `300000` (5 minutes), `1800000` (30 minutes), `7200000`\
          \ (2 hours), `28800000` (8 hours), and `86400000` (24 hours). For space\
          \ metrics, (`<object name>/space` endpoint), valid values are `300000` (5\
          \ minutes), `1800000` (30 minutes), `7200000` (2 hours), `28800000` (8 hours),\
          \ and `86400000` (24 hours). Include the `start_time` parameter to display\
          \ the performance data starting at the specified start time. If `start_time`\
          \ is not specified, the start time will default to one resolution before\
          \ the end time, meaning that the most recent sample of performance data\
          \ will be displayed. Include the `end_time` parameter to display the performance\
          \ data until the specified end time. If `end_time`is not specified, the\
          \ end time will default to the current time. If the `resolution` parameter\
          \ is not specified but either the `start_time` or `end_time` parameter is,\
          \ then `resolution` will default to the lowest valid resolution."
        required: false
        style: form
        explode: true
        schema:
          minimum: 0
          type: integer
          format: int64
        example: 30000
      - name: start_time
        in: query
        description: "Displays historical performance data for the specified time\
          \ window, where `start_time` is the beginning of the time window, and `end_time`\
          \ is the end of the time window. The `start_time` and `end_time` parameters\
          \ are specified in milliseconds since the UNIX epoch. If `start_time` is\
          \ not specified, the start time will default to one resolution before the\
          \ end time, meaning that the most recent sample of performance data will\
          \ be displayed. If `end_time`is not specified, the end time will default\
          \ to the current time. Include the `resolution` parameter to display the\
          \ performance data at the specified resolution. If not specified, `resolution`\
          \ defaults to the lowest valid resolution."
        required: false
        style: form
        explode: true
        schema:
          type: integer
          format: int64
      - name: ids
        in: query
        description: Performs the operation on the unique resource IDs specified.
          Enter multiple resource IDs in comma-separated format. The `ids` and `names`
          parameters cannot be provided together.
        required: false
        style: form
        explode: false
        schema:
          type: array
          items:
            type: string
      - name: limit
        in: query
        description: "Limits the size of the response to the specified number of objects\
          \ on each page. To return the total number of resources, set `limit=0`.\
          \ The total number of resources is returned as a `total_item_count` value.\
          \ If the page size requested is larger than the system maximum limit, the\
          \ server returns the maximum limit, disregarding the requested page size."
        required: false
        style: form
        explode: true
        schema:
          minimum: 1
          type: integer
          format: int32
        example: 10
      - name: offset
        in: query
        description: The starting position based on the results of the query in relation
          to the full set of response objects returned.
        required: false
        style: form
        explode: true
        schema:
          minimum: 0
          type: integer
          format: int32
        example: 10
      - name: sort
        in: query
        description: "Returns the response objects in the order specified. Set `sort`\
          \ to the name in the response by which to sort. Sorting can be performed\
          \ on any of the names in the response, and the objects can be sorted in\
          \ ascending or descending order. By default, the response objects are sorted\
          \ in ascending order. To sort in descending order, append the minus sign\
          \ (`-`) to the name. A single request can be sorted on multiple objects.\
          \ For example, you can sort all volumes from largest to smallest volume\
          \ size, and then sort volumes of the same size in ascending order by volume\
          \ name. To sort on multiple names, list the names as comma-separated values."
        required: false
        style: form
        explode: false
        schema:
          type: array
          items:
            pattern: "^[a-z]+(_[a-z]+)*-?"
            type: string
      - name: total_item_count
        in: query
        description: "If set to `true`, the `total_item_count` matching the specified\
          \ query parameters is calculated and returned in the response. If set to\
          \ `false`, the `total_item_count` is `null` in the response. This may speed\
          \ up queries where the `total_item_count` is large. If not specified, defaults\
          \ to `false`."
        required: false
        style: form
        explode: true
        schema:
          type: boolean
      - name: total_only
        in: query
        description: "If set to `true`, returns the aggregate value of all items after\
          \ filtering. Where it makes more sense, the average value is displayed instead.\
          \ The values are displayed for each name where meaningful. If `total_only=true`,\
          \ the `items` list will be empty."
        required: false
        style: form
        explode: true
        schema:
          type: boolean
      responses:
        "200":
          description: OK
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/inline_response_200_98'
  /api/2.8/pod-replica-links:
    get:
      tags:
      - Pod Replica Links
      summary: List pod replica links
      description: Displays the list of pod replica links that are configured between
        arrays.
      parameters:
      - name: Authorization
        in: header
        description: "Access token (in JWT format) required to use any API endpoint\
          \ (except `/oauth2`, `/login`, and `/logout`)"
        required: false
        style: simple
        explode: false
        schema:
          type: string
      - name: X-Request-ID
        in: header
        description: Supplied by client during request or generated by server.
        required: false
        style: simple
        explode: false
        schema:
          type: string
      - name: filter
        in: query
        description: Narrows down the results to only the response objects that satisfy
          the filter criteria.
        required: false
        style: form
        explode: true
        schema:
          type: string
      - name: ids
        in: query
        description: Performs the operation on the unique resource IDs specified.
          Enter multiple resource IDs in comma-separated format. The `ids` and `names`
          parameters cannot be provided together.
        required: false
        style: form
        explode: false
        schema:
          type: array
          items:
            type: string
      - name: limit
        in: query
        description: "Limits the size of the response to the specified number of objects\
          \ on each page. To return the total number of resources, set `limit=0`.\
          \ The total number of resources is returned as a `total_item_count` value.\
          \ If the page size requested is larger than the system maximum limit, the\
          \ server returns the maximum limit, disregarding the requested page size."
        required: false
        style: form
        explode: true
        schema:
          minimum: 1
          type: integer
          format: int32
        example: 10
      - name: local_pod_ids
        in: query
        description: "A comma-separated list of local pod IDs. If, after filtering,\
          \ there is not at least one resource that matches each of the elements,\
          \ then an error is returned. This cannot be provided together with the `local_pod_names`\
          \ query parameter."
        required: false
        style: form
        explode: false
        schema:
          type: array
          items:
            type: string
      - name: local_pod_names
        in: query
        description: "A comma-separated list of local pod names. If, after filtering,\
          \ there is not at least one resource that matches each of the elements,\
          \ then an error is returned. This cannot be provided together with the `local_pod_ids`\
          \ query parameter."
        required: false
        style: form
        explode: false
        schema:
          type: array
          items:
            type: string
      - name: offset
        in: query
        description: The starting position based on the results of the query in relation
          to the full set of response objects returned.
        required: false
        style: form
        explode: true
        schema:
          minimum: 0
          type: integer
          format: int32
        example: 10
      - name: remote_ids
        in: query
        description: "A comma-separated list of remote array IDs. If, after filtering,\
          \ there is not at least one resource that matches each of the elements,\
          \ then an error is returned. This cannot be provided together with the `remote_names`\
          \ query parameter."
        required: false
        style: form
        explode: false
        schema:
          type: array
          items:
            type: string
      - name: remote_names
        in: query
        description: "A comma-separated list of remote array names. If, after filtering,\
          \ there is not at least one resource that matches each of the elements,\
          \ then an error is returned. This cannot be provided together with the `remote_ids`\
          \ query parameter."
        required: false
        style: form
        explode: false
        schema:
          type: array
          items:
            type: string
      - name: remote_pod_ids
        in: query
        description: "A comma-separated list of remote pod IDs. If, after filtering,\
          \ there is not at least one resource that matches each of the elements,\
          \ then an error is returned. This cannot be provided together with the `remote_pod_names`\
          \ query parameter."
        required: false
        style: form
        explode: false
        schema:
          type: array
          items:
            type: string
      - name: remote_pod_names
        in: query
        description: "A comma-separated list of remote pod names. If, after filtering,\
          \ there is not at least one resource that matches each of the elements,\
          \ then an error is returned. This cannot be provided together with the `remote_pod_ids`\
          \ query parameter."
        required: false
        style: form
        explode: false
        schema:
          type: array
          items:
            type: string
      - name: sort
        in: query
        description: "Returns the response objects in the order specified. Set `sort`\
          \ to the name in the response by which to sort. Sorting can be performed\
          \ on any of the names in the response, and the objects can be sorted in\
          \ ascending or descending order. By default, the response objects are sorted\
          \ in ascending order. To sort in descending order, append the minus sign\
          \ (`-`) to the name. A single request can be sorted on multiple objects.\
          \ For example, you can sort all volumes from largest to smallest volume\
          \ size, and then sort volumes of the same size in ascending order by volume\
          \ name. To sort on multiple names, list the names as comma-separated values."
        required: false
        style: form
        explode: false
        schema:
          type: array
          items:
            pattern: "^[a-z]+(_[a-z]+)*-?"
            type: string
      - name: total_item_count
        in: query
        description: "If set to `true`, the `total_item_count` matching the specified\
          \ query parameters is calculated and returned in the response. If set to\
          \ `false`, the `total_item_count` is `null` in the response. This may speed\
          \ up queries where the `total_item_count` is large. If not specified, defaults\
          \ to `false`."
        required: false
        style: form
        explode: true
        schema:
          type: boolean
      responses:
        "200":
          description: OK
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/inline_response_200_99'
    post:
      tags:
      - Pod Replica Links
      summary: Create pod replica links
      description: "Creates pod replica links between two arrays. The `local_pod_names`\
        \ and `remote_pod_names` are required. Valid values are `replicating`, `baselining`,\
        \ `paused`, `unhealthy`, `quiescing`, and `quiesced`. A status of `replicating`\
        \ indicates that the source array is replicating to the target array. A status\
        \ of `baselining` indicates that the the initial version of the dataset is\
        \ being sent. During this phase, you cannot promote the target pod. In addition,\
        \ changing the link direction might trigger the `baselining` status to recur.\
        \ A status of `paused ` indicates that data transfer between objects has stopped.\
        \ A status of `unhealthy` indicates that the link is currently unhealthy and\
        \ customers must perform some health checks to determine the cause. A status\
        \ of `quiescing` indicates that the source pod is not accepting new write\
        \ requests but the most recent changes to the source have not arrived on the\
        \ target. A status of `quiesced` indicates that the source pod has been demoted\
        \ and all changes have been replicated to the target pod."
      parameters:
      - name: Authorization
        in: header
        description: "Access token (in JWT format) required to use any API endpoint\
          \ (except `/oauth2`, `/login`, and `/logout`)"
        required: false
        style: simple
        explode: false
        schema:
          type: string
      - name: X-Request-ID
        in: header
        description: Supplied by client during request or generated by server.
        required: false
        style: simple
        explode: false
        schema:
          type: string
      - name: local_pod_ids
        in: query
        description: "A comma-separated list of local pod IDs. If, after filtering,\
          \ there is not at least one resource that matches each of the elements,\
          \ then an error is returned. This cannot be provided together with the `local_pod_names`\
          \ query parameter."
        required: false
        style: form
        explode: false
        schema:
          type: array
          items:
            type: string
      - name: local_pod_names
        in: query
        description: "A comma-separated list of local pod names. If, after filtering,\
          \ there is not at least one resource that matches each of the elements,\
          \ then an error is returned. This cannot be provided together with the `local_pod_ids`\
          \ query parameter."
        required: false
        style: form
        explode: false
        schema:
          type: array
          items:
            type: string
      - name: remote_ids
        in: query
        description: "A comma-separated list of remote array IDs. If, after filtering,\
          \ there is not at least one resource that matches each of the elements,\
          \ then an error is returned. This cannot be provided together with the `remote_names`\
          \ query parameter."
        required: false
        style: form
        explode: false
        schema:
          type: array
          items:
            type: string
      - name: remote_names
        in: query
        description: "A comma-separated list of remote array names. If, after filtering,\
          \ there is not at least one resource that matches each of the elements,\
          \ then an error is returned. This cannot be provided together with the `remote_ids`\
          \ query parameter."
        required: false
        style: form
        explode: false
        schema:
          type: array
          items:
            type: string
      - name: remote_pod_ids
        in: query
        description: "A comma-separated list of remote pod IDs. If, after filtering,\
          \ there is not at least one resource that matches each of the elements,\
          \ then an error is returned. This cannot be provided together with the `remote_pod_names`\
          \ query parameter."
        required: false
        style: form
        explode: false
        schema:
          type: array
          items:
            type: string
      - name: remote_pod_names
        in: query
        description: "A comma-separated list of remote pod names. If, after filtering,\
          \ there is not at least one resource that matches each of the elements,\
          \ then an error is returned. This cannot be provided together with the `remote_pod_ids`\
          \ query parameter."
        required: false
        style: form
        explode: false
        schema:
          type: array
          items:
            type: string
      responses:
        "200":
          description: OK
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/inline_response_200_100'
    delete:
      tags:
      - Pod Replica Links
      summary: Delete pod replica links
      description: "Deletes pod replica links. The `local_pod_names` and `remote_pod_names`\
        \ are required. Valid values are `replicating`, `baselining`, `paused`, `unhealthy`,\
        \ `quiescing`, and `quiesced`. A status of `replicating` indicates that the\
        \ source array is replicating to the target array. A status of `baselining`\
        \ indicates that the the initial version of the dataset is being sent. During\
        \ this phase, you cannot promote the target pod. In addition, changing the\
        \ link direction might trigger the `baselining` status to recur. A status\
        \ of `paused ` indicates that data transfer between objects has stopped. A\
        \ status of `unhealthy` indicates that the link is currently unhealthy and\
        \ customers must perform some health checks to determine the cause. A status\
        \ of `quiescing` indicates that the source pod is not accepting new write\
        \ requests but the most recent changes to the source have not arrived on the\
        \ target. A status of `quiesced` indicates that the source pod has been demoted\
        \ and all changes have been replicated to the target pod."
      parameters:
      - name: Authorization
        in: header
        description: "Access token (in JWT format) required to use any API endpoint\
          \ (except `/oauth2`, `/login`, and `/logout`)"
        required: false
        style: simple
        explode: false
        schema:
          type: string
      - name: X-Request-ID
        in: header
        description: Supplied by client during request or generated by server.
        required: false
        style: simple
        explode: false
        schema:
          type: string
      - name: ids
        in: query
        description: Performs the operation on the unique resource IDs specified.
          Enter multiple resource IDs in comma-separated format. The `ids` and `names`
          parameters cannot be provided together.
        required: false
        style: form
        explode: false
        schema:
          type: array
          items:
            type: string
      - name: local_pod_ids
        in: query
        description: "A comma-separated list of local pod IDs. If, after filtering,\
          \ there is not at least one resource that matches each of the elements,\
          \ then an error is returned. This cannot be provided together with the `local_pod_names`\
          \ query parameter."
        required: false
        style: form
        explode: false
        schema:
          type: array
          items:
            type: string
      - name: local_pod_names
        in: query
        description: "A comma-separated list of local pod names. If, after filtering,\
          \ there is not at least one resource that matches each of the elements,\
          \ then an error is returned. This cannot be provided together with the `local_pod_ids`\
          \ query parameter."
        required: false
        style: form
        explode: false
        schema:
          type: array
          items:
            type: string
      - name: remote_pod_ids
        in: query
        description: "A comma-separated list of remote pod IDs. If, after filtering,\
          \ there is not at least one resource that matches each of the elements,\
          \ then an error is returned. This cannot be provided together with the `remote_pod_names`\
          \ query parameter."
        required: false
        style: form
        explode: false
        schema:
          type: array
          items:
            type: string
      - name: remote_pod_names
        in: query
        description: "A comma-separated list of remote pod names. If, after filtering,\
          \ there is not at least one resource that matches each of the elements,\
          \ then an error is returned. This cannot be provided together with the `remote_pod_ids`\
          \ query parameter."
        required: false
        style: form
        explode: false
        schema:
          type: array
          items:
            type: string
      responses:
        "200":
          description: OK
    patch:
      tags:
      - Pod Replica Links
      summary: Modify pod replica links
      description: "Modifies pod replica links. The `local_pod_names` and `remote_pod_names`\
        \ are required. Valid values are `replicating`, `baselining`, `paused`, `unhealthy`,\
        \ `quiescing`, and `quiesced`. A status of `replicating` indicates that the\
        \ source array is replicating to the target array. A status of `baselining`\
        \ indicates that the the initial version of the dataset is being sent. During\
        \ this phase, you cannot promote the target pod. In addition, changing the\
        \ link direction might trigger the `baselining` status to recur. A status\
        \ of `paused ` indicates that data transfer between objects has stopped. A\
        \ status of `unhealthy` indicates that the link is currently unhealthy and\
        \ customers must perform some health checks to determine the cause. A status\
        \ of `quiescing` indicates that the source pod is not accepting new write\
        \ requests but the most recent changes to the source have not arrived on the\
        \ target. A status of `quiesced` indicates that the source pod has been demoted\
        \ and all changes have been replicated to the target pod."
      parameters:
      - name: Authorization
        in: header
        description: "Access token (in JWT format) required to use any API endpoint\
          \ (except `/oauth2`, `/login`, and `/logout`)"
        required: false
        style: simple
        explode: false
        schema:
          type: string
      - name: X-Request-ID
        in: header
        description: Supplied by client during request or generated by server.
        required: false
        style: simple
        explode: false
        schema:
          type: string
      - name: ids
        in: query
        description: Performs the operation on the unique resource IDs specified.
          Enter multiple resource IDs in comma-separated format. The `ids` and `names`
          parameters cannot be provided together.
        required: false
        style: form
        explode: false
        schema:
          type: array
          items:
            type: string
      - name: local_pod_ids
        in: query
        description: "A comma-separated list of local pod IDs. If, after filtering,\
          \ there is not at least one resource that matches each of the elements,\
          \ then an error is returned. This cannot be provided together with the `local_pod_names`\
          \ query parameter."
        required: false
        style: form
        explode: false
        schema:
          type: array
          items:
            type: string
      - name: local_pod_names
        in: query
        description: "A comma-separated list of local pod names. If, after filtering,\
          \ there is not at least one resource that matches each of the elements,\
          \ then an error is returned. This cannot be provided together with the `local_pod_ids`\
          \ query parameter."
        required: false
        style: form
        explode: false
        schema:
          type: array
          items:
            type: string
      - name: remote_ids
        in: query
        description: "A comma-separated list of remote array IDs. If, after filtering,\
          \ there is not at least one resource that matches each of the elements,\
          \ then an error is returned. This cannot be provided together with the `remote_names`\
          \ query parameter."
        required: false
        style: form
        explode: false
        schema:
          type: array
          items:
            type: string
      - name: remote_names
        in: query
        description: "A comma-separated list of remote array names. If, after filtering,\
          \ there is not at least one resource that matches each of the elements,\
          \ then an error is returned. This cannot be provided together with the `remote_ids`\
          \ query parameter."
        required: false
        style: form
        explode: false
        schema:
          type: array
          items:
            type: string
      - name: remote_pod_ids
        in: query
        description: "A comma-separated list of remote pod IDs. If, after filtering,\
          \ there is not at least one resource that matches each of the elements,\
          \ then an error is returned. This cannot be provided together with the `remote_pod_names`\
          \ query parameter."
        required: false
        style: form
        explode: false
        schema:
          type: array
          items:
            type: string
      - name: remote_pod_names
        in: query
        description: "A comma-separated list of remote pod names. If, after filtering,\
          \ there is not at least one resource that matches each of the elements,\
          \ then an error is returned. This cannot be provided together with the `remote_pod_ids`\
          \ query parameter."
        required: false
        style: form
        explode: false
        schema:
          type: array
          items:
            type: string
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/2_8_podreplicalinks_body'
        required: true
      responses:
        "200":
          description: OK
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/inline_response_200_100'
  /api/2.8/pod-replica-links/lag:
    get:
      tags:
      - Pod Replica Links
      parameters:
      - name: Authorization
        in: header
        description: "Access token (in JWT format) required to use any API endpoint\
          \ (except `/oauth2`, `/login`, and `/logout`)"
        required: false
        style: simple
        explode: false
        schema:
          type: string
      - name: X-Request-ID
        in: header
        description: Supplied by client during request or generated by server.
        required: false
        style: simple
        explode: false
        schema:
          type: string
      - name: filter
        in: query
        description: Narrows down the results to only the response objects that satisfy
          the filter criteria.
        required: false
        style: form
        explode: true
        schema:
          type: string
      - name: ids
        in: query
        description: Performs the operation on the unique resource IDs specified.
          Enter multiple resource IDs in comma-separated format. The `ids` and `names`
          parameters cannot be provided together.
        required: false
        style: form
        explode: false
        schema:
          type: array
          items:
            type: string
      - name: end_time
        in: query
        description: "Displays historical performance data for the specified time\
          \ window, where `start_time` is the beginning of the time window, and `end_time`\
          \ is the end of the time window. The `start_time` and `end_time` parameters\
          \ are specified in milliseconds since the UNIX epoch. If `start_time` is\
          \ not specified, the start time will default to one resolution before the\
          \ end time, meaning that the most recent sample of performance data will\
          \ be displayed. If `end_time`is not specified, the end time will default\
          \ to the current time. Include the `resolution` parameter to display the\
          \ performance data at the specified resolution. If not specified, `resolution`\
          \ defaults to the lowest valid resolution."
        required: false
        style: form
        explode: true
        schema:
          type: integer
          format: int64
      - name: resolution
        in: query
        description: "The number of milliseconds between samples of historical data.\
          \ For array-wide performance metrics (`/arrays/performance` endpoint), valid\
          \ values are `1000` (1 second), `30000` (30 seconds), `300000` (5 minutes),\
          \ `1800000` (30 minutes), `7200000` (2 hours), `28800000` (8 hours), and\
          \ `86400000` (24 hours). For performance metrics on storage objects (`<object\
          \ name>/performance` endpoint), such as volumes, valid values are `30000`\
          \ (30 seconds), `300000` (5 minutes), `1800000` (30 minutes), `7200000`\
          \ (2 hours), `28800000` (8 hours), and `86400000` (24 hours). For space\
          \ metrics, (`<object name>/space` endpoint), valid values are `300000` (5\
          \ minutes), `1800000` (30 minutes), `7200000` (2 hours), `28800000` (8 hours),\
          \ and `86400000` (24 hours). Include the `start_time` parameter to display\
          \ the performance data starting at the specified start time. If `start_time`\
          \ is not specified, the start time will default to one resolution before\
          \ the end time, meaning that the most recent sample of performance data\
          \ will be displayed. Include the `end_time` parameter to display the performance\
          \ data until the specified end time. If `end_time`is not specified, the\
          \ end time will default to the current time. If the `resolution` parameter\
          \ is not specified but either the `start_time` or `end_time` parameter is,\
          \ then `resolution` will default to the lowest valid resolution."
        required: false
        style: form
        explode: true
        schema:
          minimum: 0
          type: integer
          format: int64
        example: 30000
      - name: start_time
        in: query
        description: "Displays historical performance data for the specified time\
          \ window, where `start_time` is the beginning of the time window, and `end_time`\
          \ is the end of the time window. The `start_time` and `end_time` parameters\
          \ are specified in milliseconds since the UNIX epoch. If `start_time` is\
          \ not specified, the start time will default to one resolution before the\
          \ end time, meaning that the most recent sample of performance data will\
          \ be displayed. If `end_time`is not specified, the end time will default\
          \ to the current time. Include the `resolution` parameter to display the\
          \ performance data at the specified resolution. If not specified, `resolution`\
          \ defaults to the lowest valid resolution."
        required: false
        style: form
        explode: true
        schema:
          type: integer
          format: int64
      - name: limit
        in: query
        description: "Limits the size of the response to the specified number of objects\
          \ on each page. To return the total number of resources, set `limit=0`.\
          \ The total number of resources is returned as a `total_item_count` value.\
          \ If the page size requested is larger than the system maximum limit, the\
          \ server returns the maximum limit, disregarding the requested page size."
        required: false
        style: form
        explode: true
        schema:
          minimum: 1
          type: integer
          format: int32
        example: 10
      - name: local_pod_ids
        in: query
        description: "A comma-separated list of local pod IDs. If, after filtering,\
          \ there is not at least one resource that matches each of the elements,\
          \ then an error is returned. This cannot be provided together with the `local_pod_names`\
          \ query parameter."
        required: false
        style: form
        explode: false
        schema:
          type: array
          items:
            type: string
      - name: local_pod_names
        in: query
        description: "A comma-separated list of local pod names. If, after filtering,\
          \ there is not at least one resource that matches each of the elements,\
          \ then an error is returned. This cannot be provided together with the `local_pod_ids`\
          \ query parameter."
        required: false
        style: form
        explode: false
        schema:
          type: array
          items:
            type: string
      - name: offset
        in: query
        description: The starting position based on the results of the query in relation
          to the full set of response objects returned.
        required: false
        style: form
        explode: true
        schema:
          minimum: 0
          type: integer
          format: int32
        example: 10
      - name: remote_ids
        in: query
        description: "A comma-separated list of remote array IDs. If, after filtering,\
          \ there is not at least one resource that matches each of the elements,\
          \ then an error is returned. This cannot be provided together with the `remote_names`\
          \ query parameter."
        required: false
        style: form
        explode: false
        schema:
          type: array
          items:
            type: string
      - name: remote_names
        in: query
        description: "A comma-separated list of remote array names. If, after filtering,\
          \ there is not at least one resource that matches each of the elements,\
          \ then an error is returned. This cannot be provided together with the `remote_ids`\
          \ query parameter."
        required: false
        style: form
        explode: false
        schema:
          type: array
          items:
            type: string
      - name: remote_pod_ids
        in: query
        description: "A comma-separated list of remote pod IDs. If, after filtering,\
          \ there is not at least one resource that matches each of the elements,\
          \ then an error is returned. This cannot be provided together with the `remote_pod_names`\
          \ query parameter."
        required: false
        style: form
        explode: false
        schema:
          type: array
          items:
            type: string
      - name: remote_pod_names
        in: query
        description: "A comma-separated list of remote pod names. If, after filtering,\
          \ there is not at least one resource that matches each of the elements,\
          \ then an error is returned. This cannot be provided together with the `remote_pod_ids`\
          \ query parameter."
        required: false
        style: form
        explode: false
        schema:
          type: array
          items:
            type: string
      - name: sort
        in: query
        description: "Returns the response objects in the order specified. Set `sort`\
          \ to the name in the response by which to sort. Sorting can be performed\
          \ on any of the names in the response, and the objects can be sorted in\
          \ ascending or descending order. By default, the response objects are sorted\
          \ in ascending order. To sort in descending order, append the minus sign\
          \ (`-`) to the name. A single request can be sorted on multiple objects.\
          \ For example, you can sort all volumes from largest to smallest volume\
          \ size, and then sort volumes of the same size in ascending order by volume\
          \ name. To sort on multiple names, list the names as comma-separated values."
        required: false
        style: form
        explode: false
        schema:
          type: array
          items:
            pattern: "^[a-z]+(_[a-z]+)*-?"
            type: string
      - name: total_item_count
        in: query
        description: "If set to `true`, the `total_item_count` matching the specified\
          \ query parameters is calculated and returned in the response. If set to\
          \ `false`, the `total_item_count` is `null` in the response. This may speed\
          \ up queries where the `total_item_count` is large. If not specified, defaults\
          \ to `false`."
        required: false
        style: form
        explode: true
        schema:
          type: boolean
      responses:
        "200":
          description: OK
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/inline_response_200_101'
  /api/2.8/pod-replica-links/performance/replication:
    get:
      tags:
      - Pod Replica Links
      parameters:
      - name: Authorization
        in: header
        description: "Access token (in JWT format) required to use any API endpoint\
          \ (except `/oauth2`, `/login`, and `/logout`)"
        required: false
        style: simple
        explode: false
        schema:
          type: string
      - name: X-Request-ID
        in: header
        description: Supplied by client during request or generated by server.
        required: false
        style: simple
        explode: false
        schema:
          type: string
      - name: filter
        in: query
        description: Narrows down the results to only the response objects that satisfy
          the filter criteria.
        required: false
        style: form
        explode: true
        schema:
          type: string
      - name: end_time
        in: query
        description: "Displays historical performance data for the specified time\
          \ window, where `start_time` is the beginning of the time window, and `end_time`\
          \ is the end of the time window. The `start_time` and `end_time` parameters\
          \ are specified in milliseconds since the UNIX epoch. If `start_time` is\
          \ not specified, the start time will default to one resolution before the\
          \ end time, meaning that the most recent sample of performance data will\
          \ be displayed. If `end_time`is not specified, the end time will default\
          \ to the current time. Include the `resolution` parameter to display the\
          \ performance data at the specified resolution. If not specified, `resolution`\
          \ defaults to the lowest valid resolution."
        required: false
        style: form
        explode: true
        schema:
          type: integer
          format: int64
      - name: resolution
        in: query
        description: "The number of milliseconds between samples of historical data.\
          \ For array-wide performance metrics (`/arrays/performance` endpoint), valid\
          \ values are `1000` (1 second), `30000` (30 seconds), `300000` (5 minutes),\
          \ `1800000` (30 minutes), `7200000` (2 hours), `28800000` (8 hours), and\
          \ `86400000` (24 hours). For performance metrics on storage objects (`<object\
          \ name>/performance` endpoint), such as volumes, valid values are `30000`\
          \ (30 seconds), `300000` (5 minutes), `1800000` (30 minutes), `7200000`\
          \ (2 hours), `28800000` (8 hours), and `86400000` (24 hours). For space\
          \ metrics, (`<object name>/space` endpoint), valid values are `300000` (5\
          \ minutes), `1800000` (30 minutes), `7200000` (2 hours), `28800000` (8 hours),\
          \ and `86400000` (24 hours). Include the `start_time` parameter to display\
          \ the performance data starting at the specified start time. If `start_time`\
          \ is not specified, the start time will default to one resolution before\
          \ the end time, meaning that the most recent sample of performance data\
          \ will be displayed. Include the `end_time` parameter to display the performance\
          \ data until the specified end time. If `end_time`is not specified, the\
          \ end time will default to the current time. If the `resolution` parameter\
          \ is not specified but either the `start_time` or `end_time` parameter is,\
          \ then `resolution` will default to the lowest valid resolution."
        required: false
        style: form
        explode: true
        schema:
          minimum: 0
          type: integer
          format: int64
        example: 30000
      - name: start_time
        in: query
        description: "Displays historical performance data for the specified time\
          \ window, where `start_time` is the beginning of the time window, and `end_time`\
          \ is the end of the time window. The `start_time` and `end_time` parameters\
          \ are specified in milliseconds since the UNIX epoch. If `start_time` is\
          \ not specified, the start time will default to one resolution before the\
          \ end time, meaning that the most recent sample of performance data will\
          \ be displayed. If `end_time`is not specified, the end time will default\
          \ to the current time. Include the `resolution` parameter to display the\
          \ performance data at the specified resolution. If not specified, `resolution`\
          \ defaults to the lowest valid resolution."
        required: false
        style: form
        explode: true
        schema:
          type: integer
          format: int64
      - name: ids
        in: query
        description: Performs the operation on the unique resource IDs specified.
          Enter multiple resource IDs in comma-separated format. The `ids` and `names`
          parameters cannot be provided together.
        required: false
        style: form
        explode: false
        schema:
          type: array
          items:
            type: string
      - name: limit
        in: query
        description: "Limits the size of the response to the specified number of objects\
          \ on each page. To return the total number of resources, set `limit=0`.\
          \ The total number of resources is returned as a `total_item_count` value.\
          \ If the page size requested is larger than the system maximum limit, the\
          \ server returns the maximum limit, disregarding the requested page size."
        required: false
        style: form
        explode: true
        schema:
          minimum: 1
          type: integer
          format: int32
        example: 10
      - name: local_pod_ids
        in: query
        description: "A comma-separated list of local pod IDs. If, after filtering,\
          \ there is not at least one resource that matches each of the elements,\
          \ then an error is returned. This cannot be provided together with the `local_pod_names`\
          \ query parameter."
        required: false
        style: form
        explode: false
        schema:
          type: array
          items:
            type: string
      - name: local_pod_names
        in: query
        description: "A comma-separated list of local pod names. If, after filtering,\
          \ there is not at least one resource that matches each of the elements,\
          \ then an error is returned. This cannot be provided together with the `local_pod_ids`\
          \ query parameter."
        required: false
        style: form
        explode: false
        schema:
          type: array
          items:
            type: string
      - name: offset
        in: query
        description: The starting position based on the results of the query in relation
          to the full set of response objects returned.
        required: false
        style: form
        explode: true
        schema:
          minimum: 0
          type: integer
          format: int32
        example: 10
      - name: remote_ids
        in: query
        description: "A comma-separated list of remote array IDs. If, after filtering,\
          \ there is not at least one resource that matches each of the elements,\
          \ then an error is returned. This cannot be provided together with the `remote_names`\
          \ query parameter."
        required: false
        style: form
        explode: false
        schema:
          type: array
          items:
            type: string
      - name: remote_names
        in: query
        description: "A comma-separated list of remote array names. If, after filtering,\
          \ there is not at least one resource that matches each of the elements,\
          \ then an error is returned. This cannot be provided together with the `remote_ids`\
          \ query parameter."
        required: false
        style: form
        explode: false
        schema:
          type: array
          items:
            type: string
      - name: remote_pod_ids
        in: query
        description: "A comma-separated list of remote pod IDs. If, after filtering,\
          \ there is not at least one resource that matches each of the elements,\
          \ then an error is returned. This cannot be provided together with the `remote_pod_names`\
          \ query parameter."
        required: false
        style: form
        explode: false
        schema:
          type: array
          items:
            type: string
      - name: remote_pod_names
        in: query
        description: "A comma-separated list of remote pod names. If, after filtering,\
          \ there is not at least one resource that matches each of the elements,\
          \ then an error is returned. This cannot be provided together with the `remote_pod_ids`\
          \ query parameter."
        required: false
        style: form
        explode: false
        schema:
          type: array
          items:
            type: string
      - name: sort
        in: query
        description: "Returns the response objects in the order specified. Set `sort`\
          \ to the name in the response by which to sort. Sorting can be performed\
          \ on any of the names in the response, and the objects can be sorted in\
          \ ascending or descending order. By default, the response objects are sorted\
          \ in ascending order. To sort in descending order, append the minus sign\
          \ (`-`) to the name. A single request can be sorted on multiple objects.\
          \ For example, you can sort all volumes from largest to smallest volume\
          \ size, and then sort volumes of the same size in ascending order by volume\
          \ name. To sort on multiple names, list the names as comma-separated values."
        required: false
        style: form
        explode: false
        schema:
          type: array
          items:
            pattern: "^[a-z]+(_[a-z]+)*-?"
            type: string
      - name: total_item_count
        in: query
        description: "If set to `true`, the `total_item_count` matching the specified\
          \ query parameters is calculated and returned in the response. If set to\
          \ `false`, the `total_item_count` is `null` in the response. This may speed\
          \ up queries where the `total_item_count` is large. If not specified, defaults\
          \ to `false`."
        required: false
        style: form
        explode: true
        schema:
          type: boolean
      - name: total_only
        in: query
        description: "If set to `true`, only return the aggregate value of all items\
          \ after filtering. For real-time performance, the values are aggregated\
          \ for the latest timestamp. For historical performance, the values are aggregated\
          \ for each timestamp from `start_time` to `end_time`. Where it makes more\
          \ sense, the average value is displayed instead. The values are displayed\
          \ for each name where meaningful. If `total_only=true`, the `items` list\
          \ will be empty."
        required: false
        style: form
        explode: true
        schema:
          type: boolean
      responses:
        "200":
          description: OK
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/inline_response_200_102'
  /api/2.8/policies:
    get:
      tags:
      - Policies
      summary: List policies
      description: Displays a list of policies.
      parameters:
      - name: Authorization
        in: header
        description: "Access token (in JWT format) required to use any API endpoint\
          \ (except `/oauth2`, `/login`, and `/logout`)"
        required: false
        style: simple
        explode: false
        schema:
          type: string
      - name: X-Request-ID
        in: header
        description: Supplied by client during request or generated by server.
        required: false
        style: simple
        explode: false
        schema:
          type: string
      - name: continuation_token
        in: query
        description: A token used to retrieve the next page of data with some consistency
          guaranteed. The token is a Base64 encoded value. Set `continuation_token`
          to the system-generated token taken from the `x-next-token` header field
          of the response. A query has reached its last page when the response does
          not include a token. Pagination requires the `limit` and `continuation_token`
          query parameters.
        required: false
        style: form
        explode: true
        schema:
          type: string
      - name: filter
        in: query
        description: Narrows down the results to only the response objects that satisfy
          the filter criteria.
        required: false
        style: form
        explode: true
        schema:
          type: string
      - name: ids
        in: query
        description: Performs the operation on the unique resource IDs specified.
          Enter multiple resource IDs in comma-separated format. The `ids` and `names`
          parameters cannot be provided together.
        required: false
        style: form
        explode: false
        schema:
          type: array
          items:
            type: string
      - name: limit
        in: query
        description: "Limits the size of the response to the specified number of objects\
          \ on each page. To return the total number of resources, set `limit=0`.\
          \ The total number of resources is returned as a `total_item_count` value.\
          \ If the page size requested is larger than the system maximum limit, the\
          \ server returns the maximum limit, disregarding the requested page size."
        required: false
        style: form
        explode: true
        schema:
          minimum: 1
          type: integer
          format: int32
        example: 10
      - name: names
        in: query
        description: "Performs the operation on the unique name specified. Enter multiple\
          \ names in comma-separated format. For example, `name01,name02`."
        required: false
        style: form
        explode: false
        schema:
          type: array
          items:
            type: string
      - name: offset
        in: query
        description: The starting position based on the results of the query in relation
          to the full set of response objects returned.
        required: false
        style: form
        explode: true
        schema:
          minimum: 0
          type: integer
          format: int32
        example: 10
      - name: sort
        in: query
        description: "Returns the response objects in the order specified. Set `sort`\
          \ to the name in the response by which to sort. Sorting can be performed\
          \ on any of the names in the response, and the objects can be sorted in\
          \ ascending or descending order. By default, the response objects are sorted\
          \ in ascending order. To sort in descending order, append the minus sign\
          \ (`-`) to the name. A single request can be sorted on multiple objects.\
          \ For example, you can sort all volumes from largest to smallest volume\
          \ size, and then sort volumes of the same size in ascending order by volume\
          \ name. To sort on multiple names, list the names as comma-separated values."
        required: false
        style: form
        explode: false
        schema:
          type: array
          items:
            pattern: "^[a-z]+(_[a-z]+)*-?"
            type: string
      - name: total_item_count
        in: query
        description: "If set to `true`, the `total_item_count` matching the specified\
          \ query parameters is calculated and returned in the response. If set to\
          \ `false`, the `total_item_count` is `null` in the response. This may speed\
          \ up queries where the `total_item_count` is large. If not specified, defaults\
          \ to `false`."
        required: false
        style: form
        explode: true
        schema:
          type: boolean
      responses:
        "200":
          description: OK
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/inline_response_200_103'
  /api/2.8/policies/members:
    get:
      tags:
      - Policies
      summary: List policy members
      description: Displays a list of policy members.
      parameters:
      - name: Authorization
        in: header
        description: "Access token (in JWT format) required to use any API endpoint\
          \ (except `/oauth2`, `/login`, and `/logout`)"
        required: false
        style: simple
        explode: false
        schema:
          type: string
      - name: X-Request-ID
        in: header
        description: Supplied by client during request or generated by server.
        required: false
        style: simple
        explode: false
        schema:
          type: string
      - name: continuation_token
        in: query
        description: A token used to retrieve the next page of data with some consistency
          guaranteed. The token is a Base64 encoded value. Set `continuation_token`
          to the system-generated token taken from the `x-next-token` header field
          of the response. A query has reached its last page when the response does
          not include a token. Pagination requires the `limit` and `continuation_token`
          query parameters.
        required: false
        style: form
        explode: true
        schema:
          type: string
      - name: destroyed
        in: query
        description: "If set to `true`, lists only destroyed objects that are in the\
          \ eradication pending state. If set to `false`, lists only objects that\
          \ are not destroyed. For destroyed objects, the time remaining is displayed\
          \ in milliseconds."
        required: false
        style: form
        explode: true
        schema:
          type: boolean
      - name: filter
        in: query
        description: Narrows down the results to only the response objects that satisfy
          the filter criteria.
        required: false
        style: form
        explode: true
        schema:
          type: string
      - name: limit
        in: query
        description: "Limits the size of the response to the specified number of objects\
          \ on each page. To return the total number of resources, set `limit=0`.\
          \ The total number of resources is returned as a `total_item_count` value.\
          \ If the page size requested is larger than the system maximum limit, the\
          \ server returns the maximum limit, disregarding the requested page size."
        required: false
        style: form
        explode: true
        schema:
          minimum: 1
          type: integer
          format: int32
        example: 10
      - name: member_ids
        in: query
        description: Performs the operation on the unique member IDs specified. Enter
          multiple member IDs in comma-separated format. The `member_ids` and `member_names`
          parameters cannot be provided together.
        required: false
        style: form
        explode: false
        schema:
          type: array
          items:
            type: string
      - name: member_names
        in: query
        description: "Performs the operation on the unique member name specified.\
          \ Examples of members include volumes, hosts, host groups, and directories.\
          \ Enter multiple names in comma-separated format. For example, `vol01,vol02`."
        required: false
        style: form
        explode: false
        schema:
          type: array
          items:
            type: string
      - name: member_types
        in: query
        description: "Performs the operation on the member types specified. The type\
          \ of member is the full name of the resource endpoint. Valid values include\
          \ `directories`. Enter multiple member types in comma-separated format.\
          \ For example, `type01,type02`."
        required: false
        style: form
        explode: false
        schema:
          type: array
          items:
            type: string
      - name: policy_ids
        in: query
        description: Performs the operation on the unique policy IDs specified. Enter
          multiple policy IDs in comma-separated format. The `policy_ids` and `policy_names`
          parameters cannot be provided together.
        required: false
        style: form
        explode: false
        schema:
          type: array
          items:
            type: string
      - name: policy_names
        in: query
        description: "Performs the operation on the policy names specified. Enter\
          \ multiple policy names in comma-separated format. For example, `name01,name02`."
        required: false
        style: form
        explode: false
        schema:
          type: array
          items:
            type: string
      - name: offset
        in: query
        description: The starting position based on the results of the query in relation
          to the full set of response objects returned.
        required: false
        style: form
        explode: true
        schema:
          minimum: 0
          type: integer
          format: int32
        example: 10
      - name: sort
        in: query
        description: "Returns the response objects in the order specified. Set `sort`\
          \ to the name in the response by which to sort. Sorting can be performed\
          \ on any of the names in the response, and the objects can be sorted in\
          \ ascending or descending order. By default, the response objects are sorted\
          \ in ascending order. To sort in descending order, append the minus sign\
          \ (`-`) to the name. A single request can be sorted on multiple objects.\
          \ For example, you can sort all volumes from largest to smallest volume\
          \ size, and then sort volumes of the same size in ascending order by volume\
          \ name. To sort on multiple names, list the names as comma-separated values."
        required: false
        style: form
        explode: false
        schema:
          type: array
          items:
            pattern: "^[a-z]+(_[a-z]+)*-?"
            type: string
      - name: total_item_count
        in: query
        description: "If set to `true`, the `total_item_count` matching the specified\
          \ query parameters is calculated and returned in the response. If set to\
          \ `false`, the `total_item_count` is `null` in the response. This may speed\
          \ up queries where the `total_item_count` is large. If not specified, defaults\
          \ to `false`."
        required: false
        style: form
        explode: true
        schema:
          type: boolean
      responses:
        "200":
          description: OK
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/inline_response_200_47'
  /api/2.8/policies/nfs:
    get:
      tags:
      - Policies
      summary: List NFS policies
      description: Displays a list of NFS policies.
      parameters:
      - name: Authorization
        in: header
        description: "Access token (in JWT format) required to use any API endpoint\
          \ (except `/oauth2`, `/login`, and `/logout`)"
        required: false
        style: simple
        explode: false
        schema:
          type: string
      - name: X-Request-ID
        in: header
        description: Supplied by client during request or generated by server.
        required: false
        style: simple
        explode: false
        schema:
          type: string
      - name: continuation_token
        in: query
        description: A token used to retrieve the next page of data with some consistency
          guaranteed. The token is a Base64 encoded value. Set `continuation_token`
          to the system-generated token taken from the `x-next-token` header field
          of the response. A query has reached its last page when the response does
          not include a token. Pagination requires the `limit` and `continuation_token`
          query parameters.
        required: false
        style: form
        explode: true
        schema:
          type: string
      - name: filter
        in: query
        description: Narrows down the results to only the response objects that satisfy
          the filter criteria.
        required: false
        style: form
        explode: true
        schema:
          type: string
      - name: ids
        in: query
        description: Performs the operation on the unique resource IDs specified.
          Enter multiple resource IDs in comma-separated format. The `ids` and `names`
          parameters cannot be provided together.
        required: false
        style: form
        explode: false
        schema:
          type: array
          items:
            type: string
      - name: limit
        in: query
        description: "Limits the size of the response to the specified number of objects\
          \ on each page. To return the total number of resources, set `limit=0`.\
          \ The total number of resources is returned as a `total_item_count` value.\
          \ If the page size requested is larger than the system maximum limit, the\
          \ server returns the maximum limit, disregarding the requested page size."
        required: false
        style: form
        explode: true
        schema:
          minimum: 1
          type: integer
          format: int32
        example: 10
      - name: names
        in: query
        description: "Performs the operation on the unique name specified. Enter multiple\
          \ names in comma-separated format. For example, `name01,name02`."
        required: false
        style: form
        explode: false
        schema:
          type: array
          items:
            type: string
      - name: offset
        in: query
        description: The starting position based on the results of the query in relation
          to the full set of response objects returned.
        required: false
        style: form
        explode: true
        schema:
          minimum: 0
          type: integer
          format: int32
        example: 10
      - name: sort
        in: query
        description: "Returns the response objects in the order specified. Set `sort`\
          \ to the name in the response by which to sort. Sorting can be performed\
          \ on any of the names in the response, and the objects can be sorted in\
          \ ascending or descending order. By default, the response objects are sorted\
          \ in ascending order. To sort in descending order, append the minus sign\
          \ (`-`) to the name. A single request can be sorted on multiple objects.\
          \ For example, you can sort all volumes from largest to smallest volume\
          \ size, and then sort volumes of the same size in ascending order by volume\
          \ name. To sort on multiple names, list the names as comma-separated values."
        required: false
        style: form
        explode: false
        schema:
          type: array
          items:
            pattern: "^[a-z]+(_[a-z]+)*-?"
            type: string
      - name: total_item_count
        in: query
        description: "If set to `true`, the `total_item_count` matching the specified\
          \ query parameters is calculated and returned in the response. If set to\
          \ `false`, the `total_item_count` is `null` in the response. This may speed\
          \ up queries where the `total_item_count` is large. If not specified, defaults\
          \ to `false`."
        required: false
        style: form
        explode: true
        schema:
          type: boolean
      responses:
        "200":
          description: OK
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/inline_response_200_103'
    post:
      tags:
      - Policies
      summary: Create NFS policies
      description: Creates one or more NFS policies.
      parameters:
      - name: Authorization
        in: header
        description: "Access token (in JWT format) required to use any API endpoint\
          \ (except `/oauth2`, `/login`, and `/logout`)"
        required: false
        style: simple
        explode: false
        schema:
          type: string
      - name: X-Request-ID
        in: header
        description: Supplied by client during request or generated by server.
        required: false
        style: simple
        explode: false
        schema:
          type: string
      - name: names
        in: query
        description: "Performs the operation on the unique name specified. Enter multiple\
          \ names in comma-separated format. For example, `name01,name02`."
        required: false
        style: form
        explode: false
        schema:
          type: array
          items:
            type: string
      requestBody:
        $ref: '#/components/requestBodies/Policy'
      responses:
        "200":
          description: OK
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/inline_response_200_104'
    delete:
      tags:
      - Policies
      summary: Delete NFS policies
      description: "Deletes one or more NFS policies. The `ids` or `names` parameter\
        \ is required, but they cannot be set together."
      parameters:
      - name: Authorization
        in: header
        description: "Access token (in JWT format) required to use any API endpoint\
          \ (except `/oauth2`, `/login`, and `/logout`)"
        required: false
        style: simple
        explode: false
        schema:
          type: string
      - name: X-Request-ID
        in: header
        description: Supplied by client during request or generated by server.
        required: false
        style: simple
        explode: false
        schema:
          type: string
      - name: ids
        in: query
        description: Performs the operation on the unique resource IDs specified.
          Enter multiple resource IDs in comma-separated format. The `ids` and `names`
          parameters cannot be provided together.
        required: false
        style: form
        explode: false
        schema:
          type: array
          items:
            type: string
      - name: names
        in: query
        description: "Performs the operation on the unique name specified. Enter multiple\
          \ names in comma-separated format. For example, `name01,name02`."
        required: false
        style: form
        explode: false
        schema:
          type: array
          items:
            type: string
      responses:
        "200":
          description: OK
    patch:
      tags:
      - Policies
      summary: Modify NFS policies
      description: "Modifies one or more NFS policies. To enable a policy, set `enabled=true`.\
        \ To disable a policy, set `enabled=false`. To rename a policy, set `name`\
        \ to the new name. The `ids` or `names` parameter is required, but cannot\
        \ be set together."
      parameters:
      - name: Authorization
        in: header
        description: "Access token (in JWT format) required to use any API endpoint\
          \ (except `/oauth2`, `/login`, and `/logout`)"
        required: false
        style: simple
        explode: false
        schema:
          type: string
      - name: X-Request-ID
        in: header
        description: Supplied by client during request or generated by server.
        required: false
        style: simple
        explode: false
        schema:
          type: string
      - name: ids
        in: query
        description: Performs the operation on the unique resource IDs specified.
          Enter multiple resource IDs in comma-separated format. The `ids` and `names`
          parameters cannot be provided together.
        required: false
        style: form
        explode: false
        schema:
          type: array
          items:
            type: string
      - name: names
        in: query
        description: "Performs the operation on the unique name specified. Enter multiple\
          \ names in comma-separated format. For example, `name01,name02`."
        required: false
        style: form
        explode: false
        schema:
          type: array
          items:
            type: string
      requestBody:
        $ref: '#/components/requestBodies/Policy2'
      responses:
        "200":
          description: OK
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/inline_response_200_104'
  /api/2.8/policies/nfs/client-rules:
    get:
      tags:
      - Policies
      summary: List NFS client policy rules
      description: Displays a list of NFS client policy rules.
      parameters:
      - name: Authorization
        in: header
        description: "Access token (in JWT format) required to use any API endpoint\
          \ (except `/oauth2`, `/login`, and `/logout`)"
        required: false
        style: simple
        explode: false
        schema:
          type: string
      - name: X-Request-ID
        in: header
        description: Supplied by client during request or generated by server.
        required: false
        style: simple
        explode: false
        schema:
          type: string
      - name: continuation_token
        in: query
        description: A token used to retrieve the next page of data with some consistency
          guaranteed. The token is a Base64 encoded value. Set `continuation_token`
          to the system-generated token taken from the `x-next-token` header field
          of the response. A query has reached its last page when the response does
          not include a token. Pagination requires the `limit` and `continuation_token`
          query parameters.
        required: false
        style: form
        explode: true
        schema:
          type: string
      - name: filter
        in: query
        description: Narrows down the results to only the response objects that satisfy
          the filter criteria.
        required: false
        style: form
        explode: true
        schema:
          type: string
      - name: limit
        in: query
        description: "Limits the size of the response to the specified number of objects\
          \ on each page. To return the total number of resources, set `limit=0`.\
          \ The total number of resources is returned as a `total_item_count` value.\
          \ If the page size requested is larger than the system maximum limit, the\
          \ server returns the maximum limit, disregarding the requested page size."
        required: false
        style: form
        explode: true
        schema:
          minimum: 1
          type: integer
          format: int32
        example: 10
      - name: names
        in: query
        description: "Performs the operation on the unique name specified. Enter multiple\
          \ names in comma-separated format. For example, `name01,name02`."
        required: false
        style: form
        explode: false
        schema:
          type: array
          items:
            type: string
      - name: offset
        in: query
        description: The starting position based on the results of the query in relation
          to the full set of response objects returned.
        required: false
        style: form
        explode: true
        schema:
          minimum: 0
          type: integer
          format: int32
        example: 10
      - name: policy_ids
        in: query
        description: Performs the operation on the unique policy IDs specified. Enter
          multiple policy IDs in comma-separated format. The `policy_ids` and `policy_names`
          parameters cannot be provided together.
        required: false
        style: form
        explode: false
        schema:
          type: array
          items:
            type: string
      - name: policy_names
        in: query
        description: "Performs the operation on the policy names specified. Enter\
          \ multiple policy names in comma-separated format. For example, `name01,name02`."
        required: false
        style: form
        explode: false
        schema:
          type: array
          items:
            type: string
      - name: sort
        in: query
        description: "Returns the response objects in the order specified. Set `sort`\
          \ to the name in the response by which to sort. Sorting can be performed\
          \ on any of the names in the response, and the objects can be sorted in\
          \ ascending or descending order. By default, the response objects are sorted\
          \ in ascending order. To sort in descending order, append the minus sign\
          \ (`-`) to the name. A single request can be sorted on multiple objects.\
          \ For example, you can sort all volumes from largest to smallest volume\
          \ size, and then sort volumes of the same size in ascending order by volume\
          \ name. To sort on multiple names, list the names as comma-separated values."
        required: false
        style: form
        explode: false
        schema:
          type: array
          items:
            pattern: "^[a-z]+(_[a-z]+)*-?"
            type: string
      - name: total_item_count
        in: query
        description: "If set to `true`, the `total_item_count` matching the specified\
          \ query parameters is calculated and returned in the response. If set to\
          \ `false`, the `total_item_count` is `null` in the response. This may speed\
          \ up queries where the `total_item_count` is large. If not specified, defaults\
          \ to `false`."
        required: false
        style: form
        explode: true
        schema:
          type: boolean
      responses:
        "200":
          description: OK
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/inline_response_200_105'
    post:
      tags:
      - Policies
      summary: Create NFS client policy rules
      description: "Creates one or more NFS client policy rules. The `policy_ids`\
        \ or `policy_names` parameter is required, but cannot be set together."
      parameters:
      - name: Authorization
        in: header
        description: "Access token (in JWT format) required to use any API endpoint\
          \ (except `/oauth2`, `/login`, and `/logout`)"
        required: false
        style: simple
        explode: false
        schema:
          type: string
      - name: X-Request-ID
        in: header
        description: Supplied by client during request or generated by server.
        required: false
        style: simple
        explode: false
        schema:
          type: string
      - name: policy_ids
        in: query
        description: Performs the operation on the unique policy IDs specified. Enter
          multiple policy IDs in comma-separated format. The `policy_ids` and `policy_names`
          parameters cannot be provided together.
        required: false
        style: form
        explode: false
        schema:
          type: array
          items:
            type: string
      - name: policy_names
        in: query
        description: "Performs the operation on the policy names specified. Enter\
          \ multiple policy names in comma-separated format. For example, `name01,name02`."
        required: false
        style: form
        explode: false
        schema:
          type: array
          items:
            type: string
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/nfs_clientrules_body'
        required: true
      responses:
        "200":
          description: OK
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/inline_response_200_106'
    delete:
      tags:
      - Policies
      summary: Delete NFS client policy rules.
      description: "Delete one or more NFS client policy rules. The `policy_ids` or\
        \ `policy_names` parameter is required, but they cannot be set together."
      parameters:
      - name: Authorization
        in: header
        description: "Access token (in JWT format) required to use any API endpoint\
          \ (except `/oauth2`, `/login`, and `/logout`)"
        required: false
        style: simple
        explode: false
        schema:
          type: string
      - name: X-Request-ID
        in: header
        description: Supplied by client during request or generated by server.
        required: false
        style: simple
        explode: false
        schema:
          type: string
      - name: names
        in: query
        description: "Performs the operation on the unique name specified. Enter multiple\
          \ names in comma-separated format. For example, `name01,name02`."
        required: false
        style: form
        explode: false
        schema:
          type: array
          items:
            type: string
      - name: policy_ids
        in: query
        description: Performs the operation on the unique policy IDs specified. Enter
          multiple policy IDs in comma-separated format. The `policy_ids` and `policy_names`
          parameters cannot be provided together.
        required: false
        style: form
        explode: false
        schema:
          type: array
          items:
            type: string
      - name: policy_names
        in: query
        description: "Performs the operation on the policy names specified. Enter\
          \ multiple policy names in comma-separated format. For example, `name01,name02`."
        required: false
        style: form
        explode: false
        schema:
          type: array
          items:
            type: string
      responses:
        "200":
          description: OK
  /api/2.8/policies/nfs/members:
    get:
      tags:
      - Policies
      summary: List NFS policy members
      description: Displays a list of NFS policy members.
      parameters:
      - name: Authorization
        in: header
        description: "Access token (in JWT format) required to use any API endpoint\
          \ (except `/oauth2`, `/login`, and `/logout`)"
        required: false
        style: simple
        explode: false
        schema:
          type: string
      - name: X-Request-ID
        in: header
        description: Supplied by client during request or generated by server.
        required: false
        style: simple
        explode: false
        schema:
          type: string
      - name: continuation_token
        in: query
        description: A token used to retrieve the next page of data with some consistency
          guaranteed. The token is a Base64 encoded value. Set `continuation_token`
          to the system-generated token taken from the `x-next-token` header field
          of the response. A query has reached its last page when the response does
          not include a token. Pagination requires the `limit` and `continuation_token`
          query parameters.
        required: false
        style: form
        explode: true
        schema:
          type: string
      - name: destroyed
        in: query
        description: "If set to `true`, lists only destroyed objects that are in the\
          \ eradication pending state. If set to `false`, lists only objects that\
          \ are not destroyed. For destroyed objects, the time remaining is displayed\
          \ in milliseconds."
        required: false
        style: form
        explode: true
        schema:
          type: boolean
      - name: filter
        in: query
        description: Narrows down the results to only the response objects that satisfy
          the filter criteria.
        required: false
        style: form
        explode: true
        schema:
          type: string
      - name: limit
        in: query
        description: "Limits the size of the response to the specified number of objects\
          \ on each page. To return the total number of resources, set `limit=0`.\
          \ The total number of resources is returned as a `total_item_count` value.\
          \ If the page size requested is larger than the system maximum limit, the\
          \ server returns the maximum limit, disregarding the requested page size."
        required: false
        style: form
        explode: true
        schema:
          minimum: 1
          type: integer
          format: int32
        example: 10
      - name: member_ids
        in: query
        description: Performs the operation on the unique member IDs specified. Enter
          multiple member IDs in comma-separated format. The `member_ids` and `member_names`
          parameters cannot be provided together.
        required: false
        style: form
        explode: false
        schema:
          type: array
          items:
            type: string
      - name: member_names
        in: query
        description: "Performs the operation on the unique member name specified.\
          \ Examples of members include volumes, hosts, host groups, and directories.\
          \ Enter multiple names in comma-separated format. For example, `vol01,vol02`."
        required: false
        style: form
        explode: false
        schema:
          type: array
          items:
            type: string
      - name: member_types
        in: query
        description: "Performs the operation on the member types specified. The type\
          \ of member is the full name of the resource endpoint. Valid values include\
          \ `directories`. Enter multiple member types in comma-separated format.\
          \ For example, `type01,type02`."
        required: false
        style: form
        explode: false
        schema:
          type: array
          items:
            type: string
      - name: policy_ids
        in: query
        description: Performs the operation on the unique policy IDs specified. Enter
          multiple policy IDs in comma-separated format. The `policy_ids` and `policy_names`
          parameters cannot be provided together.
        required: false
        style: form
        explode: false
        schema:
          type: array
          items:
            type: string
      - name: policy_names
        in: query
        description: "Performs the operation on the policy names specified. Enter\
          \ multiple policy names in comma-separated format. For example, `name01,name02`."
        required: false
        style: form
        explode: false
        schema:
          type: array
          items:
            type: string
      - name: offset
        in: query
        description: The starting position based on the results of the query in relation
          to the full set of response objects returned.
        required: false
        style: form
        explode: true
        schema:
          minimum: 0
          type: integer
          format: int32
        example: 10
      - name: sort
        in: query
        description: "Returns the response objects in the order specified. Set `sort`\
          \ to the name in the response by which to sort. Sorting can be performed\
          \ on any of the names in the response, and the objects can be sorted in\
          \ ascending or descending order. By default, the response objects are sorted\
          \ in ascending order. To sort in descending order, append the minus sign\
          \ (`-`) to the name. A single request can be sorted on multiple objects.\
          \ For example, you can sort all volumes from largest to smallest volume\
          \ size, and then sort volumes of the same size in ascending order by volume\
          \ name. To sort on multiple names, list the names as comma-separated values."
        required: false
        style: form
        explode: false
        schema:
          type: array
          items:
            pattern: "^[a-z]+(_[a-z]+)*-?"
            type: string
      - name: total_item_count
        in: query
        description: "If set to `true`, the `total_item_count` matching the specified\
          \ query parameters is calculated and returned in the response. If set to\
          \ `false`, the `total_item_count` is `null` in the response. This may speed\
          \ up queries where the `total_item_count` is large. If not specified, defaults\
          \ to `false`."
        required: false
        style: form
        explode: true
        schema:
          type: boolean
      responses:
        "200":
          description: OK
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/inline_response_200_48'
    post:
      tags:
      - Policies
      summary: Create NFS policies
      description: "Creates a membership between one or more resources with an NFS\
        \ policy. Applicable resources are directories. The `policy_ids` or `policy_names`\
        \ parameter is required, but cannot be set together."
      parameters:
      - name: Authorization
        in: header
        description: "Access token (in JWT format) required to use any API endpoint\
          \ (except `/oauth2`, `/login`, and `/logout`)"
        required: false
        style: simple
        explode: false
        schema:
          type: string
      - name: X-Request-ID
        in: header
        description: Supplied by client during request or generated by server.
        required: false
        style: simple
        explode: false
        schema:
          type: string
      - name: policy_ids
        in: query
        description: Performs the operation on the unique policy IDs specified. Enter
          multiple policy IDs in comma-separated format. The `policy_ids` and `policy_names`
          parameters cannot be provided together.
        required: false
        style: form
        explode: false
        schema:
          type: array
          items:
            type: string
      - name: policy_names
        in: query
        description: "Performs the operation on the policy names specified. Enter\
          \ multiple policy names in comma-separated format. For example, `name01,name02`."
        required: false
        style: form
        explode: false
        schema:
          type: array
          items:
            type: string
      requestBody:
        $ref: '#/components/requestBodies/Members'
      responses:
        "200":
          description: OK
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/inline_response_200_49'
    delete:
      tags:
      - Policies
      summary: Delete NFS policies
      description: "Deletes one or more NFS policies from resources. The `policy_ids`\
        \ or `policy_names` parameter is required, but cannot be set together. The\
        \ `member_ids` or `member_names` parameter is required, but cannot be set\
        \ together."
      parameters:
      - name: Authorization
        in: header
        description: "Access token (in JWT format) required to use any API endpoint\
          \ (except `/oauth2`, `/login`, and `/logout`)"
        required: false
        style: simple
        explode: false
        schema:
          type: string
      - name: X-Request-ID
        in: header
        description: Supplied by client during request or generated by server.
        required: false
        style: simple
        explode: false
        schema:
          type: string
      - name: member_ids
        in: query
        description: Performs the operation on the unique member IDs specified. Enter
          multiple member IDs in comma-separated format. The `member_ids` and `member_names`
          parameters cannot be provided together.
        required: false
        style: form
        explode: false
        schema:
          type: array
          items:
            type: string
      - name: member_names
        in: query
        description: "Performs the operation on the unique member name specified.\
          \ Examples of members include volumes, hosts, host groups, and directories.\
          \ Enter multiple names in comma-separated format. For example, `vol01,vol02`."
        required: false
        style: form
        explode: false
        schema:
          type: array
          items:
            type: string
      - name: member_types
        in: query
        description: "Performs the operation on the member types specified. The type\
          \ of member is the full name of the resource endpoint. Valid values include\
          \ `directories`. Enter multiple member types in comma-separated format.\
          \ For example, `type01,type02`."
        required: false
        style: form
        explode: false
        schema:
          type: array
          items:
            type: string
      - name: policy_ids
        in: query
        description: Performs the operation on the unique policy IDs specified. Enter
          multiple policy IDs in comma-separated format. The `policy_ids` and `policy_names`
          parameters cannot be provided together.
        required: false
        style: form
        explode: false
        schema:
          type: array
          items:
            type: string
      - name: policy_names
        in: query
        description: "Performs the operation on the policy names specified. Enter\
          \ multiple policy names in comma-separated format. For example, `name01,name02`."
        required: false
        style: form
        explode: false
        schema:
          type: array
          items:
            type: string
      responses:
        "200":
          description: OK
  /api/2.8/policies/quota:
    get:
      tags:
      - Policies
      summary: List quota policies
      description: Displays a list of quota policies.
      parameters:
      - name: Authorization
        in: header
        description: "Access token (in JWT format) required to use any API endpoint\
          \ (except `/oauth2`, `/login`, and `/logout`)"
        required: false
        style: simple
        explode: false
        schema:
          type: string
      - name: X-Request-ID
        in: header
        description: Supplied by client during request or generated by server.
        required: false
        style: simple
        explode: false
        schema:
          type: string
      - name: continuation_token
        in: query
        description: A token used to retrieve the next page of data with some consistency
          guaranteed. The token is a Base64 encoded value. Set `continuation_token`
          to the system-generated token taken from the `x-next-token` header field
          of the response. A query has reached its last page when the response does
          not include a token. Pagination requires the `limit` and `continuation_token`
          query parameters.
        required: false
        style: form
        explode: true
        schema:
          type: string
      - name: filter
        in: query
        description: Narrows down the results to only the response objects that satisfy
          the filter criteria.
        required: false
        style: form
        explode: true
        schema:
          type: string
      - name: ids
        in: query
        description: Performs the operation on the unique resource IDs specified.
          Enter multiple resource IDs in comma-separated format. The `ids` and `names`
          parameters cannot be provided together.
        required: false
        style: form
        explode: false
        schema:
          type: array
          items:
            type: string
      - name: limit
        in: query
        description: "Limits the size of the response to the specified number of objects\
          \ on each page. To return the total number of resources, set `limit=0`.\
          \ The total number of resources is returned as a `total_item_count` value.\
          \ If the page size requested is larger than the system maximum limit, the\
          \ server returns the maximum limit, disregarding the requested page size."
        required: false
        style: form
        explode: true
        schema:
          minimum: 1
          type: integer
          format: int32
        example: 10
      - name: names
        in: query
        description: "Performs the operation on the unique name specified. Enter multiple\
          \ names in comma-separated format. For example, `name01,name02`."
        required: false
        style: form
        explode: false
        schema:
          type: array
          items:
            type: string
      - name: offset
        in: query
        description: The starting position based on the results of the query in relation
          to the full set of response objects returned.
        required: false
        style: form
        explode: true
        schema:
          minimum: 0
          type: integer
          format: int32
        example: 10
      - name: sort
        in: query
        description: "Returns the response objects in the order specified. Set `sort`\
          \ to the name in the response by which to sort. Sorting can be performed\
          \ on any of the names in the response, and the objects can be sorted in\
          \ ascending or descending order. By default, the response objects are sorted\
          \ in ascending order. To sort in descending order, append the minus sign\
          \ (`-`) to the name. A single request can be sorted on multiple objects.\
          \ For example, you can sort all volumes from largest to smallest volume\
          \ size, and then sort volumes of the same size in ascending order by volume\
          \ name. To sort on multiple names, list the names as comma-separated values."
        required: false
        style: form
        explode: false
        schema:
          type: array
          items:
            pattern: "^[a-z]+(_[a-z]+)*-?"
            type: string
      - name: total_item_count
        in: query
        description: "If set to `true`, the `total_item_count` matching the specified\
          \ query parameters is calculated and returned in the response. If set to\
          \ `false`, the `total_item_count` is `null` in the response. This may speed\
          \ up queries where the `total_item_count` is large. If not specified, defaults\
          \ to `false`."
        required: false
        style: form
        explode: true
        schema:
          type: boolean
      responses:
        "200":
          description: OK
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/inline_response_200_103'
    post:
      tags:
      - Policies
      summary: Create quota policies
      description: Creates one or more quota policies.
      parameters:
      - name: Authorization
        in: header
        description: "Access token (in JWT format) required to use any API endpoint\
          \ (except `/oauth2`, `/login`, and `/logout`)"
        required: false
        style: simple
        explode: false
        schema:
          type: string
      - name: X-Request-ID
        in: header
        description: Supplied by client during request or generated by server.
        required: false
        style: simple
        explode: false
        schema:
          type: string
      - name: names
        in: query
        description: "Performs the operation on the unique name specified. Enter multiple\
          \ names in comma-separated format. For example, `name01,name02`."
        required: false
        style: form
        explode: false
        schema:
          type: array
          items:
            type: string
      requestBody:
        $ref: '#/components/requestBodies/Policy'
      responses:
        "200":
          description: OK
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/inline_response_200_104'
    delete:
      tags:
      - Policies
      summary: Delete quota policies
      description: "Deletes one or more quota policies. The `ids` or `names` parameter\
        \ is required, but they cannot be set together."
      parameters:
      - name: Authorization
        in: header
        description: "Access token (in JWT format) required to use any API endpoint\
          \ (except `/oauth2`, `/login`, and `/logout`)"
        required: false
        style: simple
        explode: false
        schema:
          type: string
      - name: X-Request-ID
        in: header
        description: Supplied by client during request or generated by server.
        required: false
        style: simple
        explode: false
        schema:
          type: string
      - name: ids
        in: query
        description: Performs the operation on the unique resource IDs specified.
          Enter multiple resource IDs in comma-separated format. The `ids` and `names`
          parameters cannot be provided together.
        required: false
        style: form
        explode: false
        schema:
          type: array
          items:
            type: string
      - name: names
        in: query
        description: "Performs the operation on the unique name specified. Enter multiple\
          \ names in comma-separated format. For example, `name01,name02`."
        required: false
        style: form
        explode: false
        schema:
          type: array
          items:
            type: string
      responses:
        "200":
          description: OK
    patch:
      tags:
      - Policies
      summary: Modify quota policies
      description: "Modifies one or more quota policies. To enable a policy, set `enabled=true`.\
        \ To disable a policy, set `enabled=false`. To rename a policy, set `name`\
        \ to the new name. The `ids` or `names` parameter is required, but cannot\
        \ be set together."
      parameters:
      - name: Authorization
        in: header
        description: "Access token (in JWT format) required to use any API endpoint\
          \ (except `/oauth2`, `/login`, and `/logout`)"
        required: false
        style: simple
        explode: false
        schema:
          type: string
      - name: X-Request-ID
        in: header
        description: Supplied by client during request or generated by server.
        required: false
        style: simple
        explode: false
        schema:
          type: string
      - name: ids
        in: query
        description: Performs the operation on the unique resource IDs specified.
          Enter multiple resource IDs in comma-separated format. The `ids` and `names`
          parameters cannot be provided together.
        required: false
        style: form
        explode: false
        schema:
          type: array
          items:
            type: string
      - name: names
        in: query
        description: "Performs the operation on the unique name specified. Enter multiple\
          \ names in comma-separated format. For example, `name01,name02`."
        required: false
        style: form
        explode: false
        schema:
          type: array
          items:
            type: string
      - name: ignore_usage
        in: query
        description: "Flag used to override checks for quota management operations.\
          \ If set to `true`, directory usage is not checked against the `quota_limits`\
          \ that are set. If set to `false`, the actual logical bytes in use are prevented\
          \ from exceeding the limits set on the directory. Client operations might\
          \ be impacted. If the limit exceeds the quota, the client operation is not\
          \ allowed. If not specified, defaults to `false`."
        required: false
        style: form
        explode: true
        schema:
          type: boolean
      requestBody:
        $ref: '#/components/requestBodies/Policy2'
      responses:
        "200":
          description: OK
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/inline_response_200_104'
  /api/2.8/policies/quota/members:
    get:
      tags:
      - Policies
      summary: List quota policy members
      description: Displays a list of quota policy members.
      parameters:
      - name: Authorization
        in: header
        description: "Access token (in JWT format) required to use any API endpoint\
          \ (except `/oauth2`, `/login`, and `/logout`)"
        required: false
        style: simple
        explode: false
        schema:
          type: string
      - name: X-Request-ID
        in: header
        description: Supplied by client during request or generated by server.
        required: false
        style: simple
        explode: false
        schema:
          type: string
      - name: continuation_token
        in: query
        description: A token used to retrieve the next page of data with some consistency
          guaranteed. The token is a Base64 encoded value. Set `continuation_token`
          to the system-generated token taken from the `x-next-token` header field
          of the response. A query has reached its last page when the response does
          not include a token. Pagination requires the `limit` and `continuation_token`
          query parameters.
        required: false
        style: form
        explode: true
        schema:
          type: string
      - name: destroyed
        in: query
        description: "If set to `true`, lists only destroyed objects that are in the\
          \ eradication pending state. If set to `false`, lists only objects that\
          \ are not destroyed. For destroyed objects, the time remaining is displayed\
          \ in milliseconds."
        required: false
        style: form
        explode: true
        schema:
          type: boolean
      - name: filter
        in: query
        description: Narrows down the results to only the response objects that satisfy
          the filter criteria.
        required: false
        style: form
        explode: true
        schema:
          type: string
      - name: limit
        in: query
        description: "Limits the size of the response to the specified number of objects\
          \ on each page. To return the total number of resources, set `limit=0`.\
          \ The total number of resources is returned as a `total_item_count` value.\
          \ If the page size requested is larger than the system maximum limit, the\
          \ server returns the maximum limit, disregarding the requested page size."
        required: false
        style: form
        explode: true
        schema:
          minimum: 1
          type: integer
          format: int32
        example: 10
      - name: member_ids
        in: query
        description: Performs the operation on the unique member IDs specified. Enter
          multiple member IDs in comma-separated format. The `member_ids` and `member_names`
          parameters cannot be provided together.
        required: false
        style: form
        explode: false
        schema:
          type: array
          items:
            type: string
      - name: member_names
        in: query
        description: "Performs the operation on the unique member name specified.\
          \ Examples of members include volumes, hosts, host groups, and directories.\
          \ Enter multiple names in comma-separated format. For example, `vol01,vol02`."
        required: false
        style: form
        explode: false
        schema:
          type: array
          items:
            type: string
      - name: member_types
        in: query
        description: "Performs the operation on the member types specified. The type\
          \ of member is the full name of the resource endpoint. Valid values include\
          \ `directories`. Enter multiple member types in comma-separated format.\
          \ For example, `type01,type02`."
        required: false
        style: form
        explode: false
        schema:
          type: array
          items:
            type: string
      - name: policy_ids
        in: query
        description: Performs the operation on the unique policy IDs specified. Enter
          multiple policy IDs in comma-separated format. The `policy_ids` and `policy_names`
          parameters cannot be provided together.
        required: false
        style: form
        explode: false
        schema:
          type: array
          items:
            type: string
      - name: policy_names
        in: query
        description: "Performs the operation on the policy names specified. Enter\
          \ multiple policy names in comma-separated format. For example, `name01,name02`."
        required: false
        style: form
        explode: false
        schema:
          type: array
          items:
            type: string
      - name: offset
        in: query
        description: The starting position based on the results of the query in relation
          to the full set of response objects returned.
        required: false
        style: form
        explode: true
        schema:
          minimum: 0
          type: integer
          format: int32
        example: 10
      - name: sort
        in: query
        description: "Returns the response objects in the order specified. Set `sort`\
          \ to the name in the response by which to sort. Sorting can be performed\
          \ on any of the names in the response, and the objects can be sorted in\
          \ ascending or descending order. By default, the response objects are sorted\
          \ in ascending order. To sort in descending order, append the minus sign\
          \ (`-`) to the name. A single request can be sorted on multiple objects.\
          \ For example, you can sort all volumes from largest to smallest volume\
          \ size, and then sort volumes of the same size in ascending order by volume\
          \ name. To sort on multiple names, list the names as comma-separated values."
        required: false
        style: form
        explode: false
        schema:
          type: array
          items:
            pattern: "^[a-z]+(_[a-z]+)*-?"
            type: string
      - name: total_item_count
        in: query
        description: "If set to `true`, the `total_item_count` matching the specified\
          \ query parameters is calculated and returned in the response. If set to\
          \ `false`, the `total_item_count` is `null` in the response. This may speed\
          \ up queries where the `total_item_count` is large. If not specified, defaults\
          \ to `false`."
        required: false
        style: form
        explode: true
        schema:
          type: boolean
      responses:
        "200":
          description: OK
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/inline_response_200_47'
    post:
      tags:
      - Policies
      summary: Create a membership between a managed directory and a quota policy
      description: "Creates a membership between one or more managed directories and\
        \ a quota policy. The `policy_ids` or `policy_names` parameter is required,\
        \ but cannot be set together."
      parameters:
      - name: Authorization
        in: header
        description: "Access token (in JWT format) required to use any API endpoint\
          \ (except `/oauth2`, `/login`, and `/logout`)"
        required: false
        style: simple
        explode: false
        schema:
          type: string
      - name: X-Request-ID
        in: header
        description: Supplied by client during request or generated by server.
        required: false
        style: simple
        explode: false
        schema:
          type: string
      - name: policy_ids
        in: query
        description: Performs the operation on the unique policy IDs specified. Enter
          multiple policy IDs in comma-separated format. The `policy_ids` and `policy_names`
          parameters cannot be provided together.
        required: false
        style: form
        explode: false
        schema:
          type: array
          items:
            type: string
      - name: policy_names
        in: query
        description: "Performs the operation on the policy names specified. Enter\
          \ multiple policy names in comma-separated format. For example, `name01,name02`."
        required: false
        style: form
        explode: false
        schema:
          type: array
          items:
            type: string
      - name: ignore_usage
        in: query
        description: "Flag used to override checks for quota management operations.\
          \ If set to `true`, directory usage is not checked against the `quota_limits`\
          \ that are set. If set to `false`, the actual logical bytes in use are prevented\
          \ from exceeding the limits set on the directory. Client operations might\
          \ be impacted. If the limit exceeds the quota, the client operation is not\
          \ allowed. If not specified, defaults to `false`."
        required: false
        style: form
        explode: true
        schema:
          type: boolean
      requestBody:
        $ref: '#/components/requestBodies/Members2'
      responses:
        "200":
          description: OK
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/inline_response_200_50'
    delete:
      tags:
      - Policies
      summary: Delete membership between quota policies and managed directories
      description: "Deletes a membership between one or more quota policies and managed\
        \ directories. The `policy_ids` or `policy_names` parameter is required, but\
        \ cannot be set together. The `member_ids` or `member_names` parameter is\
        \ required, but cannot be set together."
      parameters:
      - name: Authorization
        in: header
        description: "Access token (in JWT format) required to use any API endpoint\
          \ (except `/oauth2`, `/login`, and `/logout`)"
        required: false
        style: simple
        explode: false
        schema:
          type: string
      - name: X-Request-ID
        in: header
        description: Supplied by client during request or generated by server.
        required: false
        style: simple
        explode: false
        schema:
          type: string
      - name: member_ids
        in: query
        description: Performs the operation on the unique member IDs specified. Enter
          multiple member IDs in comma-separated format. The `member_ids` and `member_names`
          parameters cannot be provided together.
        required: false
        style: form
        explode: false
        schema:
          type: array
          items:
            type: string
      - name: member_names
        in: query
        description: "Performs the operation on the unique member name specified.\
          \ Examples of members include volumes, hosts, host groups, and directories.\
          \ Enter multiple names in comma-separated format. For example, `vol01,vol02`."
        required: false
        style: form
        explode: false
        schema:
          type: array
          items:
            type: string
      - name: member_types
        in: query
        description: "Performs the operation on the member types specified. The type\
          \ of member is the full name of the resource endpoint. Valid values include\
          \ `directories`. Enter multiple member types in comma-separated format.\
          \ For example, `type01,type02`."
        required: false
        style: form
        explode: false
        schema:
          type: array
          items:
            type: string
      - name: policy_ids
        in: query
        description: Performs the operation on the unique policy IDs specified. Enter
          multiple policy IDs in comma-separated format. The `policy_ids` and `policy_names`
          parameters cannot be provided together.
        required: false
        style: form
        explode: false
        schema:
          type: array
          items:
            type: string
      - name: policy_names
        in: query
        description: "Performs the operation on the policy names specified. Enter\
          \ multiple policy names in comma-separated format. For example, `name01,name02`."
        required: false
        style: form
        explode: false
        schema:
          type: array
          items:
            type: string
      responses:
        "200":
          description: OK
  /api/2.8/policies/quota/rules:
    get:
      tags:
      - Policies
      summary: List quota policy rules
      description: Displays a list of quota policy rules.
      parameters:
      - name: Authorization
        in: header
        description: "Access token (in JWT format) required to use any API endpoint\
          \ (except `/oauth2`, `/login`, and `/logout`)"
        required: false
        style: simple
        explode: false
        schema:
          type: string
      - name: X-Request-ID
        in: header
        description: Supplied by client during request or generated by server.
        required: false
        style: simple
        explode: false
        schema:
          type: string
      - name: continuation_token
        in: query
        description: A token used to retrieve the next page of data with some consistency
          guaranteed. The token is a Base64 encoded value. Set `continuation_token`
          to the system-generated token taken from the `x-next-token` header field
          of the response. A query has reached its last page when the response does
          not include a token. Pagination requires the `limit` and `continuation_token`
          query parameters.
        required: false
        style: form
        explode: true
        schema:
          type: string
      - name: filter
        in: query
        description: Narrows down the results to only the response objects that satisfy
          the filter criteria.
        required: false
        style: form
        explode: true
        schema:
          type: string
      - name: limit
        in: query
        description: "Limits the size of the response to the specified number of objects\
          \ on each page. To return the total number of resources, set `limit=0`.\
          \ The total number of resources is returned as a `total_item_count` value.\
          \ If the page size requested is larger than the system maximum limit, the\
          \ server returns the maximum limit, disregarding the requested page size."
        required: false
        style: form
        explode: true
        schema:
          minimum: 1
          type: integer
          format: int32
        example: 10
      - name: names
        in: query
        description: "Performs the operation on the unique name specified. Enter multiple\
          \ names in comma-separated format. For example, `name01,name02`."
        required: false
        style: form
        explode: false
        schema:
          type: array
          items:
            type: string
      - name: offset
        in: query
        description: The starting position based on the results of the query in relation
          to the full set of response objects returned.
        required: false
        style: form
        explode: true
        schema:
          minimum: 0
          type: integer
          format: int32
        example: 10
      - name: policy_ids
        in: query
        description: Performs the operation on the unique policy IDs specified. Enter
          multiple policy IDs in comma-separated format. The `policy_ids` and `policy_names`
          parameters cannot be provided together.
        required: false
        style: form
        explode: false
        schema:
          type: array
          items:
            type: string
      - name: policy_names
        in: query
        description: "Performs the operation on the policy names specified. Enter\
          \ multiple policy names in comma-separated format. For example, `name01,name02`."
        required: false
        style: form
        explode: false
        schema:
          type: array
          items:
            type: string
      - name: sort
        in: query
        description: "Returns the response objects in the order specified. Set `sort`\
          \ to the name in the response by which to sort. Sorting can be performed\
          \ on any of the names in the response, and the objects can be sorted in\
          \ ascending or descending order. By default, the response objects are sorted\
          \ in ascending order. To sort in descending order, append the minus sign\
          \ (`-`) to the name. A single request can be sorted on multiple objects.\
          \ For example, you can sort all volumes from largest to smallest volume\
          \ size, and then sort volumes of the same size in ascending order by volume\
          \ name. To sort on multiple names, list the names as comma-separated values."
        required: false
        style: form
        explode: false
        schema:
          type: array
          items:
            pattern: "^[a-z]+(_[a-z]+)*-?"
            type: string
      - name: total_item_count
        in: query
        description: "If set to `true`, the `total_item_count` matching the specified\
          \ query parameters is calculated and returned in the response. If set to\
          \ `false`, the `total_item_count` is `null` in the response. This may speed\
          \ up queries where the `total_item_count` is large. If not specified, defaults\
          \ to `false`."
        required: false
        style: form
        explode: true
        schema:
          type: boolean
      responses:
        "200":
          description: OK
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/inline_response_200_107'
    post:
      tags:
      - Policies
      summary: Create quota policy rules
      description: "Creates one or more quota policy rules. The `policy_ids` or `policy_names`\
        \ parameter is required, but cannot be set together."
      parameters:
      - name: Authorization
        in: header
        description: "Access token (in JWT format) required to use any API endpoint\
          \ (except `/oauth2`, `/login`, and `/logout`)"
        required: false
        style: simple
        explode: false
        schema:
          type: string
      - name: X-Request-ID
        in: header
        description: Supplied by client during request or generated by server.
        required: false
        style: simple
        explode: false
        schema:
          type: string
      - name: policy_ids
        in: query
        description: Performs the operation on the unique policy IDs specified. Enter
          multiple policy IDs in comma-separated format. The `policy_ids` and `policy_names`
          parameters cannot be provided together.
        required: false
        style: form
        explode: false
        schema:
          type: array
          items:
            type: string
      - name: policy_names
        in: query
        description: "Performs the operation on the policy names specified. Enter\
          \ multiple policy names in comma-separated format. For example, `name01,name02`."
        required: false
        style: form
        explode: false
        schema:
          type: array
          items:
            type: string
      - name: ignore_usage
        in: query
        description: "Flag used to override checks for quota management operations.\
          \ If set to `true`, directory usage is not checked against the `quota_limits`\
          \ that are set. If set to `false`, the actual logical bytes in use are prevented\
          \ from exceeding the limits set on the directory. Client operations might\
          \ be impacted. If the limit exceeds the quota, the client operation is not\
          \ allowed. If not specified, defaults to `false`."
        required: false
        style: form
        explode: true
        schema:
          type: boolean
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/quota_rules_body'
        required: true
      responses:
        "200":
          description: OK
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/inline_response_200_108'
    delete:
      tags:
      - Policies
      summary: Delete quota policy rules
      description: "Deletes one or more quota policy rules. The `policy_ids` or `policy_names`\
        \ parameter is required, but they cannot be set together."
      parameters:
      - name: Authorization
        in: header
        description: "Access token (in JWT format) required to use any API endpoint\
          \ (except `/oauth2`, `/login`, and `/logout`)"
        required: false
        style: simple
        explode: false
        schema:
          type: string
      - name: X-Request-ID
        in: header
        description: Supplied by client during request or generated by server.
        required: false
        style: simple
        explode: false
        schema:
          type: string
      - name: names
        in: query
        description: "Performs the operation on the unique name specified. Enter multiple\
          \ names in comma-separated format. For example, `name01,name02`."
        required: false
        style: form
        explode: false
        schema:
          type: array
          items:
            type: string
      - name: policy_ids
        in: query
        description: Performs the operation on the unique policy IDs specified. Enter
          multiple policy IDs in comma-separated format. The `policy_ids` and `policy_names`
          parameters cannot be provided together.
        required: false
        style: form
        explode: false
        schema:
          type: array
          items:
            type: string
      - name: policy_names
        in: query
        description: "Performs the operation on the policy names specified. Enter\
          \ multiple policy names in comma-separated format. For example, `name01,name02`."
        required: false
        style: form
        explode: false
        schema:
          type: array
          items:
            type: string
      responses:
        "200":
          description: OK
  /api/2.8/policies/smb:
    get:
      tags:
      - Policies
      summary: List SMB policies
      description: Return a list of SMB policies.
      parameters:
      - name: Authorization
        in: header
        description: "Access token (in JWT format) required to use any API endpoint\
          \ (except `/oauth2`, `/login`, and `/logout`)"
        required: false
        style: simple
        explode: false
        schema:
          type: string
      - name: X-Request-ID
        in: header
        description: Supplied by client during request or generated by server.
        required: false
        style: simple
        explode: false
        schema:
          type: string
      - name: continuation_token
        in: query
        description: A token used to retrieve the next page of data with some consistency
          guaranteed. The token is a Base64 encoded value. Set `continuation_token`
          to the system-generated token taken from the `x-next-token` header field
          of the response. A query has reached its last page when the response does
          not include a token. Pagination requires the `limit` and `continuation_token`
          query parameters.
        required: false
        style: form
        explode: true
        schema:
          type: string
      - name: filter
        in: query
        description: Narrows down the results to only the response objects that satisfy
          the filter criteria.
        required: false
        style: form
        explode: true
        schema:
          type: string
      - name: ids
        in: query
        description: Performs the operation on the unique resource IDs specified.
          Enter multiple resource IDs in comma-separated format. The `ids` and `names`
          parameters cannot be provided together.
        required: false
        style: form
        explode: false
        schema:
          type: array
          items:
            type: string
      - name: limit
        in: query
        description: "Limits the size of the response to the specified number of objects\
          \ on each page. To return the total number of resources, set `limit=0`.\
          \ The total number of resources is returned as a `total_item_count` value.\
          \ If the page size requested is larger than the system maximum limit, the\
          \ server returns the maximum limit, disregarding the requested page size."
        required: false
        style: form
        explode: true
        schema:
          minimum: 1
          type: integer
          format: int32
        example: 10
      - name: names
        in: query
        description: "Performs the operation on the unique name specified. Enter multiple\
          \ names in comma-separated format. For example, `name01,name02`."
        required: false
        style: form
        explode: false
        schema:
          type: array
          items:
            type: string
      - name: offset
        in: query
        description: The starting position based on the results of the query in relation
          to the full set of response objects returned.
        required: false
        style: form
        explode: true
        schema:
          minimum: 0
          type: integer
          format: int32
        example: 10
      - name: sort
        in: query
        description: "Returns the response objects in the order specified. Set `sort`\
          \ to the name in the response by which to sort. Sorting can be performed\
          \ on any of the names in the response, and the objects can be sorted in\
          \ ascending or descending order. By default, the response objects are sorted\
          \ in ascending order. To sort in descending order, append the minus sign\
          \ (`-`) to the name. A single request can be sorted on multiple objects.\
          \ For example, you can sort all volumes from largest to smallest volume\
          \ size, and then sort volumes of the same size in ascending order by volume\
          \ name. To sort on multiple names, list the names as comma-separated values."
        required: false
        style: form
        explode: false
        schema:
          type: array
          items:
            pattern: "^[a-z]+(_[a-z]+)*-?"
            type: string
      - name: total_item_count
        in: query
        description: "If set to `true`, the `total_item_count` matching the specified\
          \ query parameters is calculated and returned in the response. If set to\
          \ `false`, the `total_item_count` is `null` in the response. This may speed\
          \ up queries where the `total_item_count` is large. If not specified, defaults\
          \ to `false`."
        required: false
        style: form
        explode: true
        schema:
          type: boolean
      responses:
        "200":
          description: OK
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/inline_response_200_109'
    post:
      tags:
      - Policies
      summary: Create SMB policies
      description: "Create one or more SMB policies. To create an SMB policy with\
        \ access based enumeration enabled, set `access_based_enumeration_enabled=true`."
      parameters:
      - name: Authorization
        in: header
        description: "Access token (in JWT format) required to use any API endpoint\
          \ (except `/oauth2`, `/login`, and `/logout`)"
        required: false
        style: simple
        explode: false
        schema:
          type: string
      - name: X-Request-ID
        in: header
        description: Supplied by client during request or generated by server.
        required: false
        style: simple
        explode: false
        schema:
          type: string
      - name: names
        in: query
        description: "Performs the operation on the unique name specified. Enter multiple\
          \ names in comma-separated format. For example, `name01,name02`."
        required: false
        style: form
        explode: false
        schema:
          type: array
          items:
            type: string
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/policies_smb_body'
        required: true
      responses:
        "200":
          description: OK
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/inline_response_200_110'
    delete:
      tags:
      - Policies
      summary: Delete SMB policies
      description: "Delete one or more SMB policies. The `ids` or `names` parameter\
        \ is required, but they cannot be set together."
      parameters:
      - name: Authorization
        in: header
        description: "Access token (in JWT format) required to use any API endpoint\
          \ (except `/oauth2`, `/login`, and `/logout`)"
        required: false
        style: simple
        explode: false
        schema:
          type: string
      - name: X-Request-ID
        in: header
        description: Supplied by client during request or generated by server.
        required: false
        style: simple
        explode: false
        schema:
          type: string
      - name: ids
        in: query
        description: Performs the operation on the unique resource IDs specified.
          Enter multiple resource IDs in comma-separated format. The `ids` and `names`
          parameters cannot be provided together.
        required: false
        style: form
        explode: false
        schema:
          type: array
          items:
            type: string
      - name: names
        in: query
        description: "Performs the operation on the unique name specified. Enter multiple\
          \ names in comma-separated format. For example, `name01,name02`."
        required: false
        style: form
        explode: false
        schema:
          type: array
          items:
            type: string
      responses:
        "200":
          description: OK
    patch:
      tags:
      - Policies
      summary: Update SMB policies
      description: "Update one or more SMB policies. To enable a policy, set `enabled=true`.\
        \ To disable a policy, set `enabled=false`. To enable access based enumeration,\
        \ set `access_based_enumeration_enabled=true`. To disable access based enumeration,\
        \ set `access_based_enumeration_enabled=false`. To rename a policy, set `name`\
        \ to the new name. The `ids` or `names` parameter is required, but cannot\
        \ be set together."
      parameters:
      - name: Authorization
        in: header
        description: "Access token (in JWT format) required to use any API endpoint\
          \ (except `/oauth2`, `/login`, and `/logout`)"
        required: false
        style: simple
        explode: false
        schema:
          type: string
      - name: X-Request-ID
        in: header
        description: Supplied by client during request or generated by server.
        required: false
        style: simple
        explode: false
        schema:
          type: string
      - name: ids
        in: query
        description: Performs the operation on the unique resource IDs specified.
          Enter multiple resource IDs in comma-separated format. The `ids` and `names`
          parameters cannot be provided together.
        required: false
        style: form
        explode: false
        schema:
          type: array
          items:
            type: string
      - name: names
        in: query
        description: "Performs the operation on the unique name specified. Enter multiple\
          \ names in comma-separated format. For example, `name01,name02`."
        required: false
        style: form
        explode: false
        schema:
          type: array
          items:
            type: string
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/policies_smb_body_1'
        required: true
      responses:
        "200":
          description: OK
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/inline_response_200_110'
  /api/2.8/policies/smb/client-rules:
    get:
      tags:
      - Policies
      summary: List SMB client policy rules
      description: Displays a list of SMB client policy rules.
      parameters:
      - name: Authorization
        in: header
        description: "Access token (in JWT format) required to use any API endpoint\
          \ (except `/oauth2`, `/login`, and `/logout`)"
        required: false
        style: simple
        explode: false
        schema:
          type: string
      - name: X-Request-ID
        in: header
        description: Supplied by client during request or generated by server.
        required: false
        style: simple
        explode: false
        schema:
          type: string
      - name: continuation_token
        in: query
        description: A token used to retrieve the next page of data with some consistency
          guaranteed. The token is a Base64 encoded value. Set `continuation_token`
          to the system-generated token taken from the `x-next-token` header field
          of the response. A query has reached its last page when the response does
          not include a token. Pagination requires the `limit` and `continuation_token`
          query parameters.
        required: false
        style: form
        explode: true
        schema:
          type: string
      - name: filter
        in: query
        description: Narrows down the results to only the response objects that satisfy
          the filter criteria.
        required: false
        style: form
        explode: true
        schema:
          type: string
      - name: limit
        in: query
        description: "Limits the size of the response to the specified number of objects\
          \ on each page. To return the total number of resources, set `limit=0`.\
          \ The total number of resources is returned as a `total_item_count` value.\
          \ If the page size requested is larger than the system maximum limit, the\
          \ server returns the maximum limit, disregarding the requested page size."
        required: false
        style: form
        explode: true
        schema:
          minimum: 1
          type: integer
          format: int32
        example: 10
      - name: names
        in: query
        description: "Performs the operation on the unique name specified. Enter multiple\
          \ names in comma-separated format. For example, `name01,name02`."
        required: false
        style: form
        explode: false
        schema:
          type: array
          items:
            type: string
      - name: offset
        in: query
        description: The starting position based on the results of the query in relation
          to the full set of response objects returned.
        required: false
        style: form
        explode: true
        schema:
          minimum: 0
          type: integer
          format: int32
        example: 10
      - name: policy_ids
        in: query
        description: Performs the operation on the unique policy IDs specified. Enter
          multiple policy IDs in comma-separated format. The `policy_ids` and `policy_names`
          parameters cannot be provided together.
        required: false
        style: form
        explode: false
        schema:
          type: array
          items:
            type: string
      - name: policy_names
        in: query
        description: "Performs the operation on the policy names specified. Enter\
          \ multiple policy names in comma-separated format. For example, `name01,name02`."
        required: false
        style: form
        explode: false
        schema:
          type: array
          items:
            type: string
      - name: sort
        in: query
        description: "Returns the response objects in the order specified. Set `sort`\
          \ to the name in the response by which to sort. Sorting can be performed\
          \ on any of the names in the response, and the objects can be sorted in\
          \ ascending or descending order. By default, the response objects are sorted\
          \ in ascending order. To sort in descending order, append the minus sign\
          \ (`-`) to the name. A single request can be sorted on multiple objects.\
          \ For example, you can sort all volumes from largest to smallest volume\
          \ size, and then sort volumes of the same size in ascending order by volume\
          \ name. To sort on multiple names, list the names as comma-separated values."
        required: false
        style: form
        explode: false
        schema:
          type: array
          items:
            pattern: "^[a-z]+(_[a-z]+)*-?"
            type: string
      - name: total_item_count
        in: query
        description: "If set to `true`, the `total_item_count` matching the specified\
          \ query parameters is calculated and returned in the response. If set to\
          \ `false`, the `total_item_count` is `null` in the response. This may speed\
          \ up queries where the `total_item_count` is large. If not specified, defaults\
          \ to `false`."
        required: false
        style: form
        explode: true
        schema:
          type: boolean
      responses:
        "200":
          description: OK
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/inline_response_200_111'
    post:
      tags:
      - Policies
      summary: Create SMB client policy rules
      description: "Create one or more SMB client policy rules. The `policy_ids` or\
        \ `policy_names` parameter is required, but cannot be set together."
      parameters:
      - name: Authorization
        in: header
        description: "Access token (in JWT format) required to use any API endpoint\
          \ (except `/oauth2`, `/login`, and `/logout`)"
        required: false
        style: simple
        explode: false
        schema:
          type: string
      - name: X-Request-ID
        in: header
        description: Supplied by client during request or generated by server.
        required: false
        style: simple
        explode: false
        schema:
          type: string
      - name: policy_ids
        in: query
        description: Performs the operation on the unique policy IDs specified. Enter
          multiple policy IDs in comma-separated format. The `policy_ids` and `policy_names`
          parameters cannot be provided together.
        required: false
        style: form
        explode: false
        schema:
          type: array
          items:
            type: string
      - name: policy_names
        in: query
        description: "Performs the operation on the policy names specified. Enter\
          \ multiple policy names in comma-separated format. For example, `name01,name02`."
        required: false
        style: form
        explode: false
        schema:
          type: array
          items:
            type: string
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/smb_clientrules_body'
        required: true
      responses:
        "200":
          description: OK
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/inline_response_200_112'
    delete:
      tags:
      - Policies
      summary: Delete SMB client policy rules.
      description: "Deletes one or more SMB client policy rules. The `policy_ids`\
        \ or `policy_names` parameter is required, but they cannot be set together."
      parameters:
      - name: Authorization
        in: header
        description: "Access token (in JWT format) required to use any API endpoint\
          \ (except `/oauth2`, `/login`, and `/logout`)"
        required: false
        style: simple
        explode: false
        schema:
          type: string
      - name: X-Request-ID
        in: header
        description: Supplied by client during request or generated by server.
        required: false
        style: simple
        explode: false
        schema:
          type: string
      - name: names
        in: query
        description: "Performs the operation on the unique name specified. Enter multiple\
          \ names in comma-separated format. For example, `name01,name02`."
        required: false
        style: form
        explode: false
        schema:
          type: array
          items:
            type: string
      - name: policy_ids
        in: query
        description: Performs the operation on the unique policy IDs specified. Enter
          multiple policy IDs in comma-separated format. The `policy_ids` and `policy_names`
          parameters cannot be provided together.
        required: false
        style: form
        explode: false
        schema:
          type: array
          items:
            type: string
      - name: policy_names
        in: query
        description: "Performs the operation on the policy names specified. Enter\
          \ multiple policy names in comma-separated format. For example, `name01,name02`."
        required: false
        style: form
        explode: false
        schema:
          type: array
          items:
            type: string
      responses:
        "200":
          description: OK
  /api/2.8/policies/smb/members:
    get:
      tags:
      - Policies
      summary: List SMB policy members
      description: Displays a list of SMB policy members.
      parameters:
      - name: Authorization
        in: header
        description: "Access token (in JWT format) required to use any API endpoint\
          \ (except `/oauth2`, `/login`, and `/logout`)"
        required: false
        style: simple
        explode: false
        schema:
          type: string
      - name: X-Request-ID
        in: header
        description: Supplied by client during request or generated by server.
        required: false
        style: simple
        explode: false
        schema:
          type: string
      - name: continuation_token
        in: query
        description: A token used to retrieve the next page of data with some consistency
          guaranteed. The token is a Base64 encoded value. Set `continuation_token`
          to the system-generated token taken from the `x-next-token` header field
          of the response. A query has reached its last page when the response does
          not include a token. Pagination requires the `limit` and `continuation_token`
          query parameters.
        required: false
        style: form
        explode: true
        schema:
          type: string
      - name: destroyed
        in: query
        description: "If set to `true`, lists only destroyed objects that are in the\
          \ eradication pending state. If set to `false`, lists only objects that\
          \ are not destroyed. For destroyed objects, the time remaining is displayed\
          \ in milliseconds."
        required: false
        style: form
        explode: true
        schema:
          type: boolean
      - name: filter
        in: query
        description: Narrows down the results to only the response objects that satisfy
          the filter criteria.
        required: false
        style: form
        explode: true
        schema:
          type: string
      - name: limit
        in: query
        description: "Limits the size of the response to the specified number of objects\
          \ on each page. To return the total number of resources, set `limit=0`.\
          \ The total number of resources is returned as a `total_item_count` value.\
          \ If the page size requested is larger than the system maximum limit, the\
          \ server returns the maximum limit, disregarding the requested page size."
        required: false
        style: form
        explode: true
        schema:
          minimum: 1
          type: integer
          format: int32
        example: 10
      - name: member_ids
        in: query
        description: Performs the operation on the unique member IDs specified. Enter
          multiple member IDs in comma-separated format. The `member_ids` and `member_names`
          parameters cannot be provided together.
        required: false
        style: form
        explode: false
        schema:
          type: array
          items:
            type: string
      - name: member_names
        in: query
        description: "Performs the operation on the unique member name specified.\
          \ Examples of members include volumes, hosts, host groups, and directories.\
          \ Enter multiple names in comma-separated format. For example, `vol01,vol02`."
        required: false
        style: form
        explode: false
        schema:
          type: array
          items:
            type: string
      - name: member_types
        in: query
        description: "Performs the operation on the member types specified. The type\
          \ of member is the full name of the resource endpoint. Valid values include\
          \ `directories`. Enter multiple member types in comma-separated format.\
          \ For example, `type01,type02`."
        required: false
        style: form
        explode: false
        schema:
          type: array
          items:
            type: string
      - name: policy_ids
        in: query
        description: Performs the operation on the unique policy IDs specified. Enter
          multiple policy IDs in comma-separated format. The `policy_ids` and `policy_names`
          parameters cannot be provided together.
        required: false
        style: form
        explode: false
        schema:
          type: array
          items:
            type: string
      - name: policy_names
        in: query
        description: "Performs the operation on the policy names specified. Enter\
          \ multiple policy names in comma-separated format. For example, `name01,name02`."
        required: false
        style: form
        explode: false
        schema:
          type: array
          items:
            type: string
      - name: offset
        in: query
        description: The starting position based on the results of the query in relation
          to the full set of response objects returned.
        required: false
        style: form
        explode: true
        schema:
          minimum: 0
          type: integer
          format: int32
        example: 10
      - name: sort
        in: query
        description: "Returns the response objects in the order specified. Set `sort`\
          \ to the name in the response by which to sort. Sorting can be performed\
          \ on any of the names in the response, and the objects can be sorted in\
          \ ascending or descending order. By default, the response objects are sorted\
          \ in ascending order. To sort in descending order, append the minus sign\
          \ (`-`) to the name. A single request can be sorted on multiple objects.\
          \ For example, you can sort all volumes from largest to smallest volume\
          \ size, and then sort volumes of the same size in ascending order by volume\
          \ name. To sort on multiple names, list the names as comma-separated values."
        required: false
        style: form
        explode: false
        schema:
          type: array
          items:
            pattern: "^[a-z]+(_[a-z]+)*-?"
            type: string
      - name: total_item_count
        in: query
        description: "If set to `true`, the `total_item_count` matching the specified\
          \ query parameters is calculated and returned in the response. If set to\
          \ `false`, the `total_item_count` is `null` in the response. This may speed\
          \ up queries where the `total_item_count` is large. If not specified, defaults\
          \ to `false`."
        required: false
        style: form
        explode: true
        schema:
          type: boolean
      responses:
        "200":
          description: OK
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/inline_response_200_48'
    post:
      tags:
      - Policies
      summary: Create SMB policies
      description: "Creates a membership between one or more resources with an SMB\
        \ policy. Applicable resources are directories. The `policy_ids` or `policy_names`\
        \ parameter is required, but cannot be set together."
      parameters:
      - name: Authorization
        in: header
        description: "Access token (in JWT format) required to use any API endpoint\
          \ (except `/oauth2`, `/login`, and `/logout`)"
        required: false
        style: simple
        explode: false
        schema:
          type: string
      - name: X-Request-ID
        in: header
        description: Supplied by client during request or generated by server.
        required: false
        style: simple
        explode: false
        schema:
          type: string
      - name: policy_ids
        in: query
        description: Performs the operation on the unique policy IDs specified. Enter
          multiple policy IDs in comma-separated format. The `policy_ids` and `policy_names`
          parameters cannot be provided together.
        required: false
        style: form
        explode: false
        schema:
          type: array
          items:
            type: string
      - name: policy_names
        in: query
        description: "Performs the operation on the policy names specified. Enter\
          \ multiple policy names in comma-separated format. For example, `name01,name02`."
        required: false
        style: form
        explode: false
        schema:
          type: array
          items:
            type: string
      requestBody:
        $ref: '#/components/requestBodies/Members'
      responses:
        "200":
          description: OK
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/inline_response_200_49'
    delete:
      tags:
      - Policies
      summary: Delete SMB policies
      description: "Deletes one or more SMB policies from resources. The `policy_ids`\
        \ or `policy_names` parameter is required, but cannot be set together. The\
        \ `member_ids` or `member_names` parameter is required, but cannot be set\
        \ together."
      parameters:
      - name: Authorization
        in: header
        description: "Access token (in JWT format) required to use any API endpoint\
          \ (except `/oauth2`, `/login`, and `/logout`)"
        required: false
        style: simple
        explode: false
        schema:
          type: string
      - name: X-Request-ID
        in: header
        description: Supplied by client during request or generated by server.
        required: false
        style: simple
        explode: false
        schema:
          type: string
      - name: member_ids
        in: query
        description: Performs the operation on the unique member IDs specified. Enter
          multiple member IDs in comma-separated format. The `member_ids` and `member_names`
          parameters cannot be provided together.
        required: false
        style: form
        explode: false
        schema:
          type: array
          items:
            type: string
      - name: member_names
        in: query
        description: "Performs the operation on the unique member name specified.\
          \ Examples of members include volumes, hosts, host groups, and directories.\
          \ Enter multiple names in comma-separated format. For example, `vol01,vol02`."
        required: false
        style: form
        explode: false
        schema:
          type: array
          items:
            type: string
      - name: member_types
        in: query
        description: "Performs the operation on the member types specified. The type\
          \ of member is the full name of the resource endpoint. Valid values include\
          \ `directories`. Enter multiple member types in comma-separated format.\
          \ For example, `type01,type02`."
        required: false
        style: form
        explode: false
        schema:
          type: array
          items:
            type: string
      - name: policy_ids
        in: query
        description: Performs the operation on the unique policy IDs specified. Enter
          multiple policy IDs in comma-separated format. The `policy_ids` and `policy_names`
          parameters cannot be provided together.
        required: false
        style: form
        explode: false
        schema:
          type: array
          items:
            type: string
      - name: policy_names
        in: query
        description: "Performs the operation on the policy names specified. Enter\
          \ multiple policy names in comma-separated format. For example, `name01,name02`."
        required: false
        style: form
        explode: false
        schema:
          type: array
          items:
            type: string
      responses:
        "200":
          description: OK
  /api/2.8/policies/snapshot:
    get:
      tags:
      - Policies
      summary: List snapshot policies
      description: Displays a list of snapshot policies.
      parameters:
      - name: Authorization
        in: header
        description: "Access token (in JWT format) required to use any API endpoint\
          \ (except `/oauth2`, `/login`, and `/logout`)"
        required: false
        style: simple
        explode: false
        schema:
          type: string
      - name: X-Request-ID
        in: header
        description: Supplied by client during request or generated by server.
        required: false
        style: simple
        explode: false
        schema:
          type: string
      - name: continuation_token
        in: query
        description: A token used to retrieve the next page of data with some consistency
          guaranteed. The token is a Base64 encoded value. Set `continuation_token`
          to the system-generated token taken from the `x-next-token` header field
          of the response. A query has reached its last page when the response does
          not include a token. Pagination requires the `limit` and `continuation_token`
          query parameters.
        required: false
        style: form
        explode: true
        schema:
          type: string
      - name: filter
        in: query
        description: Narrows down the results to only the response objects that satisfy
          the filter criteria.
        required: false
        style: form
        explode: true
        schema:
          type: string
      - name: ids
        in: query
        description: Performs the operation on the unique resource IDs specified.
          Enter multiple resource IDs in comma-separated format. The `ids` and `names`
          parameters cannot be provided together.
        required: false
        style: form
        explode: false
        schema:
          type: array
          items:
            type: string
      - name: limit
        in: query
        description: "Limits the size of the response to the specified number of objects\
          \ on each page. To return the total number of resources, set `limit=0`.\
          \ The total number of resources is returned as a `total_item_count` value.\
          \ If the page size requested is larger than the system maximum limit, the\
          \ server returns the maximum limit, disregarding the requested page size."
        required: false
        style: form
        explode: true
        schema:
          minimum: 1
          type: integer
          format: int32
        example: 10
      - name: names
        in: query
        description: "Performs the operation on the unique name specified. Enter multiple\
          \ names in comma-separated format. For example, `name01,name02`."
        required: false
        style: form
        explode: false
        schema:
          type: array
          items:
            type: string
      - name: offset
        in: query
        description: The starting position based on the results of the query in relation
          to the full set of response objects returned.
        required: false
        style: form
        explode: true
        schema:
          minimum: 0
          type: integer
          format: int32
        example: 10
      - name: sort
        in: query
        description: "Returns the response objects in the order specified. Set `sort`\
          \ to the name in the response by which to sort. Sorting can be performed\
          \ on any of the names in the response, and the objects can be sorted in\
          \ ascending or descending order. By default, the response objects are sorted\
          \ in ascending order. To sort in descending order, append the minus sign\
          \ (`-`) to the name. A single request can be sorted on multiple objects.\
          \ For example, you can sort all volumes from largest to smallest volume\
          \ size, and then sort volumes of the same size in ascending order by volume\
          \ name. To sort on multiple names, list the names as comma-separated values."
        required: false
        style: form
        explode: false
        schema:
          type: array
          items:
            pattern: "^[a-z]+(_[a-z]+)*-?"
            type: string
      - name: total_item_count
        in: query
        description: "If set to `true`, the `total_item_count` matching the specified\
          \ query parameters is calculated and returned in the response. If set to\
          \ `false`, the `total_item_count` is `null` in the response. This may speed\
          \ up queries where the `total_item_count` is large. If not specified, defaults\
          \ to `false`."
        required: false
        style: form
        explode: true
        schema:
          type: boolean
      responses:
        "200":
          description: OK
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/inline_response_200_103'
    post:
      tags:
      - Policies
      summary: Create snapshot policies
      description: Creates one or more snapshot policies.
      parameters:
      - name: Authorization
        in: header
        description: "Access token (in JWT format) required to use any API endpoint\
          \ (except `/oauth2`, `/login`, and `/logout`)"
        required: false
        style: simple
        explode: false
        schema:
          type: string
      - name: X-Request-ID
        in: header
        description: Supplied by client during request or generated by server.
        required: false
        style: simple
        explode: false
        schema:
          type: string
      - name: names
        in: query
        description: "Performs the operation on the unique name specified. Enter multiple\
          \ names in comma-separated format. For example, `name01,name02`."
        required: false
        style: form
        explode: false
        schema:
          type: array
          items:
            type: string
      requestBody:
        $ref: '#/components/requestBodies/Policy'
      responses:
        "200":
          description: OK
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/inline_response_200_104'
    delete:
      tags:
      - Policies
      summary: Delete snapshot policies
      description: "Deletes one or more snapshot policies. The `ids` or `names` parameter\
        \ is required, but they cannot be set together."
      parameters:
      - name: Authorization
        in: header
        description: "Access token (in JWT format) required to use any API endpoint\
          \ (except `/oauth2`, `/login`, and `/logout`)"
        required: false
        style: simple
        explode: false
        schema:
          type: string
      - name: X-Request-ID
        in: header
        description: Supplied by client during request or generated by server.
        required: false
        style: simple
        explode: false
        schema:
          type: string
      - name: ids
        in: query
        description: Performs the operation on the unique resource IDs specified.
          Enter multiple resource IDs in comma-separated format. The `ids` and `names`
          parameters cannot be provided together.
        required: false
        style: form
        explode: false
        schema:
          type: array
          items:
            type: string
      - name: names
        in: query
        description: "Performs the operation on the unique name specified. Enter multiple\
          \ names in comma-separated format. For example, `name01,name02`."
        required: false
        style: form
        explode: false
        schema:
          type: array
          items:
            type: string
      responses:
        "200":
          description: OK
    patch:
      tags:
      - Policies
      summary: Modify snapshot policies
      description: "Modifies one or more snapshot policies. To enable a policy, set\
        \ `enabled=true`. To disable a policy, set `enabled=true`. To rename a policy,\
        \ set `name` to the new name. The `ids` or `names` parameter is required,\
        \ but cannot be set together."
      parameters:
      - name: Authorization
        in: header
        description: "Access token (in JWT format) required to use any API endpoint\
          \ (except `/oauth2`, `/login`, and `/logout`)"
        required: false
        style: simple
        explode: false
        schema:
          type: string
      - name: X-Request-ID
        in: header
        description: Supplied by client during request or generated by server.
        required: false
        style: simple
        explode: false
        schema:
          type: string
      - name: ids
        in: query
        description: Performs the operation on the unique resource IDs specified.
          Enter multiple resource IDs in comma-separated format. The `ids` and `names`
          parameters cannot be provided together.
        required: false
        style: form
        explode: false
        schema:
          type: array
          items:
            type: string
      - name: names
        in: query
        description: "Performs the operation on the unique name specified. Enter multiple\
          \ names in comma-separated format. For example, `name01,name02`."
        required: false
        style: form
        explode: false
        schema:
          type: array
          items:
            type: string
      requestBody:
        $ref: '#/components/requestBodies/Policy2'
      responses:
        "200":
          description: OK
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/inline_response_200_104'
  /api/2.8/policies/snapshot/members:
    get:
      tags:
      - Policies
      summary: List snapshot policy members
      description: Displays a list of snapshot policy members.
      parameters:
      - name: Authorization
        in: header
        description: "Access token (in JWT format) required to use any API endpoint\
          \ (except `/oauth2`, `/login`, and `/logout`)"
        required: false
        style: simple
        explode: false
        schema:
          type: string
      - name: X-Request-ID
        in: header
        description: Supplied by client during request or generated by server.
        required: false
        style: simple
        explode: false
        schema:
          type: string
      - name: continuation_token
        in: query
        description: A token used to retrieve the next page of data with some consistency
          guaranteed. The token is a Base64 encoded value. Set `continuation_token`
          to the system-generated token taken from the `x-next-token` header field
          of the response. A query has reached its last page when the response does
          not include a token. Pagination requires the `limit` and `continuation_token`
          query parameters.
        required: false
        style: form
        explode: true
        schema:
          type: string
      - name: destroyed
        in: query
        description: "If set to `true`, lists only destroyed objects that are in the\
          \ eradication pending state. If set to `false`, lists only objects that\
          \ are not destroyed. For destroyed objects, the time remaining is displayed\
          \ in milliseconds."
        required: false
        style: form
        explode: true
        schema:
          type: boolean
      - name: filter
        in: query
        description: Narrows down the results to only the response objects that satisfy
          the filter criteria.
        required: false
        style: form
        explode: true
        schema:
          type: string
      - name: limit
        in: query
        description: "Limits the size of the response to the specified number of objects\
          \ on each page. To return the total number of resources, set `limit=0`.\
          \ The total number of resources is returned as a `total_item_count` value.\
          \ If the page size requested is larger than the system maximum limit, the\
          \ server returns the maximum limit, disregarding the requested page size."
        required: false
        style: form
        explode: true
        schema:
          minimum: 1
          type: integer
          format: int32
        example: 10
      - name: member_ids
        in: query
        description: Performs the operation on the unique member IDs specified. Enter
          multiple member IDs in comma-separated format. The `member_ids` and `member_names`
          parameters cannot be provided together.
        required: false
        style: form
        explode: false
        schema:
          type: array
          items:
            type: string
      - name: member_names
        in: query
        description: "Performs the operation on the unique member name specified.\
          \ Examples of members include volumes, hosts, host groups, and directories.\
          \ Enter multiple names in comma-separated format. For example, `vol01,vol02`."
        required: false
        style: form
        explode: false
        schema:
          type: array
          items:
            type: string
      - name: member_types
        in: query
        description: "Performs the operation on the member types specified. The type\
          \ of member is the full name of the resource endpoint. Valid values include\
          \ `directories`. Enter multiple member types in comma-separated format.\
          \ For example, `type01,type02`."
        required: false
        style: form
        explode: false
        schema:
          type: array
          items:
            type: string
      - name: policy_ids
        in: query
        description: Performs the operation on the unique policy IDs specified. Enter
          multiple policy IDs in comma-separated format. The `policy_ids` and `policy_names`
          parameters cannot be provided together.
        required: false
        style: form
        explode: false
        schema:
          type: array
          items:
            type: string
      - name: policy_names
        in: query
        description: "Performs the operation on the policy names specified. Enter\
          \ multiple policy names in comma-separated format. For example, `name01,name02`."
        required: false
        style: form
        explode: false
        schema:
          type: array
          items:
            type: string
      - name: offset
        in: query
        description: The starting position based on the results of the query in relation
          to the full set of response objects returned.
        required: false
        style: form
        explode: true
        schema:
          minimum: 0
          type: integer
          format: int32
        example: 10
      - name: sort
        in: query
        description: "Returns the response objects in the order specified. Set `sort`\
          \ to the name in the response by which to sort. Sorting can be performed\
          \ on any of the names in the response, and the objects can be sorted in\
          \ ascending or descending order. By default, the response objects are sorted\
          \ in ascending order. To sort in descending order, append the minus sign\
          \ (`-`) to the name. A single request can be sorted on multiple objects.\
          \ For example, you can sort all volumes from largest to smallest volume\
          \ size, and then sort volumes of the same size in ascending order by volume\
          \ name. To sort on multiple names, list the names as comma-separated values."
        required: false
        style: form
        explode: false
        schema:
          type: array
          items:
            pattern: "^[a-z]+(_[a-z]+)*-?"
            type: string
      - name: total_item_count
        in: query
        description: "If set to `true`, the `total_item_count` matching the specified\
          \ query parameters is calculated and returned in the response. If set to\
          \ `false`, the `total_item_count` is `null` in the response. This may speed\
          \ up queries where the `total_item_count` is large. If not specified, defaults\
          \ to `false`."
        required: false
        style: form
        explode: true
        schema:
          type: boolean
      responses:
        "200":
          description: OK
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/inline_response_200_47'
    post:
      tags:
      - Policies
      summary: Create snapshot policies
      description: "Creates a membership between one or more resources with a snapshot\
        \ policy. Applicable resources are directories. The `policy_ids` or `policy_names`\
        \ parameter is required, but cannot be set together."
      parameters:
      - name: Authorization
        in: header
        description: "Access token (in JWT format) required to use any API endpoint\
          \ (except `/oauth2`, `/login`, and `/logout`)"
        required: false
        style: simple
        explode: false
        schema:
          type: string
      - name: X-Request-ID
        in: header
        description: Supplied by client during request or generated by server.
        required: false
        style: simple
        explode: false
        schema:
          type: string
      - name: policy_ids
        in: query
        description: Performs the operation on the unique policy IDs specified. Enter
          multiple policy IDs in comma-separated format. The `policy_ids` and `policy_names`
          parameters cannot be provided together.
        required: false
        style: form
        explode: false
        schema:
          type: array
          items:
            type: string
      - name: policy_names
        in: query
        description: "Performs the operation on the policy names specified. Enter\
          \ multiple policy names in comma-separated format. For example, `name01,name02`."
        required: false
        style: form
        explode: false
        schema:
          type: array
          items:
            type: string
      requestBody:
        $ref: '#/components/requestBodies/Members2'
      responses:
        "200":
          description: OK
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/inline_response_200_50'
    delete:
      tags:
      - Policies
      summary: Delete snapshot policies
      description: "Deletes one or more snapshot policies from resources. The `policy_ids`\
        \ or `policy_names` parameter is required, but cannot be set together. The\
        \ `member_ids` or `member_names` parameter is required, but cannot be set\
        \ together."
      parameters:
      - name: Authorization
        in: header
        description: "Access token (in JWT format) required to use any API endpoint\
          \ (except `/oauth2`, `/login`, and `/logout`)"
        required: false
        style: simple
        explode: false
        schema:
          type: string
      - name: X-Request-ID
        in: header
        description: Supplied by client during request or generated by server.
        required: false
        style: simple
        explode: false
        schema:
          type: string
      - name: member_ids
        in: query
        description: Performs the operation on the unique member IDs specified. Enter
          multiple member IDs in comma-separated format. The `member_ids` and `member_names`
          parameters cannot be provided together.
        required: false
        style: form
        explode: false
        schema:
          type: array
          items:
            type: string
      - name: member_names
        in: query
        description: "Performs the operation on the unique member name specified.\
          \ Examples of members include volumes, hosts, host groups, and directories.\
          \ Enter multiple names in comma-separated format. For example, `vol01,vol02`."
        required: false
        style: form
        explode: false
        schema:
          type: array
          items:
            type: string
      - name: member_types
        in: query
        description: "Performs the operation on the member types specified. The type\
          \ of member is the full name of the resource endpoint. Valid values include\
          \ `directories`. Enter multiple member types in comma-separated format.\
          \ For example, `type01,type02`."
        required: false
        style: form
        explode: false
        schema:
          type: array
          items:
            type: string
      - name: policy_ids
        in: query
        description: Performs the operation on the unique policy IDs specified. Enter
          multiple policy IDs in comma-separated format. The `policy_ids` and `policy_names`
          parameters cannot be provided together.
        required: false
        style: form
        explode: false
        schema:
          type: array
          items:
            type: string
      - name: policy_names
        in: query
        description: "Performs the operation on the policy names specified. Enter\
          \ multiple policy names in comma-separated format. For example, `name01,name02`."
        required: false
        style: form
        explode: false
        schema:
          type: array
          items:
            type: string
      responses:
        "200":
          description: OK
  /api/2.8/policies/snapshot/rules:
    get:
      tags:
      - Policies
      summary: List snapshot policy rules
      description: Displays a list of snapshot policy rules.
      parameters:
      - name: Authorization
        in: header
        description: "Access token (in JWT format) required to use any API endpoint\
          \ (except `/oauth2`, `/login`, and `/logout`)"
        required: false
        style: simple
        explode: false
        schema:
          type: string
      - name: X-Request-ID
        in: header
        description: Supplied by client during request or generated by server.
        required: false
        style: simple
        explode: false
        schema:
          type: string
      - name: continuation_token
        in: query
        description: A token used to retrieve the next page of data with some consistency
          guaranteed. The token is a Base64 encoded value. Set `continuation_token`
          to the system-generated token taken from the `x-next-token` header field
          of the response. A query has reached its last page when the response does
          not include a token. Pagination requires the `limit` and `continuation_token`
          query parameters.
        required: false
        style: form
        explode: true
        schema:
          type: string
      - name: filter
        in: query
        description: Narrows down the results to only the response objects that satisfy
          the filter criteria.
        required: false
        style: form
        explode: true
        schema:
          type: string
      - name: limit
        in: query
        description: "Limits the size of the response to the specified number of objects\
          \ on each page. To return the total number of resources, set `limit=0`.\
          \ The total number of resources is returned as a `total_item_count` value.\
          \ If the page size requested is larger than the system maximum limit, the\
          \ server returns the maximum limit, disregarding the requested page size."
        required: false
        style: form
        explode: true
        schema:
          minimum: 1
          type: integer
          format: int32
        example: 10
      - name: names
        in: query
        description: "Performs the operation on the unique name specified. Enter multiple\
          \ names in comma-separated format. For example, `name01,name02`."
        required: false
        style: form
        explode: false
        schema:
          type: array
          items:
            type: string
      - name: offset
        in: query
        description: The starting position based on the results of the query in relation
          to the full set of response objects returned.
        required: false
        style: form
        explode: true
        schema:
          minimum: 0
          type: integer
          format: int32
        example: 10
      - name: policy_ids
        in: query
        description: Performs the operation on the unique policy IDs specified. Enter
          multiple policy IDs in comma-separated format. The `policy_ids` and `policy_names`
          parameters cannot be provided together.
        required: false
        style: form
        explode: false
        schema:
          type: array
          items:
            type: string
      - name: policy_names
        in: query
        description: "Performs the operation on the policy names specified. Enter\
          \ multiple policy names in comma-separated format. For example, `name01,name02`."
        required: false
        style: form
        explode: false
        schema:
          type: array
          items:
            type: string
      - name: sort
        in: query
        description: "Returns the response objects in the order specified. Set `sort`\
          \ to the name in the response by which to sort. Sorting can be performed\
          \ on any of the names in the response, and the objects can be sorted in\
          \ ascending or descending order. By default, the response objects are sorted\
          \ in ascending order. To sort in descending order, append the minus sign\
          \ (`-`) to the name. A single request can be sorted on multiple objects.\
          \ For example, you can sort all volumes from largest to smallest volume\
          \ size, and then sort volumes of the same size in ascending order by volume\
          \ name. To sort on multiple names, list the names as comma-separated values."
        required: false
        style: form
        explode: false
        schema:
          type: array
          items:
            pattern: "^[a-z]+(_[a-z]+)*-?"
            type: string
      - name: total_item_count
        in: query
        description: "If set to `true`, the `total_item_count` matching the specified\
          \ query parameters is calculated and returned in the response. If set to\
          \ `false`, the `total_item_count` is `null` in the response. This may speed\
          \ up queries where the `total_item_count` is large. If not specified, defaults\
          \ to `false`."
        required: false
        style: form
        explode: true
        schema:
          type: boolean
      responses:
        "200":
          description: OK
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/inline_response_200_113'
    post:
      tags:
      - Policies
      summary: Create snapshot policy rules
      description: "Creates one or more snapshot policy rules. The `policy_ids` or\
        \ `policy_names` parameter is required, but cannot be set together."
      parameters:
      - name: Authorization
        in: header
        description: "Access token (in JWT format) required to use any API endpoint\
          \ (except `/oauth2`, `/login`, and `/logout`)"
        required: false
        style: simple
        explode: false
        schema:
          type: string
      - name: X-Request-ID
        in: header
        description: Supplied by client during request or generated by server.
        required: false
        style: simple
        explode: false
        schema:
          type: string
      - name: policy_ids
        in: query
        description: Performs the operation on the unique policy IDs specified. Enter
          multiple policy IDs in comma-separated format. The `policy_ids` and `policy_names`
          parameters cannot be provided together.
        required: false
        style: form
        explode: false
        schema:
          type: array
          items:
            type: string
      - name: policy_names
        in: query
        description: "Performs the operation on the policy names specified. Enter\
          \ multiple policy names in comma-separated format. For example, `name01,name02`."
        required: false
        style: form
        explode: false
        schema:
          type: array
          items:
            type: string
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/snapshot_rules_body'
        required: true
      responses:
        "200":
          description: OK
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/inline_response_200_114'
    delete:
      tags:
      - Policies
      summary: Delete snapshot policy rules.
      description: "Deletes one or more snapshot policy rules. The `policy_ids` or\
        \ `policy_names` parameter is required, but they cannot be set together."
      parameters:
      - name: Authorization
        in: header
        description: "Access token (in JWT format) required to use any API endpoint\
          \ (except `/oauth2`, `/login`, and `/logout`)"
        required: false
        style: simple
        explode: false
        schema:
          type: string
      - name: X-Request-ID
        in: header
        description: Supplied by client during request or generated by server.
        required: false
        style: simple
        explode: false
        schema:
          type: string
      - name: names
        in: query
        description: "Performs the operation on the unique name specified. Enter multiple\
          \ names in comma-separated format. For example, `name01,name02`."
        required: false
        style: form
        explode: false
        schema:
          type: array
          items:
            type: string
      - name: policy_ids
        in: query
        description: Performs the operation on the unique policy IDs specified. Enter
          multiple policy IDs in comma-separated format. The `policy_ids` and `policy_names`
          parameters cannot be provided together.
        required: false
        style: form
        explode: false
        schema:
          type: array
          items:
            type: string
      - name: policy_names
        in: query
        description: "Performs the operation on the policy names specified. Enter\
          \ multiple policy names in comma-separated format. For example, `name01,name02`."
        required: false
        style: form
        explode: false
        schema:
          type: array
          items:
            type: string
      responses:
        "200":
          description: OK
  /api/2.8/ports:
    get:
      tags:
      - Ports
      summary: List ports
      description: "Displays host name, iSCSI Qualified Names (IQNs), NVMe Qualified\
        \ Names (NQNs), IPv4 address of the portal, Fibre Channel World Wide Names\
        \ (WWNs), and failover ports, including those that were discovered by Purity//FA\
        \ and those that have been manually assigned by system administrators."
      parameters:
      - name: Authorization
        in: header
        description: "Access token (in JWT format) required to use any API endpoint\
          \ (except `/oauth2`, `/login`, and `/logout`)"
        required: false
        style: simple
        explode: false
        schema:
          type: string
      - name: X-Request-ID
        in: header
        description: Supplied by client during request or generated by server.
        required: false
        style: simple
        explode: false
        schema:
          type: string
      - name: filter
        in: query
        description: Narrows down the results to only the response objects that satisfy
          the filter criteria.
        required: false
        style: form
        explode: true
        schema:
          type: string
      - name: limit
        in: query
        description: "Limits the size of the response to the specified number of objects\
          \ on each page. To return the total number of resources, set `limit=0`.\
          \ The total number of resources is returned as a `total_item_count` value.\
          \ If the page size requested is larger than the system maximum limit, the\
          \ server returns the maximum limit, disregarding the requested page size."
        required: false
        style: form
        explode: true
        schema:
          minimum: 1
          type: integer
          format: int32
        example: 10
      - name: names
        in: query
        description: "Performs the operation on the unique name specified. Enter multiple\
          \ names in comma-separated format. For example, `name01,name02`."
        required: false
        style: form
        explode: false
        schema:
          type: array
          items:
            type: string
      - name: offset
        in: query
        description: The starting position based on the results of the query in relation
          to the full set of response objects returned.
        required: false
        style: form
        explode: true
        schema:
          minimum: 0
          type: integer
          format: int32
        example: 10
      - name: sort
        in: query
        description: "Returns the response objects in the order specified. Set `sort`\
          \ to the name in the response by which to sort. Sorting can be performed\
          \ on any of the names in the response, and the objects can be sorted in\
          \ ascending or descending order. By default, the response objects are sorted\
          \ in ascending order. To sort in descending order, append the minus sign\
          \ (`-`) to the name. A single request can be sorted on multiple objects.\
          \ For example, you can sort all volumes from largest to smallest volume\
          \ size, and then sort volumes of the same size in ascending order by volume\
          \ name. To sort on multiple names, list the names as comma-separated values."
        required: false
        style: form
        explode: false
        schema:
          type: array
          items:
            pattern: "^[a-z]+(_[a-z]+)*-?"
            type: string
      - name: total_item_count
        in: query
        description: "If set to `true`, the `total_item_count` matching the specified\
          \ query parameters is calculated and returned in the response. If set to\
          \ `false`, the `total_item_count` is `null` in the response. This may speed\
          \ up queries where the `total_item_count` is large. If not specified, defaults\
          \ to `false`."
        required: false
        style: form
        explode: true
        schema:
          type: boolean
      responses:
        "200":
          description: OK
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/inline_response_200_115'
  /api/2.8/ports/initiators:
    get:
      tags:
      - Ports
      summary: List port initiators
      description: "Displays host iSCSI Qualified Names (IQNs), NVMe Qualified Names\
        \ (NQNs), and Fibre Channel World Wide Names (WWNs), including those that\
        \ were discovered by Purity//FA and those that have been manually assigned\
        \ by system administrators, along with the array ports (targets) on which\
        \ they are eligible to communicate."
      parameters:
      - name: Authorization
        in: header
        description: "Access token (in JWT format) required to use any API endpoint\
          \ (except `/oauth2`, `/login`, and `/logout`)"
        required: false
        style: simple
        explode: false
        schema:
          type: string
      - name: X-Request-ID
        in: header
        description: Supplied by client during request or generated by server.
        required: false
        style: simple
        explode: false
        schema:
          type: string
      - name: filter
        in: query
        description: Narrows down the results to only the response objects that satisfy
          the filter criteria.
        required: false
        style: form
        explode: true
        schema:
          type: string
      - name: limit
        in: query
        description: "Limits the size of the response to the specified number of objects\
          \ on each page. To return the total number of resources, set `limit=0`.\
          \ The total number of resources is returned as a `total_item_count` value.\
          \ If the page size requested is larger than the system maximum limit, the\
          \ server returns the maximum limit, disregarding the requested page size."
        required: false
        style: form
        explode: true
        schema:
          minimum: 1
          type: integer
          format: int32
        example: 10
      - name: names
        in: query
        description: "Performs the operation on the unique name specified. Enter multiple\
          \ names in comma-separated format. For example, `name01,name02`."
        required: false
        style: form
        explode: false
        schema:
          type: array
          items:
            type: string
      - name: offset
        in: query
        description: The starting position based on the results of the query in relation
          to the full set of response objects returned.
        required: false
        style: form
        explode: true
        schema:
          minimum: 0
          type: integer
          format: int32
        example: 10
      - name: sort
        in: query
        description: "Returns the response objects in the order specified. Set `sort`\
          \ to the name in the response by which to sort. Sorting can be performed\
          \ on any of the names in the response, and the objects can be sorted in\
          \ ascending or descending order. By default, the response objects are sorted\
          \ in ascending order. To sort in descending order, append the minus sign\
          \ (`-`) to the name. A single request can be sorted on multiple objects.\
          \ For example, you can sort all volumes from largest to smallest volume\
          \ size, and then sort volumes of the same size in ascending order by volume\
          \ name. To sort on multiple names, list the names as comma-separated values."
        required: false
        style: form
        explode: false
        schema:
          type: array
          items:
            pattern: "^[a-z]+(_[a-z]+)*-?"
            type: string
      - name: total_item_count
        in: query
        description: "If set to `true`, the `total_item_count` matching the specified\
          \ query parameters is calculated and returned in the response. If set to\
          \ `false`, the `total_item_count` is `null` in the response. This may speed\
          \ up queries where the `total_item_count` is large. If not specified, defaults\
          \ to `false`."
        required: false
        style: form
        explode: true
        schema:
          type: boolean
      responses:
        "200":
          description: OK
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/inline_response_200_116'
  /api/2.8/protection-groups:
    get:
      tags:
      - Protection Groups
      summary: List protection groups
      description: "Returns a list of protection groups, including their associated\
        \ source arrays, replication targets, hosts, host groups, and volumes. The\
        \ list includes protection groups that were created on the local array to\
        \ replicate snapshot data to other arrays or offload targets, created on a\
        \ remote array and replicated asynchronously to this array, or created inside\
        \ a pod on a remote array and stretched to the local array."
      parameters:
      - name: Authorization
        in: header
        description: "Access token (in JWT format) required to use any API endpoint\
          \ (except `/oauth2`, `/login`, and `/logout`)"
        required: false
        style: simple
        explode: false
        schema:
          type: string
      - name: X-Request-ID
        in: header
        description: Supplied by client during request or generated by server.
        required: false
        style: simple
        explode: false
        schema:
          type: string
      - name: continuation_token
        in: query
        description: A token used to retrieve the next page of data with some consistency
          guaranteed. The token is a Base64 encoded value. Set `continuation_token`
          to the system-generated token taken from the `x-next-token` header field
          of the response. A query has reached its last page when the response does
          not include a token. Pagination requires the `limit` and `continuation_token`
          query parameters.
        required: false
        style: form
        explode: true
        schema:
          type: string
      - name: destroyed
        in: query
        description: "If set to `true`, lists only destroyed objects that are in the\
          \ eradication pending state. If set to `false`, lists only objects that\
          \ are not destroyed. For destroyed objects, the time remaining is displayed\
          \ in milliseconds."
        required: false
        style: form
        explode: true
        schema:
          type: boolean
      - name: filter
        in: query
        description: Narrows down the results to only the response objects that satisfy
          the filter criteria.
        required: false
        style: form
        explode: true
        schema:
          type: string
      - name: limit
        in: query
        description: "Limits the size of the response to the specified number of objects\
          \ on each page. To return the total number of resources, set `limit=0`.\
          \ The total number of resources is returned as a `total_item_count` value.\
          \ If the page size requested is larger than the system maximum limit, the\
          \ server returns the maximum limit, disregarding the requested page size."
        required: false
        style: form
        explode: true
        schema:
          minimum: 1
          type: integer
          format: int32
        example: 10
      - name: names
        in: query
        description: "Performs the operation on the unique name specified. Enter multiple\
          \ names in comma-separated format. For example, `name01,name02`."
        required: false
        style: form
        explode: false
        schema:
          type: array
          items:
            type: string
      - name: offset
        in: query
        description: The starting position based on the results of the query in relation
          to the full set of response objects returned.
        required: false
        style: form
        explode: true
        schema:
          minimum: 0
          type: integer
          format: int32
        example: 10
      - name: sort
        in: query
        description: "Returns the response objects in the order specified. Set `sort`\
          \ to the name in the response by which to sort. Sorting can be performed\
          \ on any of the names in the response, and the objects can be sorted in\
          \ ascending or descending order. By default, the response objects are sorted\
          \ in ascending order. To sort in descending order, append the minus sign\
          \ (`-`) to the name. A single request can be sorted on multiple objects.\
          \ For example, you can sort all volumes from largest to smallest volume\
          \ size, and then sort volumes of the same size in ascending order by volume\
          \ name. To sort on multiple names, list the names as comma-separated values."
        required: false
        style: form
        explode: false
        schema:
          type: array
          items:
            pattern: "^[a-z]+(_[a-z]+)*-?"
            type: string
      - name: total_item_count
        in: query
        description: "If set to `true`, the `total_item_count` matching the specified\
          \ query parameters is calculated and returned in the response. If set to\
          \ `false`, the `total_item_count` is `null` in the response. This may speed\
          \ up queries where the `total_item_count` is large. If not specified, defaults\
          \ to `false`."
        required: false
        style: form
        explode: true
        schema:
          type: boolean
      - name: total_only
        in: query
        description: "If set to `true`, returns the aggregate value of all items after\
          \ filtering. Where it makes more sense, the average value is displayed instead.\
          \ The values are displayed for each name where meaningful. If `total_only=true`,\
          \ the `items` list will be empty."
        required: false
        style: form
        explode: true
        schema:
          type: boolean
      responses:
        "200":
          description: OK
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/inline_response_200_117'
    post:
      tags:
      - Protection Groups
      summary: Create a protection group
      description: Creates a protection group on the local array for asynchronous
        replication.
      parameters:
      - name: Authorization
        in: header
        description: "Access token (in JWT format) required to use any API endpoint\
          \ (except `/oauth2`, `/login`, and `/logout`)"
        required: false
        style: simple
        explode: false
        schema:
          type: string
      - name: X-Request-ID
        in: header
        description: Supplied by client during request or generated by server.
        required: false
        style: simple
        explode: false
        schema:
          type: string
      - name: names
        in: query
        description: "Performs the operation on the unique name specified. Enter multiple\
          \ names in comma-separated format. For example, `name01,name02`."
        required: false
        style: form
        explode: false
        schema:
          type: array
          items:
            type: string
      - name: source_names
        in: query
        description: "The name of the protection group or protection group snapshot\
          \ to be copied into a new or existing protection group. If the destination\
          \ protection group and all of its volumes already exist, include the `overwrite`\
          \ parameter to overwrite all of the existing volumes with the snapshot contents.\
          \ If including the `overwrite` parameter, the names of the volumes that\
          \ are being overwritten must match the names of the volumes that are being\
          \ restored. If the source is a protection group, the latest snapshot of\
          \ the protection group will be used as the source during the copy operation."
        required: false
        style: form
        explode: false
        schema:
          type: array
          items:
            type: string
      - name: overwrite
        in: query
        description: "If set to `true`, overwrites an existing volume during a volume\
          \ copy operation. If set to `false` or not set at all and the target name\
          \ is an existing volume, the volume copy operation fails. Required if the\
          \ `source: id` or `source: name` body parameter is set and the source overwrites\
          \ an existing volume during the volume copy operation."
        required: false
        style: form
        explode: true
        schema:
          type: boolean
      responses:
        "200":
          description: OK
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/inline_response_200_118'
    delete:
      tags:
      - Protection Groups
      summary: Eradicate a protection group
      description: "Eradicates a protection group that has been destroyed and is pending\
        \ eradication. Eradicated protection groups cannot be recovered. Protection\
        \ groups are destroyed through the PATCH method. The`ids` or `names` parameter\
        \ is required, but cannot be set together."
      parameters:
      - name: Authorization
        in: header
        description: "Access token (in JWT format) required to use any API endpoint\
          \ (except `/oauth2`, `/login`, and `/logout`)"
        required: false
        style: simple
        explode: false
        schema:
          type: string
      - name: X-Request-ID
        in: header
        description: Supplied by client during request or generated by server.
        required: false
        style: simple
        explode: false
        schema:
          type: string
      - name: names
        in: query
        description: "Performs the operation on the unique name specified. Enter multiple\
          \ names in comma-separated format. For example, `name01,name02`."
        required: false
        style: form
        explode: false
        schema:
          type: array
          items:
            type: string
      responses:
        "200":
          description: OK
    patch:
      tags:
      - Protection Groups
      summary: Manage a protection group
      description: Configures the protection group schedules to generate and replicate
        snapshots to another array or to an external storage system. Also renames
        or destroys a protection group.
      parameters:
      - name: Authorization
        in: header
        description: "Access token (in JWT format) required to use any API endpoint\
          \ (except `/oauth2`, `/login`, and `/logout`)"
        required: false
        style: simple
        explode: false
        schema:
          type: string
      - name: X-Request-ID
        in: header
        description: Supplied by client during request or generated by server.
        required: false
        style: simple
        explode: false
        schema:
          type: string
      - name: names
        in: query
        description: "Performs the operation on the unique name specified. Enter multiple\
          \ names in comma-separated format. For example, `name01,name02`."
        required: false
        style: form
        explode: false
        schema:
          type: array
          items:
            type: string
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/ProtectionGroup'
        required: true
      responses:
        "200":
          description: OK
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/inline_response_200_118'
  /api/2.8/protection-groups/hosts:
    get:
      tags:
      - Protection Groups
      summary: List protection groups with host members
      description: Returns a list of protection groups that have host members.
      parameters:
      - name: Authorization
        in: header
        description: "Access token (in JWT format) required to use any API endpoint\
          \ (except `/oauth2`, `/login`, and `/logout`)"
        required: false
        style: simple
        explode: false
        schema:
          type: string
      - name: X-Request-ID
        in: header
        description: Supplied by client during request or generated by server.
        required: false
        style: simple
        explode: false
        schema:
          type: string
      - name: continuation_token
        in: query
        description: A token used to retrieve the next page of data with some consistency
          guaranteed. The token is a Base64 encoded value. Set `continuation_token`
          to the system-generated token taken from the `x-next-token` header field
          of the response. A query has reached its last page when the response does
          not include a token. Pagination requires the `limit` and `continuation_token`
          query parameters.
        required: false
        style: form
        explode: true
        schema:
          type: string
      - name: filter
        in: query
        description: Narrows down the results to only the response objects that satisfy
          the filter criteria.
        required: false
        style: form
        explode: true
        schema:
          type: string
      - name: group_names
        in: query
        description: "Performs the operation on the unique group name specified. Examples\
          \ of groups include host groups, pods, protection groups, and volume groups.\
          \ Enter multiple names in comma-separated format. For example, `hgroup01,hgroup02`."
        required: false
        style: form
        explode: false
        schema:
          type: array
          items:
            type: string
      - name: limit
        in: query
        description: "Limits the size of the response to the specified number of objects\
          \ on each page. To return the total number of resources, set `limit=0`.\
          \ The total number of resources is returned as a `total_item_count` value.\
          \ If the page size requested is larger than the system maximum limit, the\
          \ server returns the maximum limit, disregarding the requested page size."
        required: false
        style: form
        explode: true
        schema:
          minimum: 1
          type: integer
          format: int32
        example: 10
      - name: member_names
        in: query
        description: "Performs the operation on the unique member name specified.\
          \ Examples of members include volumes, hosts, host groups, and directories.\
          \ Enter multiple names in comma-separated format. For example, `vol01,vol02`."
        required: false
        style: form
        explode: false
        schema:
          type: array
          items:
            type: string
      - name: offset
        in: query
        description: The starting position based on the results of the query in relation
          to the full set of response objects returned.
        required: false
        style: form
        explode: true
        schema:
          minimum: 0
          type: integer
          format: int32
        example: 10
      - name: sort
        in: query
        description: "Returns the response objects in the order specified. Set `sort`\
          \ to the name in the response by which to sort. Sorting can be performed\
          \ on any of the names in the response, and the objects can be sorted in\
          \ ascending or descending order. By default, the response objects are sorted\
          \ in ascending order. To sort in descending order, append the minus sign\
          \ (`-`) to the name. A single request can be sorted on multiple objects.\
          \ For example, you can sort all volumes from largest to smallest volume\
          \ size, and then sort volumes of the same size in ascending order by volume\
          \ name. To sort on multiple names, list the names as comma-separated values."
        required: false
        style: form
        explode: false
        schema:
          type: array
          items:
            pattern: "^[a-z]+(_[a-z]+)*-?"
            type: string
      - name: total_item_count
        in: query
        description: "If set to `true`, the `total_item_count` matching the specified\
          \ query parameters is calculated and returned in the response. If set to\
          \ `false`, the `total_item_count` is `null` in the response. This may speed\
          \ up queries where the `total_item_count` is large. If not specified, defaults\
          \ to `false`."
        required: false
        style: form
        explode: true
        schema:
          type: boolean
      responses:
        "200":
          description: OK
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/inline_response_200_72'
    post:
      tags:
      - Protection Groups
      summary: Add a host to a protection group
      description: "Adds a host member to a protection group. Members that are already\
        \ in the protection group are not affected. For asynchronous replication,\
        \ only members of the same type can belong to a protection group. The `group_names`\
        \ parameter represents the name of the protection group, and the `member_names`\
        \ parameter represents the name of the host. The `group_names` and `member_names`\
        \ parameters are required and must be set together."
      parameters:
      - name: Authorization
        in: header
        description: "Access token (in JWT format) required to use any API endpoint\
          \ (except `/oauth2`, `/login`, and `/logout`)"
        required: false
        style: simple
        explode: false
        schema:
          type: string
      - name: X-Request-ID
        in: header
        description: Supplied by client during request or generated by server.
        required: false
        style: simple
        explode: false
        schema:
          type: string
      - name: group_names
        in: query
        description: "Performs the operation on the unique group name specified. Examples\
          \ of groups include host groups, pods, protection groups, and volume groups.\
          \ Enter multiple names in comma-separated format. For example, `hgroup01,hgroup02`."
        required: false
        style: form
        explode: false
        schema:
          type: array
          items:
            type: string
      - name: member_names
        in: query
        description: "Performs the operation on the unique member name specified.\
          \ Examples of members include volumes, hosts, host groups, and directories.\
          \ Enter multiple names in comma-separated format. For example, `vol01,vol02`."
        required: false
        style: form
        explode: false
        schema:
          type: array
          items:
            type: string
      responses:
        "200":
          description: OK
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/inline_response_200_73'
    delete:
      tags:
      - Protection Groups
      summary: Remove a host from a protection group
      description: "Removes a host member from a protection group. After the member\
        \ has been removed, it is no longer protected by the group. Any protection\
        \ group snapshots that were taken before the member was removed will not be\
        \ affected. Removing a member from a protection group does not delete the\
        \ member from the array, and the member can be added back to the protection\
        \ group at any time. The `group_names` parameter represents the name of the\
        \ protection group, and the `member_names` parameter represents the name of\
        \ the host. The `group_names` and `member_names` parameters are required and\
        \ must be set together."
      parameters:
      - name: Authorization
        in: header
        description: "Access token (in JWT format) required to use any API endpoint\
          \ (except `/oauth2`, `/login`, and `/logout`)"
        required: false
        style: simple
        explode: false
        schema:
          type: string
      - name: X-Request-ID
        in: header
        description: Supplied by client during request or generated by server.
        required: false
        style: simple
        explode: false
        schema:
          type: string
      - name: group_names
        in: query
        description: "Performs the operation on the unique group name specified. Examples\
          \ of groups include host groups, pods, protection groups, and volume groups.\
          \ Enter multiple names in comma-separated format. For example, `hgroup01,hgroup02`."
        required: false
        style: form
        explode: false
        schema:
          type: array
          items:
            type: string
      - name: member_names
        in: query
        description: "Performs the operation on the unique member name specified.\
          \ Examples of members include volumes, hosts, host groups, and directories.\
          \ Enter multiple names in comma-separated format. For example, `vol01,vol02`."
        required: false
        style: form
        explode: false
        schema:
          type: array
          items:
            type: string
      responses:
        "200":
          description: OK
  /api/2.8/protection-groups/host-groups:
    get:
      tags:
      - Protection Groups
      summary: List protection groups with host group members
      description: Returns a list of protection groups that have host group members.
      parameters:
      - name: Authorization
        in: header
        description: "Access token (in JWT format) required to use any API endpoint\
          \ (except `/oauth2`, `/login`, and `/logout`)"
        required: false
        style: simple
        explode: false
        schema:
          type: string
      - name: X-Request-ID
        in: header
        description: Supplied by client during request or generated by server.
        required: false
        style: simple
        explode: false
        schema:
          type: string
      - name: continuation_token
        in: query
        description: A token used to retrieve the next page of data with some consistency
          guaranteed. The token is a Base64 encoded value. Set `continuation_token`
          to the system-generated token taken from the `x-next-token` header field
          of the response. A query has reached its last page when the response does
          not include a token. Pagination requires the `limit` and `continuation_token`
          query parameters.
        required: false
        style: form
        explode: true
        schema:
          type: string
      - name: filter
        in: query
        description: Narrows down the results to only the response objects that satisfy
          the filter criteria.
        required: false
        style: form
        explode: true
        schema:
          type: string
      - name: group_names
        in: query
        description: "Performs the operation on the unique group name specified. Examples\
          \ of groups include host groups, pods, protection groups, and volume groups.\
          \ Enter multiple names in comma-separated format. For example, `hgroup01,hgroup02`."
        required: false
        style: form
        explode: false
        schema:
          type: array
          items:
            type: string
      - name: limit
        in: query
        description: "Limits the size of the response to the specified number of objects\
          \ on each page. To return the total number of resources, set `limit=0`.\
          \ The total number of resources is returned as a `total_item_count` value.\
          \ If the page size requested is larger than the system maximum limit, the\
          \ server returns the maximum limit, disregarding the requested page size."
        required: false
        style: form
        explode: true
        schema:
          minimum: 1
          type: integer
          format: int32
        example: 10
      - name: member_names
        in: query
        description: "Performs the operation on the unique member name specified.\
          \ Examples of members include volumes, hosts, host groups, and directories.\
          \ Enter multiple names in comma-separated format. For example, `vol01,vol02`."
        required: false
        style: form
        explode: false
        schema:
          type: array
          items:
            type: string
      - name: offset
        in: query
        description: The starting position based on the results of the query in relation
          to the full set of response objects returned.
        required: false
        style: form
        explode: true
        schema:
          minimum: 0
          type: integer
          format: int32
        example: 10
      - name: sort
        in: query
        description: "Returns the response objects in the order specified. Set `sort`\
          \ to the name in the response by which to sort. Sorting can be performed\
          \ on any of the names in the response, and the objects can be sorted in\
          \ ascending or descending order. By default, the response objects are sorted\
          \ in ascending order. To sort in descending order, append the minus sign\
          \ (`-`) to the name. A single request can be sorted on multiple objects.\
          \ For example, you can sort all volumes from largest to smallest volume\
          \ size, and then sort volumes of the same size in ascending order by volume\
          \ name. To sort on multiple names, list the names as comma-separated values."
        required: false
        style: form
        explode: false
        schema:
          type: array
          items:
            pattern: "^[a-z]+(_[a-z]+)*-?"
            type: string
      - name: total_item_count
        in: query
        description: "If set to `true`, the `total_item_count` matching the specified\
          \ query parameters is calculated and returned in the response. If set to\
          \ `false`, the `total_item_count` is `null` in the response. This may speed\
          \ up queries where the `total_item_count` is large. If not specified, defaults\
          \ to `false`."
        required: false
        style: form
        explode: true
        schema:
          type: boolean
      responses:
        "200":
          description: OK
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/inline_response_200_72'
    post:
      tags:
      - Protection Groups
      summary: Add a host group to a protection group
      description: "Adds a host group member to a protection group. Members that are\
        \ already in the protection group are not affected. For asynchronous replication,\
        \ only members of the same type can belong to a protection group. The `group_names`\
        \ parameter represents the name of the protection group, and the `member_names`\
        \ parameter represents the name of the host group. The `group_names` and `member_names`\
        \ parameters are required and must be set together."
      parameters:
      - name: Authorization
        in: header
        description: "Access token (in JWT format) required to use any API endpoint\
          \ (except `/oauth2`, `/login`, and `/logout`)"
        required: false
        style: simple
        explode: false
        schema:
          type: string
      - name: X-Request-ID
        in: header
        description: Supplied by client during request or generated by server.
        required: false
        style: simple
        explode: false
        schema:
          type: string
      - name: group_names
        in: query
        description: "Performs the operation on the unique group name specified. Examples\
          \ of groups include host groups, pods, protection groups, and volume groups.\
          \ Enter multiple names in comma-separated format. For example, `hgroup01,hgroup02`."
        required: false
        style: form
        explode: false
        schema:
          type: array
          items:
            type: string
      - name: member_names
        in: query
        description: "Performs the operation on the unique member name specified.\
          \ Examples of members include volumes, hosts, host groups, and directories.\
          \ Enter multiple names in comma-separated format. For example, `vol01,vol02`."
        required: false
        style: form
        explode: false
        schema:
          type: array
          items:
            type: string
      responses:
        "200":
          description: OK
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/inline_response_200_73'
    delete:
      tags:
      - Protection Groups
      summary: Remove a host group from a protection group
      description: "Removes a host group member from a protection group. After the\
        \ member has been removed, it is no longer protected by the group. Any protection\
        \ group snapshots that were taken before the member was removed will not be\
        \ affected. Removing a member from a protection group does not delete the\
        \ member from the array, and the member can be added back to the protection\
        \ group at any time. The `group_names` parameter represents the name of the\
        \ protection group, and the `member_names` parameter represents the name of\
        \ the host group. The `group_names` and `member_names` parameters are required\
        \ and must be set together."
      parameters:
      - name: Authorization
        in: header
        description: "Access token (in JWT format) required to use any API endpoint\
          \ (except `/oauth2`, `/login`, and `/logout`)"
        required: false
        style: simple
        explode: false
        schema:
          type: string
      - name: X-Request-ID
        in: header
        description: Supplied by client during request or generated by server.
        required: false
        style: simple
        explode: false
        schema:
          type: string
      - name: group_names
        in: query
        description: "Performs the operation on the unique group name specified. Examples\
          \ of groups include host groups, pods, protection groups, and volume groups.\
          \ Enter multiple names in comma-separated format. For example, `hgroup01,hgroup02`."
        required: false
        style: form
        explode: false
        schema:
          type: array
          items:
            type: string
      - name: member_names
        in: query
        description: "Performs the operation on the unique member name specified.\
          \ Examples of members include volumes, hosts, host groups, and directories.\
          \ Enter multiple names in comma-separated format. For example, `vol01,vol02`."
        required: false
        style: form
        explode: false
        schema:
          type: array
          items:
            type: string
      responses:
        "200":
          description: OK
  /api/2.8/protection-groups/performance/replication:
    get:
      tags:
      - Protection Groups
      summary: List protection group replication performance data
      description: Returns the total number of bytes of replication data transmitted
        and received per second. The data is grouped by protection group.
      parameters:
      - name: names
        in: query
        description: "Performs the operation on the unique name specified. Enter multiple\
          \ names in comma-separated format. For example, `name01,name02`."
        required: false
        style: form
        explode: false
        schema:
          type: array
          items:
            type: string
      - name: Authorization
        in: header
        description: "Access token (in JWT format) required to use any API endpoint\
          \ (except `/oauth2`, `/login`, and `/logout`)"
        required: false
        style: simple
        explode: false
        schema:
          type: string
      - name: X-Request-ID
        in: header
        description: Supplied by client during request or generated by server.
        required: false
        style: simple
        explode: false
        schema:
          type: string
      - name: destroyed
        in: query
        description: "If set to `true`, lists only destroyed objects that are in the\
          \ eradication pending state. If set to `false`, lists only objects that\
          \ are not destroyed. For destroyed objects, the time remaining is displayed\
          \ in milliseconds."
        required: false
        style: form
        explode: true
        schema:
          type: boolean
      - name: filter
        in: query
        description: Narrows down the results to only the response objects that satisfy
          the filter criteria.
        required: false
        style: form
        explode: true
        schema:
          type: string
      - name: end_time
        in: query
        description: "Displays historical performance data for the specified time\
          \ window, where `start_time` is the beginning of the time window, and `end_time`\
          \ is the end of the time window. The `start_time` and `end_time` parameters\
          \ are specified in milliseconds since the UNIX epoch. If `start_time` is\
          \ not specified, the start time will default to one resolution before the\
          \ end time, meaning that the most recent sample of performance data will\
          \ be displayed. If `end_time`is not specified, the end time will default\
          \ to the current time. Include the `resolution` parameter to display the\
          \ performance data at the specified resolution. If not specified, `resolution`\
          \ defaults to the lowest valid resolution."
        required: false
        style: form
        explode: true
        schema:
          type: integer
          format: int64
      - name: resolution
        in: query
        description: "The number of milliseconds between samples of historical data.\
          \ For array-wide performance metrics (`/arrays/performance` endpoint), valid\
          \ values are `1000` (1 second), `30000` (30 seconds), `300000` (5 minutes),\
          \ `1800000` (30 minutes), `7200000` (2 hours), `28800000` (8 hours), and\
          \ `86400000` (24 hours). For performance metrics on storage objects (`<object\
          \ name>/performance` endpoint), such as volumes, valid values are `30000`\
          \ (30 seconds), `300000` (5 minutes), `1800000` (30 minutes), `7200000`\
          \ (2 hours), `28800000` (8 hours), and `86400000` (24 hours). For space\
          \ metrics, (`<object name>/space` endpoint), valid values are `300000` (5\
          \ minutes), `1800000` (30 minutes), `7200000` (2 hours), `28800000` (8 hours),\
          \ and `86400000` (24 hours). Include the `start_time` parameter to display\
          \ the performance data starting at the specified start time. If `start_time`\
          \ is not specified, the start time will default to one resolution before\
          \ the end time, meaning that the most recent sample of performance data\
          \ will be displayed. Include the `end_time` parameter to display the performance\
          \ data until the specified end time. If `end_time`is not specified, the\
          \ end time will default to the current time. If the `resolution` parameter\
          \ is not specified but either the `start_time` or `end_time` parameter is,\
          \ then `resolution` will default to the lowest valid resolution."
        required: false
        style: form
        explode: true
        schema:
          minimum: 0
          type: integer
          format: int64
        example: 30000
      - name: start_time
        in: query
        description: "Displays historical performance data for the specified time\
          \ window, where `start_time` is the beginning of the time window, and `end_time`\
          \ is the end of the time window. The `start_time` and `end_time` parameters\
          \ are specified in milliseconds since the UNIX epoch. If `start_time` is\
          \ not specified, the start time will default to one resolution before the\
          \ end time, meaning that the most recent sample of performance data will\
          \ be displayed. If `end_time`is not specified, the end time will default\
          \ to the current time. Include the `resolution` parameter to display the\
          \ performance data at the specified resolution. If not specified, `resolution`\
          \ defaults to the lowest valid resolution."
        required: false
        style: form
        explode: true
        schema:
          type: integer
          format: int64
      - name: limit
        in: query
        description: "Limits the size of the response to the specified number of objects\
          \ on each page. To return the total number of resources, set `limit=0`.\
          \ The total number of resources is returned as a `total_item_count` value.\
          \ If the page size requested is larger than the system maximum limit, the\
          \ server returns the maximum limit, disregarding the requested page size."
        required: false
        style: form
        explode: true
        schema:
          minimum: 1
          type: integer
          format: int32
        example: 10
      - name: offset
        in: query
        description: The starting position based on the results of the query in relation
          to the full set of response objects returned.
        required: false
        style: form
        explode: true
        schema:
          minimum: 0
          type: integer
          format: int32
        example: 10
      - name: sort
        in: query
        description: "Returns the response objects in the order specified. Set `sort`\
          \ to the name in the response by which to sort. Sorting can be performed\
          \ on any of the names in the response, and the objects can be sorted in\
          \ ascending or descending order. By default, the response objects are sorted\
          \ in ascending order. To sort in descending order, append the minus sign\
          \ (`-`) to the name. A single request can be sorted on multiple objects.\
          \ For example, you can sort all volumes from largest to smallest volume\
          \ size, and then sort volumes of the same size in ascending order by volume\
          \ name. To sort on multiple names, list the names as comma-separated values."
        required: false
        style: form
        explode: false
        schema:
          type: array
          items:
            pattern: "^[a-z]+(_[a-z]+)*-?"
            type: string
      - name: total_item_count
        in: query
        description: "If set to `true`, the `total_item_count` matching the specified\
          \ query parameters is calculated and returned in the response. If set to\
          \ `false`, the `total_item_count` is `null` in the response. This may speed\
          \ up queries where the `total_item_count` is large. If not specified, defaults\
          \ to `false`."
        required: false
        style: form
        explode: true
        schema:
          type: boolean
      responses:
        "200":
          description: OK
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/inline_response_200_119'
  /api/2.8/protection-groups/performance/replication/by-array:
    get:
      tags:
      - Protection Groups
      summary: List protection group replication performance data with array details
      description: Returns the total number of bytes of replication data transmitted
        and received per second. The data is grouped by protection group and includes
        the names of the source array and targets for each protection group.
      parameters:
      - name: names
        in: query
        description: "Performs the operation on the unique name specified. Enter multiple\
          \ names in comma-separated format. For example, `name01,name02`."
        required: false
        style: form
        explode: false
        schema:
          type: array
          items:
            type: string
      - name: Authorization
        in: header
        description: "Access token (in JWT format) required to use any API endpoint\
          \ (except `/oauth2`, `/login`, and `/logout`)"
        required: false
        style: simple
        explode: false
        schema:
          type: string
      - name: X-Request-ID
        in: header
        description: Supplied by client during request or generated by server.
        required: false
        style: simple
        explode: false
        schema:
          type: string
      - name: destroyed
        in: query
        description: "If set to `true`, lists only destroyed objects that are in the\
          \ eradication pending state. If set to `false`, lists only objects that\
          \ are not destroyed. For destroyed objects, the time remaining is displayed\
          \ in milliseconds."
        required: false
        style: form
        explode: true
        schema:
          type: boolean
      - name: filter
        in: query
        description: Narrows down the results to only the response objects that satisfy
          the filter criteria.
        required: false
        style: form
        explode: true
        schema:
          type: string
      - name: end_time
        in: query
        description: "Displays historical performance data for the specified time\
          \ window, where `start_time` is the beginning of the time window, and `end_time`\
          \ is the end of the time window. The `start_time` and `end_time` parameters\
          \ are specified in milliseconds since the UNIX epoch. If `start_time` is\
          \ not specified, the start time will default to one resolution before the\
          \ end time, meaning that the most recent sample of performance data will\
          \ be displayed. If `end_time`is not specified, the end time will default\
          \ to the current time. Include the `resolution` parameter to display the\
          \ performance data at the specified resolution. If not specified, `resolution`\
          \ defaults to the lowest valid resolution."
        required: false
        style: form
        explode: true
        schema:
          type: integer
          format: int64
      - name: resolution
        in: query
        description: "The number of milliseconds between samples of historical data.\
          \ For array-wide performance metrics (`/arrays/performance` endpoint), valid\
          \ values are `1000` (1 second), `30000` (30 seconds), `300000` (5 minutes),\
          \ `1800000` (30 minutes), `7200000` (2 hours), `28800000` (8 hours), and\
          \ `86400000` (24 hours). For performance metrics on storage objects (`<object\
          \ name>/performance` endpoint), such as volumes, valid values are `30000`\
          \ (30 seconds), `300000` (5 minutes), `1800000` (30 minutes), `7200000`\
          \ (2 hours), `28800000` (8 hours), and `86400000` (24 hours). For space\
          \ metrics, (`<object name>/space` endpoint), valid values are `300000` (5\
          \ minutes), `1800000` (30 minutes), `7200000` (2 hours), `28800000` (8 hours),\
          \ and `86400000` (24 hours). Include the `start_time` parameter to display\
          \ the performance data starting at the specified start time. If `start_time`\
          \ is not specified, the start time will default to one resolution before\
          \ the end time, meaning that the most recent sample of performance data\
          \ will be displayed. Include the `end_time` parameter to display the performance\
          \ data until the specified end time. If `end_time`is not specified, the\
          \ end time will default to the current time. If the `resolution` parameter\
          \ is not specified but either the `start_time` or `end_time` parameter is,\
          \ then `resolution` will default to the lowest valid resolution."
        required: false
        style: form
        explode: true
        schema:
          minimum: 0
          type: integer
          format: int64
        example: 30000
      - name: start_time
        in: query
        description: "Displays historical performance data for the specified time\
          \ window, where `start_time` is the beginning of the time window, and `end_time`\
          \ is the end of the time window. The `start_time` and `end_time` parameters\
          \ are specified in milliseconds since the UNIX epoch. If `start_time` is\
          \ not specified, the start time will default to one resolution before the\
          \ end time, meaning that the most recent sample of performance data will\
          \ be displayed. If `end_time`is not specified, the end time will default\
          \ to the current time. Include the `resolution` parameter to display the\
          \ performance data at the specified resolution. If not specified, `resolution`\
          \ defaults to the lowest valid resolution."
        required: false
        style: form
        explode: true
        schema:
          type: integer
          format: int64
      - name: limit
        in: query
        description: "Limits the size of the response to the specified number of objects\
          \ on each page. To return the total number of resources, set `limit=0`.\
          \ The total number of resources is returned as a `total_item_count` value.\
          \ If the page size requested is larger than the system maximum limit, the\
          \ server returns the maximum limit, disregarding the requested page size."
        required: false
        style: form
        explode: true
        schema:
          minimum: 1
          type: integer
          format: int32
        example: 10
      - name: offset
        in: query
        description: The starting position based on the results of the query in relation
          to the full set of response objects returned.
        required: false
        style: form
        explode: true
        schema:
          minimum: 0
          type: integer
          format: int32
        example: 10
      - name: sort
        in: query
        description: "Returns the response objects in the order specified. Set `sort`\
          \ to the name in the response by which to sort. Sorting can be performed\
          \ on any of the names in the response, and the objects can be sorted in\
          \ ascending or descending order. By default, the response objects are sorted\
          \ in ascending order. To sort in descending order, append the minus sign\
          \ (`-`) to the name. A single request can be sorted on multiple objects.\
          \ For example, you can sort all volumes from largest to smallest volume\
          \ size, and then sort volumes of the same size in ascending order by volume\
          \ name. To sort on multiple names, list the names as comma-separated values."
        required: false
        style: form
        explode: false
        schema:
          type: array
          items:
            pattern: "^[a-z]+(_[a-z]+)*-?"
            type: string
      - name: total_item_count
        in: query
        description: "If set to `true`, the `total_item_count` matching the specified\
          \ query parameters is calculated and returned in the response. If set to\
          \ `false`, the `total_item_count` is `null` in the response. This may speed\
          \ up queries where the `total_item_count` is large. If not specified, defaults\
          \ to `false`."
        required: false
        style: form
        explode: true
        schema:
          type: boolean
      responses:
        "200":
          description: OK
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/inline_response_200_120'
  /api/2.8/protection-groups/space:
    get:
      tags:
      - Protection Groups
      summary: List protection group space information
      description: Returns provisioned (virtual) size and physical storage consumption
        data for each protection group.
      parameters:
      - name: Authorization
        in: header
        description: "Access token (in JWT format) required to use any API endpoint\
          \ (except `/oauth2`, `/login`, and `/logout`)"
        required: false
        style: simple
        explode: false
        schema:
          type: string
      - name: X-Request-ID
        in: header
        description: Supplied by client during request or generated by server.
        required: false
        style: simple
        explode: false
        schema:
          type: string
      - name: destroyed
        in: query
        description: "If set to `true`, lists only destroyed objects that are in the\
          \ eradication pending state. If set to `false`, lists only objects that\
          \ are not destroyed. For destroyed objects, the time remaining is displayed\
          \ in milliseconds."
        required: false
        style: form
        explode: true
        schema:
          type: boolean
      - name: filter
        in: query
        description: Narrows down the results to only the response objects that satisfy
          the filter criteria.
        required: false
        style: form
        explode: true
        schema:
          type: string
      - name: limit
        in: query
        description: "Limits the size of the response to the specified number of objects\
          \ on each page. To return the total number of resources, set `limit=0`.\
          \ The total number of resources is returned as a `total_item_count` value.\
          \ If the page size requested is larger than the system maximum limit, the\
          \ server returns the maximum limit, disregarding the requested page size."
        required: false
        style: form
        explode: true
        schema:
          minimum: 1
          type: integer
          format: int32
        example: 10
      - name: names
        in: query
        description: "Performs the operation on the unique name specified. Enter multiple\
          \ names in comma-separated format. For example, `name01,name02`."
        required: false
        style: form
        explode: false
        schema:
          type: array
          items:
            type: string
      - name: offset
        in: query
        description: The starting position based on the results of the query in relation
          to the full set of response objects returned.
        required: false
        style: form
        explode: true
        schema:
          minimum: 0
          type: integer
          format: int32
        example: 10
      - name: sort
        in: query
        description: "Returns the response objects in the order specified. Set `sort`\
          \ to the name in the response by which to sort. Sorting can be performed\
          \ on any of the names in the response, and the objects can be sorted in\
          \ ascending or descending order. By default, the response objects are sorted\
          \ in ascending order. To sort in descending order, append the minus sign\
          \ (`-`) to the name. A single request can be sorted on multiple objects.\
          \ For example, you can sort all volumes from largest to smallest volume\
          \ size, and then sort volumes of the same size in ascending order by volume\
          \ name. To sort on multiple names, list the names as comma-separated values."
        required: false
        style: form
        explode: false
        schema:
          type: array
          items:
            pattern: "^[a-z]+(_[a-z]+)*-?"
            type: string
      - name: total_item_count
        in: query
        description: "If set to `true`, the `total_item_count` matching the specified\
          \ query parameters is calculated and returned in the response. If set to\
          \ `false`, the `total_item_count` is `null` in the response. This may speed\
          \ up queries where the `total_item_count` is large. If not specified, defaults\
          \ to `false`."
        required: false
        style: form
        explode: true
        schema:
          type: boolean
      responses:
        "200":
          description: OK
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/inline_response_200_76'
  /api/2.8/protection-groups/targets:
    get:
      tags:
      - Protection Groups
      summary: List protection groups with targets
      description: Returns a list of protection groups that have target arrays or
        offload targets.
      parameters:
      - name: Authorization
        in: header
        description: "Access token (in JWT format) required to use any API endpoint\
          \ (except `/oauth2`, `/login`, and `/logout`)"
        required: false
        style: simple
        explode: false
        schema:
          type: string
      - name: X-Request-ID
        in: header
        description: Supplied by client during request or generated by server.
        required: false
        style: simple
        explode: false
        schema:
          type: string
      - name: continuation_token
        in: query
        description: A token used to retrieve the next page of data with some consistency
          guaranteed. The token is a Base64 encoded value. Set `continuation_token`
          to the system-generated token taken from the `x-next-token` header field
          of the response. A query has reached its last page when the response does
          not include a token. Pagination requires the `limit` and `continuation_token`
          query parameters.
        required: false
        style: form
        explode: true
        schema:
          type: string
      - name: filter
        in: query
        description: Narrows down the results to only the response objects that satisfy
          the filter criteria.
        required: false
        style: form
        explode: true
        schema:
          type: string
      - name: group_names
        in: query
        description: "Performs the operation on the unique group name specified. Examples\
          \ of groups include host groups, pods, protection groups, and volume groups.\
          \ Enter multiple names in comma-separated format. For example, `hgroup01,hgroup02`."
        required: false
        style: form
        explode: false
        schema:
          type: array
          items:
            type: string
      - name: limit
        in: query
        description: "Limits the size of the response to the specified number of objects\
          \ on each page. To return the total number of resources, set `limit=0`.\
          \ The total number of resources is returned as a `total_item_count` value.\
          \ If the page size requested is larger than the system maximum limit, the\
          \ server returns the maximum limit, disregarding the requested page size."
        required: false
        style: form
        explode: true
        schema:
          minimum: 1
          type: integer
          format: int32
        example: 10
      - name: member_names
        in: query
        description: "Performs the operation on the unique member name specified.\
          \ Examples of members include volumes, hosts, host groups, and directories.\
          \ Enter multiple names in comma-separated format. For example, `vol01,vol02`."
        required: false
        style: form
        explode: false
        schema:
          type: array
          items:
            type: string
      - name: offset
        in: query
        description: The starting position based on the results of the query in relation
          to the full set of response objects returned.
        required: false
        style: form
        explode: true
        schema:
          minimum: 0
          type: integer
          format: int32
        example: 10
      - name: sort
        in: query
        description: "Returns the response objects in the order specified. Set `sort`\
          \ to the name in the response by which to sort. Sorting can be performed\
          \ on any of the names in the response, and the objects can be sorted in\
          \ ascending or descending order. By default, the response objects are sorted\
          \ in ascending order. To sort in descending order, append the minus sign\
          \ (`-`) to the name. A single request can be sorted on multiple objects.\
          \ For example, you can sort all volumes from largest to smallest volume\
          \ size, and then sort volumes of the same size in ascending order by volume\
          \ name. To sort on multiple names, list the names as comma-separated values."
        required: false
        style: form
        explode: false
        schema:
          type: array
          items:
            pattern: "^[a-z]+(_[a-z]+)*-?"
            type: string
      - name: total_item_count
        in: query
        description: "If set to `true`, the `total_item_count` matching the specified\
          \ query parameters is calculated and returned in the response. If set to\
          \ `false`, the `total_item_count` is `null` in the response. This may speed\
          \ up queries where the `total_item_count` is large. If not specified, defaults\
          \ to `false`."
        required: false
        style: form
        explode: true
        schema:
          type: boolean
      responses:
        "200":
          description: OK
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/inline_response_200_121'
    post:
      tags:
      - Protection Groups
      summary: Add a target to a protection group
      description: Adds an array or offload target to a protection group. The `group_names`
        parameter represents the name of the protection group. The `member_names`
        parameter represents the name of the array or offload target that is being
        added to the protection group. The `group_names` and `member_names` parameters
        are required and must be set together.
      parameters:
      - name: Authorization
        in: header
        description: "Access token (in JWT format) required to use any API endpoint\
          \ (except `/oauth2`, `/login`, and `/logout`)"
        required: false
        style: simple
        explode: false
        schema:
          type: string
      - name: X-Request-ID
        in: header
        description: Supplied by client during request or generated by server.
        required: false
        style: simple
        explode: false
        schema:
          type: string
      - name: group_names
        in: query
        description: "Performs the operation on the unique group name specified. Examples\
          \ of groups include host groups, pods, protection groups, and volume groups.\
          \ Enter multiple names in comma-separated format. For example, `hgroup01,hgroup02`."
        required: false
        style: form
        explode: false
        schema:
          type: array
          items:
            type: string
      - name: member_names
        in: query
        description: "Performs the operation on the unique member name specified.\
          \ Examples of members include volumes, hosts, host groups, and directories.\
          \ Enter multiple names in comma-separated format. For example, `vol01,vol02`."
        required: false
        style: form
        explode: false
        schema:
          type: array
          items:
            type: string
      responses:
        "200":
          description: OK
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/inline_response_200_122'
    delete:
      tags:
      - Protection Groups
      summary: Removes a target from a protection group
      description: Removes an array or offload target from a protection group. The
        `group_names` parameter represents the name of the protection group. The `member_names`
        parameter represents the name of the array or offload target that is being
        removed from the protection group. The `group_names` and `member_names` parameters
        are required and must be set together.
      parameters:
      - name: Authorization
        in: header
        description: "Access token (in JWT format) required to use any API endpoint\
          \ (except `/oauth2`, `/login`, and `/logout`)"
        required: false
        style: simple
        explode: false
        schema:
          type: string
      - name: X-Request-ID
        in: header
        description: Supplied by client during request or generated by server.
        required: false
        style: simple
        explode: false
        schema:
          type: string
      - name: group_names
        in: query
        description: "Performs the operation on the unique group name specified. Examples\
          \ of groups include host groups, pods, protection groups, and volume groups.\
          \ Enter multiple names in comma-separated format. For example, `hgroup01,hgroup02`."
        required: false
        style: form
        explode: false
        schema:
          type: array
          items:
            type: string
      - name: member_names
        in: query
        description: "Performs the operation on the unique member name specified.\
          \ Examples of members include volumes, hosts, host groups, and directories.\
          \ Enter multiple names in comma-separated format. For example, `vol01,vol02`."
        required: false
        style: form
        explode: false
        schema:
          type: array
          items:
            type: string
      responses:
        "200":
          description: OK
    patch:
      tags:
      - Protection Groups
      summary: Manage a protection group target
      description: "Allows the source array to replicate protection group data to\
        \ the target array, or disallows the source array from replicating protection\
        \ group data to the target array. The `allowed` parameter must be set from\
        \ the target array. The `group_names` parameter represents the name of the\
        \ protection group. The `allowed` and `group_names` parameters are required\
        \ and must be set together. Offload targets do not support the `allowed` parameter."
      parameters:
      - name: Authorization
        in: header
        description: "Access token (in JWT format) required to use any API endpoint\
          \ (except `/oauth2`, `/login`, and `/logout`)"
        required: false
        style: simple
        explode: false
        schema:
          type: string
      - name: X-Request-ID
        in: header
        description: Supplied by client during request or generated by server.
        required: false
        style: simple
        explode: false
        schema:
          type: string
      - name: group_names
        in: query
        description: "Performs the operation on the unique group name specified. Examples\
          \ of groups include host groups, pods, protection groups, and volume groups.\
          \ Enter multiple names in comma-separated format. For example, `hgroup01,hgroup02`."
        required: false
        style: form
        explode: false
        schema:
          type: array
          items:
            type: string
      - name: member_names
        in: query
        description: "Performs the operation on the unique member name specified.\
          \ Examples of members include volumes, hosts, host groups, and directories.\
          \ Enter multiple names in comma-separated format. For example, `vol01,vol02`."
        required: false
        style: form
        explode: false
        schema:
          type: array
          items:
            type: string
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/protectiongroups_targets_body'
        required: true
      responses:
        "200":
          description: OK
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/inline_response_200_122'
  /api/2.8/protection-groups/volumes:
    get:
      tags:
      - Protection Groups
      summary: List protection groups with volume members
      description: Returns a list of protection groups that have volume members.
      parameters:
      - name: Authorization
        in: header
        description: "Access token (in JWT format) required to use any API endpoint\
          \ (except `/oauth2`, `/login`, and `/logout`)"
        required: false
        style: simple
        explode: false
        schema:
          type: string
      - name: X-Request-ID
        in: header
        description: Supplied by client during request or generated by server.
        required: false
        style: simple
        explode: false
        schema:
          type: string
      - name: continuation_token
        in: query
        description: A token used to retrieve the next page of data with some consistency
          guaranteed. The token is a Base64 encoded value. Set `continuation_token`
          to the system-generated token taken from the `x-next-token` header field
          of the response. A query has reached its last page when the response does
          not include a token. Pagination requires the `limit` and `continuation_token`
          query parameters.
        required: false
        style: form
        explode: true
        schema:
          type: string
      - name: filter
        in: query
        description: Narrows down the results to only the response objects that satisfy
          the filter criteria.
        required: false
        style: form
        explode: true
        schema:
          type: string
      - name: group_names
        in: query
        description: "Performs the operation on the unique group name specified. Examples\
          \ of groups include host groups, pods, protection groups, and volume groups.\
          \ Enter multiple names in comma-separated format. For example, `hgroup01,hgroup02`."
        required: false
        style: form
        explode: false
        schema:
          type: array
          items:
            type: string
      - name: limit
        in: query
        description: "Limits the size of the response to the specified number of objects\
          \ on each page. To return the total number of resources, set `limit=0`.\
          \ The total number of resources is returned as a `total_item_count` value.\
          \ If the page size requested is larger than the system maximum limit, the\
          \ server returns the maximum limit, disregarding the requested page size."
        required: false
        style: form
        explode: true
        schema:
          minimum: 1
          type: integer
          format: int32
        example: 10
      - name: member_names
        in: query
        description: "Performs the operation on the unique member name specified.\
          \ Examples of members include volumes, hosts, host groups, and directories.\
          \ Enter multiple names in comma-separated format. For example, `vol01,vol02`."
        required: false
        style: form
        explode: false
        schema:
          type: array
          items:
            type: string
      - name: offset
        in: query
        description: The starting position based on the results of the query in relation
          to the full set of response objects returned.
        required: false
        style: form
        explode: true
        schema:
          minimum: 0
          type: integer
          format: int32
        example: 10
      - name: sort
        in: query
        description: "Returns the response objects in the order specified. Set `sort`\
          \ to the name in the response by which to sort. Sorting can be performed\
          \ on any of the names in the response, and the objects can be sorted in\
          \ ascending or descending order. By default, the response objects are sorted\
          \ in ascending order. To sort in descending order, append the minus sign\
          \ (`-`) to the name. A single request can be sorted on multiple objects.\
          \ For example, you can sort all volumes from largest to smallest volume\
          \ size, and then sort volumes of the same size in ascending order by volume\
          \ name. To sort on multiple names, list the names as comma-separated values."
        required: false
        style: form
        explode: false
        schema:
          type: array
          items:
            pattern: "^[a-z]+(_[a-z]+)*-?"
            type: string
      - name: total_item_count
        in: query
        description: "If set to `true`, the `total_item_count` matching the specified\
          \ query parameters is calculated and returned in the response. If set to\
          \ `false`, the `total_item_count` is `null` in the response. This may speed\
          \ up queries where the `total_item_count` is large. If not specified, defaults\
          \ to `false`."
        required: false
        style: form
        explode: true
        schema:
          type: boolean
      responses:
        "200":
          description: OK
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/inline_response_200_72'
    post:
      tags:
      - Protection Groups
      summary: Add a volume to a protection group
      description: "Adds a volume member to a protection group. Members that are already\
        \ in the protection group are not affected. For asynchronous replication,\
        \ only members of the same type can belong to a protection group. The `group_names`\
        \ parameter represents the name of the protection group, and the `member_names`\
        \ parameter represents the name of the volume. The `group_names` and `member_names`\
        \ parameters are required and must be set together."
      parameters:
      - name: Authorization
        in: header
        description: "Access token (in JWT format) required to use any API endpoint\
          \ (except `/oauth2`, `/login`, and `/logout`)"
        required: false
        style: simple
        explode: false
        schema:
          type: string
      - name: X-Request-ID
        in: header
        description: Supplied by client during request or generated by server.
        required: false
        style: simple
        explode: false
        schema:
          type: string
      - name: group_names
        in: query
        description: "Performs the operation on the unique group name specified. Examples\
          \ of groups include host groups, pods, protection groups, and volume groups.\
          \ Enter multiple names in comma-separated format. For example, `hgroup01,hgroup02`."
        required: false
        style: form
        explode: false
        schema:
          type: array
          items:
            type: string
      - name: member_names
        in: query
        description: "Performs the operation on the unique member name specified.\
          \ Examples of members include volumes, hosts, host groups, and directories.\
          \ Enter multiple names in comma-separated format. For example, `vol01,vol02`."
        required: false
        style: form
        explode: false
        schema:
          type: array
          items:
            type: string
      responses:
        "200":
          description: OK
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/inline_response_200_73'
    delete:
      tags:
      - Protection Groups
      summary: Remove a volume from a protection group
      description: "Removes a volume member from a protection group. After the member\
        \ has been removed, it is no longer protected by the group. Any protection\
        \ group snapshots that were taken before the member was removed will not be\
        \ affected. Removing a member from a protection group does not delete the\
        \ member from the array, and the member can be added back to the protection\
        \ group at any time. The `group_names` parameter represents the name of the\
        \ protection group, and the `member_names` parameter represents the name of\
        \ the volume. The `group_names` and `member_names` parameters are required\
        \ and must be set together."
      parameters:
      - name: Authorization
        in: header
        description: "Access token (in JWT format) required to use any API endpoint\
          \ (except `/oauth2`, `/login`, and `/logout`)"
        required: false
        style: simple
        explode: false
        schema:
          type: string
      - name: X-Request-ID
        in: header
        description: Supplied by client during request or generated by server.
        required: false
        style: simple
        explode: false
        schema:
          type: string
      - name: group_names
        in: query
        description: "Performs the operation on the unique group name specified. Examples\
          \ of groups include host groups, pods, protection groups, and volume groups.\
          \ Enter multiple names in comma-separated format. For example, `hgroup01,hgroup02`."
        required: false
        style: form
        explode: false
        schema:
          type: array
          items:
            type: string
      - name: member_names
        in: query
        description: "Performs the operation on the unique member name specified.\
          \ Examples of members include volumes, hosts, host groups, and directories.\
          \ Enter multiple names in comma-separated format. For example, `vol01,vol02`."
        required: false
        style: form
        explode: false
        schema:
          type: array
          items:
            type: string
      responses:
        "200":
          description: OK
  /api/2.8/protection-group-snapshots:
    get:
      tags:
      - Protection Group Snapshots
      summary: List protection group snapshots
      description: "Displays a list of protection group snapshots, including those\
        \ pending eradication."
      parameters:
      - name: Authorization
        in: header
        description: "Access token (in JWT format) required to use any API endpoint\
          \ (except `/oauth2`, `/login`, and `/logout`)"
        required: false
        style: simple
        explode: false
        schema:
          type: string
      - name: X-Request-ID
        in: header
        description: Supplied by client during request or generated by server.
        required: false
        style: simple
        explode: false
        schema:
          type: string
      - name: continuation_token
        in: query
        description: A token used to retrieve the next page of data with some consistency
          guaranteed. The token is a Base64 encoded value. Set `continuation_token`
          to the system-generated token taken from the `x-next-token` header field
          of the response. A query has reached its last page when the response does
          not include a token. Pagination requires the `limit` and `continuation_token`
          query parameters.
        required: false
        style: form
        explode: true
        schema:
          type: string
      - name: destroyed
        in: query
        description: "If set to `true`, lists only destroyed objects that are in the\
          \ eradication pending state. If set to `false`, lists only objects that\
          \ are not destroyed. For destroyed objects, the time remaining is displayed\
          \ in milliseconds."
        required: false
        style: form
        explode: true
        schema:
          type: boolean
      - name: filter
        in: query
        description: Narrows down the results to only the response objects that satisfy
          the filter criteria.
        required: false
        style: form
        explode: true
        schema:
          type: string
      - name: limit
        in: query
        description: "Limits the size of the response to the specified number of objects\
          \ on each page. To return the total number of resources, set `limit=0`.\
          \ The total number of resources is returned as a `total_item_count` value.\
          \ If the page size requested is larger than the system maximum limit, the\
          \ server returns the maximum limit, disregarding the requested page size."
        required: false
        style: form
        explode: true
        schema:
          minimum: 1
          type: integer
          format: int32
        example: 10
      - name: names
        in: query
        description: "Performs the operation on the unique name specified. Enter multiple\
          \ names in comma-separated format. For example, `name01,name02`."
        required: false
        style: form
        explode: false
        schema:
          type: array
          items:
            type: string
      - name: offset
        in: query
        description: The starting position based on the results of the query in relation
          to the full set of response objects returned.
        required: false
        style: form
        explode: true
        schema:
          minimum: 0
          type: integer
          format: int32
        example: 10
      - name: sort
        in: query
        description: "Returns the response objects in the order specified. Set `sort`\
          \ to the name in the response by which to sort. Sorting can be performed\
          \ on any of the names in the response, and the objects can be sorted in\
          \ ascending or descending order. By default, the response objects are sorted\
          \ in ascending order. To sort in descending order, append the minus sign\
          \ (`-`) to the name. A single request can be sorted on multiple objects.\
          \ For example, you can sort all volumes from largest to smallest volume\
          \ size, and then sort volumes of the same size in ascending order by volume\
          \ name. To sort on multiple names, list the names as comma-separated values."
        required: false
        style: form
        explode: false
        schema:
          type: array
          items:
            pattern: "^[a-z]+(_[a-z]+)*-?"
            type: string
      - name: source_names
        in: query
        description: "Performs the operation on the source name specified. Enter multiple\
          \ source names in comma-separated format. For example, `name01,name02`."
        required: false
        style: form
        explode: false
        schema:
          type: array
          items:
            type: string
      - name: total_item_count
        in: query
        description: "If set to `true`, the `total_item_count` matching the specified\
          \ query parameters is calculated and returned in the response. If set to\
          \ `false`, the `total_item_count` is `null` in the response. This may speed\
          \ up queries where the `total_item_count` is large. If not specified, defaults\
          \ to `false`."
        required: false
        style: form
        explode: true
        schema:
          type: boolean
      - name: total_only
        in: query
        description: "If set to `true`, returns the aggregate value of all items after\
          \ filtering. Where it makes more sense, the average value is displayed instead.\
          \ The values are displayed for each name where meaningful. If `total_only=true`,\
          \ the `items` list will be empty."
        required: false
        style: form
        explode: true
        schema:
          type: boolean
      responses:
        "200":
          description: OK
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/inline_response_200_123'
    post:
      tags:
      - Protection Group Snapshots
      summary: Create a protection group snapshot
      description: "Creates a point-in-time snapshot of the contents of a protection\
        \ group. The `source_ids` or `source_names` parameter is required, but cannot\
        \ be set together."
      parameters:
      - name: Authorization
        in: header
        description: "Access token (in JWT format) required to use any API endpoint\
          \ (except `/oauth2`, `/login`, and `/logout`)"
        required: false
        style: simple
        explode: false
        schema:
          type: string
      - name: X-Request-ID
        in: header
        description: Supplied by client during request or generated by server.
        required: false
        style: simple
        explode: false
        schema:
          type: string
      - name: apply_retention
        in: query
        description: "If `true`, applies the local and remote retention policy to\
          \ the snapshots."
        required: false
        style: form
        explode: true
        schema:
          type: boolean
      - name: for_replication
        in: query
        description: "If `true`, destroys and eradicates the snapshot after 1 hour."
        required: false
        style: form
        explode: true
        schema:
          type: boolean
      - name: replicate
        in: query
        description: "If set to `true`, queues up and begins replicating to each allowed\
          \ target after all earlier replication sessions for the same protection\
          \ group have been completed to that target. The `replicate` and `replicate_now`\
          \ parameters cannot be used together."
        required: false
        style: form
        explode: true
        schema:
          type: boolean
      - name: replicate_now
        in: query
        description: "If set to `true`, replicates the snapshots to each allowed target.\
          \ The `replicate` and `replicate_now` parameters cannot be used together."
        required: false
        style: form
        explode: true
        schema:
          type: boolean
      - name: source_names
        in: query
        description: "Performs the operation on the source name specified. Enter multiple\
          \ source names in comma-separated format. For example, `name01,name02`."
        required: false
        style: form
        explode: false
        schema:
          type: array
          items:
            type: string
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/2_8_protectiongroupsnapshots_body'
      responses:
        "200":
          description: OK
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/inline_response_200_124'
    delete:
      tags:
      - Protection Group Snapshots
      summary: Delete a protection group snapshot
      description: "Deletes a protection group snapshot that has been destroyed and\
        \ is pending eradication. Eradicating a protection group snapshot eradicates\
        \ all of its protection group snapshots. Eradicated protection group snapshots\
        \ cannot be recovered. Protection group snapshots are destroyed through the\
        \ `PATCH` method. The `ids` or `names` parameter is required, but cannot be\
        \ set together."
      parameters:
      - name: Authorization
        in: header
        description: "Access token (in JWT format) required to use any API endpoint\
          \ (except `/oauth2`, `/login`, and `/logout`)"
        required: false
        style: simple
        explode: false
        schema:
          type: string
      - name: X-Request-ID
        in: header
        description: Supplied by client during request or generated by server.
        required: false
        style: simple
        explode: false
        schema:
          type: string
      - name: names
        in: query
        description: "Performs the operation on the unique name specified. Enter multiple\
          \ names in comma-separated format. For example, `name01,name02`."
        required: false
        style: form
        explode: false
        schema:
          type: array
          items:
            type: string
      responses:
        "200":
          description: OK
    patch:
      tags:
      - Protection Group Snapshots
      summary: Modify a protection group snapshot
      description: "Modifies a protection group snapshot so that it can be destroyed.\
        \ To destroy a volume, set `destroyed=true`. To recover a volume that has\
        \ been destroyed and is pending eradication, set `destroyed=false`. The `names`\
        \ parameter is required."
      parameters:
      - name: Authorization
        in: header
        description: "Access token (in JWT format) required to use any API endpoint\
          \ (except `/oauth2`, `/login`, and `/logout`)"
        required: false
        style: simple
        explode: false
        schema:
          type: string
      - name: X-Request-ID
        in: header
        description: Supplied by client during request or generated by server.
        required: false
        style: simple
        explode: false
        schema:
          type: string
      - name: names
        in: query
        description: "Performs the operation on the unique name specified. Enter multiple\
          \ names in comma-separated format. For example, `name01,name02`."
        required: false
        style: form
        explode: false
        schema:
          type: array
          items:
            type: string
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/2_8_protectiongroupsnapshots_body_1'
        required: true
      responses:
        "200":
          description: OK
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/inline_response_200_124'
  /api/2.8/protection-group-snapshots/transfer:
    get:
      tags:
      - Protection Group Snapshots
      summary: List protection group snapshots with transfer statistics
      description: Returns a list of protection group snapshots and their transfer
        statistics.
      parameters:
      - name: Authorization
        in: header
        description: "Access token (in JWT format) required to use any API endpoint\
          \ (except `/oauth2`, `/login`, and `/logout`)"
        required: false
        style: simple
        explode: false
        schema:
          type: string
      - name: X-Request-ID
        in: header
        description: Supplied by client during request or generated by server.
        required: false
        style: simple
        explode: false
        schema:
          type: string
      - name: destroyed
        in: query
        description: "If set to `true`, lists only destroyed objects that are in the\
          \ eradication pending state. If set to `false`, lists only objects that\
          \ are not destroyed. For destroyed objects, the time remaining is displayed\
          \ in milliseconds."
        required: false
        style: form
        explode: true
        schema:
          type: boolean
      - name: filter
        in: query
        description: Narrows down the results to only the response objects that satisfy
          the filter criteria.
        required: false
        style: form
        explode: true
        schema:
          type: string
      - name: limit
        in: query
        description: "Limits the size of the response to the specified number of objects\
          \ on each page. To return the total number of resources, set `limit=0`.\
          \ The total number of resources is returned as a `total_item_count` value.\
          \ If the page size requested is larger than the system maximum limit, the\
          \ server returns the maximum limit, disregarding the requested page size."
        required: false
        style: form
        explode: true
        schema:
          minimum: 1
          type: integer
          format: int32
        example: 10
      - name: names
        in: query
        description: "Performs the operation on the unique name specified. Enter multiple\
          \ names in comma-separated format. For example, `name01,name02`."
        required: false
        style: form
        explode: false
        schema:
          type: array
          items:
            type: string
      - name: offset
        in: query
        description: The starting position based on the results of the query in relation
          to the full set of response objects returned.
        required: false
        style: form
        explode: true
        schema:
          minimum: 0
          type: integer
          format: int32
        example: 10
      - name: sort
        in: query
        description: "Returns the response objects in the order specified. Set `sort`\
          \ to the name in the response by which to sort. Sorting can be performed\
          \ on any of the names in the response, and the objects can be sorted in\
          \ ascending or descending order. By default, the response objects are sorted\
          \ in ascending order. To sort in descending order, append the minus sign\
          \ (`-`) to the name. A single request can be sorted on multiple objects.\
          \ For example, you can sort all volumes from largest to smallest volume\
          \ size, and then sort volumes of the same size in ascending order by volume\
          \ name. To sort on multiple names, list the names as comma-separated values."
        required: false
        style: form
        explode: false
        schema:
          type: array
          items:
            pattern: "^[a-z]+(_[a-z]+)*-?"
            type: string
      - name: source_names
        in: query
        description: "Performs the operation on the source name specified. Enter multiple\
          \ source names in comma-separated format. For example, `name01,name02`."
        required: false
        style: form
        explode: false
        schema:
          type: array
          items:
            type: string
      - name: total_item_count
        in: query
        description: "If set to `true`, the `total_item_count` matching the specified\
          \ query parameters is calculated and returned in the response. If set to\
          \ `false`, the `total_item_count` is `null` in the response. This may speed\
          \ up queries where the `total_item_count` is large. If not specified, defaults\
          \ to `false`."
        required: false
        style: form
        explode: true
        schema:
          type: boolean
      - name: total_only
        in: query
        description: "If set to `true`, returns the aggregate value of all items after\
          \ filtering. Where it makes more sense, the average value is displayed instead.\
          \ The values are displayed for each name where meaningful. If `total_only=true`,\
          \ the `items` list will be empty."
        required: false
        style: form
        explode: true
        schema:
          type: boolean
      responses:
        "200":
          description: OK
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/inline_response_200_125'
  /api/2.8/remote-pods:
    get:
      tags:
      - Remote Pods
      summary: List remote pods
      description: Returns a list of pods that that are on connected arrays but not
        stretched to this array.
      parameters:
      - name: Authorization
        in: header
        description: "Access token (in JWT format) required to use any API endpoint\
          \ (except `/oauth2`, `/login`, and `/logout`)"
        required: false
        style: simple
        explode: false
        schema:
          type: string
      - name: X-Request-ID
        in: header
        description: Supplied by client during request or generated by server.
        required: false
        style: simple
        explode: false
        schema:
          type: string
      - name: filter
        in: query
        description: Narrows down the results to only the response objects that satisfy
          the filter criteria.
        required: false
        style: form
        explode: true
        schema:
          type: string
      - name: ids
        in: query
        description: Performs the operation on the unique resource IDs specified.
          Enter multiple resource IDs in comma-separated format. The `ids` and `names`
          parameters cannot be provided together.
        required: false
        style: form
        explode: false
        schema:
          type: array
          items:
            type: string
      - name: limit
        in: query
        description: "Limits the size of the response to the specified number of objects\
          \ on each page. To return the total number of resources, set `limit=0`.\
          \ The total number of resources is returned as a `total_item_count` value.\
          \ If the page size requested is larger than the system maximum limit, the\
          \ server returns the maximum limit, disregarding the requested page size."
        required: false
        style: form
        explode: true
        schema:
          minimum: 1
          type: integer
          format: int32
        example: 10
      - name: names
        in: query
        description: "Performs the operation on the unique name specified. Enter multiple\
          \ names in comma-separated format. For example, `name01,name02`."
        required: false
        style: form
        explode: false
        schema:
          type: array
          items:
            type: string
      - name: offset
        in: query
        description: The starting position based on the results of the query in relation
          to the full set of response objects returned.
        required: false
        style: form
        explode: true
        schema:
          minimum: 0
          type: integer
          format: int32
        example: 10
      - name: "on"
        in: query
        description: "Performs the operation on the target name specified. Enter multiple\
          \ target names in comma-separated format. For example, `targetName01,targetName02`."
        required: false
        style: form
        explode: false
        schema:
          type: array
          items:
            type: string
      - name: sort
        in: query
        description: "Returns the response objects in the order specified. Set `sort`\
          \ to the name in the response by which to sort. Sorting can be performed\
          \ on any of the names in the response, and the objects can be sorted in\
          \ ascending or descending order. By default, the response objects are sorted\
          \ in ascending order. To sort in descending order, append the minus sign\
          \ (`-`) to the name. A single request can be sorted on multiple objects.\
          \ For example, you can sort all volumes from largest to smallest volume\
          \ size, and then sort volumes of the same size in ascending order by volume\
          \ name. To sort on multiple names, list the names as comma-separated values."
        required: false
        style: form
        explode: false
        schema:
          type: array
          items:
            pattern: "^[a-z]+(_[a-z]+)*-?"
            type: string
      - name: total_item_count
        in: query
        description: "If set to `true`, the `total_item_count` matching the specified\
          \ query parameters is calculated and returned in the response. If set to\
          \ `false`, the `total_item_count` is `null` in the response. This may speed\
          \ up queries where the `total_item_count` is large. If not specified, defaults\
          \ to `false`."
        required: false
        style: form
        explode: true
        schema:
          type: boolean
      responses:
        "200":
          description: OK
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/inline_response_200_126'
  /api/2.8/remote-protection-groups:
    get:
      tags:
      - Remote Protection Groups
      summary: List remote protection groups
      description: Returns a list of remote protection groups.
      parameters:
      - name: Authorization
        in: header
        description: "Access token (in JWT format) required to use any API endpoint\
          \ (except `/oauth2`, `/login`, and `/logout`)"
        required: false
        style: simple
        explode: false
        schema:
          type: string
      - name: X-Request-ID
        in: header
        description: Supplied by client during request or generated by server.
        required: false
        style: simple
        explode: false
        schema:
          type: string
      - name: destroyed
        in: query
        description: "If set to `true`, lists only destroyed objects that are in the\
          \ eradication pending state. If set to `false`, lists only objects that\
          \ are not destroyed. For destroyed objects, the time remaining is displayed\
          \ in milliseconds."
        required: false
        style: form
        explode: true
        schema:
          type: boolean
      - name: filter
        in: query
        description: Narrows down the results to only the response objects that satisfy
          the filter criteria.
        required: false
        style: form
        explode: true
        schema:
          type: string
      - name: ids
        in: query
        description: Performs the operation on the unique resource IDs specified.
          Enter multiple resource IDs in comma-separated format. The `ids` and `names`
          parameters cannot be provided together.
        required: false
        style: form
        explode: false
        schema:
          type: array
          items:
            type: string
      - name: limit
        in: query
        description: "Limits the size of the response to the specified number of objects\
          \ on each page. To return the total number of resources, set `limit=0`.\
          \ The total number of resources is returned as a `total_item_count` value.\
          \ If the page size requested is larger than the system maximum limit, the\
          \ server returns the maximum limit, disregarding the requested page size."
        required: false
        style: form
        explode: true
        schema:
          minimum: 1
          type: integer
          format: int32
        example: 10
      - name: names
        in: query
        description: "Performs the operation on the unique name specified. Enter multiple\
          \ names in comma-separated format. For example, `name01,name02`."
        required: false
        style: form
        explode: false
        schema:
          type: array
          items:
            type: string
      - name: offset
        in: query
        description: The starting position based on the results of the query in relation
          to the full set of response objects returned.
        required: false
        style: form
        explode: true
        schema:
          minimum: 0
          type: integer
          format: int32
        example: 10
      - name: "on"
        in: query
        description: "Performs the operation on the target name specified. Enter multiple\
          \ target names in comma-separated format. For example, `targetName01,targetName02`."
        required: false
        style: form
        explode: false
        schema:
          type: array
          items:
            type: string
      - name: sort
        in: query
        description: "Returns the response objects in the order specified. Set `sort`\
          \ to the name in the response by which to sort. Sorting can be performed\
          \ on any of the names in the response, and the objects can be sorted in\
          \ ascending or descending order. By default, the response objects are sorted\
          \ in ascending order. To sort in descending order, append the minus sign\
          \ (`-`) to the name. A single request can be sorted on multiple objects.\
          \ For example, you can sort all volumes from largest to smallest volume\
          \ size, and then sort volumes of the same size in ascending order by volume\
          \ name. To sort on multiple names, list the names as comma-separated values."
        required: false
        style: form
        explode: false
        schema:
          type: array
          items:
            pattern: "^[a-z]+(_[a-z]+)*-?"
            type: string
      - name: total_item_count
        in: query
        description: "If set to `true`, the `total_item_count` matching the specified\
          \ query parameters is calculated and returned in the response. If set to\
          \ `false`, the `total_item_count` is `null` in the response. This may speed\
          \ up queries where the `total_item_count` is large. If not specified, defaults\
          \ to `false`."
        required: false
        style: form
        explode: true
        schema:
          type: boolean
      responses:
        "200":
          description: OK
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/inline_response_200_127'
    delete:
      tags:
      - Remote Protection Groups
      summary: Eradicate a remote protection group
      description: Eradicates a remote protection group that has been destroyed and
        is pending eradication. Eradicated remote protection groups cannot be recovered.
        Remote protection groups are destroyed through the `PATCH` method. The `on`
        parameter represents the name of the offload target. The `ids` or `names`
        parameter and the `on` parameter are required and must be used together.
      parameters:
      - name: Authorization
        in: header
        description: "Access token (in JWT format) required to use any API endpoint\
          \ (except `/oauth2`, `/login`, and `/logout`)"
        required: false
        style: simple
        explode: false
        schema:
          type: string
      - name: X-Request-ID
        in: header
        description: Supplied by client during request or generated by server.
        required: false
        style: simple
        explode: false
        schema:
          type: string
      - name: ids
        in: query
        description: Performs the operation on the unique resource IDs specified.
          Enter multiple resource IDs in comma-separated format. The `ids` and `names`
          parameters cannot be provided together.
        required: false
        style: form
        explode: false
        schema:
          type: array
          items:
            type: string
      - name: names
        in: query
        description: "Performs the operation on the unique name specified. Enter multiple\
          \ names in comma-separated format. For example, `name01,name02`."
        required: false
        style: form
        explode: false
        schema:
          type: array
          items:
            type: string
      - name: "on"
        in: query
        description: "Performs the operation on the target name specified. For example,\
          \ `targetName01`."
        required: false
        style: form
        explode: true
        schema:
          type: string
      responses:
        "200":
          description: OK
    patch:
      tags:
      - Remote Protection Groups
      summary: Manage a remote protection group
      description: "Configures the snapshot retention schedule of a remote protection\
        \ group. Also destroys a remote protection group from the offload target.\
        \ Before the remote protection group can be destroyed, the offload target\
        \ must first be removed from the protection group via the source array. The\
        \ `on` parameter represents the name of the offload target. The `ids` or `names`\
        \ parameter and the `on` parameter are required and must be used together."
      parameters:
      - name: Authorization
        in: header
        description: "Access token (in JWT format) required to use any API endpoint\
          \ (except `/oauth2`, `/login`, and `/logout`)"
        required: false
        style: simple
        explode: false
        schema:
          type: string
      - name: X-Request-ID
        in: header
        description: Supplied by client during request or generated by server.
        required: false
        style: simple
        explode: false
        schema:
          type: string
      - name: ids
        in: query
        description: Performs the operation on the unique resource IDs specified.
          Enter multiple resource IDs in comma-separated format. The `ids` and `names`
          parameters cannot be provided together.
        required: false
        style: form
        explode: false
        schema:
          type: array
          items:
            type: string
      - name: names
        in: query
        description: "Performs the operation on the unique name specified. Enter multiple\
          \ names in comma-separated format. For example, `name01,name02`."
        required: false
        style: form
        explode: false
        schema:
          type: array
          items:
            type: string
      - name: "on"
        in: query
        description: "Performs the operation on the target name specified. For example,\
          \ `targetName01`."
        required: false
        style: form
        explode: true
        schema:
          type: string
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/RemoteProtectionGroup'
        required: true
      responses:
        "200":
          description: OK
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/inline_response_200_128'
  /api/2.8/remote-protection-group-snapshots:
    get:
      tags:
      - Remote Protection Group Snapshots
      summary: List remote protection group snapshots
      description: Displays a list of remote protection group snapshots.
      parameters:
      - name: Authorization
        in: header
        description: "Access token (in JWT format) required to use any API endpoint\
          \ (except `/oauth2`, `/login`, and `/logout`)"
        required: false
        style: simple
        explode: false
        schema:
          type: string
      - name: X-Request-ID
        in: header
        description: Supplied by client during request or generated by server.
        required: false
        style: simple
        explode: false
        schema:
          type: string
      - name: destroyed
        in: query
        description: "If set to `true`, lists only destroyed objects that are in the\
          \ eradication pending state. If set to `false`, lists only objects that\
          \ are not destroyed. For destroyed objects, the time remaining is displayed\
          \ in milliseconds."
        required: false
        style: form
        explode: true
        schema:
          type: boolean
      - name: filter
        in: query
        description: Narrows down the results to only the response objects that satisfy
          the filter criteria.
        required: false
        style: form
        explode: true
        schema:
          type: string
      - name: limit
        in: query
        description: "Limits the size of the response to the specified number of objects\
          \ on each page. To return the total number of resources, set `limit=0`.\
          \ The total number of resources is returned as a `total_item_count` value.\
          \ If the page size requested is larger than the system maximum limit, the\
          \ server returns the maximum limit, disregarding the requested page size."
        required: false
        style: form
        explode: true
        schema:
          minimum: 1
          type: integer
          format: int32
        example: 10
      - name: names
        in: query
        description: "Performs the operation on the unique name specified. Enter multiple\
          \ names in comma-separated format. For example, `name01,name02`."
        required: false
        style: form
        explode: false
        schema:
          type: array
          items:
            type: string
      - name: offset
        in: query
        description: The starting position based on the results of the query in relation
          to the full set of response objects returned.
        required: false
        style: form
        explode: true
        schema:
          minimum: 0
          type: integer
          format: int32
        example: 10
      - name: "on"
        in: query
        description: "Performs the operation on the target name specified. Enter multiple\
          \ target names in comma-separated format. For example, `targetName01,targetName02`."
        required: false
        style: form
        explode: false
        schema:
          type: array
          items:
            type: string
      - name: sort
        in: query
        description: "Returns the response objects in the order specified. Set `sort`\
          \ to the name in the response by which to sort. Sorting can be performed\
          \ on any of the names in the response, and the objects can be sorted in\
          \ ascending or descending order. By default, the response objects are sorted\
          \ in ascending order. To sort in descending order, append the minus sign\
          \ (`-`) to the name. A single request can be sorted on multiple objects.\
          \ For example, you can sort all volumes from largest to smallest volume\
          \ size, and then sort volumes of the same size in ascending order by volume\
          \ name. To sort on multiple names, list the names as comma-separated values."
        required: false
        style: form
        explode: false
        schema:
          type: array
          items:
            pattern: "^[a-z]+(_[a-z]+)*-?"
            type: string
      - name: source_names
        in: query
        description: "Performs the operation on the source name specified. Enter multiple\
          \ source names in comma-separated format. For example, `name01,name02`."
        required: false
        style: form
        explode: false
        schema:
          type: array
          items:
            type: string
      - name: total_item_count
        in: query
        description: "If set to `true`, the `total_item_count` matching the specified\
          \ query parameters is calculated and returned in the response. If set to\
          \ `false`, the `total_item_count` is `null` in the response. This may speed\
          \ up queries where the `total_item_count` is large. If not specified, defaults\
          \ to `false`."
        required: false
        style: form
        explode: true
        schema:
          type: boolean
      responses:
        "200":
          description: OK
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/inline_response_200_129'
    post:
      tags:
      - Remote Protection Group Snapshots
      summary: Create remote protection group snapshot
      description: Creates remote protection group snapshots.
      parameters:
      - name: Authorization
        in: header
        description: "Access token (in JWT format) required to use any API endpoint\
          \ (except `/oauth2`, `/login`, and `/logout`)"
        required: false
        style: simple
        explode: false
        schema:
          type: string
      - name: X-Request-ID
        in: header
        description: Supplied by client during request or generated by server.
        required: false
        style: simple
        explode: false
        schema:
          type: string
      - name: apply_retention
        in: query
        description: "If `true`, applies the local and remote retention policy to\
          \ the snapshots."
        required: false
        style: form
        explode: true
        schema:
          type: boolean
      - name: convert_source_to_baseline
        in: query
        description: Set to `true` to have the snapshot be eradicated when it is no
          longer baseline on source.
        required: false
        style: form
        explode: true
        schema:
          type: boolean
      - name: for_replication
        in: query
        description: "If `true`, destroys and eradicates the snapshot after 1 hour."
        required: false
        style: form
        explode: true
        schema:
          type: boolean
      - name: names
        in: query
        description: "Performs the operation on the unique name specified. Enter multiple\
          \ names in comma-separated format. For example, `name01,name02`."
        required: false
        style: form
        explode: false
        schema:
          type: array
          items:
            type: string
      - name: replicate
        in: query
        description: "If set to `true`, queues up and begins replicating to each allowed\
          \ target after all earlier replication sessions for the same protection\
          \ group have been completed to that target. The `replicate` and `replicate_now`\
          \ parameters cannot be used together."
        required: false
        style: form
        explode: true
        schema:
          type: boolean
      - name: replicate_now
        in: query
        description: "If set to `true`, replicates the snapshots to each allowed target.\
          \ The `replicate` and `replicate_now` parameters cannot be used together."
        required: false
        style: form
        explode: true
        schema:
          type: boolean
      - name: source_names
        in: query
        description: "Performs the operation on the source name specified. Enter multiple\
          \ source names in comma-separated format. For example, `name01,name02`."
        required: false
        style: form
        explode: false
        schema:
          type: array
          items:
            type: string
      - name: "on"
        in: query
        description: "Performs the operation on the target name specified. For example,\
          \ `targetName01`."
        required: false
        style: form
        explode: true
        schema:
          type: string
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/2_8_remoteprotectiongroupsnapshots_body'
      responses:
        "200":
          description: OK
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/inline_response_200_130'
    delete:
      tags:
      - Remote Protection Group Snapshots
      summary: Delete a remote protection group snapshot
      description: Deletes a remote protection group snapshot that has been destroyed
        and is pending eradication. Eradicated remote protection group snapshots cannot
        be recovered. Remote protection group snapshots are destroyed using the `PATCH`
        method. The `names` parameter represents the name of the protection group
        snapshot. The `on` parameter represents the name of the offload target. The
        `names` and `on` parameters are required and must be used together.
      parameters:
      - name: Authorization
        in: header
        description: "Access token (in JWT format) required to use any API endpoint\
          \ (except `/oauth2`, `/login`, and `/logout`)"
        required: false
        style: simple
        explode: false
        schema:
          type: string
      - name: X-Request-ID
        in: header
        description: Supplied by client during request or generated by server.
        required: false
        style: simple
        explode: false
        schema:
          type: string
      - name: names
        in: query
        description: "Performs the operation on the unique name specified. Enter multiple\
          \ names in comma-separated format. For example, `name01,name02`."
        required: false
        style: form
        explode: false
        schema:
          type: array
          items:
            type: string
      - name: "on"
        in: query
        description: "Performs the operation on the target name specified. For example,\
          \ `targetName01`."
        required: false
        style: form
        explode: true
        schema:
          type: string
      responses:
        "200":
          description: OK
    patch:
      tags:
      - Remote Protection Group Snapshots
      summary: Modify a remote protection group snapshot
      description: "Modifies a remote protection group snapshot, removing it from\
        \ the offload target and destroying the snapshot. The `on` parameter represents\
        \ the name of the offload target. The `ids` or `names` parameter and the `on`\
        \ parameter are required and must be used together."
      parameters:
      - name: Authorization
        in: header
        description: "Access token (in JWT format) required to use any API endpoint\
          \ (except `/oauth2`, `/login`, and `/logout`)"
        required: false
        style: simple
        explode: false
        schema:
          type: string
      - name: X-Request-ID
        in: header
        description: Supplied by client during request or generated by server.
        required: false
        style: simple
        explode: false
        schema:
          type: string
      - name: names
        in: query
        description: "Performs the operation on the unique name specified. Enter multiple\
          \ names in comma-separated format. For example, `name01,name02`."
        required: false
        style: form
        explode: false
        schema:
          type: array
          items:
            type: string
      - name: "on"
        in: query
        description: "Performs the operation on the target name specified. For example,\
          \ `targetName01`."
        required: false
        style: form
        explode: true
        schema:
          type: string
      requestBody:
        $ref: '#/components/requestBodies/RemoteProtectionGroupSnapshot'
      responses:
        "200":
          description: OK
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/inline_response_200_130'
  /api/2.8/remote-protection-group-snapshots/transfer:
    get:
      tags:
      - Remote Protection Group Snapshots
      summary: List remote protection groups with transfer statistics
      description: Returns a list of remote protection groups and their transfer statistics.
      parameters:
      - name: names
        in: query
        description: "Performs the operation on the unique name specified. Enter multiple\
          \ names in comma-separated format. For example, `name01,name02`."
        required: false
        style: form
        explode: false
        schema:
          type: array
          items:
            type: string
      - name: Authorization
        in: header
        description: "Access token (in JWT format) required to use any API endpoint\
          \ (except `/oauth2`, `/login`, and `/logout`)"
        required: false
        style: simple
        explode: false
        schema:
          type: string
      - name: X-Request-ID
        in: header
        description: Supplied by client during request or generated by server.
        required: false
        style: simple
        explode: false
        schema:
          type: string
      - name: destroyed
        in: query
        description: "If set to `true`, lists only destroyed objects that are in the\
          \ eradication pending state. If set to `false`, lists only objects that\
          \ are not destroyed. For destroyed objects, the time remaining is displayed\
          \ in milliseconds."
        required: false
        style: form
        explode: true
        schema:
          type: boolean
      - name: filter
        in: query
        description: Narrows down the results to only the response objects that satisfy
          the filter criteria.
        required: false
        style: form
        explode: true
        schema:
          type: string
      - name: limit
        in: query
        description: "Limits the size of the response to the specified number of objects\
          \ on each page. To return the total number of resources, set `limit=0`.\
          \ The total number of resources is returned as a `total_item_count` value.\
          \ If the page size requested is larger than the system maximum limit, the\
          \ server returns the maximum limit, disregarding the requested page size."
        required: false
        style: form
        explode: true
        schema:
          minimum: 1
          type: integer
          format: int32
        example: 10
      - name: offset
        in: query
        description: The starting position based on the results of the query in relation
          to the full set of response objects returned.
        required: false
        style: form
        explode: true
        schema:
          minimum: 0
          type: integer
          format: int32
        example: 10
      - name: "on"
        in: query
        description: "Performs the operation on the target name specified. Enter multiple\
          \ target names in comma-separated format. For example, `targetName01,targetName02`."
        required: false
        style: form
        explode: false
        schema:
          type: array
          items:
            type: string
      - name: sort
        in: query
        description: "Returns the response objects in the order specified. Set `sort`\
          \ to the name in the response by which to sort. Sorting can be performed\
          \ on any of the names in the response, and the objects can be sorted in\
          \ ascending or descending order. By default, the response objects are sorted\
          \ in ascending order. To sort in descending order, append the minus sign\
          \ (`-`) to the name. A single request can be sorted on multiple objects.\
          \ For example, you can sort all volumes from largest to smallest volume\
          \ size, and then sort volumes of the same size in ascending order by volume\
          \ name. To sort on multiple names, list the names as comma-separated values."
        required: false
        style: form
        explode: false
        schema:
          type: array
          items:
            pattern: "^[a-z]+(_[a-z]+)*-?"
            type: string
      - name: source_names
        in: query
        description: "Performs the operation on the source name specified. Enter multiple\
          \ source names in comma-separated format. For example, `name01,name02`."
        required: false
        style: form
        explode: false
        schema:
          type: array
          items:
            type: string
      - name: total_item_count
        in: query
        description: "If set to `true`, the `total_item_count` matching the specified\
          \ query parameters is calculated and returned in the response. If set to\
          \ `false`, the `total_item_count` is `null` in the response. This may speed\
          \ up queries where the `total_item_count` is large. If not specified, defaults\
          \ to `false`."
        required: false
        style: form
        explode: true
        schema:
          type: boolean
      - name: total_only
        in: query
        description: "If set to `true`, returns the aggregate value of all items after\
          \ filtering. Where it makes more sense, the average value is displayed instead.\
          \ The values are displayed for each name where meaningful. If `total_only=true`,\
          \ the `items` list will be empty."
        required: false
        style: form
        explode: true
        schema:
          type: boolean
      responses:
        "200":
          description: OK
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/inline_response_200_131'
  /api/2.8/remote-volume-snapshots:
    get:
      tags:
      - Remote Volume Snapshots
      summary: List remote volume snapshots
      description: Displays a list of remote volume snapshots.
      parameters:
      - name: Authorization
        in: header
        description: "Access token (in JWT format) required to use any API endpoint\
          \ (except `/oauth2`, `/login`, and `/logout`)"
        required: false
        style: simple
        explode: false
        schema:
          type: string
      - name: X-Request-ID
        in: header
        description: Supplied by client during request or generated by server.
        required: false
        style: simple
        explode: false
        schema:
          type: string
      - name: destroyed
        in: query
        description: "If set to `true`, lists only destroyed objects that are in the\
          \ eradication pending state. If set to `false`, lists only objects that\
          \ are not destroyed. For destroyed objects, the time remaining is displayed\
          \ in milliseconds."
        required: false
        style: form
        explode: true
        schema:
          type: boolean
      - name: filter
        in: query
        description: Narrows down the results to only the response objects that satisfy
          the filter criteria.
        required: false
        style: form
        explode: true
        schema:
          type: string
      - name: ids
        in: query
        description: Performs the operation on the unique resource IDs specified.
          Enter multiple resource IDs in comma-separated format. The `ids` and `names`
          parameters cannot be provided together.
        required: false
        style: form
        explode: false
        schema:
          type: array
          items:
            type: string
      - name: limit
        in: query
        description: "Limits the size of the response to the specified number of objects\
          \ on each page. To return the total number of resources, set `limit=0`.\
          \ The total number of resources is returned as a `total_item_count` value.\
          \ If the page size requested is larger than the system maximum limit, the\
          \ server returns the maximum limit, disregarding the requested page size."
        required: false
        style: form
        explode: true
        schema:
          minimum: 1
          type: integer
          format: int32
        example: 10
      - name: names
        in: query
        description: "Performs the operation on the unique name specified. Enter multiple\
          \ names in comma-separated format. For example, `name01,name02`."
        required: false
        style: form
        explode: false
        schema:
          type: array
          items:
            type: string
      - name: offset
        in: query
        description: The starting position based on the results of the query in relation
          to the full set of response objects returned.
        required: false
        style: form
        explode: true
        schema:
          minimum: 0
          type: integer
          format: int32
        example: 10
      - name: "on"
        in: query
        description: "Performs the operation on the target name specified. Enter multiple\
          \ target names in comma-separated format. For example, `targetName01,targetName02`."
        required: false
        style: form
        explode: false
        schema:
          type: array
          items:
            type: string
      - name: sort
        in: query
        description: "Returns the response objects in the order specified. Set `sort`\
          \ to the name in the response by which to sort. Sorting can be performed\
          \ on any of the names in the response, and the objects can be sorted in\
          \ ascending or descending order. By default, the response objects are sorted\
          \ in ascending order. To sort in descending order, append the minus sign\
          \ (`-`) to the name. A single request can be sorted on multiple objects.\
          \ For example, you can sort all volumes from largest to smallest volume\
          \ size, and then sort volumes of the same size in ascending order by volume\
          \ name. To sort on multiple names, list the names as comma-separated values."
        required: false
        style: form
        explode: false
        schema:
          type: array
          items:
            pattern: "^[a-z]+(_[a-z]+)*-?"
            type: string
      - name: source_ids
        in: query
        description: Performs the operation on the source ID specified. Enter multiple
          source IDs in comma-separated format.
        required: false
        style: form
        explode: false
        schema:
          type: array
          items:
            type: string
      - name: source_names
        in: query
        description: "Performs the operation on the source name specified. Enter multiple\
          \ source names in comma-separated format. For example, `name01,name02`."
        required: false
        style: form
        explode: false
        schema:
          type: array
          items:
            type: string
      - name: total_item_count
        in: query
        description: "If set to `true`, the `total_item_count` matching the specified\
          \ query parameters is calculated and returned in the response. If set to\
          \ `false`, the `total_item_count` is `null` in the response. This may speed\
          \ up queries where the `total_item_count` is large. If not specified, defaults\
          \ to `false`."
        required: false
        style: form
        explode: true
        schema:
          type: boolean
      responses:
        "200":
          description: OK
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/inline_response_200_132'
    post:
      tags:
      - Remote Volume Snapshots
      summary: Create a volume snapshot on a connected remote target or offload target
      description: Creates a volume snapshot on the specified connected remote target
        or offload target.
      parameters:
      - name: Authorization
        in: header
        description: "Access token (in JWT format) required to use any API endpoint\
          \ (except `/oauth2`, `/login`, and `/logout`)"
        required: false
        style: simple
        explode: false
        schema:
          type: string
      - name: X-Request-ID
        in: header
        description: Supplied by client during request or generated by server.
        required: false
        style: simple
        explode: false
        schema:
          type: string
      - name: source_ids
        in: query
        description: Performs the operation on the source ID specified. Enter multiple
          source IDs in comma-separated format.
        required: false
        style: form
        explode: false
        schema:
          type: array
          items:
            type: string
      - name: source_names
        in: query
        description: "Performs the operation on the source name specified. Enter multiple\
          \ source names in comma-separated format. For example, `name01,name02`."
        required: false
        style: form
        explode: false
        schema:
          type: array
          items:
            type: string
      - name: "on"
        in: query
        description: "Performs the operation on the target name specified. For example,\
          \ `targetName01`."
        required: false
        style: form
        explode: true
        schema:
          type: string
      responses:
        "200":
          description: OK
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/inline_response_200_133'
    delete:
      tags:
      - Remote Volume Snapshots
      summary: Eradicate a remote volume snapshot
      description: Eradicates a remote volume snapshot that has been destroyed and
        is pending eradication. Eradicated remote volume snapshots cannot be recovered.
        Remote volume snapshots are destroyed through the `PATCH` method. The `names`
        parameter represents the name of the volume snapshot. The `on` parameter represents
        the name of the offload target. The `names` and `on` parameters are required
        and must be used together.
      parameters:
      - name: Authorization
        in: header
        description: "Access token (in JWT format) required to use any API endpoint\
          \ (except `/oauth2`, `/login`, and `/logout`)"
        required: false
        style: simple
        explode: false
        schema:
          type: string
      - name: X-Request-ID
        in: header
        description: Supplied by client during request or generated by server.
        required: false
        style: simple
        explode: false
        schema:
          type: string
      - name: names
        in: query
        description: "Performs the operation on the unique name specified. Enter multiple\
          \ names in comma-separated format. For example, `name01,name02`."
        required: false
        style: form
        explode: false
        schema:
          type: array
          items:
            type: string
      - name: "on"
        in: query
        description: "Performs the operation on the target name specified. For example,\
          \ `targetName01`."
        required: false
        style: form
        explode: true
        schema:
          type: string
      - name: replication_snapshot
        in: query
        description: "If set to `true`, allow destruction/eradication of snapshots\
          \ in use by replication. If set to `false`, allow destruction/eradication\
          \ of snapshots not in use by replication. If not specified, defaults to\
          \ `false`."
        required: false
        style: form
        explode: true
        schema:
          type: boolean
      responses:
        "200":
          description: OK
    patch:
      tags:
      - Remote Volume Snapshots
      summary: Manage a remote volume snapshot
      description: Destroy or recover a remote volume snapshot from the offload target.
        The `on` parameter represents the name of the offload target. The `names`
        parameter and the `on` parameter are required and must be used together.
      parameters:
      - name: Authorization
        in: header
        description: "Access token (in JWT format) required to use any API endpoint\
          \ (except `/oauth2`, `/login`, and `/logout`)"
        required: false
        style: simple
        explode: false
        schema:
          type: string
      - name: X-Request-ID
        in: header
        description: Supplied by client during request or generated by server.
        required: false
        style: simple
        explode: false
        schema:
          type: string
      - name: names
        in: query
        description: "Performs the operation on the unique name specified. Enter multiple\
          \ names in comma-separated format. For example, `name01,name02`."
        required: false
        style: form
        explode: false
        schema:
          type: array
          items:
            type: string
      - name: "on"
        in: query
        description: "Performs the operation on the target name specified. For example,\
          \ `targetName01`."
        required: false
        style: form
        explode: true
        schema:
          type: string
      - name: replication_snapshot
        in: query
        description: "If set to `true`, allow destruction/eradication of snapshots\
          \ in use by replication. If set to `false`, allow destruction/eradication\
          \ of snapshots not in use by replication. If not specified, defaults to\
          \ `false`."
        required: false
        style: form
        explode: true
        schema:
          type: boolean
      requestBody:
        $ref: '#/components/requestBodies/RemoteProtectionGroupSnapshot'
      responses:
        "200":
          description: OK
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/inline_response_200_133'
  /api/2.8/remote-volume-snapshots/transfer:
    get:
      tags:
      - Remote Volume Snapshots
      summary: List remote volume snapshots with transfer statistics
      description: Returns a list of remote volume snapshots and their transfer statistics.
      parameters:
      - name: names
        in: query
        description: "Performs the operation on the unique name specified. Enter multiple\
          \ names in comma-separated format. For example, `name01,name02`."
        required: false
        style: form
        explode: false
        schema:
          type: array
          items:
            type: string
      - name: Authorization
        in: header
        description: "Access token (in JWT format) required to use any API endpoint\
          \ (except `/oauth2`, `/login`, and `/logout`)"
        required: false
        style: simple
        explode: false
        schema:
          type: string
      - name: X-Request-ID
        in: header
        description: Supplied by client during request or generated by server.
        required: false
        style: simple
        explode: false
        schema:
          type: string
      - name: destroyed
        in: query
        description: "If set to `true`, lists only destroyed objects that are in the\
          \ eradication pending state. If set to `false`, lists only objects that\
          \ are not destroyed. For destroyed objects, the time remaining is displayed\
          \ in milliseconds."
        required: false
        style: form
        explode: true
        schema:
          type: boolean
      - name: filter
        in: query
        description: Narrows down the results to only the response objects that satisfy
          the filter criteria.
        required: false
        style: form
        explode: true
        schema:
          type: string
      - name: ids
        in: query
        description: Performs the operation on the unique resource IDs specified.
          Enter multiple resource IDs in comma-separated format. The `ids` and `names`
          parameters cannot be provided together.
        required: false
        style: form
        explode: false
        schema:
          type: array
          items:
            type: string
      - name: limit
        in: query
        description: "Limits the size of the response to the specified number of objects\
          \ on each page. To return the total number of resources, set `limit=0`.\
          \ The total number of resources is returned as a `total_item_count` value.\
          \ If the page size requested is larger than the system maximum limit, the\
          \ server returns the maximum limit, disregarding the requested page size."
        required: false
        style: form
        explode: true
        schema:
          minimum: 1
          type: integer
          format: int32
        example: 10
      - name: offset
        in: query
        description: The starting position based on the results of the query in relation
          to the full set of response objects returned.
        required: false
        style: form
        explode: true
        schema:
          minimum: 0
          type: integer
          format: int32
        example: 10
      - name: "on"
        in: query
        description: "Performs the operation on the target name specified. Enter multiple\
          \ target names in comma-separated format. For example, `targetName01,targetName02`."
        required: false
        style: form
        explode: false
        schema:
          type: array
          items:
            type: string
      - name: sort
        in: query
        description: "Returns the response objects in the order specified. Set `sort`\
          \ to the name in the response by which to sort. Sorting can be performed\
          \ on any of the names in the response, and the objects can be sorted in\
          \ ascending or descending order. By default, the response objects are sorted\
          \ in ascending order. To sort in descending order, append the minus sign\
          \ (`-`) to the name. A single request can be sorted on multiple objects.\
          \ For example, you can sort all volumes from largest to smallest volume\
          \ size, and then sort volumes of the same size in ascending order by volume\
          \ name. To sort on multiple names, list the names as comma-separated values."
        required: false
        style: form
        explode: false
        schema:
          type: array
          items:
            pattern: "^[a-z]+(_[a-z]+)*-?"
            type: string
      - name: source_ids
        in: query
        description: Performs the operation on the source ID specified. Enter multiple
          source IDs in comma-separated format.
        required: false
        style: form
        explode: false
        schema:
          type: array
          items:
            type: string
      - name: source_names
        in: query
        description: "Performs the operation on the source name specified. Enter multiple\
          \ source names in comma-separated format. For example, `name01,name02`."
        required: false
        style: form
        explode: false
        schema:
          type: array
          items:
            type: string
      - name: total_item_count
        in: query
        description: "If set to `true`, the `total_item_count` matching the specified\
          \ query parameters is calculated and returned in the response. If set to\
          \ `false`, the `total_item_count` is `null` in the response. This may speed\
          \ up queries where the `total_item_count` is large. If not specified, defaults\
          \ to `false`."
        required: false
        style: form
        explode: true
        schema:
          type: boolean
      - name: total_only
        in: query
        description: "If set to `true`, returns the aggregate value of all items after\
          \ filtering. Where it makes more sense, the average value is displayed instead.\
          \ The values are displayed for each name where meaningful. If `total_only=true`,\
          \ the `items` list will be empty."
        required: false
        style: form
        explode: true
        schema:
          type: boolean
      responses:
        "200":
          description: OK
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/inline_response_200_134'
  /api/2.8/sessions:
    get:
      tags:
      - Sessions
      summary: List session data
      description: "Displays session data for user login events performed in the Purity//FA\
        \ GUI, CLI, and REST API."
      parameters:
      - name: Authorization
        in: header
        description: "Access token (in JWT format) required to use any API endpoint\
          \ (except `/oauth2`, `/login`, and `/logout`)"
        required: false
        style: simple
        explode: false
        schema:
          type: string
      - name: X-Request-ID
        in: header
        description: Supplied by client during request or generated by server.
        required: false
        style: simple
        explode: false
        schema:
          type: string
      - name: continuation_token
        in: query
        description: A token used to retrieve the next page of data with some consistency
          guaranteed. The token is a Base64 encoded value. Set `continuation_token`
          to the system-generated token taken from the `x-next-token` header field
          of the response. A query has reached its last page when the response does
          not include a token. Pagination requires the `limit` and `continuation_token`
          query parameters.
        required: false
        style: form
        explode: true
        schema:
          type: string
      - name: filter
        in: query
        description: Narrows down the results to only the response objects that satisfy
          the filter criteria.
        required: false
        style: form
        explode: true
        schema:
          type: string
      - name: ids
        in: query
        description: Performs the operation on the unique resource IDs specified.
          Enter multiple resource IDs in comma-separated format. The `ids` and `names`
          parameters cannot be provided together.
        required: false
        style: form
        explode: false
        schema:
          type: array
          items:
            type: string
      - name: limit
        in: query
        description: "Limits the size of the response to the specified number of objects\
          \ on each page. To return the total number of resources, set `limit=0`.\
          \ The total number of resources is returned as a `total_item_count` value.\
          \ If the page size requested is larger than the system maximum limit, the\
          \ server returns the maximum limit, disregarding the requested page size."
        required: false
        style: form
        explode: true
        schema:
          minimum: 1
          type: integer
          format: int32
        example: 10
      - name: names
        in: query
        description: "Performs the operation on the unique name specified. Enter multiple\
          \ names in comma-separated format. For example, `name01,name02`."
        required: false
        style: form
        explode: false
        schema:
          type: array
          items:
            type: string
      - name: offset
        in: query
        description: The starting position based on the results of the query in relation
          to the full set of response objects returned.
        required: false
        style: form
        explode: true
        schema:
          minimum: 0
          type: integer
          format: int32
        example: 10
      - name: sort
        in: query
        description: "Returns the response objects in the order specified. Set `sort`\
          \ to the name in the response by which to sort. Sorting can be performed\
          \ on any of the names in the response, and the objects can be sorted in\
          \ ascending or descending order. By default, the response objects are sorted\
          \ in ascending order. To sort in descending order, append the minus sign\
          \ (`-`) to the name. A single request can be sorted on multiple objects.\
          \ For example, you can sort all volumes from largest to smallest volume\
          \ size, and then sort volumes of the same size in ascending order by volume\
          \ name. To sort on multiple names, list the names as comma-separated values."
        required: false
        style: form
        explode: false
        schema:
          type: array
          items:
            pattern: "^[a-z]+(_[a-z]+)*-?"
            type: string
      - name: total_item_count
        in: query
        description: "If set to `true`, the `total_item_count` matching the specified\
          \ query parameters is calculated and returned in the response. If set to\
          \ `false`, the `total_item_count` is `null` in the response. This may speed\
          \ up queries where the `total_item_count` is large. If not specified, defaults\
          \ to `false`."
        required: false
        style: form
        explode: true
        schema:
          type: boolean
      responses:
        "200":
          description: OK
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/inline_response_200_135'
  /api/2.8/smi-s:
    get:
      tags:
      - SMI-S
      summary: List SMI-S settings
      description: "Displays the SMI-S settings, including the name of the array and\
        \ whether SLP and WBEM-HTTPS are enabled."
      parameters:
      - name: Authorization
        in: header
        description: "Access token (in JWT format) required to use any API endpoint\
          \ (except `/oauth2`, `/login`, and `/logout`)"
        required: false
        style: simple
        explode: false
        schema:
          type: string
      - name: X-Request-ID
        in: header
        description: Supplied by client during request or generated by server.
        required: false
        style: simple
        explode: false
        schema:
          type: string
      - name: filter
        in: query
        description: Narrows down the results to only the response objects that satisfy
          the filter criteria.
        required: false
        style: form
        explode: true
        schema:
          type: string
      - name: limit
        in: query
        description: "Limits the size of the response to the specified number of objects\
          \ on each page. To return the total number of resources, set `limit=0`.\
          \ The total number of resources is returned as a `total_item_count` value.\
          \ If the page size requested is larger than the system maximum limit, the\
          \ server returns the maximum limit, disregarding the requested page size."
        required: false
        style: form
        explode: true
        schema:
          minimum: 1
          type: integer
          format: int32
        example: 10
      - name: offset
        in: query
        description: The starting position based on the results of the query in relation
          to the full set of response objects returned.
        required: false
        style: form
        explode: true
        schema:
          minimum: 0
          type: integer
          format: int32
        example: 10
      - name: sort
        in: query
        description: "Returns the response objects in the order specified. Set `sort`\
          \ to the name in the response by which to sort. Sorting can be performed\
          \ on any of the names in the response, and the objects can be sorted in\
          \ ascending or descending order. By default, the response objects are sorted\
          \ in ascending order. To sort in descending order, append the minus sign\
          \ (`-`) to the name. A single request can be sorted on multiple objects.\
          \ For example, you can sort all volumes from largest to smallest volume\
          \ size, and then sort volumes of the same size in ascending order by volume\
          \ name. To sort on multiple names, list the names as comma-separated values."
        required: false
        style: form
        explode: false
        schema:
          type: array
          items:
            pattern: "^[a-z]+(_[a-z]+)*-?"
            type: string
      - name: total_item_count
        in: query
        description: "If set to `true`, the `total_item_count` matching the specified\
          \ query parameters is calculated and returned in the response. If set to\
          \ `false`, the `total_item_count` is `null` in the response. This may speed\
          \ up queries where the `total_item_count` is large. If not specified, defaults\
          \ to `false`."
        required: false
        style: form
        explode: true
        schema:
          type: boolean
      responses:
        "200":
          description: OK
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/inline_response_200_136'
    patch:
      tags:
      - SMI-S
      summary: Modify SLP and SMI-S
      description: "Modifies the Service Location Protocol (SLP) and the SMI-S provider,\
        \ enabling or disabling them."
      parameters:
      - name: Authorization
        in: header
        description: "Access token (in JWT format) required to use any API endpoint\
          \ (except `/oauth2`, `/login`, and `/logout`)"
        required: false
        style: simple
        explode: false
        schema:
          type: string
      - name: X-Request-ID
        in: header
        description: Supplied by client during request or generated by server.
        required: false
        style: simple
        explode: false
        schema:
          type: string
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/SMI-S'
        required: true
      responses:
        "200":
          description: OK
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/inline_response_200_137'
  /api/2.8/smtp-servers:
    get:
      tags:
      - SMTP
      summary: List SMTP server attributes
      description: "Displays SMTP server attributes. Values include `user_name`, `password`,\
        \ `relay_host`, `sender_domain`, and `name`."
      parameters:
      - name: Authorization
        in: header
        description: "Access token (in JWT format) required to use any API endpoint\
          \ (except `/oauth2`, `/login`, and `/logout`)"
        required: false
        style: simple
        explode: false
        schema:
          type: string
      - name: X-Request-ID
        in: header
        description: Supplied by client during request or generated by server.
        required: false
        style: simple
        explode: false
        schema:
          type: string
      - name: filter
        in: query
        description: Narrows down the results to only the response objects that satisfy
          the filter criteria.
        required: false
        style: form
        explode: true
        schema:
          type: string
      - name: limit
        in: query
        description: "Limits the size of the response to the specified number of objects\
          \ on each page. To return the total number of resources, set `limit=0`.\
          \ The total number of resources is returned as a `total_item_count` value.\
          \ If the page size requested is larger than the system maximum limit, the\
          \ server returns the maximum limit, disregarding the requested page size."
        required: false
        style: form
        explode: true
        schema:
          minimum: 1
          type: integer
          format: int32
        example: 10
      - name: offset
        in: query
        description: The starting position based on the results of the query in relation
          to the full set of response objects returned.
        required: false
        style: form
        explode: true
        schema:
          minimum: 0
          type: integer
          format: int32
        example: 10
      - name: sort
        in: query
        description: "Returns the response objects in the order specified. Set `sort`\
          \ to the name in the response by which to sort. Sorting can be performed\
          \ on any of the names in the response, and the objects can be sorted in\
          \ ascending or descending order. By default, the response objects are sorted\
          \ in ascending order. To sort in descending order, append the minus sign\
          \ (`-`) to the name. A single request can be sorted on multiple objects.\
          \ For example, you can sort all volumes from largest to smallest volume\
          \ size, and then sort volumes of the same size in ascending order by volume\
          \ name. To sort on multiple names, list the names as comma-separated values."
        required: false
        style: form
        explode: false
        schema:
          type: array
          items:
            pattern: "^[a-z]+(_[a-z]+)*-?"
            type: string
      - name: total_item_count
        in: query
        description: "If set to `true`, the `total_item_count` matching the specified\
          \ query parameters is calculated and returned in the response. If set to\
          \ `false`, the `total_item_count` is `null` in the response. This may speed\
          \ up queries where the `total_item_count` is large. If not specified, defaults\
          \ to `false`."
        required: false
        style: form
        explode: true
        schema:
          type: boolean
      responses:
        "200":
          description: OK
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/inline_response_200_138'
    patch:
      tags:
      - SMTP
      summary: Modify SMTP server attributes
      description: "Modifies SMTP server attributes. Values include `user_name`, `password`,\
        \ `relay_host`, `sender_domain`, and `name`."
      parameters:
      - name: Authorization
        in: header
        description: "Access token (in JWT format) required to use any API endpoint\
          \ (except `/oauth2`, `/login`, and `/logout`)"
        required: false
        style: simple
        explode: false
        schema:
          type: string
      - name: X-Request-ID
        in: header
        description: Supplied by client during request or generated by server.
        required: false
        style: simple
        explode: false
        schema:
          type: string
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/SMTP'
        required: true
      responses:
        "200":
          description: OK
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/inline_response_200_139'
  /api/2.8/snmp-agents:
    get:
      tags:
      - SNMP Agents
      summary: List SNMP agent
      description: Displays the SNMP agent name and protocol attributes.
      parameters:
      - name: Authorization
        in: header
        description: "Access token (in JWT format) required to use any API endpoint\
          \ (except `/oauth2`, `/login`, and `/logout`)"
        required: false
        style: simple
        explode: false
        schema:
          type: string
      - name: X-Request-ID
        in: header
        description: Supplied by client during request or generated by server.
        required: false
        style: simple
        explode: false
        schema:
          type: string
      - name: filter
        in: query
        description: Narrows down the results to only the response objects that satisfy
          the filter criteria.
        required: false
        style: form
        explode: true
        schema:
          type: string
      - name: limit
        in: query
        description: "Limits the size of the response to the specified number of objects\
          \ on each page. To return the total number of resources, set `limit=0`.\
          \ The total number of resources is returned as a `total_item_count` value.\
          \ If the page size requested is larger than the system maximum limit, the\
          \ server returns the maximum limit, disregarding the requested page size."
        required: false
        style: form
        explode: true
        schema:
          minimum: 1
          type: integer
          format: int32
        example: 10
      - name: offset
        in: query
        description: The starting position based on the results of the query in relation
          to the full set of response objects returned.
        required: false
        style: form
        explode: true
        schema:
          minimum: 0
          type: integer
          format: int32
        example: 10
      - name: sort
        in: query
        description: "Returns the response objects in the order specified. Set `sort`\
          \ to the name in the response by which to sort. Sorting can be performed\
          \ on any of the names in the response, and the objects can be sorted in\
          \ ascending or descending order. By default, the response objects are sorted\
          \ in ascending order. To sort in descending order, append the minus sign\
          \ (`-`) to the name. A single request can be sorted on multiple objects.\
          \ For example, you can sort all volumes from largest to smallest volume\
          \ size, and then sort volumes of the same size in ascending order by volume\
          \ name. To sort on multiple names, list the names as comma-separated values."
        required: false
        style: form
        explode: false
        schema:
          type: array
          items:
            pattern: "^[a-z]+(_[a-z]+)*-?"
            type: string
      - name: total_item_count
        in: query
        description: "If set to `true`, the `total_item_count` matching the specified\
          \ query parameters is calculated and returned in the response. If set to\
          \ `false`, the `total_item_count` is `null` in the response. This may speed\
          \ up queries where the `total_item_count` is large. If not specified, defaults\
          \ to `false`."
        required: false
        style: form
        explode: true
        schema:
          type: boolean
      responses:
        "200":
          description: OK
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/inline_response_200_140'
    patch:
      tags:
      - SNMP Agents
      summary: Modify SNMP agent
      description: Modifies the name or the protocol attributes of the SNMP agent.
      parameters:
      - name: Authorization
        in: header
        description: "Access token (in JWT format) required to use any API endpoint\
          \ (except `/oauth2`, `/login`, and `/logout`)"
        required: false
        style: simple
        explode: false
        schema:
          type: string
      - name: X-Request-ID
        in: header
        description: Supplied by client during request or generated by server.
        required: false
        style: simple
        explode: false
        schema:
          type: string
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/2_8_snmpagents_body'
        required: true
      responses:
        "200":
          description: Returns the newly updated SNMP agent object.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/inline_response_200_141'
  /api/2.8/snmp-agents/mib:
    get:
      tags:
      - SNMP Agents
      summary: List SNMP agent MIB text
      description: Displays the SNMP MIB text.
      parameters:
      - name: Authorization
        in: header
        description: "Access token (in JWT format) required to use any API endpoint\
          \ (except `/oauth2`, `/login`, and `/logout`)"
        required: false
        style: simple
        explode: false
        schema:
          type: string
      - name: X-Request-ID
        in: header
        description: Supplied by client during request or generated by server.
        required: false
        style: simple
        explode: false
        schema:
          type: string
      - name: filter
        in: query
        description: Narrows down the results to only the response objects that satisfy
          the filter criteria.
        required: false
        style: form
        explode: true
        schema:
          type: string
      - name: limit
        in: query
        description: "Limits the size of the response to the specified number of objects\
          \ on each page. To return the total number of resources, set `limit=0`.\
          \ The total number of resources is returned as a `total_item_count` value.\
          \ If the page size requested is larger than the system maximum limit, the\
          \ server returns the maximum limit, disregarding the requested page size."
        required: false
        style: form
        explode: true
        schema:
          minimum: 1
          type: integer
          format: int32
        example: 10
      - name: offset
        in: query
        description: The starting position based on the results of the query in relation
          to the full set of response objects returned.
        required: false
        style: form
        explode: true
        schema:
          minimum: 0
          type: integer
          format: int32
        example: 10
      - name: sort
        in: query
        description: "Returns the response objects in the order specified. Set `sort`\
          \ to the name in the response by which to sort. Sorting can be performed\
          \ on any of the names in the response, and the objects can be sorted in\
          \ ascending or descending order. By default, the response objects are sorted\
          \ in ascending order. To sort in descending order, append the minus sign\
          \ (`-`) to the name. A single request can be sorted on multiple objects.\
          \ For example, you can sort all volumes from largest to smallest volume\
          \ size, and then sort volumes of the same size in ascending order by volume\
          \ name. To sort on multiple names, list the names as comma-separated values."
        required: false
        style: form
        explode: false
        schema:
          type: array
          items:
            pattern: "^[a-z]+(_[a-z]+)*-?"
            type: string
      - name: total_item_count
        in: query
        description: "If set to `true`, the `total_item_count` matching the specified\
          \ query parameters is calculated and returned in the response. If set to\
          \ `false`, the `total_item_count` is `null` in the response. This may speed\
          \ up queries where the `total_item_count` is large. If not specified, defaults\
          \ to `false`."
        required: false
        style: form
        explode: true
        schema:
          type: boolean
      responses:
        "200":
          description: OK
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/inline_response_200_142'
  /api/2.8/snmp-managers:
    get:
      tags:
      - SNMP Managers
      summary: List SNMP managers
      description: Displays designated SNMP managers and their communication and security
        attributes.
      parameters:
      - name: Authorization
        in: header
        description: "Access token (in JWT format) required to use any API endpoint\
          \ (except `/oauth2`, `/login`, and `/logout`)"
        required: false
        style: simple
        explode: false
        schema:
          type: string
      - name: X-Request-ID
        in: header
        description: Supplied by client during request or generated by server.
        required: false
        style: simple
        explode: false
        schema:
          type: string
      - name: continuation_token
        in: query
        description: A token used to retrieve the next page of data with some consistency
          guaranteed. The token is a Base64 encoded value. Set `continuation_token`
          to the system-generated token taken from the `x-next-token` header field
          of the response. A query has reached its last page when the response does
          not include a token. Pagination requires the `limit` and `continuation_token`
          query parameters.
        required: false
        style: form
        explode: true
        schema:
          type: string
      - name: filter
        in: query
        description: Narrows down the results to only the response objects that satisfy
          the filter criteria.
        required: false
        style: form
        explode: true
        schema:
          type: string
      - name: limit
        in: query
        description: "Limits the size of the response to the specified number of objects\
          \ on each page. To return the total number of resources, set `limit=0`.\
          \ The total number of resources is returned as a `total_item_count` value.\
          \ If the page size requested is larger than the system maximum limit, the\
          \ server returns the maximum limit, disregarding the requested page size."
        required: false
        style: form
        explode: true
        schema:
          minimum: 1
          type: integer
          format: int32
        example: 10
      - name: names
        in: query
        description: "Performs the operation on the unique name specified. Enter multiple\
          \ names in comma-separated format. For example, `name01,name02`."
        required: false
        style: form
        explode: false
        schema:
          type: array
          items:
            type: string
      - name: offset
        in: query
        description: The starting position based on the results of the query in relation
          to the full set of response objects returned.
        required: false
        style: form
        explode: true
        schema:
          minimum: 0
          type: integer
          format: int32
        example: 10
      - name: sort
        in: query
        description: "Returns the response objects in the order specified. Set `sort`\
          \ to the name in the response by which to sort. Sorting can be performed\
          \ on any of the names in the response, and the objects can be sorted in\
          \ ascending or descending order. By default, the response objects are sorted\
          \ in ascending order. To sort in descending order, append the minus sign\
          \ (`-`) to the name. A single request can be sorted on multiple objects.\
          \ For example, you can sort all volumes from largest to smallest volume\
          \ size, and then sort volumes of the same size in ascending order by volume\
          \ name. To sort on multiple names, list the names as comma-separated values."
        required: false
        style: form
        explode: false
        schema:
          type: array
          items:
            pattern: "^[a-z]+(_[a-z]+)*-?"
            type: string
      - name: total_item_count
        in: query
        description: "If set to `true`, the `total_item_count` matching the specified\
          \ query parameters is calculated and returned in the response. If set to\
          \ `false`, the `total_item_count` is `null` in the response. This may speed\
          \ up queries where the `total_item_count` is large. If not specified, defaults\
          \ to `false`."
        required: false
        style: form
        explode: true
        schema:
          type: boolean
      responses:
        "200":
          description: OK
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/inline_response_200_143'
    post:
      tags:
      - SNMP Managers
      summary: Create SNMP manager
      description: "Creates a Purity SNMP manager object that identifies a host (SNMP\
        \ manager) and specifies the protocol attributes for communicating with it.\
        \ Once a manager object is created, the transmission of SNMP traps is immediately\
        \ enabled."
      parameters:
      - name: Authorization
        in: header
        description: "Access token (in JWT format) required to use any API endpoint\
          \ (except `/oauth2`, `/login`, and `/logout`)"
        required: false
        style: simple
        explode: false
        schema:
          type: string
      - name: X-Request-ID
        in: header
        description: Supplied by client during request or generated by server.
        required: false
        style: simple
        explode: false
        schema:
          type: string
      - name: names
        in: query
        description: "Performs the operation on the unique name specified. Enter multiple\
          \ names in comma-separated format. For example, `name01,name02`."
        required: false
        style: form
        explode: false
        schema:
          type: array
          items:
            type: string
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/2_8_snmpmanagers_body'
        required: true
      responses:
        "200":
          description: Returns the newly created snmp manager object.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/inline_response_200_144'
    delete:
      tags:
      - SNMP Managers
      summary: Delete SNMP manager
      description: Deletes the SNMP manager object and stops communication with specified
        managers.
      parameters:
      - name: Authorization
        in: header
        description: "Access token (in JWT format) required to use any API endpoint\
          \ (except `/oauth2`, `/login`, and `/logout`)"
        required: false
        style: simple
        explode: false
        schema:
          type: string
      - name: X-Request-ID
        in: header
        description: Supplied by client during request or generated by server.
        required: false
        style: simple
        explode: false
        schema:
          type: string
      - name: names
        in: query
        description: "Performs the operation on the unique name specified. Enter multiple\
          \ names in comma-separated format. For example, `name01,name02`."
        required: false
        style: form
        explode: false
        schema:
          type: array
          items:
            type: string
      responses:
        "200":
          description: OK
    patch:
      tags:
      - SNMP Managers
      summary: Modify SNMP manager
      description: Modifies the name or the protocol attributes of the specified SNMP
        manager.
      parameters:
      - name: Authorization
        in: header
        description: "Access token (in JWT format) required to use any API endpoint\
          \ (except `/oauth2`, `/login`, and `/logout`)"
        required: false
        style: simple
        explode: false
        schema:
          type: string
      - name: X-Request-ID
        in: header
        description: Supplied by client during request or generated by server.
        required: false
        style: simple
        explode: false
        schema:
          type: string
      - name: names
        in: query
        description: "Performs the operation on the unique name specified. Enter multiple\
          \ names in comma-separated format. For example, `name01,name02`."
        required: false
        style: form
        explode: false
        schema:
          type: array
          items:
            type: string
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/2_8_snmpmanagers_body_1'
        required: true
      responses:
        "200":
          description: Returns the newly updated snmp manager object.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/inline_response_200_144'
  /api/2.8/snmp-managers/test:
    get:
      tags:
      - SNMP Managers
      summary: List SNMP manager test results
      description: Displays SNMP manager test results (traps or informs).
      parameters:
      - name: Authorization
        in: header
        description: "Access token (in JWT format) required to use any API endpoint\
          \ (except `/oauth2`, `/login`, and `/logout`)"
        required: false
        style: simple
        explode: false
        schema:
          type: string
      - name: X-Request-ID
        in: header
        description: Supplied by client during request or generated by server.
        required: false
        style: simple
        explode: false
        schema:
          type: string
      - name: filter
        in: query
        description: Narrows down the results to only the response objects that satisfy
          the filter criteria.
        required: false
        style: form
        explode: true
        schema:
          type: string
      - name: limit
        in: query
        description: "Limits the size of the response to the specified number of objects\
          \ on each page. To return the total number of resources, set `limit=0`.\
          \ The total number of resources is returned as a `total_item_count` value.\
          \ If the page size requested is larger than the system maximum limit, the\
          \ server returns the maximum limit, disregarding the requested page size."
        required: false
        style: form
        explode: true
        schema:
          minimum: 1
          type: integer
          format: int32
        example: 10
      - name: names
        in: query
        description: "Performs the operation on the unique name specified. Enter multiple\
          \ names in comma-separated format. For example, `name01,name02`."
        required: false
        style: form
        explode: false
        schema:
          type: array
          items:
            type: string
      - name: offset
        in: query
        description: The starting position based on the results of the query in relation
          to the full set of response objects returned.
        required: false
        style: form
        explode: true
        schema:
          minimum: 0
          type: integer
          format: int32
        example: 10
      - name: sort
        in: query
        description: "Returns the response objects in the order specified. Set `sort`\
          \ to the name in the response by which to sort. Sorting can be performed\
          \ on any of the names in the response, and the objects can be sorted in\
          \ ascending or descending order. By default, the response objects are sorted\
          \ in ascending order. To sort in descending order, append the minus sign\
          \ (`-`) to the name. A single request can be sorted on multiple objects.\
          \ For example, you can sort all volumes from largest to smallest volume\
          \ size, and then sort volumes of the same size in ascending order by volume\
          \ name. To sort on multiple names, list the names as comma-separated values."
        required: false
        style: form
        explode: false
        schema:
          type: array
          items:
            pattern: "^[a-z]+(_[a-z]+)*-?"
            type: string
      - name: total_item_count
        in: query
        description: "If set to `true`, the `total_item_count` matching the specified\
          \ query parameters is calculated and returned in the response. If set to\
          \ `false`, the `total_item_count` is `null` in the response. This may speed\
          \ up queries where the `total_item_count` is large. If not specified, defaults\
          \ to `false`."
        required: false
        style: form
        explode: true
        schema:
          type: boolean
      responses:
        "200":
          description: OK
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/inline_response_200_16'
  /api/2.8/software:
    get:
      tags:
      - Software
      summary: List software
      description: Displays a list of software versions available for update and the
        installation status of each software version.
      parameters:
      - name: Authorization
        in: header
        description: "Access token (in JWT format) required to use any API endpoint\
          \ (except `/oauth2`, `/login`, and `/logout`)"
        required: false
        style: simple
        explode: false
        schema:
          type: string
      - name: X-Request-ID
        in: header
        description: Supplied by client during request or generated by server.
        required: false
        style: simple
        explode: false
        schema:
          type: string
      - name: filter
        in: query
        description: Narrows down the results to only the response objects that satisfy
          the filter criteria.
        required: false
        style: form
        explode: true
        schema:
          type: string
      - name: ids
        in: query
        description: Performs the operation on the unique resource IDs specified.
          Enter multiple resource IDs in comma-separated format. The `ids` and `names`
          parameters cannot be provided together.
        required: false
        style: form
        explode: false
        schema:
          type: array
          items:
            type: string
      - name: limit
        in: query
        description: "Limits the size of the response to the specified number of objects\
          \ on each page. To return the total number of resources, set `limit=0`.\
          \ The total number of resources is returned as a `total_item_count` value.\
          \ If the page size requested is larger than the system maximum limit, the\
          \ server returns the maximum limit, disregarding the requested page size."
        required: false
        style: form
        explode: true
        schema:
          minimum: 1
          type: integer
          format: int32
        example: 10
      - name: names
        in: query
        description: "Performs the operation on the unique name specified. Enter multiple\
          \ names in comma-separated format. For example, `name01,name02`."
        required: false
        style: form
        explode: false
        schema:
          type: array
          items:
            type: string
      - name: offset
        in: query
        description: The starting position based on the results of the query in relation
          to the full set of response objects returned.
        required: false
        style: form
        explode: true
        schema:
          minimum: 0
          type: integer
          format: int32
        example: 10
      - name: sort
        in: query
        description: "Returns the response objects in the order specified. Set `sort`\
          \ to the name in the response by which to sort. Sorting can be performed\
          \ on any of the names in the response, and the objects can be sorted in\
          \ ascending or descending order. By default, the response objects are sorted\
          \ in ascending order. To sort in descending order, append the minus sign\
          \ (`-`) to the name. A single request can be sorted on multiple objects.\
          \ For example, you can sort all volumes from largest to smallest volume\
          \ size, and then sort volumes of the same size in ascending order by volume\
          \ name. To sort on multiple names, list the names as comma-separated values."
        required: false
        style: form
        explode: false
        schema:
          type: array
          items:
            pattern: "^[a-z]+(_[a-z]+)*-?"
            type: string
      - name: total_item_count
        in: query
        description: "If set to `true`, the `total_item_count` matching the specified\
          \ query parameters is calculated and returned in the response. If set to\
          \ `false`, the `total_item_count` is `null` in the response. This may speed\
          \ up queries where the `total_item_count` is large. If not specified, defaults\
          \ to `false`."
        required: false
        style: form
        explode: true
        schema:
          type: boolean
      - name: versions
        in: query
        description: A comma-separated list of versions.
        required: false
        style: form
        explode: false
        schema:
          type: array
          items:
            type: string
      responses:
        "200":
          description: OK
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/inline_response_200_145'
  /api/2.8/software-bundle:
    get:
      tags:
      - Software
      summary: List software-bundle
      description: Displays a list of software bundles.
      parameters:
      - name: filter
        in: query
        description: Narrows down the results to only the response objects that satisfy
          the filter criteria.
        required: false
        style: form
        explode: true
        schema:
          type: string
      - name: ids
        in: query
        description: Performs the operation on the unique resource IDs specified.
          Enter multiple resource IDs in comma-separated format. The `ids` and `names`
          parameters cannot be provided together.
        required: false
        style: form
        explode: false
        schema:
          type: array
          items:
            type: string
      - name: limit
        in: query
        description: "Limits the size of the response to the specified number of objects\
          \ on each page. To return the total number of resources, set `limit=0`.\
          \ The total number of resources is returned as a `total_item_count` value.\
          \ If the page size requested is larger than the system maximum limit, the\
          \ server returns the maximum limit, disregarding the requested page size."
        required: false
        style: form
        explode: true
        schema:
          minimum: 1
          type: integer
          format: int32
        example: 10
      - name: offset
        in: query
        description: The starting position based on the results of the query in relation
          to the full set of response objects returned.
        required: false
        style: form
        explode: true
        schema:
          minimum: 0
          type: integer
          format: int32
        example: 10
      - name: sort
        in: query
        description: "Returns the response objects in the order specified. Set `sort`\
          \ to the name in the response by which to sort. Sorting can be performed\
          \ on any of the names in the response, and the objects can be sorted in\
          \ ascending or descending order. By default, the response objects are sorted\
          \ in ascending order. To sort in descending order, append the minus sign\
          \ (`-`) to the name. A single request can be sorted on multiple objects.\
          \ For example, you can sort all volumes from largest to smallest volume\
          \ size, and then sort volumes of the same size in ascending order by volume\
          \ name. To sort on multiple names, list the names as comma-separated values."
        required: false
        style: form
        explode: false
        schema:
          type: array
          items:
            pattern: "^[a-z]+(_[a-z]+)*-?"
            type: string
      - name: total_item_count
        in: query
        description: "If set to `true`, the `total_item_count` matching the specified\
          \ query parameters is calculated and returned in the response. If set to\
          \ `false`, the `total_item_count` is `null` in the response. This may speed\
          \ up queries where the `total_item_count` is large. If not specified, defaults\
          \ to `false`."
        required: false
        style: form
        explode: true
        schema:
          type: boolean
      responses:
        "200":
          description: OK
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/inline_response_200_146'
    post:
      tags:
      - Software
      summary: Create software-bundle
      description: Creates and initiates a software bundle download.
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/2_8_softwarebundle_body'
        required: true
      responses:
        "200":
          description: The software bundle has started downloading successfully.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/inline_response_200_147'
  /api/2.8/software-installations:
    get:
      tags:
      - Software
      summary: List software upgrades
      description: Displays a list of software upgrades. This returns both currently
        running and past upgrades.
      parameters:
      - name: Authorization
        in: header
        description: "Access token (in JWT format) required to use any API endpoint\
          \ (except `/oauth2`, `/login`, and `/logout`)"
        required: false
        style: simple
        explode: false
        schema:
          type: string
      - name: X-Request-ID
        in: header
        description: Supplied by client during request or generated by server.
        required: false
        style: simple
        explode: false
        schema:
          type: string
      - name: continuation_token
        in: query
        description: A token used to retrieve the next page of data with some consistency
          guaranteed. The token is a Base64 encoded value. Set `continuation_token`
          to the system-generated token taken from the `x-next-token` header field
          of the response. A query has reached its last page when the response does
          not include a token. Pagination requires the `limit` and `continuation_token`
          query parameters.
        required: false
        style: form
        explode: true
        schema:
          type: string
      - name: filter
        in: query
        description: Narrows down the results to only the response objects that satisfy
          the filter criteria.
        required: false
        style: form
        explode: true
        schema:
          type: string
      - name: ids
        in: query
        description: Performs the operation on the unique resource IDs specified.
          Enter multiple resource IDs in comma-separated format. The `ids` and `names`
          parameters cannot be provided together.
        required: false
        style: form
        explode: false
        schema:
          type: array
          items:
            type: string
      - name: limit
        in: query
        description: "Limits the size of the response to the specified number of objects\
          \ on each page. To return the total number of resources, set `limit=0`.\
          \ The total number of resources is returned as a `total_item_count` value.\
          \ If the page size requested is larger than the system maximum limit, the\
          \ server returns the maximum limit, disregarding the requested page size."
        required: false
        style: form
        explode: true
        schema:
          minimum: 1
          type: integer
          format: int32
        example: 10
      - name: names
        in: query
        description: "Performs the operation on the unique name specified. Enter multiple\
          \ names in comma-separated format. For example, `name01,name02`."
        required: false
        style: form
        explode: false
        schema:
          type: array
          items:
            type: string
      - name: offset
        in: query
        description: The starting position based on the results of the query in relation
          to the full set of response objects returned.
        required: false
        style: form
        explode: true
        schema:
          minimum: 0
          type: integer
          format: int32
        example: 10
      - name: software_ids
        in: query
        description: A comma-separated list of software IDs.
        required: false
        style: form
        explode: false
        schema:
          type: array
          items:
            type: string
      - name: software_names
        in: query
        description: A comma-separated list of software names.
        required: false
        style: form
        explode: false
        schema:
          type: array
          items:
            type: string
      - name: sort
        in: query
        description: "Returns the response objects in the order specified. Set `sort`\
          \ to the name in the response by which to sort. Sorting can be performed\
          \ on any of the names in the response, and the objects can be sorted in\
          \ ascending or descending order. By default, the response objects are sorted\
          \ in ascending order. To sort in descending order, append the minus sign\
          \ (`-`) to the name. A single request can be sorted on multiple objects.\
          \ For example, you can sort all volumes from largest to smallest volume\
          \ size, and then sort volumes of the same size in ascending order by volume\
          \ name. To sort on multiple names, list the names as comma-separated values."
        required: false
        style: form
        explode: false
        schema:
          type: array
          items:
            pattern: "^[a-z]+(_[a-z]+)*-?"
            type: string
      - name: total_item_count
        in: query
        description: "If set to `true`, the `total_item_count` matching the specified\
          \ query parameters is calculated and returned in the response. If set to\
          \ `false`, the `total_item_count` is `null` in the response. This may speed\
          \ up queries where the `total_item_count` is large. If not specified, defaults\
          \ to `false`."
        required: false
        style: form
        explode: true
        schema:
          type: boolean
      responses:
        "200":
          description: OK
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/inline_response_200_148'
    post:
      tags:
      - Software
      summary: Create a software upgrade
      description: Creates and initiates a software upgrade.
      parameters:
      - name: Authorization
        in: header
        description: "Access token (in JWT format) required to use any API endpoint\
          \ (except `/oauth2`, `/login`, and `/logout`)"
        required: false
        style: simple
        explode: false
        schema:
          type: string
      - name: X-Request-ID
        in: header
        description: Supplied by client during request or generated by server.
        required: false
        style: simple
        explode: false
        schema:
          type: string
      - name: software_ids
        in: query
        description: A comma-separated list of software IDs.
        required: true
        style: form
        explode: false
        schema:
          type: array
          items:
            type: string
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/2_8_softwareinstallations_body'
        required: true
      responses:
        "200":
          description: The software upgrade record was created successfully.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/inline_response_200_149'
    patch:
      tags:
      - Software
      summary: Modify software upgrade
      description: "Modifies a software upgrade by continuing, retrying, or aborting\
        \ it. All `override_checks` are updated before the command being issued if\
        \ `add_override_checks` is present. The `override_checks` parameter is valid\
        \ when `command` is `continue` or `retry`."
      parameters:
      - name: Authorization
        in: header
        description: "Access token (in JWT format) required to use any API endpoint\
          \ (except `/oauth2`, `/login`, and `/logout`)"
        required: false
        style: simple
        explode: false
        schema:
          type: string
      - name: X-Request-ID
        in: header
        description: Supplied by client during request or generated by server.
        required: false
        style: simple
        explode: false
        schema:
          type: string
      - name: command
        in: query
        description: "A user command that interacts with the upgrade. Commands may\
          \ only be issued when the upgrade is paused. Valid values are `continue`,\
          \ `retry`, and `abort`. The `continue` command continues a `paused` upgrade.\
          \ The `retry` command retries the previous step. The `abort` command aborts\
          \ the upgrade."
        required: true
        style: form
        explode: true
        schema:
          type: string
      - name: current_step_id
        in: query
        description: The current step `id` of the installation.
        required: true
        style: form
        explode: true
        schema:
          type: string
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/2_8_softwareinstallations_body_1'
      responses:
        "200":
          description: The `command` was issued and/or `override_checks` was updated.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/inline_response_200_149'
  /api/2.8/software-installation-steps:
    get:
      tags:
      - Software
      summary: List software upgrade steps
      description: Displays a list of currently running and completed software upgrade
        steps.
      parameters:
      - name: Authorization
        in: header
        description: "Access token (in JWT format) required to use any API endpoint\
          \ (except `/oauth2`, `/login`, and `/logout`)"
        required: false
        style: simple
        explode: false
        schema:
          type: string
      - name: X-Request-ID
        in: header
        description: Supplied by client during request or generated by server.
        required: false
        style: simple
        explode: false
        schema:
          type: string
      - name: continuation_token
        in: query
        description: A token used to retrieve the next page of data with some consistency
          guaranteed. The token is a Base64 encoded value. Set `continuation_token`
          to the system-generated token taken from the `x-next-token` header field
          of the response. A query has reached its last page when the response does
          not include a token. Pagination requires the `limit` and `continuation_token`
          query parameters.
        required: false
        style: form
        explode: true
        schema:
          type: string
      - name: filter
        in: query
        description: Narrows down the results to only the response objects that satisfy
          the filter criteria.
        required: false
        style: form
        explode: true
        schema:
          type: string
      - name: ids
        in: query
        description: Performs the operation on the unique resource IDs specified.
          Enter multiple resource IDs in comma-separated format. The `ids` and `names`
          parameters cannot be provided together.
        required: false
        style: form
        explode: false
        schema:
          type: array
          items:
            type: string
      - name: limit
        in: query
        description: "Limits the size of the response to the specified number of objects\
          \ on each page. To return the total number of resources, set `limit=0`.\
          \ The total number of resources is returned as a `total_item_count` value.\
          \ If the page size requested is larger than the system maximum limit, the\
          \ server returns the maximum limit, disregarding the requested page size."
        required: false
        style: form
        explode: true
        schema:
          minimum: 1
          type: integer
          format: int32
        example: 10
      - name: names
        in: query
        description: "Performs the operation on the unique name specified. Enter multiple\
          \ names in comma-separated format. For example, `name01,name02`."
        required: false
        style: form
        explode: false
        schema:
          type: array
          items:
            type: string
      - name: offset
        in: query
        description: The starting position based on the results of the query in relation
          to the full set of response objects returned.
        required: false
        style: form
        explode: true
        schema:
          minimum: 0
          type: integer
          format: int32
        example: 10
      - name: software_installation_ids
        in: query
        description: A comma-separated list of software installation IDs.
        required: false
        style: form
        explode: false
        schema:
          type: array
          items:
            type: string
      - name: sort
        in: query
        description: "Returns the response objects in the order specified. Set `sort`\
          \ to the name in the response by which to sort. Sorting can be performed\
          \ on any of the names in the response, and the objects can be sorted in\
          \ ascending or descending order. By default, the response objects are sorted\
          \ in ascending order. To sort in descending order, append the minus sign\
          \ (`-`) to the name. A single request can be sorted on multiple objects.\
          \ For example, you can sort all volumes from largest to smallest volume\
          \ size, and then sort volumes of the same size in ascending order by volume\
          \ name. To sort on multiple names, list the names as comma-separated values."
        required: false
        style: form
        explode: false
        schema:
          type: array
          items:
            pattern: "^[a-z]+(_[a-z]+)*-?"
            type: string
      - name: total_item_count
        in: query
        description: "If set to `true`, the `total_item_count` matching the specified\
          \ query parameters is calculated and returned in the response. If set to\
          \ `false`, the `total_item_count` is `null` in the response. This may speed\
          \ up queries where the `total_item_count` is large. If not specified, defaults\
          \ to `false`."
        required: false
        style: form
        explode: true
        schema:
          type: boolean
      responses:
        "200":
          description: OK
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/inline_response_200_150'
  /api/2.8/subnets:
    get:
      tags:
      - Subnets
      summary: List subnets
      description: Displays a list of subnets with statuses and attributes.
      parameters:
      - name: Authorization
        in: header
        description: "Access token (in JWT format) required to use any API endpoint\
          \ (except `/oauth2`, `/login`, and `/logout`)"
        required: false
        style: simple
        explode: false
        schema:
          type: string
      - name: X-Request-ID
        in: header
        description: Supplied by client during request or generated by server.
        required: false
        style: simple
        explode: false
        schema:
          type: string
      - name: continuation_token
        in: query
        description: A token used to retrieve the next page of data with some consistency
          guaranteed. The token is a Base64 encoded value. Set `continuation_token`
          to the system-generated token taken from the `x-next-token` header field
          of the response. A query has reached its last page when the response does
          not include a token. Pagination requires the `limit` and `continuation_token`
          query parameters.
        required: false
        style: form
        explode: true
        schema:
          type: string
      - name: filter
        in: query
        description: Narrows down the results to only the response objects that satisfy
          the filter criteria.
        required: false
        style: form
        explode: true
        schema:
          type: string
      - name: limit
        in: query
        description: "Limits the size of the response to the specified number of objects\
          \ on each page. To return the total number of resources, set `limit=0`.\
          \ The total number of resources is returned as a `total_item_count` value.\
          \ If the page size requested is larger than the system maximum limit, the\
          \ server returns the maximum limit, disregarding the requested page size."
        required: false
        style: form
        explode: true
        schema:
          minimum: 1
          type: integer
          format: int32
        example: 10
      - name: names
        in: query
        description: "Performs the operation on the unique name specified. Enter multiple\
          \ names in comma-separated format. For example, `name01,name02`."
        required: false
        style: form
        explode: false
        schema:
          type: array
          items:
            type: string
      - name: offset
        in: query
        description: The starting position based on the results of the query in relation
          to the full set of response objects returned.
        required: false
        style: form
        explode: true
        schema:
          minimum: 0
          type: integer
          format: int32
        example: 10
      - name: sort
        in: query
        description: "Returns the response objects in the order specified. Set `sort`\
          \ to the name in the response by which to sort. Sorting can be performed\
          \ on any of the names in the response, and the objects can be sorted in\
          \ ascending or descending order. By default, the response objects are sorted\
          \ in ascending order. To sort in descending order, append the minus sign\
          \ (`-`) to the name. A single request can be sorted on multiple objects.\
          \ For example, you can sort all volumes from largest to smallest volume\
          \ size, and then sort volumes of the same size in ascending order by volume\
          \ name. To sort on multiple names, list the names as comma-separated values."
        required: false
        style: form
        explode: false
        schema:
          type: array
          items:
            pattern: "^[a-z]+(_[a-z]+)*-?"
            type: string
      - name: total_item_count
        in: query
        description: "If set to `true`, the `total_item_count` matching the specified\
          \ query parameters is calculated and returned in the response. If set to\
          \ `false`, the `total_item_count` is `null` in the response. This may speed\
          \ up queries where the `total_item_count` is large. If not specified, defaults\
          \ to `false`."
        required: false
        style: form
        explode: true
        schema:
          type: boolean
      responses:
        "200":
          description: OK
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/inline_response_200_151'
    post:
      tags:
      - Subnets
      summary: Create subnet
      description: Creates a subnet with the specified parameters.
      parameters:
      - name: Authorization
        in: header
        description: "Access token (in JWT format) required to use any API endpoint\
          \ (except `/oauth2`, `/login`, and `/logout`)"
        required: false
        style: simple
        explode: false
        schema:
          type: string
      - name: X-Request-ID
        in: header
        description: Supplied by client during request or generated by server.
        required: false
        style: simple
        explode: false
        schema:
          type: string
      - name: names
        in: query
        description: "Performs the operation on the unique name specified. For example,\
          \ `name01`. Enter multiple names in comma-separated format."
        required: true
        style: form
        explode: false
        schema:
          type: array
          items:
            type: string
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/2_8_subnets_body'
        required: true
      responses:
        "200":
          description: Displays the newly created subnet.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/inline_response_200_152'
    delete:
      tags:
      - Subnets
      summary: Delete subnet
      description: Deletes subnets. A subnet can only be deleted if it has no interfaces.
        Interfaces must be removed by using the `network-interfaces` endpoint.
      parameters:
      - name: Authorization
        in: header
        description: "Access token (in JWT format) required to use any API endpoint\
          \ (except `/oauth2`, `/login`, and `/logout`)"
        required: false
        style: simple
        explode: false
        schema:
          type: string
      - name: X-Request-ID
        in: header
        description: Supplied by client during request or generated by server.
        required: false
        style: simple
        explode: false
        schema:
          type: string
      - name: names
        in: query
        description: "Performs the operation on the unique name specified. Enter multiple\
          \ names in comma-separated format. For example, `name01,name02`."
        required: false
        style: form
        explode: false
        schema:
          type: array
          items:
            type: string
      responses:
        "200":
          description: OK
    patch:
      tags:
      - Subnets
      summary: Modify subnet
      description: Modifies one or more specified subnet properties.
      parameters:
      - name: Authorization
        in: header
        description: "Access token (in JWT format) required to use any API endpoint\
          \ (except `/oauth2`, `/login`, and `/logout`)"
        required: false
        style: simple
        explode: false
        schema:
          type: string
      - name: X-Request-ID
        in: header
        description: Supplied by client during request or generated by server.
        required: false
        style: simple
        explode: false
        schema:
          type: string
      - name: names
        in: query
        description: "Performs the operation on the unique name specified. Enter multiple\
          \ names in comma-separated format. For example, `name01,name02`."
        required: false
        style: form
        explode: false
        schema:
          type: array
          items:
            type: string
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/2_8_subnets_body_1'
        required: true
      responses:
        "200":
          description: Displays the updated subnet.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/inline_response_200_152'
  /api/2.8/support:
    get:
      tags:
      - Support
      summary: List connection paths
      description: Displays connection paths between the current array and each connected
        array.
      parameters:
      - name: Authorization
        in: header
        description: "Access token (in JWT format) required to use any API endpoint\
          \ (except `/oauth2`, `/login`, and `/logout`)"
        required: false
        style: simple
        explode: false
        schema:
          type: string
      - name: X-Request-ID
        in: header
        description: Supplied by client during request or generated by server.
        required: false
        style: simple
        explode: false
        schema:
          type: string
      - name: continuation_token
        in: query
        description: A token used to retrieve the next page of data with some consistency
          guaranteed. The token is a Base64 encoded value. Set `continuation_token`
          to the system-generated token taken from the `x-next-token` header field
          of the response. A query has reached its last page when the response does
          not include a token. Pagination requires the `limit` and `continuation_token`
          query parameters.
        required: false
        style: form
        explode: true
        schema:
          type: string
      - name: filter
        in: query
        description: Narrows down the results to only the response objects that satisfy
          the filter criteria.
        required: false
        style: form
        explode: true
        schema:
          type: string
      - name: limit
        in: query
        description: "Limits the size of the response to the specified number of objects\
          \ on each page. To return the total number of resources, set `limit=0`.\
          \ The total number of resources is returned as a `total_item_count` value.\
          \ If the page size requested is larger than the system maximum limit, the\
          \ server returns the maximum limit, disregarding the requested page size."
        required: false
        style: form
        explode: true
        schema:
          minimum: 1
          type: integer
          format: int32
        example: 10
      - name: offset
        in: query
        description: The starting position based on the results of the query in relation
          to the full set of response objects returned.
        required: false
        style: form
        explode: true
        schema:
          minimum: 0
          type: integer
          format: int32
        example: 10
      - name: sort
        in: query
        description: "Returns the response objects in the order specified. Set `sort`\
          \ to the name in the response by which to sort. Sorting can be performed\
          \ on any of the names in the response, and the objects can be sorted in\
          \ ascending or descending order. By default, the response objects are sorted\
          \ in ascending order. To sort in descending order, append the minus sign\
          \ (`-`) to the name. A single request can be sorted on multiple objects.\
          \ For example, you can sort all volumes from largest to smallest volume\
          \ size, and then sort volumes of the same size in ascending order by volume\
          \ name. To sort on multiple names, list the names as comma-separated values."
        required: false
        style: form
        explode: false
        schema:
          type: array
          items:
            pattern: "^[a-z]+(_[a-z]+)*-?"
            type: string
      - name: total_item_count
        in: query
        description: "If set to `true`, the `total_item_count` matching the specified\
          \ query parameters is calculated and returned in the response. If set to\
          \ `false`, the `total_item_count` is `null` in the response. This may speed\
          \ up queries where the `total_item_count` is large. If not specified, defaults\
          \ to `false`."
        required: false
        style: form
        explode: true
        schema:
          type: boolean
      responses:
        "200":
          description: OK
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/inline_response_200_153'
    patch:
      tags:
      - Support
      summary: Create connection path
      description: Creates a connection path from the array to another array.
      parameters:
      - name: Authorization
        in: header
        description: "Access token (in JWT format) required to use any API endpoint\
          \ (except `/oauth2`, `/login`, and `/logout`)"
        required: false
        style: simple
        explode: false
        schema:
          type: string
      - name: X-Request-ID
        in: header
        description: Supplied by client during request or generated by server.
        required: false
        style: simple
        explode: false
        schema:
          type: string
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/2_8_support_body'
        required: true
      responses:
        "200":
          description: OK
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/inline_response_200_154'
  /api/2.8/support/test:
    get:
      tags:
      - Support
      summary: List Pure Storage Support connection data
      description: Displays information about whether the array can connect to Pure
        Storage Support by establishing a secure shell or secure HTTP connection and
        verifies that messages can be exchanged.
      parameters:
      - name: Authorization
        in: header
        description: "Access token (in JWT format) required to use any API endpoint\
          \ (except `/oauth2`, `/login`, and `/logout`)"
        required: false
        style: simple
        explode: false
        schema:
          type: string
      - name: X-Request-ID
        in: header
        description: Supplied by client during request or generated by server.
        required: false
        style: simple
        explode: false
        schema:
          type: string
      - name: filter
        in: query
        description: Narrows down the results to only the response objects that satisfy
          the filter criteria.
        required: false
        style: form
        explode: true
        schema:
          type: string
      - name: limit
        in: query
        description: "Limits the size of the response to the specified number of objects\
          \ on each page. To return the total number of resources, set `limit=0`.\
          \ The total number of resources is returned as a `total_item_count` value.\
          \ If the page size requested is larger than the system maximum limit, the\
          \ server returns the maximum limit, disregarding the requested page size."
        required: false
        style: form
        explode: true
        schema:
          minimum: 1
          type: integer
          format: int32
        example: 10
      - name: offset
        in: query
        description: The starting position based on the results of the query in relation
          to the full set of response objects returned.
        required: false
        style: form
        explode: true
        schema:
          minimum: 0
          type: integer
          format: int32
        example: 10
      - name: sort
        in: query
        description: "Returns the response objects in the order specified. Set `sort`\
          \ to the name in the response by which to sort. Sorting can be performed\
          \ on any of the names in the response, and the objects can be sorted in\
          \ ascending or descending order. By default, the response objects are sorted\
          \ in ascending order. To sort in descending order, append the minus sign\
          \ (`-`) to the name. A single request can be sorted on multiple objects.\
          \ For example, you can sort all volumes from largest to smallest volume\
          \ size, and then sort volumes of the same size in ascending order by volume\
          \ name. To sort on multiple names, list the names as comma-separated values."
        required: false
        style: form
        explode: false
        schema:
          type: array
          items:
            pattern: "^[a-z]+(_[a-z]+)*-?"
            type: string
      - name: test_type
        in: query
        description: "Specifies the type of test. Valid values are `all`, `phonehome`,\
          \ and `remote-assist`. If not specified, defaults to `all`."
        required: false
        style: form
        explode: true
        schema:
          type: string
      - name: total_item_count
        in: query
        description: "If set to `true`, the `total_item_count` matching the specified\
          \ query parameters is calculated and returned in the response. If set to\
          \ `false`, the `total_item_count` is `null` in the response. This may speed\
          \ up queries where the `total_item_count` is large. If not specified, defaults\
          \ to `false`."
        required: false
        style: form
        explode: true
        schema:
          type: boolean
      responses:
        "200":
          description: OK
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/inline_response_200_30'
  /api/2.8/syslog-servers:
    get:
      tags:
      - Syslog
      summary: List syslog servers
      description: Displays a list of configured syslog servers.
      parameters:
      - name: Authorization
        in: header
        description: "Access token (in JWT format) required to use any API endpoint\
          \ (except `/oauth2`, `/login`, and `/logout`)"
        required: false
        style: simple
        explode: false
        schema:
          type: string
      - name: X-Request-ID
        in: header
        description: Supplied by client during request or generated by server.
        required: false
        style: simple
        explode: false
        schema:
          type: string
      - name: continuation_token
        in: query
        description: A token used to retrieve the next page of data with some consistency
          guaranteed. The token is a Base64 encoded value. Set `continuation_token`
          to the system-generated token taken from the `x-next-token` header field
          of the response. A query has reached its last page when the response does
          not include a token. Pagination requires the `limit` and `continuation_token`
          query parameters.
        required: false
        style: form
        explode: true
        schema:
          type: string
      - name: filter
        in: query
        description: Narrows down the results to only the response objects that satisfy
          the filter criteria.
        required: false
        style: form
        explode: true
        schema:
          type: string
      - name: limit
        in: query
        description: "Limits the size of the response to the specified number of objects\
          \ on each page. To return the total number of resources, set `limit=0`.\
          \ The total number of resources is returned as a `total_item_count` value.\
          \ If the page size requested is larger than the system maximum limit, the\
          \ server returns the maximum limit, disregarding the requested page size."
        required: false
        style: form
        explode: true
        schema:
          minimum: 1
          type: integer
          format: int32
        example: 10
      - name: names
        in: query
        description: "Performs the operation on the unique name specified. Enter multiple\
          \ names in comma-separated format. For example, `name01,name02`."
        required: false
        style: form
        explode: false
        schema:
          type: array
          items:
            type: string
      - name: offset
        in: query
        description: The starting position based on the results of the query in relation
          to the full set of response objects returned.
        required: false
        style: form
        explode: true
        schema:
          minimum: 0
          type: integer
          format: int32
        example: 10
      - name: sort
        in: query
        description: "Returns the response objects in the order specified. Set `sort`\
          \ to the name in the response by which to sort. Sorting can be performed\
          \ on any of the names in the response, and the objects can be sorted in\
          \ ascending or descending order. By default, the response objects are sorted\
          \ in ascending order. To sort in descending order, append the minus sign\
          \ (`-`) to the name. A single request can be sorted on multiple objects.\
          \ For example, you can sort all volumes from largest to smallest volume\
          \ size, and then sort volumes of the same size in ascending order by volume\
          \ name. To sort on multiple names, list the names as comma-separated values."
        required: false
        style: form
        explode: false
        schema:
          type: array
          items:
            pattern: "^[a-z]+(_[a-z]+)*-?"
            type: string
      - name: total_item_count
        in: query
        description: "If set to `true`, the `total_item_count` matching the specified\
          \ query parameters is calculated and returned in the response. If set to\
          \ `false`, the `total_item_count` is `null` in the response. This may speed\
          \ up queries where the `total_item_count` is large. If not specified, defaults\
          \ to `false`."
        required: false
        style: form
        explode: true
        schema:
          type: boolean
      responses:
        "200":
          description: OK
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/inline_response_200_155'
    post:
      tags:
      - Syslog
      summary: Create syslog server
      description: Creates a new syslog server. Transmission of syslog messages is
        enabled immediately.
      parameters:
      - name: Authorization
        in: header
        description: "Access token (in JWT format) required to use any API endpoint\
          \ (except `/oauth2`, `/login`, and `/logout`)"
        required: false
        style: simple
        explode: false
        schema:
          type: string
      - name: X-Request-ID
        in: header
        description: Supplied by client during request or generated by server.
        required: false
        style: simple
        explode: false
        schema:
          type: string
      - name: names
        in: query
        description: "Performs the operation on the unique name specified. Enter multiple\
          \ names in comma-separated format. For example, `name01,name02`."
        required: false
        style: form
        explode: false
        schema:
          type: array
          items:
            type: string
      requestBody:
        $ref: '#/components/requestBodies/SyslogServer'
      responses:
        "200":
          description: Displays the newly configured syslog server.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/inline_response_200_156'
    delete:
      tags:
      - Syslog
      summary: Delete syslog server
      description: Deletes a configured syslog server and stop forwarding syslog messages.
      parameters:
      - name: Authorization
        in: header
        description: "Access token (in JWT format) required to use any API endpoint\
          \ (except `/oauth2`, `/login`, and `/logout`)"
        required: false
        style: simple
        explode: false
        schema:
          type: string
      - name: X-Request-ID
        in: header
        description: Supplied by client during request or generated by server.
        required: false
        style: simple
        explode: false
        schema:
          type: string
      - name: names
        in: query
        description: "Performs the operation on the unique name specified. Enter multiple\
          \ names in comma-separated format. For example, `name01,name02`."
        required: false
        style: form
        explode: false
        schema:
          type: array
          items:
            type: string
      responses:
        "200":
          description: OK
    patch:
      tags:
      - Syslog
      summary: Modify syslog server
      description: Modifies the URI of a configured syslog server.
      parameters:
      - name: Authorization
        in: header
        description: "Access token (in JWT format) required to use any API endpoint\
          \ (except `/oauth2`, `/login`, and `/logout`)"
        required: false
        style: simple
        explode: false
        schema:
          type: string
      - name: X-Request-ID
        in: header
        description: Supplied by client during request or generated by server.
        required: false
        style: simple
        explode: false
        schema:
          type: string
      - name: names
        in: query
        description: "Performs the operation on the unique name specified. Enter multiple\
          \ names in comma-separated format. For example, `name01,name02`."
        required: false
        style: form
        explode: false
        schema:
          type: array
          items:
            type: string
      requestBody:
        $ref: '#/components/requestBodies/SyslogServer'
      responses:
        "200":
          description: Displays the newly updated syslog server.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/inline_response_200_156'
  /api/2.8/syslog-servers/settings:
    get:
      tags:
      - Syslog
      summary: List syslog settings
      description: "Displays syslog settings. Values include `continuation_token`,\
        \ `items`, `more_items_remaining`, and `total_item_count`."
      parameters:
      - name: Authorization
        in: header
        description: "Access token (in JWT format) required to use any API endpoint\
          \ (except `/oauth2`, `/login`, and `/logout`)"
        required: false
        style: simple
        explode: false
        schema:
          type: string
      - name: X-Request-ID
        in: header
        description: Supplied by client during request or generated by server.
        required: false
        style: simple
        explode: false
        schema:
          type: string
      - name: filter
        in: query
        description: Narrows down the results to only the response objects that satisfy
          the filter criteria.
        required: false
        style: form
        explode: true
        schema:
          type: string
      - name: limit
        in: query
        description: "Limits the size of the response to the specified number of objects\
          \ on each page. To return the total number of resources, set `limit=0`.\
          \ The total number of resources is returned as a `total_item_count` value.\
          \ If the page size requested is larger than the system maximum limit, the\
          \ server returns the maximum limit, disregarding the requested page size."
        required: false
        style: form
        explode: true
        schema:
          minimum: 1
          type: integer
          format: int32
        example: 10
      - name: offset
        in: query
        description: The starting position based on the results of the query in relation
          to the full set of response objects returned.
        required: false
        style: form
        explode: true
        schema:
          minimum: 0
          type: integer
          format: int32
        example: 10
      - name: sort
        in: query
        description: "Returns the response objects in the order specified. Set `sort`\
          \ to the name in the response by which to sort. Sorting can be performed\
          \ on any of the names in the response, and the objects can be sorted in\
          \ ascending or descending order. By default, the response objects are sorted\
          \ in ascending order. To sort in descending order, append the minus sign\
          \ (`-`) to the name. A single request can be sorted on multiple objects.\
          \ For example, you can sort all volumes from largest to smallest volume\
          \ size, and then sort volumes of the same size in ascending order by volume\
          \ name. To sort on multiple names, list the names as comma-separated values."
        required: false
        style: form
        explode: false
        schema:
          type: array
          items:
            pattern: "^[a-z]+(_[a-z]+)*-?"
            type: string
      - name: total_item_count
        in: query
        description: "If set to `true`, the `total_item_count` matching the specified\
          \ query parameters is calculated and returned in the response. If set to\
          \ `false`, the `total_item_count` is `null` in the response. This may speed\
          \ up queries where the `total_item_count` is large. If not specified, defaults\
          \ to `false`."
        required: false
        style: form
        explode: true
        schema:
          type: boolean
      responses:
        "200":
          description: OK
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/inline_response_200_157'
    patch:
      tags:
      - Syslog
      summary: Modify syslog settings
      description: "Modifies syslog settings. Values include `continuation_token`,\
        \ `items`, `more_items_remaining`, and `total_item_count`."
      parameters:
      - name: Authorization
        in: header
        description: "Access token (in JWT format) required to use any API endpoint\
          \ (except `/oauth2`, `/login`, and `/logout`)"
        required: false
        style: simple
        explode: false
        schema:
          type: string
      - name: X-Request-ID
        in: header
        description: Supplied by client during request or generated by server.
        required: false
        style: simple
        explode: false
        schema:
          type: string
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/SyslogServerSettings'
        required: true
      responses:
        "200":
          description: OK
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/inline_response_200_158'
  /api/2.8/syslog-servers/test:
    get:
      tags:
      - Syslog
      summary: List syslog server test results
      description: "Displays syslog server test results, which indicate whether the\
        \ syslog is working and configured correctly."
      parameters:
      - name: Authorization
        in: header
        description: "Access token (in JWT format) required to use any API endpoint\
          \ (except `/oauth2`, `/login`, and `/logout`)"
        required: false
        style: simple
        explode: false
        schema:
          type: string
      - name: X-Request-ID
        in: header
        description: Supplied by client during request or generated by server.
        required: false
        style: simple
        explode: false
        schema:
          type: string
      - name: filter
        in: query
        description: Narrows down the results to only the response objects that satisfy
          the filter criteria.
        required: false
        style: form
        explode: true
        schema:
          type: string
      - name: limit
        in: query
        description: "Limits the size of the response to the specified number of objects\
          \ on each page. To return the total number of resources, set `limit=0`.\
          \ The total number of resources is returned as a `total_item_count` value.\
          \ If the page size requested is larger than the system maximum limit, the\
          \ server returns the maximum limit, disregarding the requested page size."
        required: false
        style: form
        explode: true
        schema:
          minimum: 1
          type: integer
          format: int32
        example: 10
      - name: offset
        in: query
        description: The starting position based on the results of the query in relation
          to the full set of response objects returned.
        required: false
        style: form
        explode: true
        schema:
          minimum: 0
          type: integer
          format: int32
        example: 10
      - name: sort
        in: query
        description: "Returns the response objects in the order specified. Set `sort`\
          \ to the name in the response by which to sort. Sorting can be performed\
          \ on any of the names in the response, and the objects can be sorted in\
          \ ascending or descending order. By default, the response objects are sorted\
          \ in ascending order. To sort in descending order, append the minus sign\
          \ (`-`) to the name. A single request can be sorted on multiple objects.\
          \ For example, you can sort all volumes from largest to smallest volume\
          \ size, and then sort volumes of the same size in ascending order by volume\
          \ name. To sort on multiple names, list the names as comma-separated values."
        required: false
        style: form
        explode: false
        schema:
          type: array
          items:
            pattern: "^[a-z]+(_[a-z]+)*-?"
            type: string
      - name: total_item_count
        in: query
        description: "If set to `true`, the `total_item_count` matching the specified\
          \ query parameters is calculated and returned in the response. If set to\
          \ `false`, the `total_item_count` is `null` in the response. This may speed\
          \ up queries where the `total_item_count` is large. If not specified, defaults\
          \ to `false`."
        required: false
        style: form
        explode: true
        schema:
          type: boolean
      responses:
        "200":
          description: OK
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/inline_response_200_16'
  /api/2.8/volumes:
    get:
      tags:
      - Volumes
      summary: List volumes
      description: "Displays a list of volumes, including those pending eradication."
      parameters:
      - name: Authorization
        in: header
        description: "Access token (in JWT format) required to use any API endpoint\
          \ (except `/oauth2`, `/login`, and `/logout`)"
        required: false
        style: simple
        explode: false
        schema:
          type: string
      - name: X-Request-ID
        in: header
        description: Supplied by client during request or generated by server.
        required: false
        style: simple
        explode: false
        schema:
          type: string
      - name: continuation_token
        in: query
        description: A token used to retrieve the next page of data with some consistency
          guaranteed. The token is a Base64 encoded value. Set `continuation_token`
          to the system-generated token taken from the `x-next-token` header field
          of the response. A query has reached its last page when the response does
          not include a token. Pagination requires the `limit` and `continuation_token`
          query parameters.
        required: false
        style: form
        explode: true
        schema:
          type: string
      - name: destroyed
        in: query
        description: "If set to `true`, lists only destroyed objects that are in the\
          \ eradication pending state. If set to `false`, lists only objects that\
          \ are not destroyed. For destroyed objects, the time remaining is displayed\
          \ in milliseconds."
        required: false
        style: form
        explode: true
        schema:
          type: boolean
      - name: filter
        in: query
        description: Narrows down the results to only the response objects that satisfy
          the filter criteria.
        required: false
        style: form
        explode: true
        schema:
          type: string
      - name: ids
        in: query
        description: Performs the operation on the unique resource IDs specified.
          Enter multiple resource IDs in comma-separated format. The `ids` and `names`
          parameters cannot be provided together.
        required: false
        style: form
        explode: false
        schema:
          type: array
          items:
            type: string
      - name: limit
        in: query
        description: "Limits the size of the response to the specified number of objects\
          \ on each page. To return the total number of resources, set `limit=0`.\
          \ The total number of resources is returned as a `total_item_count` value.\
          \ If the page size requested is larger than the system maximum limit, the\
          \ server returns the maximum limit, disregarding the requested page size."
        required: false
        style: form
        explode: true
        schema:
          minimum: 1
          type: integer
          format: int32
        example: 10
      - name: names
        in: query
        description: "Performs the operation on the unique name specified. Enter multiple\
          \ names in comma-separated format. For example, `name01,name02`."
        required: false
        style: form
        explode: false
        schema:
          type: array
          items:
            type: string
      - name: offset
        in: query
        description: The starting position based on the results of the query in relation
          to the full set of response objects returned.
        required: false
        style: form
        explode: true
        schema:
          minimum: 0
          type: integer
          format: int32
        example: 10
      - name: sort
        in: query
        description: "Returns the response objects in the order specified. Set `sort`\
          \ to the name in the response by which to sort. Sorting can be performed\
          \ on any of the names in the response, and the objects can be sorted in\
          \ ascending or descending order. By default, the response objects are sorted\
          \ in ascending order. To sort in descending order, append the minus sign\
          \ (`-`) to the name. A single request can be sorted on multiple objects.\
          \ For example, you can sort all volumes from largest to smallest volume\
          \ size, and then sort volumes of the same size in ascending order by volume\
          \ name. To sort on multiple names, list the names as comma-separated values."
        required: false
        style: form
        explode: false
        schema:
          type: array
          items:
            pattern: "^[a-z]+(_[a-z]+)*-?"
            type: string
      - name: total_item_count
        in: query
        description: "If set to `true`, the `total_item_count` matching the specified\
          \ query parameters is calculated and returned in the response. If set to\
          \ `false`, the `total_item_count` is `null` in the response. This may speed\
          \ up queries where the `total_item_count` is large. If not specified, defaults\
          \ to `false`."
        required: false
        style: form
        explode: true
        schema:
          type: boolean
      - name: total_only
        in: query
        description: "If set to `true`, returns the aggregate value of all items after\
          \ filtering. Where it makes more sense, the average value is displayed instead.\
          \ The values are displayed for each name where meaningful. If `total_only=true`,\
          \ the `items` list will be empty."
        required: false
        style: form
        explode: true
        schema:
          type: boolean
      responses:
        "200":
          description: OK
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/inline_response_200_159'
    post:
      tags:
      - Volumes
      summary: Create a volume
      description: "Creates one or more virtual storage volumes of the specified size.\
        \ If `provisioned` is not specified, the size of the new volume defaults to\
        \ 1 MB in size. The `names` query parameter is required."
      parameters:
      - name: Authorization
        in: header
        description: "Access token (in JWT format) required to use any API endpoint\
          \ (except `/oauth2`, `/login`, and `/logout`)"
        required: false
        style: simple
        explode: false
        schema:
          type: string
      - name: X-Request-ID
        in: header
        description: Supplied by client during request or generated by server.
        required: false
        style: simple
        explode: false
        schema:
          type: string
      - name: names
        in: query
        description: "Performs the operation on the unique name specified. Enter multiple\
          \ names in comma-separated format. For example, `name01,name02`."
        required: false
        style: form
        explode: false
        schema:
          type: array
          items:
            type: string
      - name: overwrite
        in: query
        description: "If set to `true`, overwrites an existing volume during a volume\
          \ copy operation. If set to `false` or not set at all and the target name\
          \ is an existing volume, the volume copy operation fails. Required if the\
          \ `source: id` or `source: name` body parameter is set and the source overwrites\
          \ an existing volume during the volume copy operation."
        required: false
        style: form
        explode: true
        schema:
          type: boolean
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/2_8_volumes_body'
        required: true
      responses:
        "200":
          description: OK
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/inline_response_200_160'
    delete:
      tags:
      - Volumes
      summary: Delete a volume
      description: "Deletes a volume that has been destroyed and is pending eradication.\
        \ Eradicated volumes cannot be recovered. Volumes are destroyed using the\
        \ `PATCH` method. The `ids` or `names` parameter is required, but they cannot\
        \ be set together."
      parameters:
      - name: Authorization
        in: header
        description: "Access token (in JWT format) required to use any API endpoint\
          \ (except `/oauth2`, `/login`, and `/logout`)"
        required: false
        style: simple
        explode: false
        schema:
          type: string
      - name: X-Request-ID
        in: header
        description: Supplied by client during request or generated by server.
        required: false
        style: simple
        explode: false
        schema:
          type: string
      - name: ids
        in: query
        description: Performs the operation on the unique resource IDs specified.
          Enter multiple resource IDs in comma-separated format. The `ids` and `names`
          parameters cannot be provided together.
        required: false
        style: form
        explode: false
        schema:
          type: array
          items:
            type: string
      - name: names
        in: query
        description: "Performs the operation on the unique name specified. Enter multiple\
          \ names in comma-separated format. For example, `name01,name02`."
        required: false
        style: form
        explode: false
        schema:
          type: array
          items:
            type: string
      responses:
        "200":
          description: OK
    patch:
      tags:
      - Volumes
      summary: Update a volume
      description: "Updates a volume, renaming, destroying, or resizing it. To rename\
        \ a volume, set `name` to the new name. To destroy a volume, set `destroyed=true`.\
        \ To recover a volume that has been destroyed and is pending eradication,\
        \ set `destroyed=false`. Sets the bandwidth and IOPs limits of a volume through\
        \ the respective `bandwidth_limit` and `iops_limit` parameter. Moves the volume\
        \ into a pod or volume group through the respective `pod` or `volume_group`\
        \ parameter. The `ids` or `names` parameter is required, but cannot be set\
        \ together."
      parameters:
      - name: Authorization
        in: header
        description: "Access token (in JWT format) required to use any API endpoint\
          \ (except `/oauth2`, `/login`, and `/logout`)"
        required: false
        style: simple
        explode: false
        schema:
          type: string
      - name: X-Request-ID
        in: header
        description: Supplied by client during request or generated by server.
        required: false
        style: simple
        explode: false
        schema:
          type: string
      - name: ids
        in: query
        description: Performs the operation on the unique resource IDs specified.
          Enter multiple resource IDs in comma-separated format. The `ids` and `names`
          parameters cannot be provided together.
        required: false
        style: form
        explode: false
        schema:
          type: array
          items:
            type: string
      - name: names
        in: query
        description: "Performs the operation on the unique name specified. Enter multiple\
          \ names in comma-separated format. For example, `name01,name02`."
        required: false
        style: form
        explode: false
        schema:
          type: array
          items:
            type: string
      - name: truncate
        in: query
        description: "If set to `true`, reduces the size of a volume during a volume\
          \ resize operation. When a volume is truncated, Purity automatically takes\
          \ an undo snapshot, providing a 24-hour window during which the previous\
          \ contents can be retrieved. After truncating a volume, its provisioned\
          \ size can be subsequently increased, but the data in truncated sectors\
          \ cannot be retrieved. If set to `false` or not set at all and the volume\
          \ is being reduced in size, the volume copy operation fails. Required if\
          \ the `provisioned` parameter is set to a volume size that is smaller than\
          \ the original size."
        required: false
        style: form
        explode: true
        schema:
          type: boolean
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/2_8_volumes_body_1'
        required: true
      responses:
        "200":
          description: OK
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/inline_response_200_160'
  /api/2.8/volumes/performance:
    get:
      tags:
      - Volumes
      summary: List volume performance data
      description: "Returns real-time and historical performance data, real-time latency\
        \ data, and average I/O sizes for each volume and and as a total of all volumes\
        \ across the entire array."
      parameters:
      - name: Authorization
        in: header
        description: "Access token (in JWT format) required to use any API endpoint\
          \ (except `/oauth2`, `/login`, and `/logout`)"
        required: false
        style: simple
        explode: false
        schema:
          type: string
      - name: X-Request-ID
        in: header
        description: Supplied by client during request or generated by server.
        required: false
        style: simple
        explode: false
        schema:
          type: string
      - name: destroyed
        in: query
        description: "If set to `true`, lists only destroyed objects that are in the\
          \ eradication pending state. If set to `false`, lists only objects that\
          \ are not destroyed. For destroyed objects, the time remaining is displayed\
          \ in milliseconds."
        required: false
        style: form
        explode: true
        schema:
          type: boolean
      - name: filter
        in: query
        description: Narrows down the results to only the response objects that satisfy
          the filter criteria.
        required: false
        style: form
        explode: true
        schema:
          type: string
      - name: end_time
        in: query
        description: "Displays historical performance data for the specified time\
          \ window, where `start_time` is the beginning of the time window, and `end_time`\
          \ is the end of the time window. The `start_time` and `end_time` parameters\
          \ are specified in milliseconds since the UNIX epoch. If `start_time` is\
          \ not specified, the start time will default to one resolution before the\
          \ end time, meaning that the most recent sample of performance data will\
          \ be displayed. If `end_time`is not specified, the end time will default\
          \ to the current time. Include the `resolution` parameter to display the\
          \ performance data at the specified resolution. If not specified, `resolution`\
          \ defaults to the lowest valid resolution."
        required: false
        style: form
        explode: true
        schema:
          type: integer
          format: int64
      - name: resolution
        in: query
        description: "The number of milliseconds between samples of historical data.\
          \ For array-wide performance metrics (`/arrays/performance` endpoint), valid\
          \ values are `1000` (1 second), `30000` (30 seconds), `300000` (5 minutes),\
          \ `1800000` (30 minutes), `7200000` (2 hours), `28800000` (8 hours), and\
          \ `86400000` (24 hours). For performance metrics on storage objects (`<object\
          \ name>/performance` endpoint), such as volumes, valid values are `30000`\
          \ (30 seconds), `300000` (5 minutes), `1800000` (30 minutes), `7200000`\
          \ (2 hours), `28800000` (8 hours), and `86400000` (24 hours). For space\
          \ metrics, (`<object name>/space` endpoint), valid values are `300000` (5\
          \ minutes), `1800000` (30 minutes), `7200000` (2 hours), `28800000` (8 hours),\
          \ and `86400000` (24 hours). Include the `start_time` parameter to display\
          \ the performance data starting at the specified start time. If `start_time`\
          \ is not specified, the start time will default to one resolution before\
          \ the end time, meaning that the most recent sample of performance data\
          \ will be displayed. Include the `end_time` parameter to display the performance\
          \ data until the specified end time. If `end_time`is not specified, the\
          \ end time will default to the current time. If the `resolution` parameter\
          \ is not specified but either the `start_time` or `end_time` parameter is,\
          \ then `resolution` will default to the lowest valid resolution."
        required: false
        style: form
        explode: true
        schema:
          minimum: 0
          type: integer
          format: int64
        example: 30000
      - name: start_time
        in: query
        description: "Displays historical performance data for the specified time\
          \ window, where `start_time` is the beginning of the time window, and `end_time`\
          \ is the end of the time window. The `start_time` and `end_time` parameters\
          \ are specified in milliseconds since the UNIX epoch. If `start_time` is\
          \ not specified, the start time will default to one resolution before the\
          \ end time, meaning that the most recent sample of performance data will\
          \ be displayed. If `end_time`is not specified, the end time will default\
          \ to the current time. Include the `resolution` parameter to display the\
          \ performance data at the specified resolution. If not specified, `resolution`\
          \ defaults to the lowest valid resolution."
        required: false
        style: form
        explode: true
        schema:
          type: integer
          format: int64
      - name: ids
        in: query
        description: Performs the operation on the unique resource IDs specified.
          Enter multiple resource IDs in comma-separated format. The `ids` and `names`
          parameters cannot be provided together.
        required: false
        style: form
        explode: false
        schema:
          type: array
          items:
            type: string
      - name: limit
        in: query
        description: "Limits the size of the response to the specified number of objects\
          \ on each page. To return the total number of resources, set `limit=0`.\
          \ The total number of resources is returned as a `total_item_count` value.\
          \ If the page size requested is larger than the system maximum limit, the\
          \ server returns the maximum limit, disregarding the requested page size."
        required: false
        style: form
        explode: true
        schema:
          minimum: 1
          type: integer
          format: int32
        example: 10
      - name: names
        in: query
        description: "Performs the operation on the unique name specified. Enter multiple\
          \ names in comma-separated format. For example, `name01,name02`."
        required: false
        style: form
        explode: false
        schema:
          type: array
          items:
            type: string
      - name: offset
        in: query
        description: The starting position based on the results of the query in relation
          to the full set of response objects returned.
        required: false
        style: form
        explode: true
        schema:
          minimum: 0
          type: integer
          format: int32
        example: 10
      - name: sort
        in: query
        description: "Returns the response objects in the order specified. Set `sort`\
          \ to the name in the response by which to sort. Sorting can be performed\
          \ on any of the names in the response, and the objects can be sorted in\
          \ ascending or descending order. By default, the response objects are sorted\
          \ in ascending order. To sort in descending order, append the minus sign\
          \ (`-`) to the name. A single request can be sorted on multiple objects.\
          \ For example, you can sort all volumes from largest to smallest volume\
          \ size, and then sort volumes of the same size in ascending order by volume\
          \ name. To sort on multiple names, list the names as comma-separated values."
        required: false
        style: form
        explode: false
        schema:
          type: array
          items:
            pattern: "^[a-z]+(_[a-z]+)*-?"
            type: string
      - name: total_item_count
        in: query
        description: "If set to `true`, the `total_item_count` matching the specified\
          \ query parameters is calculated and returned in the response. If set to\
          \ `false`, the `total_item_count` is `null` in the response. This may speed\
          \ up queries where the `total_item_count` is large. If not specified, defaults\
          \ to `false`."
        required: false
        style: form
        explode: true
        schema:
          type: boolean
      - name: total_only
        in: query
        description: "If set to `true`, returns the aggregate value of all items after\
          \ filtering. Where it makes more sense, the average value is displayed instead.\
          \ The values are displayed for each name where meaningful. If `total_only=true`,\
          \ the `items` list will be empty."
        required: false
        style: form
        explode: true
        schema:
          type: boolean
      responses:
        "200":
          description: OK
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/inline_response_200_94'
  /api/2.8/volumes/performance/by-array:
    get:
      tags:
      - Volumes
      summary: List volume performance data by array
      description: "Return real-time and historical performance data, real-time latency\
        \ data, and average I/O size data. The data returned is for each volume on\
        \ the current array and for each volume on any remote arrays that are visible\
        \ to the current array. The data is grouped by individual volumes and as a\
        \ total across all volumes on each array."
      parameters:
      - name: Authorization
        in: header
        description: "Access token (in JWT format) required to use any API endpoint\
          \ (except `/oauth2`, `/login`, and `/logout`)"
        required: false
        style: simple
        explode: false
        schema:
          type: string
      - name: X-Request-ID
        in: header
        description: Supplied by client during request or generated by server.
        required: false
        style: simple
        explode: false
        schema:
          type: string
      - name: destroyed
        in: query
        description: "If set to `true`, lists only destroyed objects that are in the\
          \ eradication pending state. If set to `false`, lists only objects that\
          \ are not destroyed. For destroyed objects, the time remaining is displayed\
          \ in milliseconds."
        required: false
        style: form
        explode: true
        schema:
          type: boolean
      - name: filter
        in: query
        description: Narrows down the results to only the response objects that satisfy
          the filter criteria.
        required: false
        style: form
        explode: true
        schema:
          type: string
      - name: end_time
        in: query
        description: "Displays historical performance data for the specified time\
          \ window, where `start_time` is the beginning of the time window, and `end_time`\
          \ is the end of the time window. The `start_time` and `end_time` parameters\
          \ are specified in milliseconds since the UNIX epoch. If `start_time` is\
          \ not specified, the start time will default to one resolution before the\
          \ end time, meaning that the most recent sample of performance data will\
          \ be displayed. If `end_time`is not specified, the end time will default\
          \ to the current time. Include the `resolution` parameter to display the\
          \ performance data at the specified resolution. If not specified, `resolution`\
          \ defaults to the lowest valid resolution."
        required: false
        style: form
        explode: true
        schema:
          type: integer
          format: int64
      - name: resolution
        in: query
        description: "The number of milliseconds between samples of historical data.\
          \ For array-wide performance metrics (`/arrays/performance` endpoint), valid\
          \ values are `1000` (1 second), `30000` (30 seconds), `300000` (5 minutes),\
          \ `1800000` (30 minutes), `7200000` (2 hours), `28800000` (8 hours), and\
          \ `86400000` (24 hours). For performance metrics on storage objects (`<object\
          \ name>/performance` endpoint), such as volumes, valid values are `30000`\
          \ (30 seconds), `300000` (5 minutes), `1800000` (30 minutes), `7200000`\
          \ (2 hours), `28800000` (8 hours), and `86400000` (24 hours). For space\
          \ metrics, (`<object name>/space` endpoint), valid values are `300000` (5\
          \ minutes), `1800000` (30 minutes), `7200000` (2 hours), `28800000` (8 hours),\
          \ and `86400000` (24 hours). Include the `start_time` parameter to display\
          \ the performance data starting at the specified start time. If `start_time`\
          \ is not specified, the start time will default to one resolution before\
          \ the end time, meaning that the most recent sample of performance data\
          \ will be displayed. Include the `end_time` parameter to display the performance\
          \ data until the specified end time. If `end_time`is not specified, the\
          \ end time will default to the current time. If the `resolution` parameter\
          \ is not specified but either the `start_time` or `end_time` parameter is,\
          \ then `resolution` will default to the lowest valid resolution."
        required: false
        style: form
        explode: true
        schema:
          minimum: 0
          type: integer
          format: int64
        example: 30000
      - name: start_time
        in: query
        description: "Displays historical performance data for the specified time\
          \ window, where `start_time` is the beginning of the time window, and `end_time`\
          \ is the end of the time window. The `start_time` and `end_time` parameters\
          \ are specified in milliseconds since the UNIX epoch. If `start_time` is\
          \ not specified, the start time will default to one resolution before the\
          \ end time, meaning that the most recent sample of performance data will\
          \ be displayed. If `end_time`is not specified, the end time will default\
          \ to the current time. Include the `resolution` parameter to display the\
          \ performance data at the specified resolution. If not specified, `resolution`\
          \ defaults to the lowest valid resolution."
        required: false
        style: form
        explode: true
        schema:
          type: integer
          format: int64
      - name: ids
        in: query
        description: Performs the operation on the unique resource IDs specified.
          Enter multiple resource IDs in comma-separated format. The `ids` and `names`
          parameters cannot be provided together.
        required: false
        style: form
        explode: false
        schema:
          type: array
          items:
            type: string
      - name: limit
        in: query
        description: "Limits the size of the response to the specified number of objects\
          \ on each page. To return the total number of resources, set `limit=0`.\
          \ The total number of resources is returned as a `total_item_count` value.\
          \ If the page size requested is larger than the system maximum limit, the\
          \ server returns the maximum limit, disregarding the requested page size."
        required: false
        style: form
        explode: true
        schema:
          minimum: 1
          type: integer
          format: int32
        example: 10
      - name: names
        in: query
        description: "Performs the operation on the unique name specified. Enter multiple\
          \ names in comma-separated format. For example, `name01,name02`."
        required: false
        style: form
        explode: false
        schema:
          type: array
          items:
            type: string
      - name: offset
        in: query
        description: The starting position based on the results of the query in relation
          to the full set of response objects returned.
        required: false
        style: form
        explode: true
        schema:
          minimum: 0
          type: integer
          format: int32
        example: 10
      - name: sort
        in: query
        description: "Returns the response objects in the order specified. Set `sort`\
          \ to the name in the response by which to sort. Sorting can be performed\
          \ on any of the names in the response, and the objects can be sorted in\
          \ ascending or descending order. By default, the response objects are sorted\
          \ in ascending order. To sort in descending order, append the minus sign\
          \ (`-`) to the name. A single request can be sorted on multiple objects.\
          \ For example, you can sort all volumes from largest to smallest volume\
          \ size, and then sort volumes of the same size in ascending order by volume\
          \ name. To sort on multiple names, list the names as comma-separated values."
        required: false
        style: form
        explode: false
        schema:
          type: array
          items:
            pattern: "^[a-z]+(_[a-z]+)*-?"
            type: string
      - name: total_item_count
        in: query
        description: "If set to `true`, the `total_item_count` matching the specified\
          \ query parameters is calculated and returned in the response. If set to\
          \ `false`, the `total_item_count` is `null` in the response. This may speed\
          \ up queries where the `total_item_count` is large. If not specified, defaults\
          \ to `false`."
        required: false
        style: form
        explode: true
        schema:
          type: boolean
      - name: total_only
        in: query
        description: "If set to `true`, returns the aggregate value of all items after\
          \ filtering. Where it makes more sense, the average value is displayed instead.\
          \ The values are displayed for each name where meaningful. If `total_only=true`,\
          \ the `items` list will be empty."
        required: false
        style: form
        explode: true
        schema:
          type: boolean
      responses:
        "200":
          description: OK
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/inline_response_200_95'
  /api/2.8/volumes/protection-groups:
    get:
      tags:
      - Volumes
      summary: List volumes that are members of protection groups
      description: Returns a list of volume members that belong to one or more protection
        groups.
      parameters:
      - name: Authorization
        in: header
        description: "Access token (in JWT format) required to use any API endpoint\
          \ (except `/oauth2`, `/login`, and `/logout`)"
        required: false
        style: simple
        explode: false
        schema:
          type: string
      - name: X-Request-ID
        in: header
        description: Supplied by client during request or generated by server.
        required: false
        style: simple
        explode: false
        schema:
          type: string
      - name: continuation_token
        in: query
        description: A token used to retrieve the next page of data with some consistency
          guaranteed. The token is a Base64 encoded value. Set `continuation_token`
          to the system-generated token taken from the `x-next-token` header field
          of the response. A query has reached its last page when the response does
          not include a token. Pagination requires the `limit` and `continuation_token`
          query parameters.
        required: false
        style: form
        explode: true
        schema:
          type: string
      - name: filter
        in: query
        description: Narrows down the results to only the response objects that satisfy
          the filter criteria.
        required: false
        style: form
        explode: true
        schema:
          type: string
      - name: group_names
        in: query
        description: "Performs the operation on the unique group name specified. Examples\
          \ of groups include host groups, pods, protection groups, and volume groups.\
          \ Enter multiple names in comma-separated format. For example, `hgroup01,hgroup02`."
        required: false
        style: form
        explode: false
        schema:
          type: array
          items:
            type: string
      - name: limit
        in: query
        description: "Limits the size of the response to the specified number of objects\
          \ on each page. To return the total number of resources, set `limit=0`.\
          \ The total number of resources is returned as a `total_item_count` value.\
          \ If the page size requested is larger than the system maximum limit, the\
          \ server returns the maximum limit, disregarding the requested page size."
        required: false
        style: form
        explode: true
        schema:
          minimum: 1
          type: integer
          format: int32
        example: 10
      - name: member_names
        in: query
        description: "Performs the operation on the unique member name specified.\
          \ Examples of members include volumes, hosts, host groups, and directories.\
          \ Enter multiple names in comma-separated format. For example, `vol01,vol02`."
        required: false
        style: form
        explode: false
        schema:
          type: array
          items:
            type: string
      - name: offset
        in: query
        description: The starting position based on the results of the query in relation
          to the full set of response objects returned.
        required: false
        style: form
        explode: true
        schema:
          minimum: 0
          type: integer
          format: int32
        example: 10
      - name: sort
        in: query
        description: "Returns the response objects in the order specified. Set `sort`\
          \ to the name in the response by which to sort. Sorting can be performed\
          \ on any of the names in the response, and the objects can be sorted in\
          \ ascending or descending order. By default, the response objects are sorted\
          \ in ascending order. To sort in descending order, append the minus sign\
          \ (`-`) to the name. A single request can be sorted on multiple objects.\
          \ For example, you can sort all volumes from largest to smallest volume\
          \ size, and then sort volumes of the same size in ascending order by volume\
          \ name. To sort on multiple names, list the names as comma-separated values."
        required: false
        style: form
        explode: false
        schema:
          type: array
          items:
            pattern: "^[a-z]+(_[a-z]+)*-?"
            type: string
      - name: total_item_count
        in: query
        description: "If set to `true`, the `total_item_count` matching the specified\
          \ query parameters is calculated and returned in the response. If set to\
          \ `false`, the `total_item_count` is `null` in the response. This may speed\
          \ up queries where the `total_item_count` is large. If not specified, defaults\
          \ to `false`."
        required: false
        style: form
        explode: true
        schema:
          type: boolean
      responses:
        "200":
          description: OK
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/inline_response_200_72'
    post:
      tags:
      - Volumes
      summary: Add a volume to a protection group
      description: "Adds a volume member to a protection group. Members that are already\
        \ in the protection group are not affected. For asynchronous replication,\
        \ only members of the same type can belong to a protection group. The `group_names`\
        \ parameter represents the name of the protection group, and the `member_names`\
        \ parameter represents the name of the volume. The `group_names` and `member_names`\
        \ parameters are required and must be set together."
      parameters:
      - name: Authorization
        in: header
        description: "Access token (in JWT format) required to use any API endpoint\
          \ (except `/oauth2`, `/login`, and `/logout`)"
        required: false
        style: simple
        explode: false
        schema:
          type: string
      - name: X-Request-ID
        in: header
        description: Supplied by client during request or generated by server.
        required: false
        style: simple
        explode: false
        schema:
          type: string
      - name: group_names
        in: query
        description: "Performs the operation on the unique group name specified. Examples\
          \ of groups include host groups, pods, protection groups, and volume groups.\
          \ Enter multiple names in comma-separated format. For example, `hgroup01,hgroup02`."
        required: false
        style: form
        explode: false
        schema:
          type: array
          items:
            type: string
      - name: member_names
        in: query
        description: "Performs the operation on the unique member name specified.\
          \ Examples of members include volumes, hosts, host groups, and directories.\
          \ Enter multiple names in comma-separated format. For example, `vol01,vol02`."
        required: false
        style: form
        explode: false
        schema:
          type: array
          items:
            type: string
      responses:
        "200":
          description: OK
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/inline_response_200_73'
    delete:
      tags:
      - Volumes
      summary: Remove a volume from a protection group
      description: "Removes a volume member from a protection group. After the member\
        \ has been removed, it is no longer protected by the group. Any protection\
        \ group snapshots that were taken before the member was removed will not be\
        \ affected. Removing a member from a protection group does not delete the\
        \ member from the array, and the member can be added back to the protection\
        \ group at any time. The `group_names` parameter represents the name of the\
        \ protection group, and the `member_names` parameter represents the name of\
        \ the volume. The `group_names` and `member_names` parameters are required\
        \ and must be set together."
      parameters:
      - name: Authorization
        in: header
        description: "Access token (in JWT format) required to use any API endpoint\
          \ (except `/oauth2`, `/login`, and `/logout`)"
        required: false
        style: simple
        explode: false
        schema:
          type: string
      - name: X-Request-ID
        in: header
        description: Supplied by client during request or generated by server.
        required: false
        style: simple
        explode: false
        schema:
          type: string
      - name: group_names
        in: query
        description: "Performs the operation on the unique group name specified. Examples\
          \ of groups include host groups, pods, protection groups, and volume groups.\
          \ Enter multiple names in comma-separated format. For example, `hgroup01,hgroup02`."
        required: false
        style: form
        explode: false
        schema:
          type: array
          items:
            type: string
      - name: member_names
        in: query
        description: "Performs the operation on the unique member name specified.\
          \ Examples of members include volumes, hosts, host groups, and directories.\
          \ Enter multiple names in comma-separated format. For example, `vol01,vol02`."
        required: false
        style: form
        explode: false
        schema:
          type: array
          items:
            type: string
      responses:
        "200":
          description: OK
  /api/2.8/volumes/space:
    get:
      tags:
      - Volumes
      summary: List volume space information
      description: Returns the provisioned (virtual) size and physical storage consumption
        data for each volume.
      parameters:
      - name: names
        in: query
        description: "Performs the operation on the unique name specified. Enter multiple\
          \ names in comma-separated format. For example, `name01,name02`."
        required: false
        style: form
        explode: false
        schema:
          type: array
          items:
            type: string
      - name: Authorization
        in: header
        description: "Access token (in JWT format) required to use any API endpoint\
          \ (except `/oauth2`, `/login`, and `/logout`)"
        required: false
        style: simple
        explode: false
        schema:
          type: string
      - name: X-Request-ID
        in: header
        description: Supplied by client during request or generated by server.
        required: false
        style: simple
        explode: false
        schema:
          type: string
      - name: destroyed
        in: query
        description: "If set to `true`, lists only destroyed objects that are in the\
          \ eradication pending state. If set to `false`, lists only objects that\
          \ are not destroyed. For destroyed objects, the time remaining is displayed\
          \ in milliseconds."
        required: false
        style: form
        explode: true
        schema:
          type: boolean
      - name: filter
        in: query
        description: Narrows down the results to only the response objects that satisfy
          the filter criteria.
        required: false
        style: form
        explode: true
        schema:
          type: string
      - name: end_time
        in: query
        description: "Displays historical performance data for the specified time\
          \ window, where `start_time` is the beginning of the time window, and `end_time`\
          \ is the end of the time window. The `start_time` and `end_time` parameters\
          \ are specified in milliseconds since the UNIX epoch. If `start_time` is\
          \ not specified, the start time will default to one resolution before the\
          \ end time, meaning that the most recent sample of performance data will\
          \ be displayed. If `end_time`is not specified, the end time will default\
          \ to the current time. Include the `resolution` parameter to display the\
          \ performance data at the specified resolution. If not specified, `resolution`\
          \ defaults to the lowest valid resolution."
        required: false
        style: form
        explode: true
        schema:
          type: integer
          format: int64
      - name: resolution
        in: query
        description: "The number of milliseconds between samples of historical data.\
          \ For array-wide performance metrics (`/arrays/performance` endpoint), valid\
          \ values are `1000` (1 second), `30000` (30 seconds), `300000` (5 minutes),\
          \ `1800000` (30 minutes), `7200000` (2 hours), `28800000` (8 hours), and\
          \ `86400000` (24 hours). For performance metrics on storage objects (`<object\
          \ name>/performance` endpoint), such as volumes, valid values are `30000`\
          \ (30 seconds), `300000` (5 minutes), `1800000` (30 minutes), `7200000`\
          \ (2 hours), `28800000` (8 hours), and `86400000` (24 hours). For space\
          \ metrics, (`<object name>/space` endpoint), valid values are `300000` (5\
          \ minutes), `1800000` (30 minutes), `7200000` (2 hours), `28800000` (8 hours),\
          \ and `86400000` (24 hours). Include the `start_time` parameter to display\
          \ the performance data starting at the specified start time. If `start_time`\
          \ is not specified, the start time will default to one resolution before\
          \ the end time, meaning that the most recent sample of performance data\
          \ will be displayed. Include the `end_time` parameter to display the performance\
          \ data until the specified end time. If `end_time`is not specified, the\
          \ end time will default to the current time. If the `resolution` parameter\
          \ is not specified but either the `start_time` or `end_time` parameter is,\
          \ then `resolution` will default to the lowest valid resolution."
        required: false
        style: form
        explode: true
        schema:
          minimum: 0
          type: integer
          format: int64
        example: 30000
      - name: start_time
        in: query
        description: "Displays historical performance data for the specified time\
          \ window, where `start_time` is the beginning of the time window, and `end_time`\
          \ is the end of the time window. The `start_time` and `end_time` parameters\
          \ are specified in milliseconds since the UNIX epoch. If `start_time` is\
          \ not specified, the start time will default to one resolution before the\
          \ end time, meaning that the most recent sample of performance data will\
          \ be displayed. If `end_time`is not specified, the end time will default\
          \ to the current time. Include the `resolution` parameter to display the\
          \ performance data at the specified resolution. If not specified, `resolution`\
          \ defaults to the lowest valid resolution."
        required: false
        style: form
        explode: true
        schema:
          type: integer
          format: int64
      - name: ids
        in: query
        description: Performs the operation on the unique resource IDs specified.
          Enter multiple resource IDs in comma-separated format. The `ids` and `names`
          parameters cannot be provided together.
        required: false
        style: form
        explode: false
        schema:
          type: array
          items:
            type: string
      - name: limit
        in: query
        description: "Limits the size of the response to the specified number of objects\
          \ on each page. To return the total number of resources, set `limit=0`.\
          \ The total number of resources is returned as a `total_item_count` value.\
          \ If the page size requested is larger than the system maximum limit, the\
          \ server returns the maximum limit, disregarding the requested page size."
        required: false
        style: form
        explode: true
        schema:
          minimum: 1
          type: integer
          format: int32
        example: 10
      - name: offset
        in: query
        description: The starting position based on the results of the query in relation
          to the full set of response objects returned.
        required: false
        style: form
        explode: true
        schema:
          minimum: 0
          type: integer
          format: int32
        example: 10
      - name: sort
        in: query
        description: "Returns the response objects in the order specified. Set `sort`\
          \ to the name in the response by which to sort. Sorting can be performed\
          \ on any of the names in the response, and the objects can be sorted in\
          \ ascending or descending order. By default, the response objects are sorted\
          \ in ascending order. To sort in descending order, append the minus sign\
          \ (`-`) to the name. A single request can be sorted on multiple objects.\
          \ For example, you can sort all volumes from largest to smallest volume\
          \ size, and then sort volumes of the same size in ascending order by volume\
          \ name. To sort on multiple names, list the names as comma-separated values."
        required: false
        style: form
        explode: false
        schema:
          type: array
          items:
            pattern: "^[a-z]+(_[a-z]+)*-?"
            type: string
      - name: total_item_count
        in: query
        description: "If set to `true`, the `total_item_count` matching the specified\
          \ query parameters is calculated and returned in the response. If set to\
          \ `false`, the `total_item_count` is `null` in the response. This may speed\
          \ up queries where the `total_item_count` is large. If not specified, defaults\
          \ to `false`."
        required: false
        style: form
        explode: true
        schema:
          type: boolean
      - name: total_only
        in: query
        description: "If set to `true`, returns the aggregate value of all items after\
          \ filtering. Where it makes more sense, the average value is displayed instead.\
          \ The values are displayed for each name where meaningful. If `total_only=true`,\
          \ the `items` list will be empty."
        required: false
        style: form
        explode: true
        schema:
          type: boolean
      responses:
        "200":
          description: OK
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/inline_response_200_51'
  /api/2.8/volumes/tags:
    get:
      tags:
      - Volumes
      summary: List tags
      description: Displays the list of tags on volume objects.
      parameters:
      - name: Authorization
        in: header
        description: "Access token (in JWT format) required to use any API endpoint\
          \ (except `/oauth2`, `/login`, and `/logout`)"
        required: false
        style: simple
        explode: false
        schema:
          type: string
      - name: X-Request-ID
        in: header
        description: Supplied by client during request or generated by server.
        required: false
        style: simple
        explode: false
        schema:
          type: string
      - name: continuation_token
        in: query
        description: A token used to retrieve the next page of data with some consistency
          guaranteed. The token is a Base64 encoded value. Set `continuation_token`
          to the system-generated token taken from the `x-next-token` header field
          of the response. A query has reached its last page when the response does
          not include a token. Pagination requires the `limit` and `continuation_token`
          query parameters.
        required: false
        style: form
        explode: true
        schema:
          type: string
      - name: filter
        in: query
        description: Narrows down the results to only the response objects that satisfy
          the filter criteria.
        required: false
        style: form
        explode: true
        schema:
          type: string
      - name: limit
        in: query
        description: "Limits the size of the response to the specified number of objects\
          \ on each page. To return the total number of resources, set `limit=0`.\
          \ The total number of resources is returned as a `total_item_count` value.\
          \ If the page size requested is larger than the system maximum limit, the\
          \ server returns the maximum limit, disregarding the requested page size."
        required: false
        style: form
        explode: true
        schema:
          minimum: 1
          type: integer
          format: int32
        example: 10
      - name: namespaces
        in: query
        description: A comma-separated list of namespaces.
        required: false
        style: form
        explode: false
        schema:
          type: array
          items:
            type: string
      - name: offset
        in: query
        description: The starting position based on the results of the query in relation
          to the full set of response objects returned.
        required: false
        style: form
        explode: true
        schema:
          minimum: 0
          type: integer
          format: int32
        example: 10
      - name: resource_destroyed
        in: query
        description: "If set to `true`, returns only objects from destroyed resources.\
          \ Returns an error if the name of a live resource is specified in the `resource_names`\
          \ query parameter. If set to `false`, returns only objects from live resources.\
          \ Returns an error if the name of a destroyed resource is specified in the\
          \ `resource_names` query parameter."
        required: false
        style: form
        explode: true
        schema:
          type: boolean
      - name: resource_ids
        in: query
        description: A comma-separated list of resource IDs. The `resource_ids` and
          `resource_names` parameters cannot be provided together.
        required: false
        style: form
        explode: false
        schema:
          type: array
          items:
            type: string
      - name: resource_names
        in: query
        description: A comma-separated list of resource names. The `resource_ids`
          and `resource_names` parameters cannot be provided together.
        required: false
        style: form
        explode: false
        schema:
          type: array
          items:
            type: string
      - name: sort
        in: query
        description: "Returns the response objects in the order specified. Set `sort`\
          \ to the name in the response by which to sort. Sorting can be performed\
          \ on any of the names in the response, and the objects can be sorted in\
          \ ascending or descending order. By default, the response objects are sorted\
          \ in ascending order. To sort in descending order, append the minus sign\
          \ (`-`) to the name. A single request can be sorted on multiple objects.\
          \ For example, you can sort all volumes from largest to smallest volume\
          \ size, and then sort volumes of the same size in ascending order by volume\
          \ name. To sort on multiple names, list the names as comma-separated values."
        required: false
        style: form
        explode: false
        schema:
          type: array
          items:
            pattern: "^[a-z]+(_[a-z]+)*-?"
            type: string
      - name: total_item_count
        in: query
        description: "If set to `true`, the `total_item_count` matching the specified\
          \ query parameters is calculated and returned in the response. If set to\
          \ `false`, the `total_item_count` is `null` in the response. This may speed\
          \ up queries where the `total_item_count` is large. If not specified, defaults\
          \ to `false`."
        required: false
        style: form
        explode: true
        schema:
          type: boolean
      responses:
        "200":
          description: OK
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/inline_response_200_161'
    delete:
      tags:
      - Volumes
      summary: Delete tags
      description: Deletes specified tags on volume objects.
      parameters:
      - name: Authorization
        in: header
        description: "Access token (in JWT format) required to use any API endpoint\
          \ (except `/oauth2`, `/login`, and `/logout`)"
        required: false
        style: simple
        explode: false
        schema:
          type: string
      - name: X-Request-ID
        in: header
        description: Supplied by client during request or generated by server.
        required: false
        style: simple
        explode: false
        schema:
          type: string
      - name: keys
        in: query
        description: A comma-separated list of tag keys.
        required: false
        style: form
        explode: false
        schema:
          type: array
          items:
            type: string
      - name: namespaces
        in: query
        description: A comma-separated list of namespaces.
        required: false
        style: form
        explode: false
        schema:
          type: array
          items:
            type: string
      - name: resource_ids
        in: query
        description: A comma-separated list of resource IDs. The `resource_ids` and
          `resource_names` parameters cannot be provided together.
        required: false
        style: form
        explode: false
        schema:
          type: array
          items:
            type: string
      - name: resource_names
        in: query
        description: A comma-separated list of resource names. The `resource_ids`
          and `resource_names` parameters cannot be provided together.
        required: false
        style: form
        explode: false
        schema:
          type: array
          items:
            type: string
      responses:
        "200":
          description: OK
  /api/2.8/volumes/tags/batch:
    put:
      tags:
      - Volumes
      summary: Update tags
      description: Updates tags.
      parameters:
      - name: Authorization
        in: header
        description: "Access token (in JWT format) required to use any API endpoint\
          \ (except `/oauth2`, `/login`, and `/logout`)"
        required: false
        style: simple
        explode: false
        schema:
          type: string
      - name: X-Request-ID
        in: header
        description: Supplied by client during request or generated by server.
        required: false
        style: simple
        explode: false
        schema:
          type: string
      - name: resource_ids
        in: query
        description: A comma-separated list of resource IDs. The `resource_ids` and
          `resource_names` parameters cannot be provided together.
        required: false
        style: form
        explode: false
        schema:
          type: array
          items:
            type: string
      - name: resource_names
        in: query
        description: A comma-separated list of resource names. The `resource_ids`
          and `resource_names` parameters cannot be provided together.
        required: false
        style: form
        explode: false
        schema:
          type: array
          items:
            type: string
      requestBody:
        description: "A list of tags to be created or, if already existing, updated."
        content:
          application/json:
            schema:
              maxItems: 30
              minItems: 1
              uniqueItems: true
              type: array
              items:
                $ref: '#/components/schemas/Tag'
        required: true
      responses:
        "200":
          description: OK
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/inline_response_200_162'
  /api/2.8/volumes/volume-groups:
    get:
      tags:
      - Volumes
      summary: List volumes that are in volume groups
      description: Returns a list of volumes that are in a volume group.
      parameters:
      - name: group_names
        in: query
        description: "Performs the operation on the unique group name specified. Examples\
          \ of groups include host groups, pods, protection groups, and volume groups.\
          \ Enter multiple names in comma-separated format. For example, `hgroup01,hgroup02`."
        required: false
        style: form
        explode: false
        schema:
          type: array
          items:
            type: string
      - name: member_names
        in: query
        description: "Performs the operation on the unique member name specified.\
          \ Examples of members include volumes, hosts, host groups, and directories.\
          \ Enter multiple names in comma-separated format. For example, `vol01,vol02`."
        required: false
        style: form
        explode: false
        schema:
          type: array
          items:
            type: string
      - name: Authorization
        in: header
        description: "Access token (in JWT format) required to use any API endpoint\
          \ (except `/oauth2`, `/login`, and `/logout`)"
        required: false
        style: simple
        explode: false
        schema:
          type: string
      - name: X-Request-ID
        in: header
        description: Supplied by client during request or generated by server.
        required: false
        style: simple
        explode: false
        schema:
          type: string
      - name: continuation_token
        in: query
        description: A token used to retrieve the next page of data with some consistency
          guaranteed. The token is a Base64 encoded value. Set `continuation_token`
          to the system-generated token taken from the `x-next-token` header field
          of the response. A query has reached its last page when the response does
          not include a token. Pagination requires the `limit` and `continuation_token`
          query parameters.
        required: false
        style: form
        explode: true
        schema:
          type: string
      - name: filter
        in: query
        description: Narrows down the results to only the response objects that satisfy
          the filter criteria.
        required: false
        style: form
        explode: true
        schema:
          type: string
      - name: group_ids
        in: query
        description: A comma-separated list of group IDs.
        required: false
        style: form
        explode: false
        schema:
          type: array
          items:
            type: string
      - name: limit
        in: query
        description: "Limits the size of the response to the specified number of objects\
          \ on each page. To return the total number of resources, set `limit=0`.\
          \ The total number of resources is returned as a `total_item_count` value.\
          \ If the page size requested is larger than the system maximum limit, the\
          \ server returns the maximum limit, disregarding the requested page size."
        required: false
        style: form
        explode: true
        schema:
          minimum: 1
          type: integer
          format: int32
        example: 10
      - name: member_ids
        in: query
        description: Performs the operation on the unique member IDs specified. Enter
          multiple member IDs in comma-separated format. The `member_ids` and `member_names`
          parameters cannot be provided together.
        required: false
        style: form
        explode: false
        schema:
          type: array
          items:
            type: string
      - name: offset
        in: query
        description: The starting position based on the results of the query in relation
          to the full set of response objects returned.
        required: false
        style: form
        explode: true
        schema:
          minimum: 0
          type: integer
          format: int32
        example: 10
      - name: sort
        in: query
        description: "Returns the response objects in the order specified. Set `sort`\
          \ to the name in the response by which to sort. Sorting can be performed\
          \ on any of the names in the response, and the objects can be sorted in\
          \ ascending or descending order. By default, the response objects are sorted\
          \ in ascending order. To sort in descending order, append the minus sign\
          \ (`-`) to the name. A single request can be sorted on multiple objects.\
          \ For example, you can sort all volumes from largest to smallest volume\
          \ size, and then sort volumes of the same size in ascending order by volume\
          \ name. To sort on multiple names, list the names as comma-separated values."
        required: false
        style: form
        explode: false
        schema:
          type: array
          items:
            pattern: "^[a-z]+(_[a-z]+)*-?"
            type: string
      - name: total_item_count
        in: query
        description: "If set to `true`, the `total_item_count` matching the specified\
          \ query parameters is calculated and returned in the response. If set to\
          \ `false`, the `total_item_count` is `null` in the response. This may speed\
          \ up queries where the `total_item_count` is large. If not specified, defaults\
          \ to `false`."
        required: false
        style: form
        explode: true
        schema:
          type: boolean
      responses:
        "200":
          description: OK
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/inline_response_200_92'
  /api/2.8/volume-groups:
    get:
      tags:
      - Volume Groups
      summary: List volume groups
      description: "Displays a list of volume groups, including those pending eradication."
      parameters:
      - name: Authorization
        in: header
        description: "Access token (in JWT format) required to use any API endpoint\
          \ (except `/oauth2`, `/login`, and `/logout`)"
        required: false
        style: simple
        explode: false
        schema:
          type: string
      - name: X-Request-ID
        in: header
        description: Supplied by client during request or generated by server.
        required: false
        style: simple
        explode: false
        schema:
          type: string
      - name: continuation_token
        in: query
        description: A token used to retrieve the next page of data with some consistency
          guaranteed. The token is a Base64 encoded value. Set `continuation_token`
          to the system-generated token taken from the `x-next-token` header field
          of the response. A query has reached its last page when the response does
          not include a token. Pagination requires the `limit` and `continuation_token`
          query parameters.
        required: false
        style: form
        explode: true
        schema:
          type: string
      - name: destroyed
        in: query
        description: "If set to `true`, lists only destroyed objects that are in the\
          \ eradication pending state. If set to `false`, lists only objects that\
          \ are not destroyed. For destroyed objects, the time remaining is displayed\
          \ in milliseconds."
        required: false
        style: form
        explode: true
        schema:
          type: boolean
      - name: filter
        in: query
        description: Narrows down the results to only the response objects that satisfy
          the filter criteria.
        required: false
        style: form
        explode: true
        schema:
          type: string
      - name: ids
        in: query
        description: Performs the operation on the unique resource IDs specified.
          Enter multiple resource IDs in comma-separated format. The `ids` and `names`
          parameters cannot be provided together.
        required: false
        style: form
        explode: false
        schema:
          type: array
          items:
            type: string
      - name: limit
        in: query
        description: "Limits the size of the response to the specified number of objects\
          \ on each page. To return the total number of resources, set `limit=0`.\
          \ The total number of resources is returned as a `total_item_count` value.\
          \ If the page size requested is larger than the system maximum limit, the\
          \ server returns the maximum limit, disregarding the requested page size."
        required: false
        style: form
        explode: true
        schema:
          minimum: 1
          type: integer
          format: int32
        example: 10
      - name: names
        in: query
        description: "Performs the operation on the unique name specified. Enter multiple\
          \ names in comma-separated format. For example, `name01,name02`."
        required: false
        style: form
        explode: false
        schema:
          type: array
          items:
            type: string
      - name: offset
        in: query
        description: The starting position based on the results of the query in relation
          to the full set of response objects returned.
        required: false
        style: form
        explode: true
        schema:
          minimum: 0
          type: integer
          format: int32
        example: 10
      - name: sort
        in: query
        description: "Returns the response objects in the order specified. Set `sort`\
          \ to the name in the response by which to sort. Sorting can be performed\
          \ on any of the names in the response, and the objects can be sorted in\
          \ ascending or descending order. By default, the response objects are sorted\
          \ in ascending order. To sort in descending order, append the minus sign\
          \ (`-`) to the name. A single request can be sorted on multiple objects.\
          \ For example, you can sort all volumes from largest to smallest volume\
          \ size, and then sort volumes of the same size in ascending order by volume\
          \ name. To sort on multiple names, list the names as comma-separated values."
        required: false
        style: form
        explode: false
        schema:
          type: array
          items:
            pattern: "^[a-z]+(_[a-z]+)*-?"
            type: string
      - name: total_item_count
        in: query
        description: "If set to `true`, the `total_item_count` matching the specified\
          \ query parameters is calculated and returned in the response. If set to\
          \ `false`, the `total_item_count` is `null` in the response. This may speed\
          \ up queries where the `total_item_count` is large. If not specified, defaults\
          \ to `false`."
        required: false
        style: form
        explode: true
        schema:
          type: boolean
      - name: total_only
        in: query
        description: "If set to `true`, returns the aggregate value of all items after\
          \ filtering. Where it makes more sense, the average value is displayed instead.\
          \ The values are displayed for each name where meaningful. If `total_only=true`,\
          \ the `items` list will be empty."
        required: false
        style: form
        explode: true
        schema:
          type: boolean
      responses:
        "200":
          description: OK
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/inline_response_200_163'
    post:
      tags:
      - Volume Groups
      summary: Create a volume group
      description: "Creates a volume group. The volume group itself does not contain\
        \ any meaningful content; instead, it acts as a container that is used to\
        \ organize volumes. Once a volume group has been created, volumes can be created\
        \ inside the volume group or moved into and out of the volume group."
      parameters:
      - name: Authorization
        in: header
        description: "Access token (in JWT format) required to use any API endpoint\
          \ (except `/oauth2`, `/login`, and `/logout`)"
        required: false
        style: simple
        explode: false
        schema:
          type: string
      - name: X-Request-ID
        in: header
        description: Supplied by client during request or generated by server.
        required: false
        style: simple
        explode: false
        schema:
          type: string
      - name: names
        in: query
        description: "Performs the operation on the unique name specified. Enter multiple\
          \ names in comma-separated format. For example, `name01,name02`."
        required: false
        style: form
        explode: false
        schema:
          type: array
          items:
            type: string
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/2_8_volumegroups_body'
        required: true
      responses:
        "200":
          description: OK
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/inline_response_200_164'
    delete:
      tags:
      - Volume Groups
      summary: Delete a volume group
      description: "Deletes a volume group that has been destroyed and is pending\
        \ eradication. Eradicated volume groups cannot be recovered. Volume groups\
        \ are destroyed through the PATCH method. The `ids` or `names` parameter is\
        \ required, but cannot be set together."
      parameters:
      - name: Authorization
        in: header
        description: "Access token (in JWT format) required to use any API endpoint\
          \ (except `/oauth2`, `/login`, and `/logout`)"
        required: false
        style: simple
        explode: false
        schema:
          type: string
      - name: X-Request-ID
        in: header
        description: Supplied by client during request or generated by server.
        required: false
        style: simple
        explode: false
        schema:
          type: string
      - name: ids
        in: query
        description: Performs the operation on the unique resource IDs specified.
          Enter multiple resource IDs in comma-separated format. The `ids` and `names`
          parameters cannot be provided together.
        required: false
        style: form
        explode: false
        schema:
          type: array
          items:
            type: string
      - name: names
        in: query
        description: "Performs the operation on the unique name specified. Enter multiple\
          \ names in comma-separated format. For example, `name01,name02`."
        required: false
        style: form
        explode: false
        schema:
          type: array
          items:
            type: string
      - name: eradicate_contents
        in: query
        description: "Set to `true` to eradicate contents (e.g., volumes, protection\
          \ groups, snapshots) and containers (e.g., pods, volume groups). This enables\
          \ you to eradicate containers with contents."
        required: false
        style: form
        explode: true
        schema:
          type: boolean
      responses:
        "200":
          description: OK
    patch:
      tags:
      - Volume Groups
      summary: Modify a volume group
      description: "Modifies a volume group. You can rename, destroy, recover, or\
        \ set QoS limits for a volume group. To rename a volume group, set `name`\
        \ to the new name. To destroy a volume group, set `destroyed=true`. To recover\
        \ a volume group that has been destroyed and is pending eradication, set `destroyed=false`.\
        \ Sets the bandwidth and IOPs limits of a volume group through the respective\
        \ `bandwidth_limit` and `iops_limit` parameter. The `ids` or `names` parameter\
        \ is required, but cannot be set together."
      parameters:
      - name: Authorization
        in: header
        description: "Access token (in JWT format) required to use any API endpoint\
          \ (except `/oauth2`, `/login`, and `/logout`)"
        required: false
        style: simple
        explode: false
        schema:
          type: string
      - name: X-Request-ID
        in: header
        description: Supplied by client during request or generated by server.
        required: false
        style: simple
        explode: false
        schema:
          type: string
      - name: ids
        in: query
        description: Performs the operation on the unique resource IDs specified.
          Enter multiple resource IDs in comma-separated format. The `ids` and `names`
          parameters cannot be provided together.
        required: false
        style: form
        explode: false
        schema:
          type: array
          items:
            type: string
      - name: names
        in: query
        description: "Performs the operation on the unique name specified. Enter multiple\
          \ names in comma-separated format. For example, `name01,name02`."
        required: false
        style: form
        explode: false
        schema:
          type: array
          items:
            type: string
      - name: destroy_contents
        in: query
        description: "Set to `true` to destroy contents (e.g., volumes, protection\
          \ groups, snapshots) and containers (e.g., pods, volume groups). This enables\
          \ you to destroy containers with contents."
        required: false
        style: form
        explode: true
        schema:
          type: boolean
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/VolumeGroup'
        required: true
      responses:
        "200":
          description: OK
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/inline_response_200_164'
  /api/2.8/volume-groups/performance:
    get:
      tags:
      - Volume Groups
      summary: List volume group performance data
      description: "Returns real-time and historical performance data, real-time latency\
        \ data, and average I/O sizes for each volume group and and as a total of\
        \ all volume groups across the entire array."
      parameters:
      - name: Authorization
        in: header
        description: "Access token (in JWT format) required to use any API endpoint\
          \ (except `/oauth2`, `/login`, and `/logout`)"
        required: false
        style: simple
        explode: false
        schema:
          type: string
      - name: X-Request-ID
        in: header
        description: Supplied by client during request or generated by server.
        required: false
        style: simple
        explode: false
        schema:
          type: string
      - name: destroyed
        in: query
        description: "If set to `true`, lists only destroyed objects that are in the\
          \ eradication pending state. If set to `false`, lists only objects that\
          \ are not destroyed. For destroyed objects, the time remaining is displayed\
          \ in milliseconds."
        required: false
        style: form
        explode: true
        schema:
          type: boolean
      - name: filter
        in: query
        description: Narrows down the results to only the response objects that satisfy
          the filter criteria.
        required: false
        style: form
        explode: true
        schema:
          type: string
      - name: end_time
        in: query
        description: "Displays historical performance data for the specified time\
          \ window, where `start_time` is the beginning of the time window, and `end_time`\
          \ is the end of the time window. The `start_time` and `end_time` parameters\
          \ are specified in milliseconds since the UNIX epoch. If `start_time` is\
          \ not specified, the start time will default to one resolution before the\
          \ end time, meaning that the most recent sample of performance data will\
          \ be displayed. If `end_time`is not specified, the end time will default\
          \ to the current time. Include the `resolution` parameter to display the\
          \ performance data at the specified resolution. If not specified, `resolution`\
          \ defaults to the lowest valid resolution."
        required: false
        style: form
        explode: true
        schema:
          type: integer
          format: int64
      - name: resolution
        in: query
        description: "The number of milliseconds between samples of historical data.\
          \ For array-wide performance metrics (`/arrays/performance` endpoint), valid\
          \ values are `1000` (1 second), `30000` (30 seconds), `300000` (5 minutes),\
          \ `1800000` (30 minutes), `7200000` (2 hours), `28800000` (8 hours), and\
          \ `86400000` (24 hours). For performance metrics on storage objects (`<object\
          \ name>/performance` endpoint), such as volumes, valid values are `30000`\
          \ (30 seconds), `300000` (5 minutes), `1800000` (30 minutes), `7200000`\
          \ (2 hours), `28800000` (8 hours), and `86400000` (24 hours). For space\
          \ metrics, (`<object name>/space` endpoint), valid values are `300000` (5\
          \ minutes), `1800000` (30 minutes), `7200000` (2 hours), `28800000` (8 hours),\
          \ and `86400000` (24 hours). Include the `start_time` parameter to display\
          \ the performance data starting at the specified start time. If `start_time`\
          \ is not specified, the start time will default to one resolution before\
          \ the end time, meaning that the most recent sample of performance data\
          \ will be displayed. Include the `end_time` parameter to display the performance\
          \ data until the specified end time. If `end_time`is not specified, the\
          \ end time will default to the current time. If the `resolution` parameter\
          \ is not specified but either the `start_time` or `end_time` parameter is,\
          \ then `resolution` will default to the lowest valid resolution."
        required: false
        style: form
        explode: true
        schema:
          minimum: 0
          type: integer
          format: int64
        example: 30000
      - name: start_time
        in: query
        description: "Displays historical performance data for the specified time\
          \ window, where `start_time` is the beginning of the time window, and `end_time`\
          \ is the end of the time window. The `start_time` and `end_time` parameters\
          \ are specified in milliseconds since the UNIX epoch. If `start_time` is\
          \ not specified, the start time will default to one resolution before the\
          \ end time, meaning that the most recent sample of performance data will\
          \ be displayed. If `end_time`is not specified, the end time will default\
          \ to the current time. Include the `resolution` parameter to display the\
          \ performance data at the specified resolution. If not specified, `resolution`\
          \ defaults to the lowest valid resolution."
        required: false
        style: form
        explode: true
        schema:
          type: integer
          format: int64
      - name: ids
        in: query
        description: Performs the operation on the unique resource IDs specified.
          Enter multiple resource IDs in comma-separated format. The `ids` and `names`
          parameters cannot be provided together.
        required: false
        style: form
        explode: false
        schema:
          type: array
          items:
            type: string
      - name: limit
        in: query
        description: "Limits the size of the response to the specified number of objects\
          \ on each page. To return the total number of resources, set `limit=0`.\
          \ The total number of resources is returned as a `total_item_count` value.\
          \ If the page size requested is larger than the system maximum limit, the\
          \ server returns the maximum limit, disregarding the requested page size."
        required: false
        style: form
        explode: true
        schema:
          minimum: 1
          type: integer
          format: int32
        example: 10
      - name: names
        in: query
        description: "Performs the operation on the unique name specified. Enter multiple\
          \ names in comma-separated format. For example, `name01,name02`."
        required: false
        style: form
        explode: false
        schema:
          type: array
          items:
            type: string
      - name: offset
        in: query
        description: The starting position based on the results of the query in relation
          to the full set of response objects returned.
        required: false
        style: form
        explode: true
        schema:
          minimum: 0
          type: integer
          format: int32
        example: 10
      - name: sort
        in: query
        description: "Returns the response objects in the order specified. Set `sort`\
          \ to the name in the response by which to sort. Sorting can be performed\
          \ on any of the names in the response, and the objects can be sorted in\
          \ ascending or descending order. By default, the response objects are sorted\
          \ in ascending order. To sort in descending order, append the minus sign\
          \ (`-`) to the name. A single request can be sorted on multiple objects.\
          \ For example, you can sort all volumes from largest to smallest volume\
          \ size, and then sort volumes of the same size in ascending order by volume\
          \ name. To sort on multiple names, list the names as comma-separated values."
        required: false
        style: form
        explode: false
        schema:
          type: array
          items:
            pattern: "^[a-z]+(_[a-z]+)*-?"
            type: string
      - name: total_item_count
        in: query
        description: "If set to `true`, the `total_item_count` matching the specified\
          \ query parameters is calculated and returned in the response. If set to\
          \ `false`, the `total_item_count` is `null` in the response. This may speed\
          \ up queries where the `total_item_count` is large. If not specified, defaults\
          \ to `false`."
        required: false
        style: form
        explode: true
        schema:
          type: boolean
      - name: total_only
        in: query
        description: "If set to `true`, returns the aggregate value of all items after\
          \ filtering. Where it makes more sense, the average value is displayed instead.\
          \ The values are displayed for each name where meaningful. If `total_only=true`,\
          \ the `items` list will be empty."
        required: false
        style: form
        explode: true
        schema:
          type: boolean
      responses:
        "200":
          description: OK
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/inline_response_200_94'
  /api/2.8/volume-groups/space:
    get:
      tags:
      - Volume Groups
      summary: List volume group space information
      description: Returns the provisioned (virtual) size and physical storage consumption
        data for each volume group.
      parameters:
      - name: names
        in: query
        description: "Performs the operation on the unique name specified. Enter multiple\
          \ names in comma-separated format. For example, `name01,name02`."
        required: false
        style: form
        explode: false
        schema:
          type: array
          items:
            type: string
      - name: Authorization
        in: header
        description: "Access token (in JWT format) required to use any API endpoint\
          \ (except `/oauth2`, `/login`, and `/logout`)"
        required: false
        style: simple
        explode: false
        schema:
          type: string
      - name: X-Request-ID
        in: header
        description: Supplied by client during request or generated by server.
        required: false
        style: simple
        explode: false
        schema:
          type: string
      - name: destroyed
        in: query
        description: "If set to `true`, lists only destroyed objects that are in the\
          \ eradication pending state. If set to `false`, lists only objects that\
          \ are not destroyed. For destroyed objects, the time remaining is displayed\
          \ in milliseconds."
        required: false
        style: form
        explode: true
        schema:
          type: boolean
      - name: filter
        in: query
        description: Narrows down the results to only the response objects that satisfy
          the filter criteria.
        required: false
        style: form
        explode: true
        schema:
          type: string
      - name: end_time
        in: query
        description: "Displays historical performance data for the specified time\
          \ window, where `start_time` is the beginning of the time window, and `end_time`\
          \ is the end of the time window. The `start_time` and `end_time` parameters\
          \ are specified in milliseconds since the UNIX epoch. If `start_time` is\
          \ not specified, the start time will default to one resolution before the\
          \ end time, meaning that the most recent sample of performance data will\
          \ be displayed. If `end_time`is not specified, the end time will default\
          \ to the current time. Include the `resolution` parameter to display the\
          \ performance data at the specified resolution. If not specified, `resolution`\
          \ defaults to the lowest valid resolution."
        required: false
        style: form
        explode: true
        schema:
          type: integer
          format: int64
      - name: resolution
        in: query
        description: "The number of milliseconds between samples of historical data.\
          \ For array-wide performance metrics (`/arrays/performance` endpoint), valid\
          \ values are `1000` (1 second), `30000` (30 seconds), `300000` (5 minutes),\
          \ `1800000` (30 minutes), `7200000` (2 hours), `28800000` (8 hours), and\
          \ `86400000` (24 hours). For performance metrics on storage objects (`<object\
          \ name>/performance` endpoint), such as volumes, valid values are `30000`\
          \ (30 seconds), `300000` (5 minutes), `1800000` (30 minutes), `7200000`\
          \ (2 hours), `28800000` (8 hours), and `86400000` (24 hours). For space\
          \ metrics, (`<object name>/space` endpoint), valid values are `300000` (5\
          \ minutes), `1800000` (30 minutes), `7200000` (2 hours), `28800000` (8 hours),\
          \ and `86400000` (24 hours). Include the `start_time` parameter to display\
          \ the performance data starting at the specified start time. If `start_time`\
          \ is not specified, the start time will default to one resolution before\
          \ the end time, meaning that the most recent sample of performance data\
          \ will be displayed. Include the `end_time` parameter to display the performance\
          \ data until the specified end time. If `end_time`is not specified, the\
          \ end time will default to the current time. If the `resolution` parameter\
          \ is not specified but either the `start_time` or `end_time` parameter is,\
          \ then `resolution` will default to the lowest valid resolution."
        required: false
        style: form
        explode: true
        schema:
          minimum: 0
          type: integer
          format: int64
        example: 30000
      - name: start_time
        in: query
        description: "Displays historical performance data for the specified time\
          \ window, where `start_time` is the beginning of the time window, and `end_time`\
          \ is the end of the time window. The `start_time` and `end_time` parameters\
          \ are specified in milliseconds since the UNIX epoch. If `start_time` is\
          \ not specified, the start time will default to one resolution before the\
          \ end time, meaning that the most recent sample of performance data will\
          \ be displayed. If `end_time`is not specified, the end time will default\
          \ to the current time. Include the `resolution` parameter to display the\
          \ performance data at the specified resolution. If not specified, `resolution`\
          \ defaults to the lowest valid resolution."
        required: false
        style: form
        explode: true
        schema:
          type: integer
          format: int64
      - name: ids
        in: query
        description: Performs the operation on the unique resource IDs specified.
          Enter multiple resource IDs in comma-separated format. The `ids` and `names`
          parameters cannot be provided together.
        required: false
        style: form
        explode: false
        schema:
          type: array
          items:
            type: string
      - name: limit
        in: query
        description: "Limits the size of the response to the specified number of objects\
          \ on each page. To return the total number of resources, set `limit=0`.\
          \ The total number of resources is returned as a `total_item_count` value.\
          \ If the page size requested is larger than the system maximum limit, the\
          \ server returns the maximum limit, disregarding the requested page size."
        required: false
        style: form
        explode: true
        schema:
          minimum: 1
          type: integer
          format: int32
        example: 10
      - name: offset
        in: query
        description: The starting position based on the results of the query in relation
          to the full set of response objects returned.
        required: false
        style: form
        explode: true
        schema:
          minimum: 0
          type: integer
          format: int32
        example: 10
      - name: sort
        in: query
        description: "Returns the response objects in the order specified. Set `sort`\
          \ to the name in the response by which to sort. Sorting can be performed\
          \ on any of the names in the response, and the objects can be sorted in\
          \ ascending or descending order. By default, the response objects are sorted\
          \ in ascending order. To sort in descending order, append the minus sign\
          \ (`-`) to the name. A single request can be sorted on multiple objects.\
          \ For example, you can sort all volumes from largest to smallest volume\
          \ size, and then sort volumes of the same size in ascending order by volume\
          \ name. To sort on multiple names, list the names as comma-separated values."
        required: false
        style: form
        explode: false
        schema:
          type: array
          items:
            pattern: "^[a-z]+(_[a-z]+)*-?"
            type: string
      - name: total_item_count
        in: query
        description: "If set to `true`, the `total_item_count` matching the specified\
          \ query parameters is calculated and returned in the response. If set to\
          \ `false`, the `total_item_count` is `null` in the response. This may speed\
          \ up queries where the `total_item_count` is large. If not specified, defaults\
          \ to `false`."
        required: false
        style: form
        explode: true
        schema:
          type: boolean
      - name: total_only
        in: query
        description: "If set to `true`, returns the aggregate value of all items after\
          \ filtering. Where it makes more sense, the average value is displayed instead.\
          \ The values are displayed for each name where meaningful. If `total_only=true`,\
          \ the `items` list will be empty."
        required: false
        style: form
        explode: true
        schema:
          type: boolean
      responses:
        "200":
          description: OK
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/inline_response_200_51'
  /api/2.8/volume-groups/volumes:
    get:
      tags:
      - Volume Groups
      summary: List volume groups with volumes
      description: Returns a list of volume groups that contain volumes.
      parameters:
      - name: group_names
        in: query
        description: "Performs the operation on the unique group name specified. Examples\
          \ of groups include host groups, pods, protection groups, and volume groups.\
          \ Enter multiple names in comma-separated format. For example, `hgroup01,hgroup02`."
        required: false
        style: form
        explode: false
        schema:
          type: array
          items:
            type: string
      - name: member_names
        in: query
        description: "Performs the operation on the unique member name specified.\
          \ Examples of members include volumes, hosts, host groups, and directories.\
          \ Enter multiple names in comma-separated format. For example, `vol01,vol02`."
        required: false
        style: form
        explode: false
        schema:
          type: array
          items:
            type: string
      - name: Authorization
        in: header
        description: "Access token (in JWT format) required to use any API endpoint\
          \ (except `/oauth2`, `/login`, and `/logout`)"
        required: false
        style: simple
        explode: false
        schema:
          type: string
      - name: X-Request-ID
        in: header
        description: Supplied by client during request or generated by server.
        required: false
        style: simple
        explode: false
        schema:
          type: string
      - name: continuation_token
        in: query
        description: A token used to retrieve the next page of data with some consistency
          guaranteed. The token is a Base64 encoded value. Set `continuation_token`
          to the system-generated token taken from the `x-next-token` header field
          of the response. A query has reached its last page when the response does
          not include a token. Pagination requires the `limit` and `continuation_token`
          query parameters.
        required: false
        style: form
        explode: true
        schema:
          type: string
      - name: filter
        in: query
        description: Narrows down the results to only the response objects that satisfy
          the filter criteria.
        required: false
        style: form
        explode: true
        schema:
          type: string
      - name: group_ids
        in: query
        description: A comma-separated list of group IDs.
        required: false
        style: form
        explode: false
        schema:
          type: array
          items:
            type: string
      - name: limit
        in: query
        description: "Limits the size of the response to the specified number of objects\
          \ on each page. To return the total number of resources, set `limit=0`.\
          \ The total number of resources is returned as a `total_item_count` value.\
          \ If the page size requested is larger than the system maximum limit, the\
          \ server returns the maximum limit, disregarding the requested page size."
        required: false
        style: form
        explode: true
        schema:
          minimum: 1
          type: integer
          format: int32
        example: 10
      - name: member_ids
        in: query
        description: Performs the operation on the unique member IDs specified. Enter
          multiple member IDs in comma-separated format. The `member_ids` and `member_names`
          parameters cannot be provided together.
        required: false
        style: form
        explode: false
        schema:
          type: array
          items:
            type: string
      - name: offset
        in: query
        description: The starting position based on the results of the query in relation
          to the full set of response objects returned.
        required: false
        style: form
        explode: true
        schema:
          minimum: 0
          type: integer
          format: int32
        example: 10
      - name: sort
        in: query
        description: "Returns the response objects in the order specified. Set `sort`\
          \ to the name in the response by which to sort. Sorting can be performed\
          \ on any of the names in the response, and the objects can be sorted in\
          \ ascending or descending order. By default, the response objects are sorted\
          \ in ascending order. To sort in descending order, append the minus sign\
          \ (`-`) to the name. A single request can be sorted on multiple objects.\
          \ For example, you can sort all volumes from largest to smallest volume\
          \ size, and then sort volumes of the same size in ascending order by volume\
          \ name. To sort on multiple names, list the names as comma-separated values."
        required: false
        style: form
        explode: false
        schema:
          type: array
          items:
            pattern: "^[a-z]+(_[a-z]+)*-?"
            type: string
      - name: total_item_count
        in: query
        description: "If set to `true`, the `total_item_count` matching the specified\
          \ query parameters is calculated and returned in the response. If set to\
          \ `false`, the `total_item_count` is `null` in the response. This may speed\
          \ up queries where the `total_item_count` is large. If not specified, defaults\
          \ to `false`."
        required: false
        style: form
        explode: true
        schema:
          type: boolean
      responses:
        "200":
          description: OK
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/inline_response_200_92'
  /api/2.8/volume-snapshots:
    get:
      tags:
      - Volume Snapshots
      summary: List volume snapshots
      description: "Return a list of volume snapshots, including those pending eradication."
      parameters:
      - name: Authorization
        in: header
        description: "Access token (in JWT format) required to use any API endpoint\
          \ (except `/oauth2`, `/login`, and `/logout`)"
        required: false
        style: simple
        explode: false
        schema:
          type: string
      - name: X-Request-ID
        in: header
        description: Supplied by client during request or generated by server.
        required: false
        style: simple
        explode: false
        schema:
          type: string
      - name: continuation_token
        in: query
        description: A token used to retrieve the next page of data with some consistency
          guaranteed. The token is a Base64 encoded value. Set `continuation_token`
          to the system-generated token taken from the `x-next-token` header field
          of the response. A query has reached its last page when the response does
          not include a token. Pagination requires the `limit` and `continuation_token`
          query parameters.
        required: false
        style: form
        explode: true
        schema:
          type: string
      - name: destroyed
        in: query
        description: "If set to `true`, lists only destroyed objects that are in the\
          \ eradication pending state. If set to `false`, lists only objects that\
          \ are not destroyed. For destroyed objects, the time remaining is displayed\
          \ in milliseconds."
        required: false
        style: form
        explode: true
        schema:
          type: boolean
      - name: filter
        in: query
        description: Narrows down the results to only the response objects that satisfy
          the filter criteria.
        required: false
        style: form
        explode: true
        schema:
          type: string
      - name: ids
        in: query
        description: Performs the operation on the unique resource IDs specified.
          Enter multiple resource IDs in comma-separated format. The `ids` and `names`
          parameters cannot be provided together.
        required: false
        style: form
        explode: false
        schema:
          type: array
          items:
            type: string
      - name: limit
        in: query
        description: "Limits the size of the response to the specified number of objects\
          \ on each page. To return the total number of resources, set `limit=0`.\
          \ The total number of resources is returned as a `total_item_count` value.\
          \ If the page size requested is larger than the system maximum limit, the\
          \ server returns the maximum limit, disregarding the requested page size."
        required: false
        style: form
        explode: true
        schema:
          minimum: 1
          type: integer
          format: int32
        example: 10
      - name: names
        in: query
        description: "Performs the operation on the unique name specified. Enter multiple\
          \ names in comma-separated format. For example, `name01,name02`."
        required: false
        style: form
        explode: false
        schema:
          type: array
          items:
            type: string
      - name: offset
        in: query
        description: The starting position based on the results of the query in relation
          to the full set of response objects returned.
        required: false
        style: form
        explode: true
        schema:
          minimum: 0
          type: integer
          format: int32
        example: 10
      - name: sort
        in: query
        description: "Returns the response objects in the order specified. Set `sort`\
          \ to the name in the response by which to sort. Sorting can be performed\
          \ on any of the names in the response, and the objects can be sorted in\
          \ ascending or descending order. By default, the response objects are sorted\
          \ in ascending order. To sort in descending order, append the minus sign\
          \ (`-`) to the name. A single request can be sorted on multiple objects.\
          \ For example, you can sort all volumes from largest to smallest volume\
          \ size, and then sort volumes of the same size in ascending order by volume\
          \ name. To sort on multiple names, list the names as comma-separated values."
        required: false
        style: form
        explode: false
        schema:
          type: array
          items:
            pattern: "^[a-z]+(_[a-z]+)*-?"
            type: string
      - name: source_ids
        in: query
        description: Performs the operation on the source ID specified. Enter multiple
          source IDs in comma-separated format.
        required: false
        style: form
        explode: false
        schema:
          type: array
          items:
            type: string
      - name: source_names
        in: query
        description: "Performs the operation on the source name specified. Enter multiple\
          \ source names in comma-separated format. For example, `name01,name02`."
        required: false
        style: form
        explode: false
        schema:
          type: array
          items:
            type: string
      - name: total_item_count
        in: query
        description: "If set to `true`, the `total_item_count` matching the specified\
          \ query parameters is calculated and returned in the response. If set to\
          \ `false`, the `total_item_count` is `null` in the response. This may speed\
          \ up queries where the `total_item_count` is large. If not specified, defaults\
          \ to `false`."
        required: false
        style: form
        explode: true
        schema:
          type: boolean
      - name: total_only
        in: query
        description: "If set to `true`, returns the aggregate value of all items after\
          \ filtering. Where it makes more sense, the average value is displayed instead.\
          \ The values are displayed for each name where meaningful. If `total_only=true`,\
          \ the `items` list will be empty."
        required: false
        style: form
        explode: true
        schema:
          type: boolean
      responses:
        "200":
          description: OK
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/inline_response_200_165'
    post:
      tags:
      - Volume Snapshots
      summary: Generate a volume snapshot
      description: "Create a point-in-time snapshot of the contents of a volume. The\
        \ `source_ids` or `source_names` parameter is required, but cannot be set\
        \ together."
      parameters:
      - name: Authorization
        in: header
        description: "Access token (in JWT format) required to use any API endpoint\
          \ (except `/oauth2`, `/login`, and `/logout`)"
        required: false
        style: simple
        explode: false
        schema:
          type: string
      - name: X-Request-ID
        in: header
        description: Supplied by client during request or generated by server.
        required: false
        style: simple
        explode: false
        schema:
          type: string
      - name: "on"
        in: query
        description: "Performs the operation on the target name specified. For example,\
          \ `targetName01`."
        required: false
        style: form
        explode: true
        schema:
          type: string
      - name: source_ids
        in: query
        description: Performs the operation on the source ID specified. Enter multiple
          source IDs in comma-separated format.
        required: false
        style: form
        explode: false
        schema:
          type: array
          items:
            type: string
      - name: source_names
        in: query
        description: "Performs the operation on the source name specified. Enter multiple\
          \ source names in comma-separated format. For example, `name01,name02`."
        required: false
        style: form
        explode: false
        schema:
          type: array
          items:
            type: string
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/2_8_volumesnapshots_body'
        required: true
      responses:
        "200":
          description: OK
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/inline_response_200_166'
    delete:
      tags:
      - Volume Snapshots
      summary: Eradicate a volume snapshot
      description: "Eradicate a volume snapshot that has been destroyed and is pending\
        \ eradication. Eradicated volumes snapshots cannot be recovered. Volume snapshots\
        \ are destroyed through the `PATCH` method. The `ids` or `names` parameter\
        \ is required, but cannot be set together."
      parameters:
      - name: Authorization
        in: header
        description: "Access token (in JWT format) required to use any API endpoint\
          \ (except `/oauth2`, `/login`, and `/logout`)"
        required: false
        style: simple
        explode: false
        schema:
          type: string
      - name: X-Request-ID
        in: header
        description: Supplied by client during request or generated by server.
        required: false
        style: simple
        explode: false
        schema:
          type: string
      - name: ids
        in: query
        description: Performs the operation on the unique resource IDs specified.
          Enter multiple resource IDs in comma-separated format. The `ids` and `names`
          parameters cannot be provided together.
        required: false
        style: form
        explode: false
        schema:
          type: array
          items:
            type: string
      - name: names
        in: query
        description: "Performs the operation on the unique name specified. Enter multiple\
          \ names in comma-separated format. For example, `name01,name02`."
        required: false
        style: form
        explode: false
        schema:
          type: array
          items:
            type: string
      - name: replication_snapshot
        in: query
        description: "If set to `true`, allow destruction/eradication of snapshots\
          \ in use by replication. If set to `false`, allow destruction/eradication\
          \ of snapshots not in use by replication. If not specified, defaults to\
          \ `false`."
        required: false
        style: form
        explode: true
        schema:
          type: boolean
      responses:
        "200":
          description: OK
    patch:
      tags:
      - Volume Snapshots
      summary: Manage a volume snapshot
      description: "Rename, destroy, or recover a volume snapshot. To rename the suffix\
        \ of a volume snapshot, set `name` to the new suffix name. To recover a volume\
        \ snapshot that has been destroyed and is pending eradication, set `destroyed=true`.\
        \ The `ids` or `names` parameter is required, but cannot be set together."
      parameters:
      - name: Authorization
        in: header
        description: "Access token (in JWT format) required to use any API endpoint\
          \ (except `/oauth2`, `/login`, and `/logout`)"
        required: false
        style: simple
        explode: false
        schema:
          type: string
      - name: X-Request-ID
        in: header
        description: Supplied by client during request or generated by server.
        required: false
        style: simple
        explode: false
        schema:
          type: string
      - name: ids
        in: query
        description: Performs the operation on the unique resource IDs specified.
          Enter multiple resource IDs in comma-separated format. The `ids` and `names`
          parameters cannot be provided together.
        required: false
        style: form
        explode: false
        schema:
          type: array
          items:
            type: string
      - name: names
        in: query
        description: "Performs the operation on the unique name specified. Enter multiple\
          \ names in comma-separated format. For example, `name01,name02`."
        required: false
        style: form
        explode: false
        schema:
          type: array
          items:
            type: string
      - name: replication_snapshot
        in: query
        description: "If set to `true`, allow destruction/eradication of snapshots\
          \ in use by replication. If set to `false`, allow destruction/eradication\
          \ of snapshots not in use by replication. If not specified, defaults to\
          \ `false`."
        required: false
        style: form
        explode: true
        schema:
          type: boolean
      requestBody:
        $ref: '#/components/requestBodies/FileSystem'
      responses:
        "200":
          description: OK
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/inline_response_200_166'
  /api/2.8/volume-snapshots/transfer:
    get:
      tags:
      - Volume Snapshots
      summary: List volume snapshots with transfer statistics
      description: Returns a list of volume snapshots and their transfer statistics.
      parameters:
      - name: names
        in: query
        description: "Performs the operation on the unique name specified. Enter multiple\
          \ names in comma-separated format. For example, `name01,name02`."
        required: false
        style: form
        explode: false
        schema:
          type: array
          items:
            type: string
      - name: Authorization
        in: header
        description: "Access token (in JWT format) required to use any API endpoint\
          \ (except `/oauth2`, `/login`, and `/logout`)"
        required: false
        style: simple
        explode: false
        schema:
          type: string
      - name: X-Request-ID
        in: header
        description: Supplied by client during request or generated by server.
        required: false
        style: simple
        explode: false
        schema:
          type: string
      - name: destroyed
        in: query
        description: "If set to `true`, lists only destroyed objects that are in the\
          \ eradication pending state. If set to `false`, lists only objects that\
          \ are not destroyed. For destroyed objects, the time remaining is displayed\
          \ in milliseconds."
        required: false
        style: form
        explode: true
        schema:
          type: boolean
      - name: filter
        in: query
        description: Narrows down the results to only the response objects that satisfy
          the filter criteria.
        required: false
        style: form
        explode: true
        schema:
          type: string
      - name: ids
        in: query
        description: Performs the operation on the unique resource IDs specified.
          Enter multiple resource IDs in comma-separated format. The `ids` and `names`
          parameters cannot be provided together.
        required: false
        style: form
        explode: false
        schema:
          type: array
          items:
            type: string
      - name: limit
        in: query
        description: "Limits the size of the response to the specified number of objects\
          \ on each page. To return the total number of resources, set `limit=0`.\
          \ The total number of resources is returned as a `total_item_count` value.\
          \ If the page size requested is larger than the system maximum limit, the\
          \ server returns the maximum limit, disregarding the requested page size."
        required: false
        style: form
        explode: true
        schema:
          minimum: 1
          type: integer
          format: int32
        example: 10
      - name: offset
        in: query
        description: The starting position based on the results of the query in relation
          to the full set of response objects returned.
        required: false
        style: form
        explode: true
        schema:
          minimum: 0
          type: integer
          format: int32
        example: 10
      - name: sort
        in: query
        description: "Returns the response objects in the order specified. Set `sort`\
          \ to the name in the response by which to sort. Sorting can be performed\
          \ on any of the names in the response, and the objects can be sorted in\
          \ ascending or descending order. By default, the response objects are sorted\
          \ in ascending order. To sort in descending order, append the minus sign\
          \ (`-`) to the name. A single request can be sorted on multiple objects.\
          \ For example, you can sort all volumes from largest to smallest volume\
          \ size, and then sort volumes of the same size in ascending order by volume\
          \ name. To sort on multiple names, list the names as comma-separated values."
        required: false
        style: form
        explode: false
        schema:
          type: array
          items:
            pattern: "^[a-z]+(_[a-z]+)*-?"
            type: string
      - name: source_ids
        in: query
        description: Performs the operation on the source ID specified. Enter multiple
          source IDs in comma-separated format.
        required: false
        style: form
        explode: false
        schema:
          type: array
          items:
            type: string
      - name: source_names
        in: query
        description: "Performs the operation on the source name specified. Enter multiple\
          \ source names in comma-separated format. For example, `name01,name02`."
        required: false
        style: form
        explode: false
        schema:
          type: array
          items:
            type: string
      - name: total_item_count
        in: query
        description: "If set to `true`, the `total_item_count` matching the specified\
          \ query parameters is calculated and returned in the response. If set to\
          \ `false`, the `total_item_count` is `null` in the response. This may speed\
          \ up queries where the `total_item_count` is large. If not specified, defaults\
          \ to `false`."
        required: false
        style: form
        explode: true
        schema:
          type: boolean
      - name: total_only
        in: query
        description: "If set to `true`, returns the aggregate value of all items after\
          \ filtering. Where it makes more sense, the average value is displayed instead.\
          \ The values are displayed for each name where meaningful. If `total_only=true`,\
          \ the `items` list will be empty."
        required: false
        style: form
        explode: true
        schema:
          type: boolean
      responses:
        "200":
          description: OK
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/inline_response_200_167'
  /api/2.8/volume-snapshots/tags:
    get:
      tags:
      - Volume Snapshots
      summary: List tags
      description: Displays the list of tags on volume snapshot objects.
      parameters:
      - name: Authorization
        in: header
        description: "Access token (in JWT format) required to use any API endpoint\
          \ (except `/oauth2`, `/login`, and `/logout`)"
        required: false
        style: simple
        explode: false
        schema:
          type: string
      - name: X-Request-ID
        in: header
        description: Supplied by client during request or generated by server.
        required: false
        style: simple
        explode: false
        schema:
          type: string
      - name: continuation_token
        in: query
        description: A token used to retrieve the next page of data with some consistency
          guaranteed. The token is a Base64 encoded value. Set `continuation_token`
          to the system-generated token taken from the `x-next-token` header field
          of the response. A query has reached its last page when the response does
          not include a token. Pagination requires the `limit` and `continuation_token`
          query parameters.
        required: false
        style: form
        explode: true
        schema:
          type: string
      - name: filter
        in: query
        description: Narrows down the results to only the response objects that satisfy
          the filter criteria.
        required: false
        style: form
        explode: true
        schema:
          type: string
      - name: limit
        in: query
        description: "Limits the size of the response to the specified number of objects\
          \ on each page. To return the total number of resources, set `limit=0`.\
          \ The total number of resources is returned as a `total_item_count` value.\
          \ If the page size requested is larger than the system maximum limit, the\
          \ server returns the maximum limit, disregarding the requested page size."
        required: false
        style: form
        explode: true
        schema:
          minimum: 1
          type: integer
          format: int32
        example: 10
      - name: namespaces
        in: query
        description: A comma-separated list of namespaces.
        required: false
        style: form
        explode: false
        schema:
          type: array
          items:
            type: string
      - name: offset
        in: query
        description: The starting position based on the results of the query in relation
          to the full set of response objects returned.
        required: false
        style: form
        explode: true
        schema:
          minimum: 0
          type: integer
          format: int32
        example: 10
      - name: resource_destroyed
        in: query
        description: "If set to `true`, returns only objects from destroyed resources.\
          \ Returns an error if the name of a live resource is specified in the `resource_names`\
          \ query parameter. If set to `false`, returns only objects from live resources.\
          \ Returns an error if the name of a destroyed resource is specified in the\
          \ `resource_names` query parameter."
        required: false
        style: form
        explode: true
        schema:
          type: boolean
      - name: resource_ids
        in: query
        description: A comma-separated list of resource IDs. The `resource_ids` and
          `resource_names` parameters cannot be provided together.
        required: false
        style: form
        explode: false
        schema:
          type: array
          items:
            type: string
      - name: resource_names
        in: query
        description: A comma-separated list of resource names. The `resource_ids`
          and `resource_names` parameters cannot be provided together.
        required: false
        style: form
        explode: false
        schema:
          type: array
          items:
            type: string
      - name: sort
        in: query
        description: "Returns the response objects in the order specified. Set `sort`\
          \ to the name in the response by which to sort. Sorting can be performed\
          \ on any of the names in the response, and the objects can be sorted in\
          \ ascending or descending order. By default, the response objects are sorted\
          \ in ascending order. To sort in descending order, append the minus sign\
          \ (`-`) to the name. A single request can be sorted on multiple objects.\
          \ For example, you can sort all volumes from largest to smallest volume\
          \ size, and then sort volumes of the same size in ascending order by volume\
          \ name. To sort on multiple names, list the names as comma-separated values."
        required: false
        style: form
        explode: false
        schema:
          type: array
          items:
            pattern: "^[a-z]+(_[a-z]+)*-?"
            type: string
      - name: total_item_count
        in: query
        description: "If set to `true`, the `total_item_count` matching the specified\
          \ query parameters is calculated and returned in the response. If set to\
          \ `false`, the `total_item_count` is `null` in the response. This may speed\
          \ up queries where the `total_item_count` is large. If not specified, defaults\
          \ to `false`."
        required: false
        style: form
        explode: true
        schema:
          type: boolean
      responses:
        "200":
          description: OK
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/inline_response_200_161'
    delete:
      tags:
      - Volume Snapshots
      summary: Delete tags
      description: Deletes specified tags on volume snapshot objects.
      parameters:
      - name: Authorization
        in: header
        description: "Access token (in JWT format) required to use any API endpoint\
          \ (except `/oauth2`, `/login`, and `/logout`)"
        required: false
        style: simple
        explode: false
        schema:
          type: string
      - name: X-Request-ID
        in: header
        description: Supplied by client during request or generated by server.
        required: false
        style: simple
        explode: false
        schema:
          type: string
      - name: keys
        in: query
        description: A comma-separated list of tag keys.
        required: false
        style: form
        explode: false
        schema:
          type: array
          items:
            type: string
      - name: namespaces
        in: query
        description: A comma-separated list of namespaces.
        required: false
        style: form
        explode: false
        schema:
          type: array
          items:
            type: string
      - name: resource_ids
        in: query
        description: A comma-separated list of resource IDs. The `resource_ids` and
          `resource_names` parameters cannot be provided together.
        required: false
        style: form
        explode: false
        schema:
          type: array
          items:
            type: string
      - name: resource_names
        in: query
        description: A comma-separated list of resource names. The `resource_ids`
          and `resource_names` parameters cannot be provided together.
        required: false
        style: form
        explode: false
        schema:
          type: array
          items:
            type: string
      responses:
        "200":
          description: OK
  /api/2.8/volume-snapshots/tags/batch:
    put:
      tags:
      - Volume Snapshots
      summary: Update tags
      description: Updates tags.
      parameters:
      - name: Authorization
        in: header
        description: "Access token (in JWT format) required to use any API endpoint\
          \ (except `/oauth2`, `/login`, and `/logout`)"
        required: false
        style: simple
        explode: false
        schema:
          type: string
      - name: X-Request-ID
        in: header
        description: Supplied by client during request or generated by server.
        required: false
        style: simple
        explode: false
        schema:
          type: string
      - name: resource_ids
        in: query
        description: A comma-separated list of resource IDs. The `resource_ids` and
          `resource_names` parameters cannot be provided together.
        required: false
        style: form
        explode: false
        schema:
          type: array
          items:
            type: string
      - name: resource_names
        in: query
        description: A comma-separated list of resource names. The `resource_ids`
          and `resource_names` parameters cannot be provided together.
        required: false
        style: form
        explode: false
        schema:
          type: array
          items:
            type: string
      requestBody:
        description: A list of tags to be created or modified.
        content:
          application/json:
            schema:
              maxItems: 30
              minItems: 1
              uniqueItems: true
              type: array
              items:
                $ref: '#/components/schemas/Tag'
        required: true
      responses:
        "200":
          description: OK
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/inline_response_200_162'
components:
  schemas:
    Admin:
      allOf:
      - description: dummy
      - type: object
        properties:
          name:
            type: string
            description: A user-specified name. The name must be locally unique and
              cannot be changed.
            readOnly: true
        description: "An ordinary (as opposed to built-in) resource that can be created,\
          \ named, or deleted by the user. This might be a virtual resource (e.g.,\
          \ a volume) or correspond to something in the environment, like a host or\
          \ server."
      - description: Administrator account.
      - type: object
        properties:
          api_token:
            $ref: '#/components/schemas/Admin_api_token'
          is_local:
            type: boolean
            description: "Returns a value of `true` if the user is local to the machine,\
              \ otherwise `false`."
            readOnly: true
            example: true
          locked:
            type: boolean
            description: "Returns a value of `true` if the user is currently locked\
              \ out, otherwise `false`. Can be patched to `false` to unlock a user.\
              \ This field is only visible to `array_admin` roles. For all other users,\
              \ the value is always `null`."
            example: false
          lockout_remaining:
            type: integer
            description: "The remaining lockout period, in milliseconds, if the user\
              \ is locked out. This field is only visible to `array_admin` roles.\
              \ For all other users, the value is always `null`."
            format: int64
            readOnly: true
          password:
            type: string
            description: Password associated with the account.
          public_key:
            type: string
            description: Public key for SSH access.
          role:
            allOf:
            - description: dummy
            - description: "Privilege level. Valid values include `array_admin`, `storage_admin`,\
                \ and `readonly`."
            - type: object
              properties:
                name:
                  type: string
                  description: "The resource name, such as volume name, pod name,\
                    \ snapshot name, and so on."
    AdminApiToken:
      allOf:
      - description: dummy
      - type: object
        properties:
          name:
            type: string
            description: A user-specified name. The name must be locally unique and
              cannot be changed.
            readOnly: true
        description: "An ordinary (as opposed to built-in) resource that can be created,\
          \ named, or deleted by the user. This might be a virtual resource (e.g.,\
          \ a volume) or correspond to something in the environment, like a host or\
          \ server."
      - description: Administrative account API token.
      - type: object
        properties:
          api_token:
            $ref: '#/components/schemas/Admin_api_token'
    AdminCache:
      allOf:
      - description: dummy
      - type: object
        properties:
          name:
            type: string
            description: A user-specified name. The name must be locally unique and
              cannot be changed.
            readOnly: true
        description: "An ordinary (as opposed to built-in) resource that can be created,\
          \ named, or deleted by the user. This might be a virtual resource (e.g.,\
          \ a volume) or correspond to something in the environment, like a host or\
          \ server."
      - description: "A cache entry for the admin cache, used to quickly look up admin\
          \ roles."
      - type: object
        properties:
          cached_at:
            type: integer
            description: "Time when the entry was added to the cache, in milliseconds\
              \ since the UNIX epoch."
            format: int64
          role:
            allOf:
            - description: dummy
            - description: "Privilege level. Valid values include `array_admin`, `storage_admin`,\
                \ and `readonly`."
            - type: object
              properties:
                name:
                  type: string
                  description: "The resource name, such as volume name, pod name,\
                    \ snapshot name, and so on."
        readOnly: true
    AdminSettings:
      type: object
      properties:
        lockout_duration:
          maximum: 7776000000
          minimum: 1000
          type: integer
          description: "The lockout duration, in milliseconds, if a user is locked\
            \ out after reaching the maximum number of login attempts. Ranges from\
            \ 1 second to 90 days."
          format: int64
          example: 3600000
        max_login_attempts:
          maximum: 20
          minimum: 1
          type: integer
          description: Maximum number of failed login attempts allowed before the
            user is locked out.
          format: int32
          example: 10
        min_password_length:
          type: integer
          description: "Minimum password length. If not specified, defaults to 1."
          format: int32
          example: 1
        single_sign_on_enabled:
          type: boolean
          description: "If `true`, then single sign-on is enabled for the array."
          example: true
      description: Global settings for administrative accounts.
      example:
        lockout_duration: 3600000
        single_sign_on_enabled: true
        min_password_length: 1
        max_login_attempts: 10
    Alert:
      allOf:
      - description: dummy
      - type: object
        properties:
          id:
            type: string
            description: "A globally unique, system-generated ID. The ID cannot be\
              \ modified and cannot refer to another resource."
            readOnly: true
          name:
            type: string
            description: "A locally unique, system-generated name. The name cannot\
              \ be modified."
            readOnly: true
        description: |-
          A built-in resource. Many are singletons predefined by Purity (e.g., support settings). Some correspond to a piece of software, like an app, or hardware, like a controller. Others are created by the system in response to some event (e.g., alerts, audit records).
          Typically, a user can't create, delete or rename a built-in resource. A few can be created or deleted, but not renamed because the names are meaningful to Purity (e.g., VIFs).
      - type: object
        properties:
          actual:
            type: string
            description: Actual condition at the time the alert is created.
            readOnly: true
            example: 95%
          category:
            type: string
            description: "The category of the alert. Valid values include `array`,\
              \ `hardware` and `software`."
            readOnly: true
            example: array
          closed:
            type: integer
            description: The time the alert was closed in milliseconds since the UNIX
              epoch.
            format: int64
            readOnly: true
            example: 1578440492342
          code:
            type: integer
            description: The code number of the alert.
            format: int64
            readOnly: true
            example: 7
          component_name:
            type: string
            description: The name of the component that generated the alert.
            readOnly: true
            example: vm-tom
          component_type:
            type: string
            description: The type of component that generated the alert.
            readOnly: true
            example: storage
          created:
            type: integer
            description: The time the alert was created in milliseconds since the
              UNIX epoch.
            format: int64
            readOnly: true
            example: 1576275532434
          description:
            type: string
            description: A short description of the alert.
            readOnly: true
            example: boot drive overutilization
          expected:
            type: string
            description: Expected state or threshold under normal conditions.
            readOnly: true
            example: 90%
          flagged:
            type: boolean
            description: "If set to `true`, the message is flagged. Important messages\
              \ can can be flagged and listed separately."
            example: true
          issue:
            type: string
            description: Information about the alert cause.
            readOnly: true
            example: boot drive overutilization
          knowledge_base_url:
            type: string
            description: The URL of the relevant knowledge base page.
            readOnly: true
            example: https://support.purestorage.com/?cid=Alert_0007
          notified:
            type: integer
            description: The time the most recent alert notification was sent in milliseconds
              since the UNIX epoch.
            format: int64
            readOnly: true
            example: 1578440491109
          severity:
            type: string
            description: "The severity level of the alert. Valid values include `info`,\
              \ `warning`, `critical`, and `hidden`."
            readOnly: true
            example: critical
          state:
            type: string
            description: "The current state of the alert. Valid values include `open`,\
              \ `closing`, and `closed`."
            readOnly: true
            example: open
          summary:
            type: string
            description: A summary of the alert.
            readOnly: true
            example: boot drive overutilization
          updated:
            type: integer
            description: The time the alert was last updated in milliseconds since
              the UNIX epoch.
            format: int64
            readOnly: true
            example: 1578440491109
        description: Alert generated by the array when an event occurs.
    AlertEvent:
      allOf:
      - description: dummy
      - type: object
        properties:
          name:
            type: string
            description: "A locally unique, system-generated name. The name cannot\
              \ be modified."
            readOnly: true
        description: |-
          A built-in resource. Many are singletons predefined by Purity (e.g., support settings). Some correspond to a piece of software, like an app, or hardware, like a controller. Others are created by the system in response to some event (e.g., alerts, audit records).
          Typically, a user can't create, delete or rename a built-in resource. A few can be created or deleted, but not renamed because the names are meaningful to Purity (e.g., VIFs, file systems, file system snapshots, volume snapshot).
      - type: object
        properties:
          actual:
            type: string
            description: Actual condition at the time the alert is created.
            readOnly: true
            example: 95%
          alert:
            $ref: '#/components/schemas/AlertEvent_alert'
          code:
            type: integer
            description: The parent alert number.
            format: int64
            readOnly: true
            example: 7
          component_name:
            type: string
            description: The component type of the alert.
            readOnly: true
            example: vm-tom
          component_type:
            type: string
            description: The component name of the alert.
            readOnly: true
            example: storage
          created:
            type: integer
            description: The time the parent alert was created.
            format: int64
            example: 1576275532434
          expected:
            type: string
            description: Expected state and threshold under normal conditions.
            readOnly: true
            example: 90%
          issue:
            type: string
            description: Information about the alert cause.
            readOnly: true
            example: boot drive overutilization
          knowledge_base_url:
            type: string
            description: The knowledge base URL of the alert.
            readOnly: true
            example: https://support.purestorage.com/?cid=Alert_0007
          severity:
            type: string
            description: "The severity level of the alert. Valid values include `info`,\
              \ `warning`, `critical`, and `hidden`."
            readOnly: true
            example: critical
          state:
            type: string
            description: "The state of the alert. Valid values include `open`, `closing`,\
              \ and `closed`."
            readOnly: true
            example: open
          summary:
            type: string
            description: A summary of the alert.
            readOnly: true
            example: boot drive overutilization
          time:
            type: integer
            description: The time the event occurred.
            format: int64
            readOnly: true
            example: 1578440491109
        description: Alert timeline event.
    AlertWatcher:
      allOf:
      - description: dummy
      - type: object
        properties:
          name:
            type: string
            description: "A locally unique, system-generated name. The name cannot\
              \ be modified."
            readOnly: true
        description: |-
          A built-in resource. Many are singletons predefined by Purity (e.g., support settings). Some correspond to a piece of software, like an app, or hardware, like a controller. Others are created by the system in response to some event (e.g., alerts, audit records).
          Typically, a user can't create, delete or rename a built-in resource. A few can be created or deleted, but not renamed because the names are meaningful to Purity (e.g., VIFs, file systems, file system snapshots, volume snapshot).
      - type: object
        properties:
          enabled:
            type: boolean
            description: "If set to `true`, email notifications will be sent to this\
              \ watcher for alerts. If set to `false`, email notification is disabled."
    APIClient:
      type: object
      properties:
        id:
          type: string
          description: The unique identifier for the associated API client. The ID
            represents the JWT `aud` (audience) claim in ID Tokens issued for this
            API client.
          example: 6207d123-d123-0b5c-5fa1-95fabc5c7123
        name:
          type: string
          description: The API client name.
          example: NightlyStatsAggregationScript
        max_role:
          type: string
          description: "The maximum role allowed for ID Tokens issued by this API\
            \ client. The bearer of an access token will be authorized to perform\
            \ actions within the intersection of this `max_role` and the role of the\
            \ array user specified as the JWT `sub` (subject) claim. Valid `max_role`\
            \ values are `readonly`, `ops_admin`, `array_admin`, and `storage_admin`.\
            \ Users with the `readonly` (Read Only) role can perform operations that\
            \ convey the state of the array. Read Only users cannot alter the state\
            \ of the array. Users with the `ops_admin` (Ops Admin) role can perform\
            \ the same operations as Read Only users plus enable and disable remote\
            \ assistance sessions. Ops Admin users cannot alter the state of the array.\
            \ Users with the `storage_admin` (Storage Admin) role can perform the\
            \ same operations as Read Only users plus storage related operations,\
            \ such as administering volumes, hosts, and host groups. Storage Admin\
            \ users cannot perform operations that deal with global and system configurations.\
            \ Users with the `array_admin` (Array Admin) role can perform the same\
            \ operations as Storage Admin users plus array-wide changes dealing with\
            \ global and system configurations. In other words, Array Admin users\
            \ can perform all operations."
          example: storage_admin
        issuer:
          type: string
          description: The name of the identity provider that will be issuing ID Tokens
            for this API client. This string represents the JWT `iss` (issuer) claim
            in ID Tokens issued for this API client.
          example: https://purestorage.idp.okta.com
        public_key:
          type: string
          description: The API client's PEM formatted (Base64 encoded) RSA public
            key.
          example: '-----BEGIN PUBLIC KEY----- MIICIjANBgkqhkiG9w0BAQEFAAOCAg8AMIICCgKCAgEArSe6chh1JzME9svOKjU0
            eKTm8S23Ok3Vr2bWuPri/YHfLrlnRwWoCt+st0/BebKSJ+fQUWOaLlqpZQKpI8oR gJ9sWmwGibVG8cTuz7XMkskx9bsm/bjIenuB4W+s3g0BCsi9930mfdKgJgFzY69O
            nLh7d7hAFcmhSJa945PryQZpvJ/U4Ue5F4d+WXgEJ0SoSRaZ6bbeMPhcbMHTzTum 2ZrPBkK5cqPYitaso6BXeAlqNQPw4Kbu4Ugm0CTogrtImkwoonWDDP34XMOq+u7q
            sNTbJSvDKMTM1RPPrTWCaLiuZkdLVEVesZ9/8+XUMIgBTElwQJDCAQer03MJzqRr 1eCZGgLfDuYqwMG2MFaAX7kgqBwwyqRTd6MxaQxt2nkdfwiXSY71llzEQ23g3T+1
            64zjwAL5f+dtu8PkGF7IdU2T8P2Qk9bG9pckwZHWYkBK77BAk5jbmSzsKGZgRb2R 1E+TWDKIaveFhQp251j/C5wkZwMXgjOzN+BOPo+OiLBGUl+jRybWA9f7Vq1MEdf6
            SEdLiqYrXcZERkYBMieLXAfdtaztAIb96cUu+OKMSLDk+D0GHkUfm7lEbDK3ew1+ D6z+BnxDyH6oqZzz4lS2kPLBLsc+6pdTGuKLf0S9YuLiqJe659AdwU8+X/3KtwNd
            FVJSaxdFbWx0nj3hJqFkIO8CAwEAAQ== -----END PUBLIC KEY-----'
        key_id:
          type: string
          description: The unique identifier for the associated public key of this
            API client. This string must match the JWT `kid` (key ID) claim in ID
            Tokens issued for this API client.
          example: 6207d123-d123-0b5c-5fa1-95fabc5c7123
        enabled:
          type: boolean
          description: "If `true`, the API client is permitted to exchange ID Tokens\
            \ for access tokens. API clients are disabled by default."
          example: true
        access_token_ttl_in_ms:
          maximum: 86400000
          minimum: 1000
          type: integer
          description: The requested TTL (Time To Live) length of time for the exchanged
            access token. Measured in milliseconds.
          format: int64
          example: 15000
      readOnly: true
      example:
        public_key: '-----BEGIN PUBLIC KEY----- MIICIjANBgkqhkiG9w0BAQEFAAOCAg8AMIICCgKCAgEArSe6chh1JzME9svOKjU0
          eKTm8S23Ok3Vr2bWuPri/YHfLrlnRwWoCt+st0/BebKSJ+fQUWOaLlqpZQKpI8oR gJ9sWmwGibVG8cTuz7XMkskx9bsm/bjIenuB4W+s3g0BCsi9930mfdKgJgFzY69O
          nLh7d7hAFcmhSJa945PryQZpvJ/U4Ue5F4d+WXgEJ0SoSRaZ6bbeMPhcbMHTzTum 2ZrPBkK5cqPYitaso6BXeAlqNQPw4Kbu4Ugm0CTogrtImkwoonWDDP34XMOq+u7q
          sNTbJSvDKMTM1RPPrTWCaLiuZkdLVEVesZ9/8+XUMIgBTElwQJDCAQer03MJzqRr 1eCZGgLfDuYqwMG2MFaAX7kgqBwwyqRTd6MxaQxt2nkdfwiXSY71llzEQ23g3T+1
          64zjwAL5f+dtu8PkGF7IdU2T8P2Qk9bG9pckwZHWYkBK77BAk5jbmSzsKGZgRb2R 1E+TWDKIaveFhQp251j/C5wkZwMXgjOzN+BOPo+OiLBGUl+jRybWA9f7Vq1MEdf6
          SEdLiqYrXcZERkYBMieLXAfdtaztAIb96cUu+OKMSLDk+D0GHkUfm7lEbDK3ew1+ D6z+BnxDyH6oqZzz4lS2kPLBLsc+6pdTGuKLf0S9YuLiqJe659AdwU8+X/3KtwNd
          FVJSaxdFbWx0nj3hJqFkIO8CAwEAAQ== -----END PUBLIC KEY-----'
        max_role: storage_admin
        key_id: 6207d123-d123-0b5c-5fa1-95fabc5c7123
        name: NightlyStatsAggregationScript
        id: 6207d123-d123-0b5c-5fa1-95fabc5c7123
        issuer: https://purestorage.idp.okta.com
        enabled: true
        access_token_ttl_in_ms: 15000
    App:
      allOf:
      - description: dummy
      - type: object
        properties:
          name:
            type: string
            description: "A locally unique, system-generated name. The name cannot\
              \ be modified."
            readOnly: true
        description: |-
          A built-in resource. Many are singletons predefined by Purity (e.g., support settings). Some correspond to a piece of software, like an app, or hardware, like a controller. Others are created by the system in response to some event (e.g., alerts, audit records).
          Typically, a user can't create, delete or rename a built-in resource. A few can be created or deleted, but not renamed because the names are meaningful to Purity (e.g., VIFs, file systems, file system snapshots, volume snapshot).
      - type: object
        properties:
          description:
            type: string
            description: A description of the app.
            readOnly: true
            example: Snapshot offload to NFS or Amazon S3
          enabled:
            type: boolean
            description: "If set to `true`, the app is enabled. By default, apps are\
              \ disabled."
          status:
            type: string
            description: "The status of the app. Values include `healthy` and `unhealthy`.\
              \ For cluster apps, this represents the aggregate status of the app.\
              \ The aggregate status is only `healthy` if all nodes are `healthy`&#59;\
              \ otherwise, it is `unhealthy`."
            readOnly: true
            example: healthy
          version:
            type: string
            description: "The app version. For cluster apps, this represents the node\
              \ version if all nodes are of the same version. If the node versions\
              \ differ, a value of `null` is returned."
            readOnly: true
            example: 1.0.0
          details:
            type: string
            description: Details of the status of the app.
            readOnly: true
            example: Insufficient resources to operate
          vnc_enabled:
            type: boolean
            description: "If set to `true`, VNC access is enabled. By default, VNC\
              \ access is disabled."
        description: An app that is installed on Purity to extend its functionality.
          The app is an add-on service that is integrated into the system to extend
          array functionality.
    AppNode:
      type: object
      properties:
        app:
          $ref: '#/components/schemas/AppNode_app'
        index:
          type: integer
          description: An index that represents this node.
          example: 0
        status:
          type: string
          description: "The node status. Possible values are `starting`, `healthy`,\
            \ `unhealthy`, `critical`, `stopping`, and `disabled`."
          example: healthy
        version:
          type: string
          description: The node version.
          example: 1.0.0
        vnc:
          type: array
          description: The VNC information used to access this node if VNC is enabled.
          items:
            type: string
            example: 10.1.1.10:5900
      description: An individual node of a Purity app. Nodes are indexed starting
        at `0`.
      readOnly: true
    Array:
      allOf:
      - description: dummy
      - type: object
        properties:
          id:
            type: string
            description: "A globally unique, system-generated ID. The ID cannot be\
              \ modified and cannot refer to another resource."
            readOnly: true
          name:
            type: string
            description: A user-specified name. The name must be locally unique and
              can be changed.
        description: "An ordinary (as opposed to built-in) resource that can be created,\
          \ named, renamed or deleted by the user. This might be a virtual resource\
          \ (e.g., a volume), or correspond to something in the environment, like\
          \ a host or a server."
      - type: object
        properties:
          banner:
            type: string
            example: Restricted area. Authorized personnel only.
          capacity:
            type: integer
            description: The usable capacity in bytes.
            format: int64
            readOnly: true
            example: 10995116277760
          console_lock_enabled:
            type: boolean
            example: false
          encryption:
            $ref: '#/components/schemas/Array_encryption'
          eradication_config:
            $ref: '#/components/schemas/Array_eradication_config'
          idle_timeout:
            type: integer
            description: The idle timeout in milliseconds. Valid values include `0`
              and any multiple of `60000` in the range of `300000` and `10800000`.
              Any other values will be rounded down to the nearest multiple of `60000`.
            format: int32
            example: 300000
          ntp_servers:
            type: array
            items:
              type: string
              example: time.acme.com
          os:
            type: string
            description: "Specifies the operating system. Valid values are `Purity`,\
              \ `Purity//FA`, and `Purity//FB`."
            readOnly: true
            example: Purity//FA
          parity:
            type: number
            description: A representation of data redundancy on the array. Data redundancy
              is rebuilt automatically by the system whenever parity is less than
              `1.0`.
            format: float
            readOnly: true
            example: 0.99
          scsi_timeout:
            type: integer
            description: "The SCSI timeout. If not specified, defaults to `60s`."
            format: int32
            example: 60000
          space:
            $ref: '#/components/schemas/ArraySpace'
          version:
            type: string
            readOnly: true
            example: 5.0.0
    ArrayConnection:
      allOf:
      - description: dummy
      - type: object
        properties:
          id:
            type: string
            description: "A globally unique, system-generated ID. The ID cannot be\
              \ modified and cannot refer to another resource."
            readOnly: true
          name:
            type: string
            description: "A locally unique, system-generated name. The name cannot\
              \ be modified."
            readOnly: true
        description: |-
          A built-in resource. Many are singletons predefined by Purity (e.g., support settings). Some correspond to a piece of software, like an app, or hardware, like a controller. Others are created by the system in response to some event (e.g., alerts, audit records).
          Typically, a user can't create, delete or rename a built-in resource. A few can be created or deleted, but not renamed because the names are meaningful to Purity (e.g., VIFs).
      - description: Connection to a target array. The `name` and `id` values refer
          to the name and ID of the target array.
      - properties:
          management_address:
            type: string
            description: Management IP address or FQDN of the target array.
            example: 10.202.101.78
          replication_addresses:
            type: array
            description: IP addresses of the target arrays when `replication_transport`
              is `ip`. WWNs of the target arrays when `replication_transport` is `fc`.
            items:
              type: string
              example: 10.202.101.70
          status:
            type: string
            description: "Status of the connection. Valid values are `connected`,\
              \ `connecting`, `partially_connected`, and `unbalanced`. A status of\
              \ `connected` indicates that arrays are communicating. A status of `connecting`\
              \ indicates that the array is trying to establish a connection. A status\
              \ of `partially_connected` indicates that some replication addresses\
              \ are communicating but others are not. A status of `unbalanced` indicates\
              \ that the arrays are communicating, but the set of paths is either\
              \ not redundant or not symmetric."
          type:
            type: string
            description: The type of replication. Valid values are `async-replication`
              and `sync-replication`.
          replication_transport:
            type: string
            description: The protocol used to transport data betwen the local array
              and the remote array. Valid values are `ip` and `fc`. The default is
              `ip`.
            example: ip
          version:
            type: string
            description: The version of the target array.
            example: 5.0.0
          throttle:
            $ref: '#/components/schemas/ArrayConnection_throttle'
    ArrayConnectionKey:
      type: object
      properties:
        connection_key:
          type: string
          description: Connection-key used on another array to connect to this array.
          readOnly: true
          example: 6207d123-d123-0b5c-5fa1-95fabc5c7123
    ArrayConnectionPath:
      allOf:
      - description: dummy
      - type: object
        properties:
          name:
            type: string
            description: "A locally unique, system-generated name. The name cannot\
              \ be modified."
            readOnly: true
        description: |-
          A built-in resource. Many are singletons predefined by Purity (e.g., support settings). Some correspond to a piece of software, like an app, or hardware, like a controller. Others are created by the system in response to some event (e.g., alerts, audit records).
          Typically, a user can't create, delete or rename a built-in resource. A few can be created or deleted, but not renamed because the names are meaningful to Purity (e.g., VIFs, file systems, file system snapshots, volume snapshot).
      - properties:
          local_port:
            type: string
            description: The local port of the path.
            example: ct0.eth0
          local_address:
            type: string
            description: IP address or WWN of the local port.
            example: 10.202.101.70
          remote_port:
            type: string
            description: The remote port of the path.
            example: ct1.eth0
          remote_address:
            type: string
            description: IP address or WWN of the remote port.
            example: 10.202.101.78
          status:
            type: string
            description: Status of the connection. Valid values are `connected` and
              `connecting`. A status of `connected` indicates that the arrays are
              communicating. A status of `connecting` indicates that the array is
              trying to establish a connection.
            readOnly: true
          replication_transport:
            type: string
            description: The protocol used to transport data between the local array
              and the remote array. Valid values are `ip` and `fc`.
        description: Path from the local array to a remote array. The `name` parameter
          indicates the name of the remote array.
    ArrayFactoryResetToken:
      allOf:
      - description: dummy
      - type: object
        properties:
          id:
            type: string
            description: "A globally unique, system-generated ID. The ID cannot be\
              \ modified and cannot refer to another resource."
            readOnly: true
          name:
            type: string
            description: A user-specified name. The name must be locally unique and
              can be changed.
        description: "An ordinary (as opposed to built-in) resource that can be created,\
          \ named, renamed or deleted by the user. This might be a virtual resource\
          \ (e.g., a volume), or correspond to something in the environment, like\
          \ a host or a server."
      - type: object
        properties:
          token:
            type: integer
            description: A random number required as input to perform a factory reset
              of the array.
            format: int64
            readOnly: true
            example: 4671919
        description: "A token that is required to perform a factory reset of the array.\
          \ A factory reset of the array permanently eradicates all data and deletes\
          \ all configurations, restoring the state of the array to the original manufacturer\
          \ settings."
    ArrayPerformance:
      allOf:
      - description: dummy
      - allOf:
        - description: dummy
        - type: object
          properties:
            bytes_per_mirrored_write:
              minimum: 0
              type: integer
              description: The average I/O size per mirrored write. Measured in bytes.
              format: int64
            bytes_per_op:
              minimum: 0
              type: integer
              description: The average I/O size for both read and write (all) operations.
              format: int64
            bytes_per_read:
              minimum: 0
              type: integer
              description: The average I/O size per read. Measured in bytes.
              format: int64
            bytes_per_write:
              minimum: 0
              type: integer
              description: The average I/O size per write. Measured in bytes.
              format: int64
            mirrored_write_bytes_per_sec:
              minimum: 0
              type: integer
              description: The number of mirrored bytes written per second.
              format: int64
            mirrored_writes_per_sec:
              minimum: 0
              type: integer
              description: The number of mirrored writes per second.
              format: int64
            qos_rate_limit_usec_per_mirrored_write_op:
              minimum: 0
              type: integer
              description: The average time it takes the array to process a mirrored
                I/O write request. Measured in microseconds.
              format: int64
            qos_rate_limit_usec_per_read_op:
              minimum: 0
              type: integer
              description: The average time spent waiting due to QoS rate limiting
                for a read request. Measured in microseconds.
              format: int64
            qos_rate_limit_usec_per_write_op:
              minimum: 0
              type: integer
              description: The average time that a write I/O request spends waiting
                as a result of the volume reaching its QoS bandwidth limit. Measured
                in microseconds.
              format: int64
            queue_usec_per_mirrored_write_op:
              minimum: 0
              type: integer
              description: The average time that a mirrored write I/O request spends
                in the array waiting to be served. Measured in microseconds.
              format: int64
            queue_usec_per_read_op:
              minimum: 0
              type: integer
              description: The average time that a read I/O request spends in the
                array waiting to be served. Measured in microseconds.
              format: int64
            queue_usec_per_write_op:
              minimum: 0
              type: integer
              description: The average time that a write I/O request spends in the
                array waiting to be served. Measured in microseconds.
              format: int64
            read_bytes_per_sec:
              minimum: 0
              type: integer
              description: The number of bytes read per second.
              format: int64
            reads_per_sec:
              minimum: 0
              type: integer
              description: The number of read requests processed per second.
              format: int64
            san_usec_per_mirrored_write_op:
              minimum: 0
              type: integer
              description: The average time required to transfer data from the initiator
                to the array for a mirrored write request. Measured in microseconds.
              format: int64
            san_usec_per_read_op:
              minimum: 0
              type: integer
              description: The average time required to transfer data from the array
                to the initiator for a read request. Measured in microseconds.
              format: int64
            san_usec_per_write_op:
              minimum: 0
              type: integer
              description: The average time required to transfer data from the initiator
                to the array for a write request. Measured in microseconds.
              format: int64
            service_usec_per_mirrored_write_op:
              minimum: 0
              type: integer
              description: The average time required for the array to service a mirrored
                write request. Measured in microseconds.
              format: int64
            service_usec_per_read_op:
              minimum: 0
              type: integer
              description: The average time required for the array to service a read
                request. Measured in microseconds.
              format: int64
            service_usec_per_write_op:
              minimum: 0
              type: integer
              description: The average time required for the array to service a write
                request. Measured in microseconds.
              format: int64
            time:
              type: integer
              description: The time when the sample performance data was taken. Measured
                in milliseconds since the UNIX epoch.
              format: int64
            usec_per_mirrored_write_op:
              minimum: 0
              type: integer
              description: "The average time it takes the array to process a mirrored\
                \ I/O write request. Measured in microseconds. The average time does\
                \ not include SAN time, queue time, or QoS rate limit time."
              format: int64
            usec_per_read_op:
              minimum: 0
              type: integer
              description: "The average time it takes the array to process an I/O\
                \ read request. Measured in microseconds. The average time does not\
                \ include SAN time, queue time, or QoS rate limit time."
              format: int64
            usec_per_write_op:
              minimum: 0
              type: integer
              description: "The average time it takes the array to process an I/O\
                \ write request. Measured in microseconds. The average time does not\
                \ include SAN time, queue time, or QoS rate limit time."
              format: int64
            write_bytes_per_sec:
              minimum: 0
              type: integer
              description: The number of bytes written per second.
              format: int64
            writes_per_sec:
              minimum: 0
              type: integer
              description: The number of write requests processed per second.
              format: int64
          readOnly: true
        - properties:
            service_usec_per_read_op_cache_reduction:
              maximum: 1
              minimum: 0
              type: number
              description: "The percentage reduction in `service_usec_per_read_op`\
                \ due to data cache hits. For example, a value of 0.25 indicates that\
                \ the value of `service_usec_per_read_op` is 25&#37; lower than it\
                \ would have been without any data cache hits."
              format: float
      - type: object
        properties:
          id:
            type: string
            description: "A globally unique, system-generated ID. The ID cannot be\
              \ modified and cannot refer to another resource."
            readOnly: true
          name:
            type: string
            description: "A locally unique, system-generated name. The name cannot\
              \ be modified."
            readOnly: true
        description: |-
          A built-in resource. Many are singletons predefined by Purity (e.g., support settings). Some correspond to a piece of software, like an app, or hardware, like a controller. Others are created by the system in response to some event (e.g., alerts, audit records).
          Typically, a user can't create, delete or rename a built-in resource. A few can be created or deleted, but not renamed because the names are meaningful to Purity (e.g., VIFs).
      - properties:
          queue_depth:
            minimum: 0
            type: integer
            description: "Deprecated. The number displayed here may not be accurate\
              \ and in later versions of the product this field will always display\
              \ `null`. Instead, use `queue_usec_per_mirrored_write_op`, `queue_usec_per_read_op`,\
              \ and `queue_usec_per_write_op` fields to measure IO queuing."
            format: int64
          local_queue_usec_per_op:
            minimum: 0
            type: integer
            description: "Average local queue time for both read and write operations,\
              \ measured in microseconds."
            format: int64
          usec_per_other_op:
            minimum: 0
            type: integer
            description: "The average time it takes the array to process an I/O other\
              \ request, measured in microseconds. The average time does not include\
              \ SAN time, queue time, or QoS rate limit time."
            format: int64
          others_per_sec:
            minimum: 0
            type: integer
            description: The number of other requests processed per second.
            format: int64
        readOnly: true
    Audit:
      allOf:
      - description: dummy
      - type: object
        properties:
          id:
            type: string
            description: "A globally unique, system-generated ID. The ID cannot be\
              \ modified and cannot refer to another resource."
            readOnly: true
          name:
            type: string
            description: "A locally unique, system-generated name. The name cannot\
              \ be modified."
            readOnly: true
        description: |-
          A built-in resource. Many are singletons predefined by Purity (e.g., support settings). Some correspond to a piece of software, like an app, or hardware, like a controller. Others are created by the system in response to some event (e.g., alerts, audit records).
          Typically, a user can't create, delete or rename a built-in resource. A few can be created or deleted, but not renamed because the names are meaningful to Purity (e.g., VIFs).
      - type: object
        properties:
          arguments:
            type: string
            description: The arguments provided to the command.
            readOnly: true
            example: --size 1G vol2
          command:
            type: string
            description: The top level command that starts with the string "pure"
              as a convention.
            readOnly: true
            example: purevol
          origin:
            $ref: '#/components/schemas/Audit_origin'
          subcommand:
            type: string
            description: The `command` and `subcommand` combination determines which
              action the user attempted to perform.
            readOnly: true
            example: create
          time:
            type: integer
            description: The time at which the command was run in milliseconds since
              the UNIX epoch.
            format: int64
            readOnly: true
            example: 1577402821354
          user:
            type: string
            description: The user who ran the command.
            readOnly: true
            example: pureuser
          user_interface:
            type: string
            description: "The user interface through which the user session event\
              \ was performed. Valid values are `CLI`, `GUI`, and `REST`."
            readOnly: true
            example: CLI
    ArraySpace:
      allOf:
      - description: dummy
      - type: object
        properties:
          data_reduction:
            type: number
            description: "The ratio of mapped sectors within a volume versus the amount\
              \ of physical space the data occupies after data compression and deduplication.\
              \ The data reduction ratio does not include thin provisioning savings.\
              \ For example, a data reduction ratio of 5&#58;1 means that for every\
              \ 5 MB the host writes to the array, 1 MB is stored on the array's flash\
              \ modules."
            format: float
          shared:
            minimum: 0
            type: integer
            description: "The physical space occupied by deduplicated data, meaning\
              \ that the space is shared with other volumes and snapshots as a result\
              \ of data deduplication. Measured in bytes."
            format: int64
            example: 111863360624
          snapshots:
            minimum: 0
            type: integer
            description: The physical space occupied by data unique to one or more
              snapshots. Measured in bytes.
            format: int64
          system:
            minimum: 0
            type: integer
            description: The physical space occupied by internal array metadata. Measured
              in bytes.
            format: int64
          thin_provisioning:
            maximum: 1
            minimum: 0
            type: number
            description: The percentage of volume sectors that do not contain host-written
              data because the hosts have not written data to them or the sectors
              have been explicitly trimmed.
            format: float
          total_physical:
            minimum: 0
            type: integer
            description: "The total physical space occupied by system, shared space,\
              \ volume, and snapshot data. Measured in bytes."
            format: int64
          total_provisioned:
            minimum: 0
            type: integer
            description: "For a single volume, the provisioned size of the volume.\
              \ For all other resources, the total provisioned size of all volumes\
              \ that are connected to or are inside the resource. Represents storage\
              \ capacity reported to hosts. Measured in bytes."
            format: int64
            example: 19937690345472
          total_reduction:
            type: number
            description: "The ratio of provisioned sectors within a volume versus\
              \ the amount of physical space the data occupies after reduction via\
              \ data compression and deduplication and with thin provisioning savings.\
              \ Total reduction is data reduction with thin provisioning savings.\
              \ For example, a total reduction ratio of 10&#58;1 means that for every\
              \ 10 MB of provisioned space, 1 MB is stored on the array's flash modules."
            format: float
          unique:
            minimum: 0
            type: integer
            description: "The unique physical space occupied by customer data. Unique\
              \ physical space does not include shared space, snapshots, and internal\
              \ array metadata. Measured in bytes."
            format: int64
          virtual:
            minimum: 0
            type: integer
            description: The amount of logically written data that a volume or a snapshot
              references. Measured in bytes.
            format: int64
        readOnly: true
      - properties:
          replication:
            minimum: 0
            type: integer
            description: This is the sum of replication space consumed by all pods
              on this array.
            format: int64
            readOnly: true
    CloudProviderTag:
      type: object
      properties:
        key:
          type: string
          description: Key of the tag. Supports UTF-8 Unicode characters. Please refer
            to the offical document from cloud providers for limitations.
          example: environment
        value:
          type: string
          description: Value of the tag. Supports UTF-8 Unicode characters. Please
            refer to the offical document from cloud providers for limitations.
          example: staging
        details:
          type: string
          description: Details about the status of the tag if not healthy.
          readOnly: true
          example: partially applied
      example:
        details: partially applied
        value: staging
        key: environment
    Certificate:
      allOf:
      - description: dummy
      - type: object
        properties:
          name:
            type: string
            description: "A locally unique, system-generated name. The name cannot\
              \ be modified."
            readOnly: true
        description: |-
          A built-in resource. Many are singletons predefined by Purity (e.g., support settings). Some correspond to a piece of software, like an app, or hardware, like a controller. Others are created by the system in response to some event (e.g., alerts, audit records).
          Typically, a user can't create, delete or rename a built-in resource. A few can be created or deleted, but not renamed because the names are meaningful to Purity (e.g., VIFs, file systems, file system snapshots, volume snapshot).
      - type: object
        properties:
          certificate:
            type: string
            description: The text of the certificate.
          common_name:
            type: string
            description: The common name field listed in the certificate.
            example: Pure Storage Inc.
          country:
            type: string
            description: Two-letter country (ISO) code listed in the certificate.
            example: CA
          email:
            type: string
            description: The email field listed in the certificate.
            example: tcrisp@veridiandynamics.com
          intermediate_certificate:
            type: string
            description: The text of the intermediate certificate chains.
          issued_by:
            type: string
            description: The party that issued the certificate.
            readOnly: true
            example: "Symantec, Inc."
          issued_to:
            type: string
            description: The party to whom the certificate is issued.
            readOnly: true
            example: "Pure Storage, Inc."
          key_size:
            type: integer
            description: The size of the private key for the certificate in bits.
              Default is 2048 bits.
            format: int32
            example: 2048
          locality:
            type: string
            description: The locality field listed in the certificate.
            example: Toronto
          organization:
            type: string
            description: The organization field listed in the certificate.
            example: Veridian Dynamics
          organizational_unit:
            type: string
            description: The organizational unit field listed in the certificate.
            example: Research & Development
          state:
            type: string
            description: The state/province field listed in the certificate.
            example: Ontario
          status:
            type: string
            description: The type of certificate. Valid values are `self-signed` and
              `imported`.
            readOnly: true
          valid_from:
            type: integer
            description: The date when the certificate starts being valid.
            format: int64
            readOnly: true
            example: 1491070899
          valid_to:
            type: integer
            description: The date of when the certificate stops being valid.
            format: int64
            readOnly: true
            example: 1524248499
        description: SSL certificate managed by Purity.
    Connection:
      allOf:
      - description: dummy
      - type: object
        properties:
          host:
            $ref: '#/components/schemas/Connection_host'
          host_group:
            $ref: '#/components/schemas/Connection_host_group'
          lun:
            maximum: 4095
            minimum: 1
            type: integer
            description: "The logical unit number (LUN) by which the specified hosts\
              \ are to address the specified volume. If the LUN is not specified,\
              \ the system automatically assigns a LUN to the connection. To automatically\
              \ assign a LUN to a private connection, the system starts at LUN `1`\
              \ and counts up to the maximum LUN `4095`, assigning the first available\
              \ LUN to the connection. For shared connections, the system starts at\
              \ LUN `254` and counts down to the minimum LUN `1`, assigning the first\
              \ available LUN to the connection. If all LUNs in the `[1...254]` range\
              \ are taken, the system starts at LUN `255` and counts up to the maximum\
              \ LUN `4095`, assigning the first available LUN to the connection."
            format: int32
            example: 7
          protocol_endpoint:
            $ref: api2.8connections_protocol_endpoint
          volume:
            $ref: '#/components/schemas/Connection_volume'
      - properties:
          host:
            $ref: api2.8certificatescertificatesigningrequests_certificate
          host_group:
            $ref: api2.8certificatescertificatesigningrequests_certificate
    Controllers:
      allOf:
      - description: dummy
      - type: object
        properties:
          name:
            type: string
            description: "A locally unique, system-generated name. The name cannot\
              \ be modified."
            readOnly: true
        description: |-
          A built-in resource. Many are singletons predefined by Purity (e.g., support settings). Some correspond to a piece of software, like an app, or hardware, like a controller. Others are created by the system in response to some event (e.g., alerts, audit records).
          Typically, a user can't create, delete or rename a built-in resource. A few can be created or deleted, but not renamed because the names are meaningful to Purity (e.g., VIFs, file systems, file system snapshots, volume snapshot).
      - type: object
        properties:
          mode:
            type: string
            description: "Mode of controller. Values include `not present`, `offline`,\
              \ `primary`, and `secondary`."
            example: primary
          model:
            type: string
            example: FA-m50
          status:
            type: string
            description: "Status of controller. Values include `not ready`, `ready`,\
              \ `unknown`, and `updating`."
            example: ready
          type:
            type: string
            description: Type of controller. Values include `array_controller` and
              `shelf_controller`.
          version:
            type: string
            example: 5.0.0
        readOnly: true
    Directory:
      allOf:
      - description: dummy
      - allOf:
        - description: dummy
        - type: object
          properties:
            id:
              type: string
              description: "A globally unique, system-generated ID. The ID cannot\
                \ be modified and cannot refer to another resource."
              readOnly: true
            name:
              type: string
              description: A user-specified name. The name must be locally unique
                and can be changed.
          description: "An ordinary (as opposed to built-in) resource that can be\
            \ created, named, renamed or deleted by the user. This might be a virtual\
            \ resource (e.g., a volume), or correspond to something in the environment,\
            \ like a host or a server."
        - properties:
            created:
              type: integer
              description: "The managed directory creation time, measured in milliseconds\
                \ since the UNIX epoch."
              format: int64
              readOnly: true
            destroyed:
              type: boolean
              description: "Returns a value of `true` if the managed directory has\
                \ been destroyed and is pending eradication. The `time_remaining`\
                \ value displays the amount of time left until the destroyed managed\
                \ directory is permanently eradicated. Once the `time_remaining` period\
                \ has elapsed, the managed directory is permanently eradicated and\
                \ can no longer be recovered."
            directory_name:
              type: string
              description: The managed directory name without the file system name
                prefix. A full managed directory name is constructed in the form of
                `FILE_SYSTEM:DIR` where `FILE_SYSTEM` is the file system name and
                `DIR` is the value of this field.
              readOnly: true
            file_system:
              type: object
              properties:
                id:
                  type: string
                  description: "A globally unique, system-generated ID. The ID cannot\
                    \ be modified."
                name:
                  type: string
                  description: "The resource name, such as volume name, pod name,\
                    \ snapshot name, and so on."
              description: The file system that this managed directory is in.
              readOnly: true
            path:
              type: string
              description: Absolute path of the managed directory in the file system.
              readOnly: true
            space:
              type: object
              properties:
                data_reduction:
                  type: number
                  description: "The ratio of mapped sectors within a volume versus\
                    \ the amount of physical space the data occupies after data compression\
                    \ and deduplication. The data reduction ratio does not include\
                    \ thin provisioning savings. For example, a data reduction ratio\
                    \ of 5&#58;1 means that for every 5 MB the host writes to the\
                    \ array, 1 MB is stored on the array's flash modules."
                  format: float
                shared:
                  minimum: 0
                  type: integer
                  description: "The physical space occupied by deduplicated data,\
                    \ meaning that the space is shared with other volumes and snapshots\
                    \ as a result of data deduplication. Measured in bytes."
                  format: int64
                  example: 111863360624
                snapshots:
                  minimum: 0
                  type: integer
                  description: The physical space occupied by data unique to one or
                    more snapshots. Measured in bytes.
                  format: int64
                system:
                  minimum: 0
                  type: integer
                  description: The physical space occupied by internal array metadata.
                    Measured in bytes.
                  format: int64
                thin_provisioning:
                  maximum: 1
                  minimum: 0
                  type: number
                  description: The percentage of volume sectors that do not contain
                    host-written data because the hosts have not written data to them
                    or the sectors have been explicitly trimmed.
                  format: float
                total_physical:
                  minimum: 0
                  type: integer
                  description: "The total physical space occupied by system, shared\
                    \ space, volume, and snapshot data. Measured in bytes."
                  format: int64
                total_provisioned:
                  minimum: 0
                  type: integer
                  description: "For a single volume, the provisioned size of the volume.\
                    \ For all other resources, the total provisioned size of all volumes\
                    \ that are connected to or are inside the resource. Represents\
                    \ storage capacity reported to hosts. Measured in bytes."
                  format: int64
                  example: 19937690345472
                total_reduction:
                  type: number
                  description: "The ratio of provisioned sectors within a volume versus\
                    \ the amount of physical space the data occupies after reduction\
                    \ via data compression and deduplication and with thin provisioning\
                    \ savings. Total reduction is data reduction with thin provisioning\
                    \ savings. For example, a total reduction ratio of 10&#58;1 means\
                    \ that for every 10 MB of provisioned space, 1 MB is stored on\
                    \ the array's flash modules."
                  format: float
                unique:
                  minimum: 0
                  type: integer
                  description: "The unique physical space occupied by customer data.\
                    \ Unique physical space does not include shared space, snapshots,\
                    \ and internal array metadata. Measured in bytes."
                  format: int64
                virtual:
                  minimum: 0
                  type: integer
                  description: The amount of logically written data that a volume
                    or a snapshot references. Measured in bytes.
                  format: int64
              description: Displays size and space consumption information.
              readOnly: true
            time_remaining:
              type: integer
              description: "The amount of time left, measured in milliseconds until\
                \ the destroyed managed directory is permanently eradicated."
              format: int64
              readOnly: true
      - properties:
          limited_by:
            $ref: '#/components/schemas/Directory_limited_by'
    DirectoryPerformance:
      allOf:
      - description: dummy
      - type: object
        properties:
          id:
            type: string
            description: "A globally unique, system-generated ID. The ID cannot be\
              \ modified and cannot refer to another resource."
            readOnly: true
          name:
            type: string
            description: A user-specified name. The name must be locally unique and
              can be changed.
        description: "An ordinary (as opposed to built-in) resource that can be created,\
          \ named, renamed or deleted by the user. This might be a virtual resource\
          \ (e.g., a volume), or correspond to something in the environment, like\
          \ a host or a server."
      - properties:
          bytes_per_op:
            minimum: 0
            type: integer
            description: The average I/O size for both read and write (all) operations.
            format: int64
          bytes_per_read:
            minimum: 0
            type: integer
            description: "The average I/O size per read, measured in bytes."
            format: int64
          bytes_per_write:
            minimum: 0
            type: integer
            description: "The average I/O size per write, measured in bytes."
            format: int64
          others_per_sec:
            minimum: 0
            type: integer
            description: The number of other requests processed per second.
            format: int64
          read_bytes_per_sec:
            minimum: 0
            type: integer
            description: The number of bytes read per second.
            format: int64
          reads_per_sec:
            minimum: 0
            type: integer
            description: The number of read requests processed per second.
            format: int64
          time:
            type: integer
            description: The time when the sample performance data was taken. Measured
              in milliseconds since the UNIX epoch.
            format: int64
          usec_per_other_op:
            minimum: 0
            type: integer
            description: "The average time it takes the array to process an I/O other\
              \ request, measured in microseconds. The average time does not include\
              \ SAN time, queue time, or QoS rate limit time."
            format: int64
          usec_per_read_op:
            minimum: 0
            type: integer
            description: "The average time it takes the array to process an I/O read\
              \ request, measured in microseconds. The average time does not include\
              \ SAN time, queue time, or QoS rate limit time."
            format: int64
          usec_per_write_op:
            minimum: 0
            type: integer
            description: "The average time it takes the array to process an I/O write\
              \ request, measured in microseconds. The average time does not include\
              \ SAN time, queue time, or QoS rate limit time."
            format: int64
          write_bytes_per_sec:
            minimum: 0
            type: integer
            description: The number of bytes written per second.
            format: int64
          writes_per_sec:
            minimum: 0
            type: integer
            description: The number of write requests processed per second.
            format: int64
    DirectorySpace:
      allOf:
      - description: dummy
      - type: object
        properties:
          id:
            type: string
            description: "A globally unique, system-generated ID. The ID cannot be\
              \ modified and cannot refer to another resource."
            readOnly: true
          name:
            type: string
            description: "A locally unique, system-generated name. The name cannot\
              \ be modified."
            readOnly: true
        description: |-
          A built-in resource. Many are singletons predefined by Purity (e.g., support settings). Some correspond to a piece of software, like an app, or hardware, like a controller. Others are created by the system in response to some event (e.g., alerts, audit records).
          Typically, a user can't create, delete or rename a built-in resource. A few can be created or deleted, but not renamed because the names are meaningful to Purity (e.g., VIFs).
      - properties:
          space:
            $ref: '#/components/schemas/DirectorySpace_space'
          time:
            type: integer
            description: The timestamp of when the data was taken. Measured in milliseconds
              since the UNIX epoch.
            format: int64
        readOnly: true
    DirectoryExport:
      type: object
      properties:
        destroyed:
          type: boolean
          description: Returns a value of `true` if the managed directory of the export
            has been destroyed and is pending eradication. The export can be recovered
            by recovering the destroyed managed directory.
          readOnly: true
        directory:
          description: The managed directory of the export.
          readOnly: true
          allOf:
          - description: dummy
          - type: object
            properties:
              id:
                type: string
                description: "A globally unique, system-generated ID. The ID cannot\
                  \ be modified."
              name:
                type: string
                description: "The resource name, such as volume name, pod name, snapshot\
                  \ name, and so on."
            readOnly: true
          - properties:
              resource_type:
                type: string
                description: "Type of the object (full name of the endpoint). Valid\
                  \ values include `hosts`, `host-groups`, `network-interfaces`, `pods`,\
                  \ `ports`, `pod-replica-links`, `subnets`, `volumes`, `volume-snapshots`,\
                  \ `volume-groups`, `directories`, `policies/nfs`, `policies/smb`,\
                  \ `policies/snapshot`, and `policies/quota`."
                readOnly: true
        enabled:
          type: boolean
          description: Returns a value of `true` if the export policy that manages
            this export is enabled.
          readOnly: true
        export_name:
          type: string
          description: The export name for accessing this export.
        path:
          type: string
          description: The path of the exported managed directory.
        policy:
          description: The export policy that manages this export. An export can be
            managed by at most one export policy.
          allOf:
          - description: dummy
          - type: object
            properties:
              id:
                type: string
                description: "A globally unique, system-generated ID. The ID cannot\
                  \ be modified."
              name:
                type: string
                description: "The resource name, such as volume name, pod name, snapshot\
                  \ name, and so on."
          - properties:
              resource_type:
                type: string
                description: "Type of the object (full name of the endpoint). Valid\
                  \ values include `hosts`, `host-groups`, `network-interfaces`, `pods`,\
                  \ `ports`, `pod-replica-links`, `subnets`, `volumes`, `volume-snapshots`,\
                  \ `volume-groups`, `directories`, `policies/nfs`, `policies/smb`,\
                  \ `policies/snapshot`, and `policies/quota`."
                readOnly: true
      example:
        path: path
        destroyed: true
        export_name: export_name
        directory: ""
        enabled: true
        policy: ""
    DirectoryQuota:
      type: object
      properties:
        directory:
          description: The directory to which the quota applies.
          readOnly: true
          allOf:
          - description: dummy
          - type: object
            properties:
              id:
                type: string
                description: "A globally unique, system-generated ID. The ID cannot\
                  \ be modified."
              name:
                type: string
                description: "The resource name, such as volume name, pod name, snapshot\
                  \ name, and so on."
            readOnly: true
          - properties:
              resource_type:
                type: string
                description: "Type of the object (full name of the endpoint). Valid\
                  \ values include `hosts`, `host-groups`, `network-interfaces`, `pods`,\
                  \ `ports`, `pod-replica-links`, `subnets`, `volumes`, `volume-snapshots`,\
                  \ `volume-groups`, `directories`, `policies/nfs`, `policies/smb`,\
                  \ `policies/snapshot`, and `policies/quota`."
                readOnly: true
        enabled:
          type: boolean
          description: Returns a value of `true` if the policy is enabled.
          readOnly: true
        enforced:
          type: boolean
          description: "Defines whether the quota rule is enforced or unenforced.\
            \ If the quota rule is enforced and logical space usage exceeds the quota\
            \ limit, any modification operations that result in a need for more space\
            \ are blocked. If the quota rule is unenforced and logical space usage\
            \ exceeds the quota limit, notification emails are sent to targets that\
            \ are specified using the `notification` parameter. No client operations\
            \ are blocked when an unenforced limit is exceeded. If set to `true`,\
            \ the limit is enforced. If set to `false`, notification targets are informed\
            \ when the usage exceeds 80 percent of the limit."
        path:
          type: string
          description: Absolute path of the directory in the file system.
          readOnly: true
        percentage_used:
          minimum: 0
          type: number
          description: The percentage of the space used in the directory with respect
            to the quota limit.
          format: float
          readOnly: true
        policy:
          description: The effective quota policy that imposes the limit. This is
            the policy with the lowest limit.
          readOnly: true
          allOf:
          - description: dummy
          - type: object
            properties:
              id:
                type: string
                description: "A globally unique, system-generated ID. The ID cannot\
                  \ be modified."
              name:
                type: string
                description: "The resource name, such as volume name, pod name, snapshot\
                  \ name, and so on."
            readOnly: true
          - properties:
              resource_type:
                type: string
                description: "Type of the object (full name of the endpoint). Valid\
                  \ values include `hosts`, `host-groups`, `network-interfaces`, `pods`,\
                  \ `ports`, `pod-replica-links`, `subnets`, `volumes`, `volume-snapshots`,\
                  \ `volume-groups`, `directories`, `policies/nfs`, `policies/smb`,\
                  \ `policies/snapshot`, and `policies/quota`."
                readOnly: true
        quota_limit:
          minimum: 0
          type: integer
          description: "Effective quota limit imposed by the quota policy rule attached\
            \ to the directory, measured in bytes."
          format: int64
          readOnly: true
        rule_name:
          type: string
          description: Name of the rule that results in this quota and behavior being
            applied to this directory.
          readOnly: true
        usage:
          minimum: 0
          type: integer
          description: "The amount of logically written data for the directory, measured\
            \ in bytes."
          format: int64
          readOnly: true
    DirectoryService:
      allOf:
      - description: dummy
      - type: object
        properties:
          name:
            type: string
            description: "A locally unique, system-generated name. The name cannot\
              \ be modified."
            readOnly: true
        description: |-
          A built-in resource. Many are singletons predefined by Purity (e.g., support settings). Some correspond to a piece of software, like an app, or hardware, like a controller. Others are created by the system in response to some event (e.g., alerts, audit records).
          Typically, a user can't create, delete or rename a built-in resource. A few can be created or deleted, but not renamed because the names are meaningful to Purity (e.g., VIFs, file systems, file system snapshots, volume snapshot).
      - type: object
        properties:
          base_dn:
            type: string
            description: Base of the Distinguished Name (DN) of the directory service
              groups.
            example: "DC=mycompany,DC=com"
          bind_password:
            type: string
            description: Masked password used to query the directory.
            example: '****'
          bind_user:
            type: string
            description: Username used to query the directory.
            example: "CN=John,OU=Users,DC=example,DC=com"
          ca_certificate:
            maxLength: 3000
            type: string
            description: "The certificate of the Certificate Authority (CA) that signed\
              \ the certificates of the directory servers, which is used to validate\
              \ the authenticity of the configured servers."
          check_peer:
            type: boolean
            description: Whether or not server authenticity is enforced when a certificate
              is provided.
            example: false
          enabled:
            type: boolean
            description: Whether or not the directory service is enabled.
            example: true
          services:
            type: array
            description: Services for which the directory service configuration is
              used.
            readOnly: true
            example:
            - data
            - management
            items:
              type: string
              description: Valid values are `data` and `management`.
              example: data
          uris:
            maxLength: 30
            type: array
            description: List of URIs for the configured directory servers.
            items:
              pattern: ^(ldap|ldaps)
              type: string
              example: ldaps://ad1.mycompany.com
          management:
            $ref: '#/components/schemas/DirectoryService_management'
        description: Configuration information for the directory service.
    DirectoryServiceRole:
      type: object
      properties:
        group:
          type: string
          description: Common Name (CN) of the directory service group that contains
            users with the authority level of the specified role name.
          example: groupOfUsers
        group_base:
          type: string
          description: Specifies where the configured group is located in the directory
            tree.
          example: "OU=PureGroups,OU=SANManagers"
        role:
          $ref: '#/components/schemas/DirectoryServiceRole_role'
      example:
        role:
          name: name
        group_base: "OU=PureGroups,OU=SANManagers"
        group: groupOfUsers
    DirectorySnapshot:
      allOf:
      - description: dummy
      - type: object
        properties:
          id:
            type: string
            description: "A globally unique, system-generated ID. The ID cannot be\
              \ modified and cannot refer to another resource."
            readOnly: true
          name:
            type: string
            description: A user-specified name. The name must be locally unique and
              can be changed.
        description: "An ordinary (as opposed to built-in) resource that can be created,\
          \ named, renamed or deleted by the user. This might be a virtual resource\
          \ (e.g., a volume), or correspond to something in the environment, like\
          \ a host or a server."
      - type: object
        properties:
          client_name:
            type: string
            description: "The customizable portion of the client visible snapshot\
              \ name. A full snapshot name is constructed in the form of `DIR.CLIENT_NAME.SUFFIX`\
              \ where `DIR` is the full managed directory name, `CLIENT_NAME` is the\
              \ client name, and `SUFFIX` is the suffix. The client visible snapshot\
              \ name is `CLIENT_NAME.SUFFIX`."
          created:
            type: integer
            description: "The snapshot creation time, measured in milliseconds since\
              \ the UNIX epoch."
            format: int64
          destroyed:
            type: boolean
            description: "Returns a value of `true` if the snapshot has been destroyed\
              \ and is pending eradication. The `time_remaining` value displays the\
              \ amount of time left until the destroyed directory snapshot is permanently\
              \ eradicated. Before the `time_remaining` period has elapsed, the destroyed\
              \ directory snapshot can be recovered by setting `destroyed=false`.\
              \ Once the `time_remaining` period has elapsed, the directory snapshot\
              \ is permanently eradicated and can no longer be recovered."
          policy:
            $ref: '#/components/schemas/DirectorySnapshot_policy'
          source:
            $ref: '#/components/schemas/DirectorySnapshot_source'
          space:
            $ref: '#/components/schemas/DirectorySpace_space'
          suffix:
            type: integer
            description: "The suffix that is appended to the `source_name` value and\
              \ the `client_name` value to generate the full directory snapshot name\
              \ in the form of `DIR.CLIENT_NAME.SUFFIX` where `DIR` is the managed\
              \ directory name, `CLIENT_NAME` is the client name, and `SUFFIX` is\
              \ the suffix. If the suffix is a string, this field returns `null`.\
              \ See the `name` value for the full snapshot name including the suffix."
            format: int64
          time_remaining:
            type: integer
            description: "The amount of time left until the directory snapshot is\
              \ permanently eradicated. Measured in milliseconds. Before the `time_remaining`\
              \ period has elapsed, the snapshot can be recovered by setting `destroyed=false`\
              \ if it is destroyed, by setting `policy=\"\"` if it is managed by a\
              \ snapshot policy, or by setting `keep_for=\"\"` if it is a manual snapshot."
            format: int64
            readOnly: true
        description: A point-in-time image of the contents of the directory.
    DNS:
      type: object
      properties:
        domain:
          type: string
          description: Domain suffix to be appended by the appliance when performing
            DNS lookups.
          example: example.com
        nameservers:
          maxLength: 3
          type: array
          description: List of DNS server IP addresses.
          items:
            type: string
            example: 192.168.0.125
      description: Configuration information for the domain name servers.
      example:
        nameservers:
        - 192.168.0.125
        - 192.168.0.125
        domain: example.com
    Drive:
      allOf:
      - description: dummy
      - type: object
        properties:
          name:
            type: string
            description: "A locally unique, system-generated name. The name cannot\
              \ be modified."
            readOnly: true
        description: |-
          A built-in resource. Many are singletons predefined by Purity (e.g., support settings). Some correspond to a piece of software, like an app, or hardware, like a controller. Others are created by the system in response to some event (e.g., alerts, audit records).
          Typically, a user can't create, delete or rename a built-in resource. A few can be created or deleted, but not renamed because the names are meaningful to Purity (e.g., VIFs, file systems, file system snapshots, volume snapshot).
      - type: object
        properties:
          capacity:
            type: integer
            description: Physical storage capacity of the module in bytes.
            format: int64
            readOnly: true
            example: 1099511627776
          details:
            type: string
            description: Details about the status of the module if not healthy.
            readOnly: true
            example: Cache module in wrong bay.
          protocol:
            type: string
            description: Storage protocol of the module. Valid values are `NVMe` and
              `SAS`.
            readOnly: true
            example: SAS
          status:
            type: string
            description: "Current status of the module. Valid values are `empty`,\
              \ `failed`, `healthy`, `identifying`, `missing`, `recovering`, `unadmitted`,\
              \ `unhealthy`, `unrecognized`, and `updating`."
            readOnly: true
            example: healthy
          type:
            type: string
            description: "The type of the module. Valid values are `cache`, `NVRAM`,\
              \ `SSD`, and `virtual`."
            readOnly: true
            example: SSD
        description: "Information about a flash, NVRAM, or cache module."
    FileSystem:
      allOf:
      - description: dummy
      - type: object
        properties:
          id:
            type: string
            description: "A globally unique, system-generated ID. The ID cannot be\
              \ modified and cannot refer to another resource."
            readOnly: true
          name:
            type: string
            description: A user-specified name. The name must be locally unique and
              can be changed.
        description: "An ordinary (as opposed to built-in) resource that can be created,\
          \ named, renamed or deleted by the user. This might be a virtual resource\
          \ (e.g., a volume), or correspond to something in the environment, like\
          \ a host or a server."
      - properties:
          created:
            type: integer
            description: "The file system creation time, measured in milliseconds\
              \ since the UNIX epoch."
            format: int64
            readOnly: true
          destroyed:
            type: boolean
            description: "Returns a value of `true` if the file system has been destroyed\
              \ and is pending eradication. The `time_remaining` value displays the\
              \ amount of time left until the destroyed file system is permanently\
              \ eradicated. Before the `time_remaining` period has elapsed, the destroyed\
              \ file system can be recovered by setting `destroyed=false`. Once the\
              \ `time_remaining` period has elapsed, the file system is permanently\
              \ eradicated and can no longer be recovered."
          time_remaining:
            type: integer
            description: "The amount of time left, measured in milliseconds until\
              \ the destroyed file system is permanently eradicated. Before the `time_remaining`\
              \ period has elapsed, the destroyed file system can be recovered by\
              \ setting `destroyed=false`."
            format: int64
            readOnly: true
    Hardware:
      allOf:
      - description: dummy
      - type: object
        properties:
          name:
            type: string
            description: "A locally unique, system-generated name. The name cannot\
              \ be modified."
            readOnly: true
        description: |-
          A built-in resource. Many are singletons predefined by Purity (e.g., support settings). Some correspond to a piece of software, like an app, or hardware, like a controller. Others are created by the system in response to some event (e.g., alerts, audit records).
          Typically, a user can't create, delete or rename a built-in resource. A few can be created or deleted, but not renamed because the names are meaningful to Purity (e.g., VIFs, file systems, file system snapshots, volume snapshot).
      - type: object
        properties:
          details:
            type: string
            description: Details about the status of the component if not healthy.
            readOnly: true
            example: Temperature too high
          identify_enabled:
            type: boolean
            description: "If `true`, the ID LED is lit to visually identify the component."
            readOnly: true
            example: true
          index:
            type: integer
            description: Number that identifies the relative position of a hardware
              component within the array.
            format: int32
            readOnly: true
            example: 1
          model:
            type: string
            description: Model number of the hardware component.
            readOnly: true
            example: DFSC1
          serial:
            type: string
            description: Serial number of the hardware component.
            readOnly: true
            example: PSMFL1717009B
          slot:
            type: integer
            description: Slot number occupied by the PCI Express card that hosts the
              component.
            format: int32
            readOnly: true
            example: 16
          speed:
            type: integer
            description: Speed (in bytes per second) at which the component is operating.
            format: int64
            readOnly: true
            example: 24000000000
          status:
            type: string
            description: "Component status. Values include `critical`, `healthy`,\
              \ `identifying`, `unhealthy`, `unknown`, and `unused`."
            readOnly: true
            example: critical
          temperature:
            type: integer
            description: Temperature (in degrees Celsius) reported by the component.
            format: int32
            readOnly: true
            example: 25
          type:
            type: string
            description: "Type of hardware component. Values include `bay`, `ct`,\
              \ `ch`, `eth`, `fan`, `fb`, `fc`, `fm`, `ib`, `iom`, `nvb`, `pwr`, `sas`,\
              \ `sh`, and `tmp`."
            readOnly: true
            example: ct
          voltage:
            type: integer
            description: Voltage (in Volts) reported by the component.
            format: int32
            readOnly: true
            example: 206
    Host:
      allOf:
      - description: dummy
      - allOf:
        - description: dummy
        - type: object
          properties:
            name:
              type: string
              description: A user-specified name. The name must be locally unique
                and can be changed.
          description: "An ordinary (as opposed to built-in) resource that can be\
            \ created, named, renamed or deleted by the user. This might be a virtual\
            \ resource (e.g., a volume), or correspond to something in the environment,\
            \ like a host or a server."
        - type: object
          properties:
            chap:
              type: object
              properties:
                host_password:
                  type: string
                  description: The host password for CHAP authentication. The password
                    must be between 12 and 255 characters (inclusive) and cannot be
                    the same as the target password.
                host_user:
                  type: string
                  description: The host username for CHAP authentication.
                target_password:
                  type: string
                  description: The target password for CHAP authentication. The password
                    must be between 12 and 255 characters (inclusive) and cannot be
                    the same as the host password.
                target_user:
                  type: string
                  description: The target username for CHAP authentication.
              description: Challenge-Handshake Authentication Protocol (CHAP).
            connection_count:
              type: integer
              description: The number of volumes connected to the specified host.
              format: int64
              readOnly: true
              example: 3
            host_group:
              type: object
              properties:
                name:
                  type: string
                  description: "The resource name, such as volume name, pod name,\
                    \ snapshot name, and so on."
              description: The host group to which the host should be associated.
            iqns:
              type: array
              description: The iSCSI qualified name (IQN) associated with the host.
              items:
                type: string
                example: iqn.2010-06.com.purestorage:linux.393d930077be2977
            nqns:
              type: array
              description: The NVMe Qualified Name (NQN) associated with the host.
              items:
                type: string
                example: nqn.2010-06.com.purestorage:flasharray.512f7bb185978505
            personality:
              type: string
              description: "Determines how the system tunes the array to ensure that\
                \ it works optimally with the host. Set `personality` to the name\
                \ of the host operating system or virtual memory system. Valid values\
                \ are `aix`, `esxi`, `hitachi-vsp`, `hpux`, `oracle-vm-server`, `solaris`,\
                \ and `vms`. If your system is not listed as one of the valid host\
                \ personalities, do not set the option. By default, the personality\
                \ is not set."
            port_connectivity:
              type: object
              properties:
                details:
                  type: string
                  description: "The host connection status. Values include `Redundant`,\
                    \ `N/A`, `Redundant-Failover`, `Uneven`, `Unused Port`, `Single\
                    \ Controller`, `Single Controller-Failover`, and `None`."
                  example: Redundant
                status:
                  type: string
                  description: "The host connection health status. Values include\
                    \ `healthy`, `unhealthy`, and `critical`."
                  example: healthy
              description: The connectivity status between the host and the ports
                on each controller.
              readOnly: true
            preferred_arrays:
              type: array
              description: "For synchronous replication configurations, sets a host's\
                \ preferred array to specify which array exposes active/optimized\
                \ paths to that host. Enter multiple preferred arrays in comma-separated\
                \ format. If a preferred array is set for a host, then the other arrays\
                \ in the same pod will expose active/non-optimized paths to that host.\
                \ If the host is in a host group, `preferred_arrays` cannot be set\
                \ because host groups have their own preferred arrays. On a preferred\
                \ array of a certain host, all the paths on all the ports (for both\
                \ the primary and secondary controllers) are set up as A/O (active/optimized)\
                \ paths, while on a non-preferred array, all the paths are A/N (Active/Non-optimized)\
                \ paths."
              items:
                type: object
                properties:
                  id:
                    type: string
                    description: "A globally unique, system-generated ID. The ID cannot\
                      \ be modified."
                  name:
                    type: string
                    description: "The resource name, such as volume name, pod name,\
                      \ snapshot name, and so on."
            space:
              type: object
              properties:
                data_reduction:
                  type: number
                  description: "The ratio of mapped sectors within a volume versus\
                    \ the amount of physical space the data occupies after data compression\
                    \ and deduplication. The data reduction ratio does not include\
                    \ thin provisioning savings. For example, a data reduction ratio\
                    \ of 5&#58;1 means that for every 5 MB the host writes to the\
                    \ array, 1 MB is stored on the array's flash modules."
                  format: float
                shared:
                  minimum: 0
                  type: integer
                  description: "The physical space occupied by deduplicated data,\
                    \ meaning that the space is shared with other volumes and snapshots\
                    \ as a result of data deduplication. Measured in bytes."
                  format: int64
                  example: 111863360624
                snapshots:
                  minimum: 0
                  type: integer
                  description: The physical space occupied by data unique to one or
                    more snapshots. Measured in bytes.
                  format: int64
                system:
                  minimum: 0
                  type: integer
                  description: The physical space occupied by internal array metadata.
                    Measured in bytes.
                  format: int64
                thin_provisioning:
                  maximum: 1
                  minimum: 0
                  type: number
                  description: The percentage of volume sectors that do not contain
                    host-written data because the hosts have not written data to them
                    or the sectors have been explicitly trimmed.
                  format: float
                total_physical:
                  minimum: 0
                  type: integer
                  description: "The total physical space occupied by system, shared\
                    \ space, volume, and snapshot data. Measured in bytes."
                  format: int64
                total_provisioned:
                  minimum: 0
                  type: integer
                  description: "For a single volume, the provisioned size of the volume.\
                    \ For all other resources, the total provisioned size of all volumes\
                    \ that are connected to or are inside the resource. Represents\
                    \ storage capacity reported to hosts. Measured in bytes."
                  format: int64
                  example: 19937690345472
                total_reduction:
                  type: number
                  description: "The ratio of provisioned sectors within a volume versus\
                    \ the amount of physical space the data occupies after reduction\
                    \ via data compression and deduplication and with thin provisioning\
                    \ savings. Total reduction is data reduction with thin provisioning\
                    \ savings. For example, a total reduction ratio of 10&#58;1 means\
                    \ that for every 10 MB of provisioned space, 1 MB is stored on\
                    \ the array's flash modules."
                  format: float
                unique:
                  minimum: 0
                  type: integer
                  description: "The unique physical space occupied by customer data.\
                    \ Unique physical space does not include shared space, snapshots,\
                    \ and internal array metadata. Measured in bytes."
                  format: int64
                virtual:
                  minimum: 0
                  type: integer
                  description: The amount of logically written data that a volume
                    or a snapshot references. Measured in bytes.
                  format: int64
              description: Displays provisioned (virtual) size and physical storage
                consumption information for the sum of all volumes connected to the
                specified host.
              readOnly: true
            wwns:
              type: array
              description: The Fibre Channel World Wide Name (WWN) associated with
                the host.
              items:
                type: string
                example: 52:4A:93:70:4E:E5:68:00
      - type: object
        properties:
          is_local:
            type: boolean
            description: "-> If set to `true`, the location reference is to the local\
              \ array. If set to `false`, the location reference is to a remote location,\
              \ such as a remote array or offload target."
            readOnly: true
    HostPerformance:
      allOf:
      - description: dummy
      - allOf:
        - description: dummy
        - type: object
          properties:
            bytes_per_mirrored_write:
              minimum: 0
              type: integer
              description: The average I/O size per mirrored write. Measured in bytes.
              format: int64
            bytes_per_op:
              minimum: 0
              type: integer
              description: The average I/O size for both read and write (all) operations.
              format: int64
            bytes_per_read:
              minimum: 0
              type: integer
              description: The average I/O size per read. Measured in bytes.
              format: int64
            bytes_per_write:
              minimum: 0
              type: integer
              description: The average I/O size per write. Measured in bytes.
              format: int64
            mirrored_write_bytes_per_sec:
              minimum: 0
              type: integer
              description: The number of mirrored bytes written per second.
              format: int64
            mirrored_writes_per_sec:
              minimum: 0
              type: integer
              description: The number of mirrored writes per second.
              format: int64
            qos_rate_limit_usec_per_mirrored_write_op:
              minimum: 0
              type: integer
              description: The average time it takes the array to process a mirrored
                I/O write request. Measured in microseconds.
              format: int64
            qos_rate_limit_usec_per_read_op:
              minimum: 0
              type: integer
              description: The average time spent waiting due to QoS rate limiting
                for a read request. Measured in microseconds.
              format: int64
            qos_rate_limit_usec_per_write_op:
              minimum: 0
              type: integer
              description: The average time that a write I/O request spends waiting
                as a result of the volume reaching its QoS bandwidth limit. Measured
                in microseconds.
              format: int64
            queue_usec_per_mirrored_write_op:
              minimum: 0
              type: integer
              description: The average time that a mirrored write I/O request spends
                in the array waiting to be served. Measured in microseconds.
              format: int64
            queue_usec_per_read_op:
              minimum: 0
              type: integer
              description: The average time that a read I/O request spends in the
                array waiting to be served. Measured in microseconds.
              format: int64
            queue_usec_per_write_op:
              minimum: 0
              type: integer
              description: The average time that a write I/O request spends in the
                array waiting to be served. Measured in microseconds.
              format: int64
            read_bytes_per_sec:
              minimum: 0
              type: integer
              description: The number of bytes read per second.
              format: int64
            reads_per_sec:
              minimum: 0
              type: integer
              description: The number of read requests processed per second.
              format: int64
            san_usec_per_mirrored_write_op:
              minimum: 0
              type: integer
              description: The average time required to transfer data from the initiator
                to the array for a mirrored write request. Measured in microseconds.
              format: int64
            san_usec_per_read_op:
              minimum: 0
              type: integer
              description: The average time required to transfer data from the array
                to the initiator for a read request. Measured in microseconds.
              format: int64
            san_usec_per_write_op:
              minimum: 0
              type: integer
              description: The average time required to transfer data from the initiator
                to the array for a write request. Measured in microseconds.
              format: int64
            service_usec_per_mirrored_write_op:
              minimum: 0
              type: integer
              description: The average time required for the array to service a mirrored
                write request. Measured in microseconds.
              format: int64
            service_usec_per_read_op:
              minimum: 0
              type: integer
              description: The average time required for the array to service a read
                request. Measured in microseconds.
              format: int64
            service_usec_per_write_op:
              minimum: 0
              type: integer
              description: The average time required for the array to service a write
                request. Measured in microseconds.
              format: int64
            time:
              type: integer
              description: The time when the sample performance data was taken. Measured
                in milliseconds since the UNIX epoch.
              format: int64
            usec_per_mirrored_write_op:
              minimum: 0
              type: integer
              description: "The average time it takes the array to process a mirrored\
                \ I/O write request. Measured in microseconds. The average time does\
                \ not include SAN time, queue time, or QoS rate limit time."
              format: int64
            usec_per_read_op:
              minimum: 0
              type: integer
              description: "The average time it takes the array to process an I/O\
                \ read request. Measured in microseconds. The average time does not\
                \ include SAN time, queue time, or QoS rate limit time."
              format: int64
            usec_per_write_op:
              minimum: 0
              type: integer
              description: "The average time it takes the array to process an I/O\
                \ write request. Measured in microseconds. The average time does not\
                \ include SAN time, queue time, or QoS rate limit time."
              format: int64
            write_bytes_per_sec:
              minimum: 0
              type: integer
              description: The number of bytes written per second.
              format: int64
            writes_per_sec:
              minimum: 0
              type: integer
              description: The number of write requests processed per second.
              format: int64
          readOnly: true
        - properties:
            service_usec_per_read_op_cache_reduction:
              maximum: 1
              minimum: 0
              type: number
              description: "The percentage reduction in `service_usec_per_read_op`\
                \ due to data cache hits. For example, a value of 0.25 indicates that\
                \ the value of `service_usec_per_read_op` is 25&#37; lower than it\
                \ would have been without any data cache hits."
              format: float
      - type: object
        properties:
          id:
            type: string
            description: "A globally unique, system-generated ID. The ID cannot be\
              \ modified and cannot refer to another resource."
            readOnly: true
          name:
            type: string
            description: A user-specified name. The name must be locally unique and
              can be changed.
        description: "An ordinary (as opposed to built-in) resource that can be created,\
          \ named, renamed or deleted by the user. This might be a virtual resource\
          \ (e.g., a volume), or correspond to something in the environment, like\
          \ a host or a server."
    HostPerformanceBalance:
      allOf:
      - description: dummy
      - type: object
        properties:
          name:
            type: string
            description: A user-specified name. The name must be locally unique and
              can be changed.
        description: "An ordinary (as opposed to built-in) resource that can be created,\
          \ named, renamed or deleted by the user. This might be a virtual resource\
          \ (e.g., a volume), or correspond to something in the environment, like\
          \ a host or a server."
      - properties:
          fraction_relative_to_max:
            maximum: 1
            minimum: 0
            type: number
            description: The path with the highest number of op counts is displayed
              with a fraction_relative_to_max of 1.0. The fraction values of all other
              paths in the host are then calculated relative to the path with the
              highest number of op counts.
            format: float
            example: 0.14
          initiator:
            $ref: '#/components/schemas/HostPerformanceBalance_initiator'
          op_count:
            type: integer
            description: "Count of I/O operations for the host path, over the specified\
              \ resolution."
            format: int64
          target:
            $ref: '#/components/schemas/Port'
          time:
            type: integer
            description: Sample time in milliseconds since UNIX epoch.
            format: int64
        readOnly: true
    HostPerformanceByArray:
      allOf:
      - description: dummy
      - $ref: '#/components/schemas/PodPerformance'
      - properties:
          array:
            $ref: '#/components/schemas/HostPerformanceByArray_array'
    HostSpace:
      allOf:
      - description: dummy
      - type: object
        properties:
          name:
            type: string
            description: "A locally unique, system-generated name. The name cannot\
              \ be modified."
            readOnly: true
        description: |-
          A built-in resource. Many are singletons predefined by Purity (e.g., support settings). Some correspond to a piece of software, like an app, or hardware, like a controller. Others are created by the system in response to some event (e.g., alerts, audit records).
          Typically, a user can't create, delete or rename a built-in resource. A few can be created or deleted, but not renamed because the names are meaningful to Purity (e.g., VIFs, file systems, file system snapshots, volume snapshot).
      - properties:
          space:
            $ref: '#/components/schemas/DirectorySpace_space'
          time:
            type: integer
            format: int64
        readOnly: true
    HostGroup:
      allOf:
      - description: dummy
      - type: object
        properties:
          name:
            type: string
            description: A user-specified name. The name must be locally unique and
              can be changed.
        description: "An ordinary (as opposed to built-in) resource that can be created,\
          \ named, renamed or deleted by the user. This might be a virtual resource\
          \ (e.g., a volume), or correspond to something in the environment, like\
          \ a host or a server."
      - type: object
        properties:
          connection_count:
            type: integer
            description: The number of volumes connected to the host group.
            format: int64
            readOnly: true
            example: 3
          host_count:
            type: integer
            description: The number of hosts in the host group.
            format: int64
            readOnly: true
            example: 3
          is_local:
            type: boolean
            description: Returns a value of `true` if the host or host group belongs
              to the current array. Returns a value of `false` if the host or host
              group belongs to a remote array.
            readOnly: true
          space:
            $ref: '#/components/schemas/DirectorySpace_space'
    HostGroupPerformance:
      allOf:
      - description: dummy
      - allOf:
        - description: dummy
        - type: object
          properties:
            bytes_per_mirrored_write:
              minimum: 0
              type: integer
              description: The average I/O size per mirrored write. Measured in bytes.
              format: int64
            bytes_per_op:
              minimum: 0
              type: integer
              description: The average I/O size for both read and write (all) operations.
              format: int64
            bytes_per_read:
              minimum: 0
              type: integer
              description: The average I/O size per read. Measured in bytes.
              format: int64
            bytes_per_write:
              minimum: 0
              type: integer
              description: The average I/O size per write. Measured in bytes.
              format: int64
            mirrored_write_bytes_per_sec:
              minimum: 0
              type: integer
              description: The number of mirrored bytes written per second.
              format: int64
            mirrored_writes_per_sec:
              minimum: 0
              type: integer
              description: The number of mirrored writes per second.
              format: int64
            qos_rate_limit_usec_per_mirrored_write_op:
              minimum: 0
              type: integer
              description: The average time it takes the array to process a mirrored
                I/O write request. Measured in microseconds.
              format: int64
            qos_rate_limit_usec_per_read_op:
              minimum: 0
              type: integer
              description: The average time spent waiting due to QoS rate limiting
                for a read request. Measured in microseconds.
              format: int64
            qos_rate_limit_usec_per_write_op:
              minimum: 0
              type: integer
              description: The average time that a write I/O request spends waiting
                as a result of the volume reaching its QoS bandwidth limit. Measured
                in microseconds.
              format: int64
            queue_usec_per_mirrored_write_op:
              minimum: 0
              type: integer
              description: The average time that a mirrored write I/O request spends
                in the array waiting to be served. Measured in microseconds.
              format: int64
            queue_usec_per_read_op:
              minimum: 0
              type: integer
              description: The average time that a read I/O request spends in the
                array waiting to be served. Measured in microseconds.
              format: int64
            queue_usec_per_write_op:
              minimum: 0
              type: integer
              description: The average time that a write I/O request spends in the
                array waiting to be served. Measured in microseconds.
              format: int64
            read_bytes_per_sec:
              minimum: 0
              type: integer
              description: The number of bytes read per second.
              format: int64
            reads_per_sec:
              minimum: 0
              type: integer
              description: The number of read requests processed per second.
              format: int64
            san_usec_per_mirrored_write_op:
              minimum: 0
              type: integer
              description: The average time required to transfer data from the initiator
                to the array for a mirrored write request. Measured in microseconds.
              format: int64
            san_usec_per_read_op:
              minimum: 0
              type: integer
              description: The average time required to transfer data from the array
                to the initiator for a read request. Measured in microseconds.
              format: int64
            san_usec_per_write_op:
              minimum: 0
              type: integer
              description: The average time required to transfer data from the initiator
                to the array for a write request. Measured in microseconds.
              format: int64
            service_usec_per_mirrored_write_op:
              minimum: 0
              type: integer
              description: The average time required for the array to service a mirrored
                write request. Measured in microseconds.
              format: int64
            service_usec_per_read_op:
              minimum: 0
              type: integer
              description: The average time required for the array to service a read
                request. Measured in microseconds.
              format: int64
            service_usec_per_write_op:
              minimum: 0
              type: integer
              description: The average time required for the array to service a write
                request. Measured in microseconds.
              format: int64
            time:
              type: integer
              description: The time when the sample performance data was taken. Measured
                in milliseconds since the UNIX epoch.
              format: int64
            usec_per_mirrored_write_op:
              minimum: 0
              type: integer
              description: "The average time it takes the array to process a mirrored\
                \ I/O write request. Measured in microseconds. The average time does\
                \ not include SAN time, queue time, or QoS rate limit time."
              format: int64
            usec_per_read_op:
              minimum: 0
              type: integer
              description: "The average time it takes the array to process an I/O\
                \ read request. Measured in microseconds. The average time does not\
                \ include SAN time, queue time, or QoS rate limit time."
              format: int64
            usec_per_write_op:
              minimum: 0
              type: integer
              description: "The average time it takes the array to process an I/O\
                \ write request. Measured in microseconds. The average time does not\
                \ include SAN time, queue time, or QoS rate limit time."
              format: int64
            write_bytes_per_sec:
              minimum: 0
              type: integer
              description: The number of bytes written per second.
              format: int64
            writes_per_sec:
              minimum: 0
              type: integer
              description: The number of write requests processed per second.
              format: int64
          readOnly: true
        - properties:
            service_usec_per_read_op_cache_reduction:
              maximum: 1
              minimum: 0
              type: number
              description: "The percentage reduction in `service_usec_per_read_op`\
                \ due to data cache hits. For example, a value of 0.25 indicates that\
                \ the value of `service_usec_per_read_op` is 25&#37; lower than it\
                \ would have been without any data cache hits."
              format: float
      - type: object
        properties:
          id:
            type: string
            description: "A globally unique, system-generated ID. The ID cannot be\
              \ modified and cannot refer to another resource."
            readOnly: true
          name:
            type: string
            description: A user-specified name. The name must be locally unique and
              can be changed.
        description: "An ordinary (as opposed to built-in) resource that can be created,\
          \ named, renamed or deleted by the user. This might be a virtual resource\
          \ (e.g., a volume), or correspond to something in the environment, like\
          \ a host or a server."
    HostGroupPerformanceByArray:
      allOf:
      - description: dummy
      - $ref: '#/components/schemas/PodPerformance'
      - properties:
          array:
            $ref: '#/components/schemas/HostPerformanceByArray_array'
    HostGroupSpace:
      allOf:
      - description: dummy
      - type: object
        properties:
          name:
            type: string
            description: "A locally unique, system-generated name. The name cannot\
              \ be modified."
            readOnly: true
        description: |-
          A built-in resource. Many are singletons predefined by Purity (e.g., support settings). Some correspond to a piece of software, like an app, or hardware, like a controller. Others are created by the system in response to some event (e.g., alerts, audit records).
          Typically, a user can't create, delete or rename a built-in resource. A few can be created or deleted, but not renamed because the names are meaningful to Purity (e.g., VIFs, file systems, file system snapshots, volume snapshot).
      - properties:
          space:
            $ref: '#/components/schemas/DirectorySpace_space'
          time:
            type: integer
            format: int64
        readOnly: true
    KMIP:
      allOf:
      - description: dummy
      - type: object
        properties:
          name:
            type: string
            description: "A locally unique, system-generated name. The name cannot\
              \ be modified."
            readOnly: true
        description: |-
          A built-in resource. Many are singletons predefined by Purity (e.g., support settings). Some correspond to a piece of software, like an app, or hardware, like a controller. Others are created by the system in response to some event (e.g., alerts, audit records).
          Typically, a user can't create, delete or rename a built-in resource. A few can be created or deleted, but not renamed because the names are meaningful to Purity (e.g., VIFs, file systems, file system snapshots, volume snapshot).
      - type: object
        properties:
          ca_certificate:
            maxLength: 3000
            type: string
            description: The text of the CA certificate for the KMIP server.
            example: '-----BEGIN CERTIFICATE-----...-----END CERTIFICATE-----'
          certificate:
            $ref: '#/components/schemas/KMIP_certificate'
          uris:
            type: array
            description: List of URIs for the configured KMIP servers.
            example:
            - 1.1.1.1:8888
            - 2.2.2.2:9999
            items:
              type: string
    KMIPTestResult:
      type: object
      properties:
        component_address:
          type: string
          description: Address of the component running the test.
          example: 10.230.94.21
        component_name:
          type: string
          description: Name of the component running the test.
          example: kmip-test1
        description:
          type: string
          description: Description of what is being tested.
          example: Testing kmip connectivity.
        destination:
          type: string
          description: The URI of the target server being tested.
          example: kmip-test-server.dev.purestorage.com
        enabled:
          type: boolean
          description: Expresses whether the service is enabled or not.
          example: true
        result_details:
          type: string
          description: Additional information about the test result.
          example: KMIP test failed
        success:
          type: boolean
          description: Expresses whether communication between the FlashArray and
            the KMIP server succeeded or not.
          example: true
        test_type:
          type: string
          description: Description of what is being tested.
          example: kmip
    MaintenanceWindow:
      allOf:
      - description: dummy
      - type: object
        properties:
          name:
            type: string
            description: A user-specified name. The name must be locally unique and
              can be changed.
        description: "An ordinary (as opposed to built-in) resource that can be created,\
          \ named, renamed or deleted by the user. This might be a virtual resource\
          \ (e.g., a volume), or correspond to something in the environment, like\
          \ a host or a server."
      - type: object
        properties:
          created:
            type: integer
            description: "The maintenance window start time, measured in milliseconds\
              \ since the UNIX epoch."
            format: int64
            readOnly: true
          expires:
            type: integer
            description: "The maintenance window end time, measured in milliseconds\
              \ since the UNIX epoch."
            format: int64
            readOnly: true
        description: The period of time during which maintenance will occur. Alerts
          are suppressed during the maintenance window.
    Member:
      allOf:
      - description: dummy
      - type: object
        properties:
          group:
            $ref: api2.8hosts_preferred_arrays
          member:
            $ref: api2.8hosts_preferred_arrays
    MemberNoIdAll:
      allOf:
      - description: dummy
      - type: object
        properties:
          group:
            $ref: '#/components/schemas/MemberNoIdAll_group'
          member:
            $ref: '#/components/schemas/MemberNoIdAll_member'
    MemberNoIdGroup:
      allOf:
      - description: dummy
      - type: object
        properties:
          group:
            $ref: api2.8certificatescertificatesigningrequests_certificate
          member:
            $ref: api2.8hosts_preferred_arrays
    NetworkInterface:
      allOf:
      - description: dummy
      - type: object
        properties:
          name:
            type: string
            description: "A locally unique, system-generated name. The name cannot\
              \ be modified."
            readOnly: true
        description: |-
          A built-in resource. Many are singletons predefined by Purity (e.g., support settings). Some correspond to a piece of software, like an app, or hardware, like a controller. Others are created by the system in response to some event (e.g., alerts, audit records).
          Typically, a user can't create, delete or rename a built-in resource. A few can be created or deleted, but not renamed because the names are meaningful to Purity (e.g., VIFs, file systems, file system snapshots, volume snapshot).
      - type: object
        properties:
          enabled:
            type: boolean
            description: Returns a value of `true` if the specified network interface
              or Fibre Channel port is enabled. Returns a value of `false` if the
              specified network interface or Fibre Channel port is disabled.
            readOnly: true
          eth:
            $ref: '#/components/schemas/NetworkInterface_eth'
          fc:
            $ref: '#/components/schemas/NetworkInterface_fc'
          interface_type:
            type: string
            description: The interface type. Valid values are `eth` and `fc`.
            readOnly: true
          services:
            type: array
            description: The services provided by the specified network interface
              or Fibre Channel port.
            readOnly: true
            items:
              type: string
              description: "Valid values include `iscsi`, `management`, `nvme-fc`,\
                \ `nvme-roce`, `replication`, `scsi-fc`, and `system`."
          speed:
            type: integer
            description: Configured speed of the specified network interface or Fibre
              Channel port (in Gb/s). Typically this is the maximum speed of the port
              or bond represented by the network interface.
            format: int64
            readOnly: true
    NetworkInterfacePerformance:
      allOf:
      - description: dummy
      - type: object
        properties:
          name:
            type: string
            description: A user-specified name. The name must be locally unique and
              can be changed.
        description: "An ordinary (as opposed to built-in) resource that can be created,\
          \ named, renamed or deleted by the user. This might be a virtual resource\
          \ (e.g., a volume), or correspond to something in the environment, like\
          \ a host or a server."
      - properties:
          interface_type:
            type: string
            description: The interface type. Valid values are `eth` and `fc`.
          time:
            type: integer
            description: Sample time in milliseconds since UNIX epoch.
            format: int64
          eth:
            $ref: '#/components/schemas/NetworkInterfacePerformance_eth'
          fc:
            $ref: '#/components/schemas/NetworkInterfacePerformance_fc'
        readOnly: true
    Offload:
      allOf:
      - description: dummy
      - type: object
        properties:
          azure:
            $ref: api2.8offloads_azure
          google-cloud:
            $ref: api2.8offloads_googlecloud
          nfs:
            $ref: api2.8offloads_nfs
          s3:
            $ref: api2.8offloads_s3
      - type: object
        properties:
          name:
            type: string
            description: A user-specified name. The name must be locally unique and
              can be changed.
        description: "An ordinary (as opposed to built-in) resource that can be created,\
          \ named, renamed or deleted by the user. This might be a virtual resource\
          \ (e.g., a volume), or correspond to something in the environment, like\
          \ a host or a server."
      - type: object
        properties:
          protocol:
            type: string
            description: "Type of offload. Valid values include `azure`, `google-cloud`,\
              \ `nfs`, and `s3`."
            readOnly: true
          target_id:
            type: string
            description: "Unique ID for the offload target. When multiple connections\
              \ to one offload target are created, they each have distinct IDs but\
              \ share the same `target_id`."
            readOnly: true
          space:
            $ref: '#/components/schemas/Offload_space'
          status:
            type: string
            description: "Offload status. Valid values are `connecting`, `connected`,\
              \ `disconnecting`, `not connected`, and `scanning`."
            readOnly: true
    Pod:
      allOf:
      - description: dummy
      - allOf:
        - description: dummy
        - allOf:
          - description: dummy
          - type: object
            properties:
              id:
                type: string
                description: "A globally unique, system-generated ID. The ID cannot\
                  \ be modified and cannot refer to another resource."
                readOnly: true
              name:
                type: string
                description: A user-specified name. The name must be locally unique
                  and can be changed.
            description: "An ordinary (as opposed to built-in) resource that can be\
              \ created, named, renamed or deleted by the user. This might be a virtual\
              \ resource (e.g., a volume), or correspond to something in the environment,\
              \ like a host or a server."
          - type: object
            properties:
              arrays:
                minItems: 1
                type: array
                description: "A list of arrays over which the pod is stretched. If\
                  \ there are two or more arrays in the stretched pod, all data in\
                  \ the pod is synchronously replicated between all of the arrays\
                  \ within the pod."
                items:
                  allOf:
                  - description: dummy
                  - type: object
                    properties:
                      id:
                        type: string
                        description: "A globally unique, system-generated ID. The\
                          \ ID cannot be modified."
                      name:
                        type: string
                        description: "The resource name, such as volume name, pod\
                          \ name, snapshot name, and so on."
                  - type: object
                  - properties:
                      frozen_at:
                        type: integer
                        description: "The timestamp of when the data on the pod was\
                          \ frozen when the array went offline. Measured in milliseconds\
                          \ since the UNIX epoch. Also known as the recovery point.\
                          \ If the pod is in sync, a value of `null` will be returned."
                        format: int64
                        example: 1492662000
                      mediator_status:
                        type: string
                        description: "The status of the mediator, which determines\
                          \ whether it is available to mediate a high availability\
                          \ event. Valid values are `flummoxed`, `online`, `unknown`,\
                          \ and `unreachable`. Only mediators in the `online` status\
                          \ can mediate high availability events. If set to `flummoxed`,\
                          \ the array can reach a mediator, but it is talking to the\
                          \ wrong one. Verify that the DNS in the environment is properly\
                          \ configured. This status might also appear if the pod has\
                          \ been offline on one array for an extended period of time\
                          \ and the peer array is unreachable. If set to `online`,\
                          \ the array is successfully communicating with the mediator,\
                          \ and the mediator is available to mediate a high availability\
                          \ event. If set to `unreachable`, the array cannot reach\
                          \ the mediator, either due to network issues or because\
                          \ the mediator is down. When a mediator is unreachable,\
                          \ synchronous replication continues to function provided\
                          \ all arrays are healthy and communicating, but a high availability\
                          \ event without mediator access can result in an outage."
                      pre_elected:
                        type: boolean
                        description: "If set to `true`, the array has been pre-elected\
                          \ to remain online in the rare event that the mediator is\
                          \ inaccessible on both arrays within the stretched pod,\
                          \ and then later, the arrays within the stretched pod become\
                          \ disconnected from each other. If set to `false`, either\
                          \ the array has been pre-elected to remain offline while\
                          \ its peer array remains online, or pre-election is not\
                          \ in effect. One and only one array within each pod is pre-elected\
                          \ at a given point in time, so while a pre-elected array\
                          \ is keeping the pod online, the pod on its non-elected\
                          \ peer array remains offline during the communication failure.\
                          \ Users cannot pre-elect arrays."
                      progress:
                        maximum: 1
                        minimum: 0
                        type: number
                        description: "The percentage progress of the pod resyncing\
                          \ process for this array. The percentage is displayed as\
                          \ a decimal value, starting at 0.00 and ending at 1.00."
                        format: float
                        example: 0.66
                      status:
                        type: string
                        description: "The status of the array within the stretched\
                          \ pod. Valid values are `offline`, `online`, `resyncing`,\
                          \ and `unknown`. If set to `offline`, the array is experiencing\
                          \ problems and may not have the latest pod data. The array\
                          \ cannot handle I/O to the pod and cannot take over during\
                          \ a high availability event. If set to `online`, the array\
                          \ is online and has the latest pod data. The array can handle\
                          \ I/O to the pod and take over during a high availability\
                          \ event. If set to `resyncing`, the array is actively getting\
                          \ the latest pod data so that it becomes fully synchronized\
                          \ with its peer array. During the resyncing process, the\
                          \ array cannot handle I/O to the pod. Once the arrays are\
                          \ fully synchronized, the array changes to `online` status.\
                          \ If set to `unknown`, the status of the peer array is unknown\
                          \ because this array is offline and cannot determine the\
                          \ state of the pod on the peer array. Only the peer array\
                          \ can ever be in unknown status; this unknown status is\
                          \ unique to the local array and will differ when viewed\
                          \ from its peer array."
                        example: resyncing
                    readOnly: true
              destroyed:
                type: boolean
                description: "Returns a value of `true` if the pod has been destroyed\
                  \ and is pending eradication. The `time_remaining` value displays\
                  \ the amount of time left until the destroyed pod is permanently\
                  \ eradicated. Before the `time_remaining` period has elapsed, the\
                  \ destroyed pod can be recovered by setting `destroyed=false`. Once\
                  \ the `time_remaining` period has elapsed, the pod is permanently\
                  \ eradicated and can no longer be recovered."
              failover_preferences:
                type: array
                description: "Determines which array within a stretched pod should\
                  \ be given priority to stay online should the arrays ever lose contact\
                  \ with each other. The current array and any peer arrays that are\
                  \ connected to the current array for synchronous replication can\
                  \ be added to a pod for failover preference. By default, `failover_preferences=null`,\
                  \ meaning no arrays have been configured for failover preference."
                items:
                  type: object
                  properties:
                    id:
                      type: string
                      description: "A globally unique, system-generated ID. The ID\
                        \ cannot be modified."
                    name:
                      type: string
                      description: "The resource name, such as volume name, pod name,\
                        \ snapshot name, and so on."
              footprint:
                minimum: 0
                type: integer
                description: "The maximum amount of physical space the pod would take\
                  \ up on any array, ignoring any data shared outside the pod. Measured\
                  \ in bytes. The footprint metric is mostly used for capacity planning."
                format: int64
              mediator:
                type: string
                description: "The URL of the mediator for the pod. By default, the\
                  \ Pure1 Cloud Mediator (`purestorage`) serves as the mediator."
                example: https://mediator.cloud-support.purestorage.com
              mediator_version:
                type: string
                description: The mediator version.
                example: 1.0.0
              source:
                type: object
                properties:
                  id:
                    type: string
                    description: "A globally unique, system-generated ID. The ID cannot\
                      \ be modified."
                  name:
                    type: string
                    description: "The resource name, such as volume name, pod name,\
                      \ snapshot name, and so on."
                description: The source pod from where data is cloned to create the
                  new pod.
                readOnly: true
              space:
                description: Displays provisioned (virtual) size and physical storage
                  consumption information for the sum of all volumes connected to
                  the specified host.
                allOf:
                - description: dummy
                - type: object
                  properties:
                    data_reduction:
                      type: number
                      description: "The ratio of mapped sectors within a volume versus\
                        \ the amount of physical space the data occupies after data\
                        \ compression and deduplication. The data reduction ratio\
                        \ does not include thin provisioning savings. For example,\
                        \ a data reduction ratio of 5&#58;1 means that for every 5\
                        \ MB the host writes to the array, 1 MB is stored on the array's\
                        \ flash modules."
                      format: float
                    shared:
                      minimum: 0
                      type: integer
                      description: "The physical space occupied by deduplicated data,\
                        \ meaning that the space is shared with other volumes and\
                        \ snapshots as a result of data deduplication. Measured in\
                        \ bytes."
                      format: int64
                      example: 111863360624
                    snapshots:
                      minimum: 0
                      type: integer
                      description: The physical space occupied by data unique to one
                        or more snapshots. Measured in bytes.
                      format: int64
                    system:
                      minimum: 0
                      type: integer
                      description: The physical space occupied by internal array metadata.
                        Measured in bytes.
                      format: int64
                    thin_provisioning:
                      maximum: 1
                      minimum: 0
                      type: number
                      description: The percentage of volume sectors that do not contain
                        host-written data because the hosts have not written data
                        to them or the sectors have been explicitly trimmed.
                      format: float
                    total_physical:
                      minimum: 0
                      type: integer
                      description: "The total physical space occupied by system, shared\
                        \ space, volume, and snapshot data. Measured in bytes."
                      format: int64
                    total_provisioned:
                      minimum: 0
                      type: integer
                      description: "For a single volume, the provisioned size of the\
                        \ volume. For all other resources, the total provisioned size\
                        \ of all volumes that are connected to or are inside the resource.\
                        \ Represents storage capacity reported to hosts. Measured\
                        \ in bytes."
                      format: int64
                      example: 19937690345472
                    total_reduction:
                      type: number
                      description: "The ratio of provisioned sectors within a volume\
                        \ versus the amount of physical space the data occupies after\
                        \ reduction via data compression and deduplication and with\
                        \ thin provisioning savings. Total reduction is data reduction\
                        \ with thin provisioning savings. For example, a total reduction\
                        \ ratio of 10&#58;1 means that for every 10 MB of provisioned\
                        \ space, 1 MB is stored on the array's flash modules."
                      format: float
                    unique:
                      minimum: 0
                      type: integer
                      description: "The unique physical space occupied by customer\
                        \ data. Unique physical space does not include shared space,\
                        \ snapshots, and internal array metadata. Measured in bytes."
                      format: int64
                    virtual:
                      minimum: 0
                      type: integer
                      description: The amount of logically written data that a volume
                        or a snapshot references. Measured in bytes.
                      format: int64
                  readOnly: true
              time_remaining:
                type: integer
                description: "The amount of time left until the destroyed pod is permanently\
                  \ eradicated. Measured in milliseconds. Before the `time_remaining`\
                  \ period has elapsed, the destroyed pod can be recovered by setting\
                  \ `destroyed=false`."
                format: int64
                readOnly: true
            description: "A pod is an administrative domain, a data container, and\
              \ a namespace for volumes and protection groups."
        - properties:
            requested_promotion_state:
              type: string
              description: "Valid values are `promoted` and `demoted`. Patch `requested_promotion_state`\
                \ to `demoted` to demote the pod so that it can be used as a link\
                \ target for continuous replication between pods. Demoted pods do\
                \ not accept write requests, and a destroyed version of the pod with\
                \ `undo-demote` appended to the pod name is created on the array with\
                \ the state of the pod when it was in the promoted state. Patch `requested_promotion_state`\
                \ to `promoted` to start the process of promoting the pod. The `promotion_status`\
                \ indicates when the pod has been successfully promoted. Promoted\
                \ pods stop incorporating replicated data from the source pod and\
                \ start accepting write requests. The replication process does not\
                \ stop as the source pod continues replicating data to the pod. The\
                \ space consumed by the unique replicated data is tracked by the `space.journal`\
                \ field of the pod."
            promotion_status:
              type: string
              description: "Current promotion status of a pod. Valid values are `promoted`,\
                \ `demoted`, and `promoting`. The `promoted` status indicates that\
                \ the pod has been promoted. The pod takes writes from hosts instead\
                \ of incorporating replicated data. This is the default mode for a\
                \ pod when it is created. The `demoted` status indicates that the\
                \ pod has been demoted. The pod does not accept write requests and\
                \ is ready to be used as a link target. The `promoting` status indicates\
                \ that the pod is in an intermediate status between `demoted` and\
                \ `promoted` while the promotion process is taking place."
            link_source_count:
              type: integer
              description: Number of source pods that link to the pod.
              example: 1
            link_target_count:
              type: integer
              description: Number of target pods that link to the pod.
              example: 1
            space:
              allOf:
              - description: dummy
              - type: object
                properties:
                  data_reduction:
                    type: number
                    description: "The ratio of mapped sectors within a volume versus\
                      \ the amount of physical space the data occupies after data\
                      \ compression and deduplication. The data reduction ratio does\
                      \ not include thin provisioning savings. For example, a data\
                      \ reduction ratio of 5&#58;1 means that for every 5 MB the host\
                      \ writes to the array, 1 MB is stored on the array's flash modules."
                    format: float
                  shared:
                    minimum: 0
                    type: integer
                    description: "The physical space occupied by deduplicated data,\
                      \ meaning that the space is shared with other volumes and snapshots\
                      \ as a result of data deduplication. Measured in bytes."
                    format: int64
                    example: 111863360624
                  snapshots:
                    minimum: 0
                    type: integer
                    description: The physical space occupied by data unique to one
                      or more snapshots. Measured in bytes.
                    format: int64
                  system:
                    minimum: 0
                    type: integer
                    description: The physical space occupied by internal array metadata.
                      Measured in bytes.
                    format: int64
                  thin_provisioning:
                    maximum: 1
                    minimum: 0
                    type: number
                    description: The percentage of volume sectors that do not contain
                      host-written data because the hosts have not written data to
                      them or the sectors have been explicitly trimmed.
                    format: float
                  total_physical:
                    minimum: 0
                    type: integer
                    description: "The total physical space occupied by system, shared\
                      \ space, volume, and snapshot data. Measured in bytes."
                    format: int64
                  total_provisioned:
                    minimum: 0
                    type: integer
                    description: "For a single volume, the provisioned size of the\
                      \ volume. For all other resources, the total provisioned size\
                      \ of all volumes that are connected to or are inside the resource.\
                      \ Represents storage capacity reported to hosts. Measured in\
                      \ bytes."
                    format: int64
                    example: 19937690345472
                  total_reduction:
                    type: number
                    description: "The ratio of provisioned sectors within a volume\
                      \ versus the amount of physical space the data occupies after\
                      \ reduction via data compression and deduplication and with\
                      \ thin provisioning savings. Total reduction is data reduction\
                      \ with thin provisioning savings. For example, a total reduction\
                      \ ratio of 10&#58;1 means that for every 10 MB of provisioned\
                      \ space, 1 MB is stored on the array's flash modules."
                    format: float
                  unique:
                    minimum: 0
                    type: integer
                    description: "The unique physical space occupied by customer data.\
                      \ Unique physical space does not include shared space, snapshots,\
                      \ and internal array metadata. Measured in bytes."
                    format: int64
                  virtual:
                    minimum: 0
                    type: integer
                    description: The amount of logically written data that a volume
                      or a snapshot references. Measured in bytes.
                    format: int64
                readOnly: true
              - properties:
                  replication:
                    minimum: 0
                    type: integer
                    description: "On source pods, the space consumed by unique data\
                      \ that has not been replicated to the target pod. On target\
                      \ pods, the space consumed by unique data that has been replicated\
                      \ to the target but not yet incorporated into the target pod."
                    format: int64
      - properties:
          array_count:
            type: integer
            description: Number of arrays to which this pod connects.
            example: 1
    PodPerformance:
      allOf:
      - description: dummy
      - allOf:
        - description: dummy
        - type: object
          properties:
            bytes_per_mirrored_write:
              minimum: 0
              type: integer
              description: The average I/O size per mirrored write. Measured in bytes.
              format: int64
            bytes_per_op:
              minimum: 0
              type: integer
              description: The average I/O size for both read and write (all) operations.
              format: int64
            bytes_per_read:
              minimum: 0
              type: integer
              description: The average I/O size per read. Measured in bytes.
              format: int64
            bytes_per_write:
              minimum: 0
              type: integer
              description: The average I/O size per write. Measured in bytes.
              format: int64
            mirrored_write_bytes_per_sec:
              minimum: 0
              type: integer
              description: The number of mirrored bytes written per second.
              format: int64
            mirrored_writes_per_sec:
              minimum: 0
              type: integer
              description: The number of mirrored writes per second.
              format: int64
            qos_rate_limit_usec_per_mirrored_write_op:
              minimum: 0
              type: integer
              description: The average time it takes the array to process a mirrored
                I/O write request. Measured in microseconds.
              format: int64
            qos_rate_limit_usec_per_read_op:
              minimum: 0
              type: integer
              description: The average time spent waiting due to QoS rate limiting
                for a read request. Measured in microseconds.
              format: int64
            qos_rate_limit_usec_per_write_op:
              minimum: 0
              type: integer
              description: The average time that a write I/O request spends waiting
                as a result of the volume reaching its QoS bandwidth limit. Measured
                in microseconds.
              format: int64
            queue_usec_per_mirrored_write_op:
              minimum: 0
              type: integer
              description: The average time that a mirrored write I/O request spends
                in the array waiting to be served. Measured in microseconds.
              format: int64
            queue_usec_per_read_op:
              minimum: 0
              type: integer
              description: The average time that a read I/O request spends in the
                array waiting to be served. Measured in microseconds.
              format: int64
            queue_usec_per_write_op:
              minimum: 0
              type: integer
              description: The average time that a write I/O request spends in the
                array waiting to be served. Measured in microseconds.
              format: int64
            read_bytes_per_sec:
              minimum: 0
              type: integer
              description: The number of bytes read per second.
              format: int64
            reads_per_sec:
              minimum: 0
              type: integer
              description: The number of read requests processed per second.
              format: int64
            san_usec_per_mirrored_write_op:
              minimum: 0
              type: integer
              description: The average time required to transfer data from the initiator
                to the array for a mirrored write request. Measured in microseconds.
              format: int64
            san_usec_per_read_op:
              minimum: 0
              type: integer
              description: The average time required to transfer data from the array
                to the initiator for a read request. Measured in microseconds.
              format: int64
            san_usec_per_write_op:
              minimum: 0
              type: integer
              description: The average time required to transfer data from the initiator
                to the array for a write request. Measured in microseconds.
              format: int64
            service_usec_per_mirrored_write_op:
              minimum: 0
              type: integer
              description: The average time required for the array to service a mirrored
                write request. Measured in microseconds.
              format: int64
            service_usec_per_read_op:
              minimum: 0
              type: integer
              description: The average time required for the array to service a read
                request. Measured in microseconds.
              format: int64
            service_usec_per_write_op:
              minimum: 0
              type: integer
              description: The average time required for the array to service a write
                request. Measured in microseconds.
              format: int64
            time:
              type: integer
              description: The time when the sample performance data was taken. Measured
                in milliseconds since the UNIX epoch.
              format: int64
            usec_per_mirrored_write_op:
              minimum: 0
              type: integer
              description: "The average time it takes the array to process a mirrored\
                \ I/O write request. Measured in microseconds. The average time does\
                \ not include SAN time, queue time, or QoS rate limit time."
              format: int64
            usec_per_read_op:
              minimum: 0
              type: integer
              description: "The average time it takes the array to process an I/O\
                \ read request. Measured in microseconds. The average time does not\
                \ include SAN time, queue time, or QoS rate limit time."
              format: int64
            usec_per_write_op:
              minimum: 0
              type: integer
              description: "The average time it takes the array to process an I/O\
                \ write request. Measured in microseconds. The average time does not\
                \ include SAN time, queue time, or QoS rate limit time."
              format: int64
            write_bytes_per_sec:
              minimum: 0
              type: integer
              description: The number of bytes written per second.
              format: int64
            writes_per_sec:
              minimum: 0
              type: integer
              description: The number of write requests processed per second.
              format: int64
          readOnly: true
        - properties:
            service_usec_per_read_op_cache_reduction:
              maximum: 1
              minimum: 0
              type: number
              description: "The percentage reduction in `service_usec_per_read_op`\
                \ due to data cache hits. For example, a value of 0.25 indicates that\
                \ the value of `service_usec_per_read_op` is 25&#37; lower than it\
                \ would have been without any data cache hits."
              format: float
      - type: object
        properties:
          id:
            type: string
            description: "A globally unique, system-generated ID. The ID cannot be\
              \ modified and cannot refer to another resource."
            readOnly: true
          name:
            type: string
            description: A user-specified name. The name must be locally unique and
              can be changed.
        description: "An ordinary (as opposed to built-in) resource that can be created,\
          \ named, renamed or deleted by the user. This might be a virtual resource\
          \ (e.g., a volume), or correspond to something in the environment, like\
          \ a host or a server."
    PodPerformanceByArray:
      allOf:
      - description: dummy
      - $ref: '#/components/schemas/PodPerformance'
      - properties:
          array:
            $ref: '#/components/schemas/HostPerformanceByArray_array'
    PodPerformanceReplication:
      allOf:
      - description: dummy
      - type: object
        properties:
          continuous_bytes_per_sec:
            $ref: '#/components/schemas/PodPerformanceReplication_continuous_bytes_per_sec'
          periodic_bytes_per_sec:
            $ref: '#/components/schemas/PodPerformanceReplication_periodic_bytes_per_sec'
          pod:
            $ref: '#/components/schemas/PodPerformanceReplication_pod'
          resync_bytes_per_sec:
            $ref: '#/components/schemas/PodPerformanceReplication_resync_bytes_per_sec'
          sync_bytes_per_sec:
            $ref: '#/components/schemas/PodPerformanceReplication_sync_bytes_per_sec'
          time:
            type: integer
            description: Sample time in milliseconds since the UNIX epoch.
            format: int64
          total_bytes_per_sec:
            minimum: 0
            type: integer
            description: Total bytes transmitted and received per second for all types
              of replication.
            format: int64
        readOnly: true
    PodPerformanceReplicationByArray:
      allOf:
      - description: dummy
      - type: object
        properties:
          continuous_bytes_per_sec:
            $ref: '#/components/schemas/PodPerformanceReplication_continuous_bytes_per_sec'
          periodic_bytes_per_sec:
            $ref: '#/components/schemas/PodPerformanceReplication_periodic_bytes_per_sec'
          pod:
            $ref: '#/components/schemas/PodPerformanceReplication_pod'
          resync_bytes_per_sec:
            $ref: '#/components/schemas/PodPerformanceReplication_resync_bytes_per_sec'
          sync_bytes_per_sec:
            $ref: '#/components/schemas/PodPerformanceReplication_sync_bytes_per_sec'
          time:
            type: integer
            description: Sample time in milliseconds since the UNIX epoch.
            format: int64
          total_bytes_per_sec:
            minimum: 0
            type: integer
            description: Total bytes transmitted and received per second for all types
              of replication.
            format: int64
        readOnly: true
      - properties:
          array:
            $ref: '#/components/schemas/HostPerformanceByArray_array'
    PodReplicaLink:
      allOf:
      - description: dummy
      - type: object
        properties:
          id:
            type: string
            description: "A non-modifiable, globally unique ID chosen by the system."
            readOnly: true
      - properties:
          direction:
            type: string
            description: The direction of replication. Valid values include `inbound`
              and `outbound`.
            readOnly: true
          lag:
            type: integer
            description: Duration in milliseconds that represents how far behind the
              replication target is from the source. This is the time difference between
              current time and `recovery_point`.
            format: int64
            readOnly: true
          local_pod:
            $ref: '#/components/schemas/PodReplicaLink_local_pod'
          paused:
            type: boolean
            description: Returns a value of `true` if the replica link is in a `paused`
              state. Returns a value of `false` if the replica link is not in a `paused`
              state.
          recovery_point:
            type: integer
            description: "Time when the last piece of data was replicated, in milliseconds\
              \ since the UNIX epoch, and the recovery point if the target pod is\
              \ promoted. If the pod is currently baselining, then the value is `null`."
            format: int64
            readOnly: true
            example: 1565034592494
          remote_pod:
            $ref: '#/components/schemas/PodReplicaLink_remote_pod'
          remotes:
            type: array
            description: A list of remote arrays that share this pod.
            items:
              $ref: '#/components/schemas/AlertEvent_alert'
          status:
            type: string
            description: "Status of the replica-link. Valid values include `replicating`,\
              \ `baselining`, `paused`, `quiescing`, `quiesced`, `idle`, and `unhealthy`."
            readOnly: true
    PodReplicaLinkLag:
      allOf:
      - description: dummy
      - type: object
        properties:
          id:
            type: string
            description: "A non-modifiable, globally unique ID chosen by the system."
            readOnly: true
      - properties:
          direction:
            type: string
            description: The direction of replication. Valid values include `inbound`
              and `outbound`.
            readOnly: true
          lag:
            $ref: '#/components/schemas/PodReplicaLinkLag_lag'
          local_pod:
            $ref: '#/components/schemas/PodReplicaLink_local_pod'
          recovery_point:
            type: integer
            description: "Time when the last piece of data was replicated, in milliseconds\
              \ since the UNIX epoch, and the recovery point if the pod is promoted.\
              \ If the pod is baselining then the value is `null`."
            format: int64
            readOnly: true
            example: 1565034592494
          remote_pod:
            $ref: '#/components/schemas/PodReplicaLink_remote_pod'
          remotes:
            type: array
            description: Reference to a remote array.
            items:
              $ref: '#/components/schemas/AlertEvent_alert'
          status:
            type: string
            description: "Status of the replica-link. Valid values include `replicating`,\
              \ `baselining`, `paused`, `quiescing`, `quiesced`, `idle`, and `unhealthy`."
            readOnly: true
          time:
            type: integer
            description: Sample time in milliseconds since the UNIX epoch.
            format: int64
    PodReplicaLinkPerformance:
      allOf:
      - description: dummy
      - type: object
        properties:
          id:
            type: string
            description: "A non-modifiable, globally unique ID chosen by the system."
            readOnly: true
      - type: object
        properties:
          bytes_per_sec_from_remote:
            minimum: 0
            type: integer
            description: The number of bytes received per second from a remote array.
            format: int64
          bytes_per_sec_to_remote:
            minimum: 0
            type: integer
            description: The number of bytes transmitted per second to a remote array.
            format: int64
          bytes_per_sec_total:
            minimum: 0
            type: integer
            description: Total bytes transmitted and received per second.
            format: int64
          direction:
            type: string
            description: The direction of replication. Valid values are `inbound`
              and `outbound`.
          local_pod:
            $ref: '#/components/schemas/PodReplicaLink_local_pod'
          remote_pod:
            $ref: '#/components/schemas/PodReplicaLink_remote_pod'
          remotes:
            type: array
            description: Reference to a remote array.
            items:
              $ref: '#/components/schemas/AlertEvent_alert'
          time:
            type: integer
            description: Sample time in milliseconds since the UNIX epoch.
            format: int64
        readOnly: true
    PodSpace:
      allOf:
      - description: dummy
      - type: object
        properties:
          id:
            type: string
            description: "A globally unique, system-generated ID. The ID cannot be\
              \ modified and cannot refer to another resource."
            readOnly: true
          name:
            type: string
            description: "A locally unique, system-generated name. The name cannot\
              \ be modified."
            readOnly: true
        description: |-
          A built-in resource. Many are singletons predefined by Purity (e.g., support settings). Some correspond to a piece of software, like an app, or hardware, like a controller. Others are created by the system in response to some event (e.g., alerts, audit records).
          Typically, a user can't create, delete or rename a built-in resource. A few can be created or deleted, but not renamed because the names are meaningful to Purity (e.g., VIFs).
      - properties:
          space:
            description: Displays size and space consumption information.
            allOf:
            - description: dummy
            - type: object
              properties:
                data_reduction:
                  type: number
                  description: "The ratio of mapped sectors within a volume versus\
                    \ the amount of physical space the data occupies after data compression\
                    \ and deduplication. The data reduction ratio does not include\
                    \ thin provisioning savings. For example, a data reduction ratio\
                    \ of 5&#58;1 means that for every 5 MB the host writes to the\
                    \ array, 1 MB is stored on the array's flash modules."
                  format: float
                shared:
                  minimum: 0
                  type: integer
                  description: "The physical space occupied by deduplicated data,\
                    \ meaning that the space is shared with other volumes and snapshots\
                    \ as a result of data deduplication. Measured in bytes."
                  format: int64
                  example: 111863360624
                snapshots:
                  minimum: 0
                  type: integer
                  description: The physical space occupied by data unique to one or
                    more snapshots. Measured in bytes.
                  format: int64
                system:
                  minimum: 0
                  type: integer
                  description: The physical space occupied by internal array metadata.
                    Measured in bytes.
                  format: int64
                thin_provisioning:
                  maximum: 1
                  minimum: 0
                  type: number
                  description: The percentage of volume sectors that do not contain
                    host-written data because the hosts have not written data to them
                    or the sectors have been explicitly trimmed.
                  format: float
                total_physical:
                  minimum: 0
                  type: integer
                  description: "The total physical space occupied by system, shared\
                    \ space, volume, and snapshot data. Measured in bytes."
                  format: int64
                total_provisioned:
                  minimum: 0
                  type: integer
                  description: "For a single volume, the provisioned size of the volume.\
                    \ For all other resources, the total provisioned size of all volumes\
                    \ that are connected to or are inside the resource. Represents\
                    \ storage capacity reported to hosts. Measured in bytes."
                  format: int64
                  example: 19937690345472
                total_reduction:
                  type: number
                  description: "The ratio of provisioned sectors within a volume versus\
                    \ the amount of physical space the data occupies after reduction\
                    \ via data compression and deduplication and with thin provisioning\
                    \ savings. Total reduction is data reduction with thin provisioning\
                    \ savings. For example, a total reduction ratio of 10&#58;1 means\
                    \ that for every 10 MB of provisioned space, 1 MB is stored on\
                    \ the array's flash modules."
                  format: float
                unique:
                  minimum: 0
                  type: integer
                  description: "The unique physical space occupied by customer data.\
                    \ Unique physical space does not include shared space, snapshots,\
                    \ and internal array metadata. Measured in bytes."
                  format: int64
                virtual:
                  minimum: 0
                  type: integer
                  description: The amount of logically written data that a volume
                    or a snapshot references. Measured in bytes.
                  format: int64
              readOnly: true
            - properties:
                replication:
                  minimum: 0
                  type: integer
                  description: "On source pods, the space consumed by unique data\
                    \ that has not been replicated to the target pod. On target pods,\
                    \ the space consumed by unique data that has been replicated to\
                    \ the target but not yet incorporated into the target pod."
                  format: int64
          time:
            type: integer
            description: "The timestamp of when the data was taken, measured in milliseconds\
              \ since the UNIX epoch."
            format: int64
        readOnly: true
    Policy:
      allOf:
      - description: dummy
      - type: object
        properties:
          id:
            type: string
            description: "A globally unique, system-generated ID. The ID cannot be\
              \ modified and cannot refer to another resource."
            readOnly: true
          name:
            type: string
            description: A user-specified name. The name must be locally unique and
              can be changed.
        description: "An ordinary (as opposed to built-in) resource that can be created,\
          \ named, renamed or deleted by the user. This might be a virtual resource\
          \ (e.g., a volume), or correspond to something in the environment, like\
          \ a host or a server."
      - properties:
          enabled:
            type: boolean
            description: Returns a value of `true` if the policy is enabled.
          policy_type:
            type: string
            description: "Type of the policy. Valid values include `nfs`, `smb`, `snapshot`,\
              \ and `quota`."
            readOnly: true
    PolicyMember:
      type: object
      properties:
        destroyed:
          type: boolean
          description: Returns a value of `true` if the member is destroyed.
          readOnly: true
        enabled:
          type: boolean
          description: Returns a value of `true` if the policy is enabled.
          readOnly: true
        member:
          description: Reference to the resource that the policy is applied to.
          readOnly: true
          allOf:
          - description: dummy
          - type: object
            properties:
              id:
                type: string
                description: "A globally unique, system-generated ID. The ID cannot\
                  \ be modified."
              name:
                type: string
                description: "The resource name, such as volume name, pod name, snapshot\
                  \ name, and so on."
            readOnly: true
          - properties:
              resource_type:
                type: string
                description: "Type of the object (full name of the endpoint). Valid\
                  \ values include `hosts`, `host-groups`, `network-interfaces`, `pods`,\
                  \ `ports`, `pod-replica-links`, `subnets`, `volumes`, `volume-snapshots`,\
                  \ `volume-groups`, `directories`, `policies/nfs`, `policies/smb`,\
                  \ `policies/snapshot`, and `policies/quota`."
                readOnly: true
        policy:
          description: Reference to the policy.
          readOnly: true
          allOf:
          - description: dummy
          - type: object
            properties:
              id:
                type: string
                description: "A globally unique, system-generated ID. The ID cannot\
                  \ be modified."
              name:
                type: string
                description: "The resource name, such as volume name, pod name, snapshot\
                  \ name, and so on."
            readOnly: true
          - properties:
              resource_type:
                type: string
                description: "Type of the object (full name of the endpoint). Valid\
                  \ values include `hosts`, `host-groups`, `network-interfaces`, `pods`,\
                  \ `ports`, `pod-replica-links`, `subnets`, `volumes`, `volume-snapshots`,\
                  \ `volume-groups`, `directories`, `policies/nfs`, `policies/smb`,\
                  \ `policies/snapshot`, and `policies/quota`."
                readOnly: true
      example:
        destroyed: true
        member: ""
        enabled: true
        policy: ""
    PolicyMemberExport:
      allOf:
      - description: dummy
      - $ref: '#/components/schemas/PolicyMember'
      - properties:
          export_name:
            type: string
            description: The export name for accessing this export.
            readOnly: true
    PolicyRuleNfsClient:
      type: object
      properties:
        access:
          type: string
          description: Specifies access control for the export. Valid values are `root-squash`
            and `no-root-squash`. The default is `root-squash` if not specified.
          readOnly: true
        client:
          type: string
          description: "Specifies the clients that will be permitted to access the\
            \ export. Accepted notation includes IP, IP mask, or hostname. The default\
            \ is `*` if not specified."
          readOnly: true
        name:
          type: string
          description: Name of this rule. The name is automatically generated by the
            system.
        permission:
          type: string
          description: Specifies which read-write client access permissions are allowed
            for the export. Valid values are `rw` and `ro`. The default is `rw` if
            not specified.
        policy:
          description: The policy to which this rule belongs.
          readOnly: true
          allOf:
          - description: dummy
          - type: object
            properties:
              id:
                type: string
                description: "A globally unique, system-generated ID. The ID cannot\
                  \ be modified."
              name:
                type: string
                description: "The resource name, such as volume name, pod name, snapshot\
                  \ name, and so on."
            readOnly: true
          - properties:
              resource_type:
                type: string
                description: "Type of the object (full name of the endpoint). Valid\
                  \ values include `hosts`, `host-groups`, `network-interfaces`, `pods`,\
                  \ `ports`, `pod-replica-links`, `subnets`, `volumes`, `volume-snapshots`,\
                  \ `volume-groups`, `directories`, `policies/nfs`, `policies/smb`,\
                  \ `policies/snapshot`, and `policies/quota`."
                readOnly: true
      example:
        access: access
        name: name
        client: client
        permission: permission
        policy: ""
    PolicyRuleQuota:
      type: object
      properties:
        enforced:
          type: boolean
          description: "Defines whether the quota rule is enforced or unenforced.\
            \ If the quota rule is enforced and logical space usage exceeds the quota\
            \ limit, any modification operations that result in a need for more space\
            \ are blocked. If the quota rule is unenforced and logical space usage\
            \ exceeds the quota limit, notification emails are sent to targets that\
            \ are specified using the `notification` parameter. No client operations\
            \ are blocked when an unenforced limit is exceeded. If set to `true`,\
            \ the limit is enforced. If set to `false`, notification targets are informed\
            \ when the usage exceeds 80 percent of the limit."
          readOnly: true
        name:
          type: string
          description: Name of this rule. The name is automatically generated by the
            system.
        notifications:
          type: string
          description: "Targets to notify when usage approaches the quota limit. The\
            \ list of notification targets is a comma-separated string. Valid values\
            \ are `user`, and `group`. If not specified, notification targets are\
            \ not assigned for the rule."
          readOnly: true
        policy:
          description: The policy to which this rule belongs.
          readOnly: true
          allOf:
          - description: dummy
          - type: object
            properties:
              id:
                type: string
                description: "A globally unique, system-generated ID. The ID cannot\
                  \ be modified."
              name:
                type: string
                description: "The resource name, such as volume name, pod name, snapshot\
                  \ name, and so on."
            readOnly: true
          - properties:
              resource_type:
                type: string
                description: "Type of the object (full name of the endpoint). Valid\
                  \ values include `hosts`, `host-groups`, `network-interfaces`, `pods`,\
                  \ `ports`, `pod-replica-links`, `subnets`, `volumes`, `volume-snapshots`,\
                  \ `volume-groups`, `directories`, `policies/nfs`, `policies/smb`,\
                  \ `policies/snapshot`, and `policies/quota`."
                readOnly: true
        quota_limit:
          type: integer
          description: "Logical space limit of the quota assigned by the rule, measured\
            \ in bytes. This value cannot be set to 0."
          format: int64
          readOnly: true
      example:
        quota_limit: 0
        enforced: true
        name: name
        notifications: notifications
        policy: ""
    PolicyRuleSmbClient:
      type: object
      properties:
        anonymous_access_allowed:
          type: boolean
          description: Specifies whether access to information is allowed for anonymous
            users. Returns a value of `false` if not specified.
          readOnly: true
        client:
          type: string
          description: "Specifies which clients are given access to the export. Accepted\
            \ notation includes IP, IP mask, or hostname. The default is `*` if not\
            \ specified."
          readOnly: true
        name:
          type: string
          description: Name of this rule. The name is automatically generated by the
            system.
        policy:
          description: The policy to which this rule belongs.
          readOnly: true
          allOf:
          - description: dummy
          - type: object
            properties:
              id:
                type: string
                description: "A globally unique, system-generated ID. The ID cannot\
                  \ be modified."
              name:
                type: string
                description: "The resource name, such as volume name, pod name, snapshot\
                  \ name, and so on."
            readOnly: true
          - properties:
              resource_type:
                type: string
                description: "Type of the object (full name of the endpoint). Valid\
                  \ values include `hosts`, `host-groups`, `network-interfaces`, `pods`,\
                  \ `ports`, `pod-replica-links`, `subnets`, `volumes`, `volume-snapshots`,\
                  \ `volume-groups`, `directories`, `policies/nfs`, `policies/smb`,\
                  \ `policies/snapshot`, and `policies/quota`."
                readOnly: true
        smb_encryption_required:
          type: boolean
          description: "Specifies whether the remote client is required to use SMB\
            \ encryption. If not specified, defaults to `false`."
          readOnly: true
      example:
        anonymous_access_allowed: true
        name: name
        client: client
        smb_encryption_required: true
        policy: ""
    PolicyRuleSnapshot:
      type: object
      properties:
        at:
          type: integer
          description: "Specifies the number of milliseconds since midnight at which\
            \ to take a snapshot. The `at` value can only be set to an hour and must\
            \ be between 0 and 82800000, inclusive. The `at` value can only be set\
            \ on the rule with the smallest `every` value. The `at` value cannot be\
            \ set if the `every` value is not measured in days. The `at` value can\
            \ only be set for at most one rule in the same policy."
          format: int64
          readOnly: true
        client_name:
          type: string
          description: "The snapshot client name. A full snapshot name is constructed\
            \ in the form of `DIR.CLIENT_NAME.SUFFIX` where `DIR` is the managed directory\
            \ name, `CLIENT_NAME` is the snapshot client name, and `SUFFIX` is the\
            \ snapshot suffix. The client visible snapshot name is `CLIENT_NAME.SUFFIX`."
          readOnly: true
        every:
          type: integer
          description: "Specifies the interval between snapshots, in milliseconds.\
            \ The `every` value for all rules must be multiples of one another. The\
            \ `every` value must be unique for each rule in the same policy. The `every`\
            \ value must be between 5 minutes and 1 year."
          format: int64
        keep_for:
          type: integer
          description: "Specifies the period that snapshots are retained before they\
            \ are eradicated, in milliseconds. The `keep_for` value cannot be less\
            \ than the `every` value of the rule. The `keep_for` value must be unique\
            \ for each rule in the same policy. The `keep_for` value must be between\
            \ 5 minutes and 1 year. The `keep_for` value cannot be less than the `keep_for`\
            \ value of any rule in the same policy with a smaller `every` value."
          format: int64
        name:
          type: string
          description: Name of this rule. The name is automatically generated by the
            system.
        policy:
          description: The policy to which this rule belongs.
          readOnly: true
          allOf:
          - description: dummy
          - type: object
            properties:
              id:
                type: string
                description: "A globally unique, system-generated ID. The ID cannot\
                  \ be modified."
              name:
                type: string
                description: "The resource name, such as volume name, pod name, snapshot\
                  \ name, and so on."
            readOnly: true
          - properties:
              resource_type:
                type: string
                description: "Type of the object (full name of the endpoint). Valid\
                  \ values include `hosts`, `host-groups`, `network-interfaces`, `pods`,\
                  \ `ports`, `pod-replica-links`, `subnets`, `volumes`, `volume-snapshots`,\
                  \ `volume-groups`, `directories`, `policies/nfs`, `policies/smb`,\
                  \ `policies/snapshot`, and `policies/quota`."
                readOnly: true
      example:
        at: 0
        name: name
        keep_for: 1
        client_name: client_name
        every: 6
        policy: ""
    PolicySmb:
      allOf:
      - description: dummy
      - $ref: '#/components/schemas/Policy'
      - properties:
          access_based_enumeration_enabled:
            type: boolean
            description: "Returns a value of `true` if access based enumeration is\
              \ enabled on the policy. When access based enumeration is enabled on\
              \ a policy, files and folders within exports that are attached to the\
              \ policy will be hidden from users who do not have permission to view\
              \ them."
    Port:
      allOf:
      - description: dummy
      - type: object
        properties:
          name:
            type: string
            description: "A locally unique, system-generated name. The name cannot\
              \ be modified."
            readOnly: true
        description: |-
          A built-in resource. Many are singletons predefined by Purity (e.g., support settings). Some correspond to a piece of software, like an app, or hardware, like a controller. Others are created by the system in response to some event (e.g., alerts, audit records).
          Typically, a user can't create, delete or rename a built-in resource. A few can be created or deleted, but not renamed because the names are meaningful to Purity (e.g., VIFs, file systems, file system snapshots, volume snapshot).
      - type: object
        properties:
          iqn:
            type: string
            description: The iSCSI Qualified Name (or `null` if target is not iSCSI).
            example: iqn.2010-06.com.purestorage:flasharray.393d930077be2977
          nqn:
            type: string
            description: NVMe Qualified Name (or `null` if target is not NVMeoF).
            example: nqn.2010-06.com.purestorage:flasharray.512f7bb185978505
          portal:
            type: string
            description: IP and port number (or `null` if target is not iSCSI).
            example: 10.16.200.27:3260
          wwn:
            type: string
            description: Fibre Channel World Wide Name (or `null` if target is not
              Fibre Channel).
            example: 52:4A:93:70:4E:E5:68:00
        readOnly: true
      - type: object
        properties:
          failover:
            type: string
            description: "If the array port has failed over, returns the name of the\
              \ port to which this port has failed over."
            example: CT0.ETH2
        description: A target port on the array enabling access to block storage (Fibre
          Channel or iSCSI).
    PortInitiator:
      type: object
      properties:
        initiator:
          $ref: '#/components/schemas/HostPerformanceBalance_initiator'
        target:
          $ref: '#/components/schemas/Port'
      description: Path from an initiator port to a target port.
    ProtectionGroup:
      allOf:
      - description: dummy
      - type: object
        properties:
          name:
            type: string
            description: A user-specified name. The name must be locally unique and
              can be changed.
        description: "An ordinary (as opposed to built-in) resource that can be created,\
          \ named, renamed or deleted by the user. This might be a virtual resource\
          \ (e.g., a volume), or correspond to something in the environment, like\
          \ a host or a server."
      - type: object
        properties:
          destroyed:
            type: boolean
            description: "Has this protection group been destroyed? To destroy a protection\
              \ group, patch to `true`. To recover a destroyed protection group, patch\
              \ to `false`. If not specified, defaults to `false`."
          host_count:
            type: integer
            description: Number of hosts in this protection group.
            format: int64
            readOnly: true
            example: 3
          host_group_count:
            type: integer
            description: Number of host groups in this protection group.
            format: int64
            readOnly: true
            example: 3
          is_local:
            type: boolean
            description: "If set to `true`, the protection group belongs to the local\
              \ array. If set to `false`, the protection group belongs to the remote\
              \ array."
            readOnly: true
          pod:
            $ref: '#/components/schemas/ProtectionGroup_pod'
          replication_schedule:
            description: The schedule settings for asynchronous replication.
            allOf:
            - description: dummy
            - type: object
              properties:
                at:
                  maximum: 86399000
                  minimum: 0
                  type: integer
                  description: "The time of day the snapshot is scheduled to be taken\
                    \ and retained on the local array or immediately replicated to\
                    \ the target(s). Measured in milliseconds since midnight. The\
                    \ `at` value is only used if the `frequency` parameter is in days\
                    \ (e.g., `259200000`, which is equal to 3 days)."
                  format: int64
                  example: 7200000
                enabled:
                  type: boolean
                  description: "If set to `true`, the policy is enabled."
                  example: false
                frequency:
                  maximum: 34560000000
                  minimum: 300000
                  type: integer
                  description: The frequency of the scheduled action. Measured in
                    milliseconds.
                  format: int64
                  example: 259200000
              description: The replication or snapshot schedule.
            - type: object
              properties:
                blackout:
                  type: object
                  properties:
                    start:
                      type: integer
                      description: "The window start time. Measured in milliseconds\
                        \ since midnight. The time must be set on the hour. (e.g.,\
                        \ `18000000`, which is equal to 5:00 AM)."
                      format: int64
                      example: 3600000
                    end:
                      type: integer
                      description: "The window end time. Measured in milliseconds\
                        \ since midnight. The time must be set on the hour. (e.g.,\
                        \ `28800000`, which is equal to 8:00 AM)."
                      format: int64
                      example: 46800000
                  description: "The range of time when to suspend replication. To\
                    \ clear the blackout period, set to an empty string (\"\")."
              description: The schedule of a replication action.
          snapshot_schedule:
            $ref: '#/components/schemas/ProtectionGroup_snapshot_schedule'
          source:
            $ref: '#/components/schemas/ProtectionGroup_source'
          source_retention:
            $ref: '#/components/schemas/ProtectionGroup_source_retention'
          space:
            $ref: '#/components/schemas/ProtectionGroup_space'
          target_count:
            type: integer
            description: The number of targets to where this protection group replicates.
            format: int64
            readOnly: true
            example: 3
          target_retention:
            $ref: '#/components/schemas/ProtectionGroup_source_retention'
          time_remaining:
            type: integer
            description: "The amount of time left until the destroyed protection group\
              \ is permanently eradicated. Measured in milliseconds. Before the `time_remaining`\
              \ period has elapsed, the destroyed protection group can be recovered\
              \ by setting `destroyed=false`."
            format: int64
            readOnly: true
          volume_count:
            type: integer
            description: The number of volumes in the protection group.
            format: int64
            readOnly: true
            example: 3
        description: "A protection group defines a set of either volumes, hosts, or\
          \ host groups (called members) that are protected together through snapshots\
          \ with point-in-time consistency across the member volumes. The members\
          \ within the protection group have common data protection requirements and\
          \ share the same snapshot, replication, and retention schedules."
    ProtectionGroupPerformance:
      allOf:
      - description: dummy
      - type: object
        properties:
          name:
            type: string
            description: "A locally unique, system-generated name. The name cannot\
              \ be modified."
            readOnly: true
        description: |-
          A built-in resource. Many are singletons predefined by Purity (e.g., support settings). Some correspond to a piece of software, like an app, or hardware, like a controller. Others are created by the system in response to some event (e.g., alerts, audit records).
          Typically, a user can't create, delete or rename a built-in resource. A few can be created or deleted, but not renamed because the names are meaningful to Purity (e.g., VIFs, file systems, file system snapshots, volume snapshot).
      - type: object
        properties:
          bytes_per_sec:
            minimum: 0
            type: integer
            description: The total number of bytes of replication data transmitted
              and received per second.
            format: int64
        readOnly: true
      - properties:
          time:
            type: integer
            description: The time when the sample performance data was taken. Measured
              in milliseconds since the UNIX epoch.
            format: int64
        readOnly: true
    ProtectionGroupPerformanceByArray:
      allOf:
      - description: dummy
      - type: object
        properties:
          name:
            type: string
            description: "A locally unique, system-generated name. The name cannot\
              \ be modified."
            readOnly: true
        description: |-
          A built-in resource. Many are singletons predefined by Purity (e.g., support settings). Some correspond to a piece of software, like an app, or hardware, like a controller. Others are created by the system in response to some event (e.g., alerts, audit records).
          Typically, a user can't create, delete or rename a built-in resource. A few can be created or deleted, but not renamed because the names are meaningful to Purity (e.g., VIFs, file systems, file system snapshots, volume snapshot).
      - type: object
        properties:
          bytes_per_sec:
            minimum: 0
            type: integer
            description: The total number of bytes of replication data transmitted
              and received per second.
            format: int64
        readOnly: true
      - properties:
          source:
            type: string
            description: The source array from where the data is replicated.
          target:
            type: string
            description: The target to where the data is replicated.
          time:
            type: integer
            description: The time when the sample performance data was taken. Measured
              in milliseconds since the UNIX epoch.
            format: int64
        readOnly: true
    ProtectionGroupSnapshot:
      allOf:
      - description: dummy
      - type: object
        properties:
          name:
            type: string
            description: A user-specified name. The name must be locally unique and
              can be changed.
        description: "An ordinary (as opposed to built-in) resource that can be created,\
          \ named, renamed or deleted by the user. This might be a virtual resource\
          \ (e.g., a volume), or correspond to something in the environment, like\
          \ a host or a server."
      - type: object
        properties:
          created:
            type: integer
            description: The snapshot creation time of the original snapshot source.
              Measured in milliseconds since the UNIX epoch.
            format: int64
            readOnly: true
            example: 1503520993
          destroyed:
            type: boolean
            description: "Returns a value of `true` if the protection group snapshot\
              \ has been destroyed and is pending eradication. The `time_remaining`\
              \ value displays the amount of time left until the destroyed snapshot\
              \ is permanently eradicated. Before the `time_remaining` period has\
              \ elapsed, the destroyed snapshot can be recovered by setting `destroyed=false`.\
              \ Once the `time_remaining` period has elapsed, the snapshot is permanently\
              \ eradicated and can no longer be recovered."
          pod:
            $ref: '#/components/schemas/ProtectionGroupSnapshot_pod'
          source:
            $ref: '#/components/schemas/ProtectionGroupSnapshot_source'
          space:
            $ref: '#/components/schemas/ProtectionGroup_space'
          suffix:
            type: string
            description: "The name suffix appended to the protection group name to\
              \ make up the full protection group snapshot name in the form `PGROUP.SUFFIX`.\
              \ If `suffix` is not specified, the protection group name is in the\
              \ form `PGROUP.NNN`, where `NNN` is a unique monotonically increasing\
              \ number. If multiple protection group snapshots are created at a time,\
              \ the suffix name is appended to those snapshots."
          time_remaining:
            type: integer
            description: "The amount of time left until the destroyed snapshot is\
              \ permanently eradicated. Measured in milliseconds. Before the `time_remaining`\
              \ period has elapsed, the destroyed snapshot can be recovered by setting\
              \ `destroyed=false`."
            format: int64
            readOnly: true
        description: "A protection group snapshot is a collection of point-in-time\
          \ consistent volume snapshots, for volumes associated with the protection\
          \ group when the snapshot was taken."
    ProtectionGroupSpace:
      allOf:
      - description: dummy
      - type: object
        properties:
          name:
            type: string
            description: "A locally unique, system-generated name. The name cannot\
              \ be modified."
            readOnly: true
        description: |-
          A built-in resource. Many are singletons predefined by Purity (e.g., support settings). Some correspond to a piece of software, like an app, or hardware, like a controller. Others are created by the system in response to some event (e.g., alerts, audit records).
          Typically, a user can't create, delete or rename a built-in resource. A few can be created or deleted, but not renamed because the names are meaningful to Purity (e.g., VIFs, file systems, file system snapshots, volume snapshot).
      - properties:
          space:
            $ref: '#/components/schemas/DirectorySpace_space'
          time:
            type: integer
            format: int64
        readOnly: true
    ProtectionGroupTarget:
      allOf:
      - description: dummy
      - type: object
        properties:
          protection_group:
            $ref: api2.8certificatescertificatesigningrequests_certificate
          target:
            $ref: api2.8certificatescertificatesigningrequests_certificate
          allowed:
            type: boolean
            description: "If set to `true`, the target array has allowed the source\
              \ array to replicate protection group data to the target array. If set\
              \ to `false`, the target array has not allowed the source array to replicate\
              \ protection group data to the target."
    RemoteProtectionGroup:
      allOf:
      - description: dummy
      - type: object
        properties:
          id:
            type: string
            description: "A globally unique, system-generated ID. The ID cannot be\
              \ modified and cannot refer to another resource."
            readOnly: true
          name:
            type: string
            description: "A locally unique, system-generated name. The name cannot\
              \ be modified."
            readOnly: true
        description: |-
          A built-in resource. Many are singletons predefined by Purity (e.g., support settings). Some correspond to a piece of software, like an app, or hardware, like a controller. Others are created by the system in response to some event (e.g., alerts, audit records).
          Typically, a user can't create, delete or rename a built-in resource. A few can be created or deleted, but not renamed because the names are meaningful to Purity (e.g., VIFs).
      - type: object
        properties:
          destroyed:
            type: boolean
            description: "Returns a value of `true` if the remote protection group\
              \ has been destroyed and is pending eradication. The `time_remaining`\
              \ value displays the amount of time left until the destroyed remote\
              \ protection group is permanently eradicated. Before the `time_remaining`\
              \ period has elapsed, the destroyed remote protection group can be recovered\
              \ by setting `destroyed=false`. Once the `time_remaining` period has\
              \ elapsed, the remote protection group is permanently eradicated and\
              \ can no longer be recovered."
          is_local:
            type: boolean
            description: "If set to `true`, the location reference is to the local\
              \ array. If set to `false`, the location reference is to a remote location,\
              \ such as a remote array or offload target."
            readOnly: true
          remote:
            $ref: '#/components/schemas/RemoteProtectionGroup_remote'
          source:
            $ref: '#/components/schemas/RemoteProtectionGroup_source'
          target_retention:
            $ref: '#/components/schemas/ProtectionGroup_source_retention'
          time_remaining:
            type: integer
            description: "Milliseconds remaining until eradication, if remote protection\
              \ group has been destroyed."
            format: int64
            readOnly: true
        description: A remote protection group represents a protection group that
          is replicated to an offload target.
    RemoteProtectionGroupSnapshot:
      allOf:
      - description: dummy
      - type: object
        properties:
          name:
            type: string
            description: "A locally unique, system-generated name. The name cannot\
              \ be modified."
            readOnly: true
        description: |-
          A built-in resource. Many are singletons predefined by Purity (e.g., support settings). Some correspond to a piece of software, like an app, or hardware, like a controller. Others are created by the system in response to some event (e.g., alerts, audit records).
          Typically, a user can't create, delete or rename a built-in resource. A few can be created or deleted, but not renamed because the names are meaningful to Purity (e.g., VIFs, file systems, file system snapshots, volume snapshot).
      - type: object
        properties:
          created:
            type: integer
            description: Creation time of the snapshot on the original source of the
              snapshot. Measured in milliseconds since the UNIX epoch.
            format: int64
            readOnly: true
            example: 1503520993
          destroyed:
            type: boolean
            description: "Destroyed and pending eradication? If not specified, defaults\
              \ to false."
          is_local:
            type: boolean
            description: Whether or not this remote protection group snapshot is replicated
              from the current array.
            readOnly: true
          remote:
            $ref: '#/components/schemas/RemoteProtectionGroupSnapshot_remote'
          source:
            $ref: '#/components/schemas/RemoteProtectionGroupSnapshot_source'
          suffix:
            type: string
            description: "The suffix that is appended to the `source_name` value to\
              \ generate the full remote protection group snapshot name in the form\
              \ `PGROUP.SUFFIX`. If the suffix is not specified, the system constructs\
              \ the snapshot name in the form `PGROUP.NNN`, where `PGROUP` is the\
              \ protection group name, and `NNN` is a monotonically increasing number."
          time_remaining:
            type: integer
            description: "Milliseconds remaining until eradication, if the snapshot\
              \ has been destroyed."
            format: int64
            readOnly: true
        description: "A remote protection group snapshot is a collection of point-in-time\
          \ consistent volume snapshots, for volumes associated with the remote protection\
          \ group when the snapshot was taken."
    RemoteProtectionGroupSnapshotTransfer:
      allOf:
      - description: dummy
      - type: object
        properties:
          name:
            type: string
            description: A user-specified name. The name must be locally unique and
              can be changed.
        description: "An ordinary (as opposed to built-in) resource that can be created,\
          \ named, renamed or deleted by the user. This might be a virtual resource\
          \ (e.g., a volume), or correspond to something in the environment, like\
          \ a host or a server."
      - type: object
        properties:
          destroyed:
            type: boolean
            description: "Returns a value of `true` if the snapshot has been destroyed\
              \ and is pending eradication. The destroyed snapshot can be recovered\
              \ by setting `destroyed=false`. Once the eradication pending period\
              \ has elapsed, the snapshot is permanently eradicated and can no longer\
              \ be recovered."
          started:
            type: integer
            description: The timestamp of when the snapshot replication process started.
              Measured in milliseconds since the UNIX epoch.
            format: int64
            readOnly: true
          progress:
            maximum: 1
            minimum: 0
            type: number
            description: The percentage progress of the snapshot transfer from the
              source array to the target. Displayed in decimal format.
            format: float
            readOnly: true
            example: 0.66
          completed:
            type: integer
            description: The timestamp of when the snapshot replication process completed.
              Measured in milliseconds since the UNIX epoch.
            format: int64
            readOnly: true
          data_transferred:
            type: integer
            description: The number of bytes transferred from the source to the target
              as part of the replication process. Measured in bytes.
            format: int64
            readOnly: true
          physical_bytes_written:
            type: integer
            description: The amount of physical/logical data written to the target
              due to replication. Measured in bytes.
            format: int64
            readOnly: true
      - description: The transfer statistics for snapshot replication.
    RemoteVolumeSnapshot:
      allOf:
      - description: dummy
      - type: object
        properties:
          id:
            type: string
            description: "A globally unique, system-generated ID. The ID cannot be\
              \ modified and cannot refer to another resource."
            readOnly: true
          name:
            type: string
            description: A user-specified name. The name must be locally unique and
              can be changed.
        description: "An ordinary (as opposed to built-in) resource that can be created,\
          \ named, renamed or deleted by the user. This might be a virtual resource\
          \ (e.g., a volume), or correspond to something in the environment, like\
          \ a host or a server."
      - type: object
        properties:
          created:
            type: integer
            description: The snapshot creation time. Measured in milliseconds since
              the UNIX epoch.
            format: int64
            readOnly: true
          destroyed:
            type: boolean
            description: "Returns a value of `true` if the snapshot has been destroyed\
              \ and is pending eradication. The `time_remaining` value displays the\
              \ amount of time left until the destroyed volume snapshot is permanently\
              \ eradicated. Before the `time_remaining` period has elapsed, the destroyed\
              \ volume snapshot can be recovered by setting `destroyed=false`. Once\
              \ the `time_remaining` period has elapsed, the volume snapshot is permanently\
              \ eradicated and can no longer be recovered."
          pod:
            $ref: '#/components/schemas/RemoteVolumeSnapshot_pod'
          provisioned:
            maximum: 4503599627370496
            minimum: 1048576
            type: integer
            description: The provisioned space of the snapshot. Measured in bytes.
            format: int64
            readOnly: true
          source:
            $ref: '#/components/schemas/RemoteVolumeSnapshot_source'
          suffix:
            type: string
            description: "The suffix that is appended to the `source_name` value to\
              \ generate the full volume snapshot name in the form `VOL.SUFFIX`. If\
              \ the suffix is not specified, the system constructs the snapshot name\
              \ in the form `VOL.NNN`, where `VOL` is the volume name, and `NNN` is\
              \ a monotonically increasing number."
          time_remaining:
            type: integer
            description: "The amount of time left until the destroyed snapshot is\
              \ permanently eradicated. Measured in milliseconds. Before the `time_remaining`\
              \ period has elapsed, the destroyed snapshot can be recovered by setting\
              \ `destroyed=false`."
            format: int64
            readOnly: true
      - type: object
        properties:
          remote:
            $ref: '#/components/schemas/RemoteVolumeSnapshot_remote'
      - description: A volume snapshot on a remote target.
    RemoteVolumeSnapshotTransfer:
      allOf:
      - description: dummy
      - type: object
        properties:
          id:
            type: string
            description: "A globally unique, system-generated ID. The ID cannot be\
              \ modified and cannot refer to another resource."
            readOnly: true
          name:
            type: string
            description: A user-specified name. The name must be locally unique and
              can be changed.
        description: "An ordinary (as opposed to built-in) resource that can be created,\
          \ named, renamed or deleted by the user. This might be a virtual resource\
          \ (e.g., a volume), or correspond to something in the environment, like\
          \ a host or a server."
      - type: object
        properties:
          destroyed:
            type: boolean
            description: "Returns a value of `true` if the snapshot has been destroyed\
              \ and is pending eradication. The destroyed snapshot can be recovered\
              \ by setting `destroyed=false`. Once the eradication pending period\
              \ has elapsed, the snapshot is permanently eradicated and can no longer\
              \ be recovered."
          started:
            type: integer
            description: The timestamp of when the snapshot replication process started.
              Measured in milliseconds since the UNIX epoch.
            format: int64
            readOnly: true
          progress:
            maximum: 1
            minimum: 0
            type: number
            description: The percentage progress of the snapshot transfer from the
              source array to the target. Displayed in decimal format.
            format: float
            readOnly: true
            example: 0.66
          completed:
            type: integer
            description: The timestamp of when the snapshot replication process completed.
              Measured in milliseconds since the UNIX epoch.
            format: int64
            readOnly: true
          data_transferred:
            type: integer
            description: The number of bytes transferred from the source to the target
              as part of the replication process. Measured in bytes.
            format: int64
            readOnly: true
          physical_bytes_written:
            type: integer
            description: The amount of physical/logical data written to the target
              due to replication. Measured in bytes.
            format: int64
            readOnly: true
      - description: The transfer statistics for snapshot replication data.
    Session:
      allOf:
      - description: dummy
      - type: object
        properties:
          id:
            type: string
            description: "A globally unique, system-generated ID. The ID cannot be\
              \ modified and cannot refer to another resource."
            readOnly: true
          name:
            type: string
            description: "A locally unique, system-generated name. The name cannot\
              \ be modified."
            readOnly: true
        description: |-
          A built-in resource. Many are singletons predefined by Purity (e.g., support settings). Some correspond to a piece of software, like an app, or hardware, like a controller. Others are created by the system in response to some event (e.g., alerts, audit records).
          Typically, a user can't create, delete or rename a built-in resource. A few can be created or deleted, but not renamed because the names are meaningful to Purity (e.g., VIFs).
      - type: object
        properties:
          end_time:
            type: integer
            description: Date and time the user logged out of the Purity//FA interface.
              Not set if the session is still active.
            format: int64
            example: 1502234638
          event:
            type: string
            description: "Description of session events such as login and user session.\
              \ Valid values include `failed authentication`, `user session`, `login`,\
              \ `logout`, `API token obtained`, and `request without session`."
            example: user session
          event_count:
            type: integer
            description: Number of session events.
            format: int32
            example: 3
          location:
            type: string
            description: IP address of the user client connecting to the array or
              console if connected through local console.
            example: 10.202.101.11
          method:
            type: string
            description: "Method by which the user attempted to log in. Valid values\
              \ include `API token`, `JWT`, `password`, and `public key`."
            example: public key
          start_time:
            type: integer
            description: Date and time the user logged in to the Purity//FA interface.
            format: int64
            example: 1502234212
          user:
            type: string
            description: Username of the Purity//FA user who triggered the user session
              event.
            example: pureuser
          user_interface:
            type: string
            description: "The user interface through which the user session event\
              \ was performed. Valid values include `CLI`, `GUI`, and `REST`."
            readOnly: true
            example: CLI
        description: "User session logs represent user login events performed in the\
          \ Purity//FA GUI, CLI, and REST API."
        readOnly: true
    SMI-S:
      type: object
      properties:
        slp_enabled:
          type: boolean
          description: "If set to `true`, the Service Location Protocol (SLP) and\
            \ its ports, TCP 427 and UDP 427, are enabled."
        wbem_https_enabled:
          type: boolean
          description: "If set to `true`, the SMI-S provider and its port, TCP 5989\
            \ is enabled."
      example:
        wbem_https_enabled: true
        slp_enabled: true
    SMTP:
      allOf:
      - description: dummy
      - type: object
        properties:
          name:
            type: string
            description: "A locally unique, system-generated name. The name cannot\
              \ be modified."
            readOnly: true
        description: |-
          A built-in resource. Many are singletons predefined by Purity (e.g., support settings). Some correspond to a piece of software, like an app, or hardware, like a controller. Others are created by the system in response to some event (e.g., alerts, audit records).
          Typically, a user can't create, delete or rename a built-in resource. A few can be created or deleted, but not renamed because the names are meaningful to Purity (e.g., VIFs, file systems, file system snapshots, volume snapshot).
      - type: object
        properties:
          password:
            type: string
            description: "Password for the relay host, if needed."
          relay_host:
            type: string
            description: "Relay server used as a forwarding point for email sent from\
              \ the array. Can be set as a hostname, IPv4 address, or IPv6 address,\
              \ with optional port numbers. The expected format for IPv4 is `ddd.ddd.ddd.ddd:PORT`.\
              \ The expected format for IPv6 is `xxxx:xxxx:xxxx:xxxx:xxxx:xxxx:xxxx:xxxx`\
              \ or, if a port number is specified, `[xxxx:xxxx:xxxx:xxxx:xxxx:xxxx:xxxx:xxxx]:PORT`."
          sender_domain:
            type: string
            description: Domain name appended to alert email messages.
          user_name:
            type: string
            description: "User name for the relay host, if needed."
    SNMPAgent:
      allOf:
      - description: dummy
      - type: object
        properties:
          name:
            type: string
            description: A user-specified name. The name must be locally unique and
              can be changed.
        description: "An ordinary (as opposed to built-in) resource that can be created,\
          \ named, renamed or deleted by the user. This might be a virtual resource\
          \ (e.g., a volume), or correspond to something in the environment, like\
          \ a host or a server."
      - type: object
        properties:
          engine_id:
            maxLength: 32
            type: string
            description: The administration domain unique name of an SNMP agent.
            readOnly: true
            example: 80009e2205d7c0bd31fef5b87f4f44da
          v2c:
            $ref: api2.8snmpagents_v2c
          v3:
            $ref: '#/components/schemas/SNMPAgent_v3'
          version:
            type: string
            description: Version of the SNMP protocol to be used by Purity//FA in
              communications with the specified manager. Valid values are `v2c` and
              `v3`.
            example: v3
    SNMPManagers:
      allOf:
      - description: dummy
      - type: object
        properties:
          name:
            type: string
            description: A user-specified name. The name must be locally unique and
              can be changed.
        description: "An ordinary (as opposed to built-in) resource that can be created,\
          \ named, renamed or deleted by the user. This might be a virtual resource\
          \ (e.g., a volume), or correspond to something in the environment, like\
          \ a host or a server."
      - type: object
        properties:
          host:
            type: string
            description: DNS hostname or IP address of a computer that hosts an SNMP
              manager to which Purity//FA is to send trap messages when it generates
              alerts.
            example: snmp.purestorage.com
          notification:
            type: string
            description: The type of notification the agent will send. Valid values
              are `inform` and `trap`.
            example: trap
          v2c:
            $ref: api2.8snmpagents_v2c
          v3:
            $ref: '#/components/schemas/SNMPAgent_v3'
          version:
            type: string
            description: Version of the SNMP protocol to be used by Purity//FA to
              communicate with the specified manager. Valid values are `v2c` and `v3`.
            example: v3
    Software:
      allOf:
      - description: dummy
      - allOf:
        - description: dummy
        - type: object
          properties:
            id:
              type: string
              description: "A globally unique, system-generated ID. The ID cannot\
                \ be modified."
              readOnly: true
            name:
              type: string
              description: Name of the resource. The name cannot be modified.
              readOnly: true
          description: A resource with a non-unique name.
        - type: object
          properties:
            details:
              type: string
              description: The detailed reason of the `status`.
            payload_id:
              type: string
              description: A checksum hash referring to the update bundle.
              example: 4f7b319106401d072ff94808535cb3ce
            progress:
              maximum: 1
              minimum: 0
              type: number
              description: The progress of the software upgrade. Displayed in decimal
                format.
              format: float
            status:
              type: string
              description: "The status of the software package. Valid values are `available`,\
                \ `downloaded`, `downloading`, `download_failed`, `checking`, `installing`,\
                \ `paused`, `aborting`, `abort`, `canceled`, `partially_installed`,\
                \ and `installed`. A status of `available` indicates that the package\
                \ is available for download. This only applies if `automatic-download`\
                \ is not enabled. A status of `downloaded` indicates that the package\
                \ is downloaded and ready for installation. A status of `downloading`\
                \ indicates that the package is currently downloading. A status of\
                \ `download_failed` indicates that the download of the package failed.\
                \ A status of `checking` indicates that the package is currently running\
                \ in `check-only` mode. A status of `installing` indicates that the\
                \ package is currently installing. A status of `paused` indicates\
                \ that the upgrade is paused and waiting for user input to proceed.\
                \ A status of `aborting` indicates that the upgrade is being aborted,\
                \ due to an unrecoverable error or an `abort` command issued by the\
                \ user. A status of `canceled` indicates that the upgrade has been\
                \ canceled. A status of `partially_installed` indicates that the upgrade\
                \ has been partially installed due to an `abort`. The array has been\
                \ upgraded to an intermediate version and the `software` is no longer\
                \ available for installation. A status of `installed` indicates that\
                \ the upgrade has finished."
              example: Available
            upgrade_hops:
              uniqueItems: true
              type: array
              description: "By which plan the upgrade will be conducted. The first\
                \ element is the current version, the last element is the destination\
                \ version, and the elements in between are intermediate versions."
              example:
              - 5.0.0
              - 5.1.6
              - 5.2.3
              items:
                type: string
            version:
              type: string
              description: The version of the software package.
              example: 5.2.3
          description: Software to be installed on the array.
      - properties:
          upgrade_plan:
            type: array
            description: "A list of steps that are planned to run during the upgrade\
              \ in an optimal scenario (i.e., all upgrade checks pass, no step is\
              \ retried, and the upgrade is not aborted). Steps are listed in the\
              \ order that they should occur."
            items:
              $ref: '#/components/schemas/Software_upgrade_plan'
    SoftwareBundle:
      allOf:
      - description: dummy
      - type: object
        properties:
          id:
            type: string
            description: "A non-modifiable, globally unique ID chosen by the system."
            readOnly: true
      - type: object
        properties:
          source:
            type: string
            description: The location of the upgrade bundle.
            example: ftp://local/upgrade_bundle.sh
          created:
            minimum: 0
            type: number
            description: Creation time in milliseconds since the UNIX epoch.
            format: integer
          details:
            type: string
            description: The detailed reason for the `status`.
          download_progress:
            maximum: 1
            minimum: 0
            type: number
            description: The progress of the download. Displayed in decimal format.
            format: float
          status:
            type: string
            description: "The status of the software bundle. Valid values are `downloading`,\
              \ `failed`, `ready`, and `verifying`. A status of `downloading` indicates\
              \ that the array is downloading the upgrade bundle. A status of `failed`\
              \ indicates that the array has failed to download the upgrade bundle.\
              \ A status of `ready` indicates that the upgrade bundle is ready to\
              \ be installed. A status of `verifying` indicates that the array is\
              \ verifying the upgrade bundle."
            example: downloading
        description: Software bundle to be installed on the array.
    SoftwareInstallations:
      allOf:
      - description: dummy
      - type: object
        properties:
          id:
            type: string
            description: "A globally unique, system-generated ID. The ID cannot be\
              \ modified."
            readOnly: true
          name:
            type: string
            description: Name of the resource. The name cannot be modified.
            readOnly: true
        description: A resource with a non-unique name.
      - type: object
        properties:
          start_time:
            minimum: 0
            type: integer
            description: Start time in milliseconds since the UNIX epoch.
            format: int64
            example: 1567026779000
          end_time:
            minimum: 0
            type: integer
            description: End time in milliseconds since the UNIX epoch.
            format: int64
            example: 1567026888000
        description: A resource with a start time and end time.
      - type: object
        properties:
          current_step_id:
            type: string
            description: "The `id` of the current step, or `null` if the upgrade is\
              \ not active."
          details:
            type: string
            description: The detailed reason for the `status`.
          mode:
            type: string
            description: "Mode that the upgrade is in. Valid values are `check-only`,\
              \ `interactive`, `semi-interactive`, and `one-click`. In `check-only`\
              \ mode, the upgrade only runs pre-upgrade checks and returns. In `interactive`\
              \ mode, the upgrade process pauses at several points, at which users\
              \ must enter certain commands to proceed. In `semi-interactive` mode,\
              \ the upgrade pauses if there are any upgrade check failures, and functions\
              \ like `one-click` mode otherwise. In `one-click` mode, the upgrade\
              \ proceeds automatically without pausing."
            example: interactive
          override_checks:
            type: array
            description: "A list of upgrade checks whose failure is overridden during\
              \ the upgrade. If any optional `args` are provided, they are validated\
              \ later when the corresponding check script runs."
            items:
              $ref: api2.8softwareinstallations_override_checks
          software:
            $ref: '#/components/schemas/SoftwareInstallations_software'
          status:
            type: string
            description: "Status of the upgrade. Valid values are `installing`, `paused`,\
              \ `aborting`, `aborted`, and `finished`. A status of `installing` indicates\
              \ that the upgrade is running. A status of `paused` indicates that the\
              \ upgrade is paused and waiting for user input. A status of `aborting`\
              \ indicates that the upgrade is being aborted. A status of `aborted`\
              \ indicates that the upgrade has stopped due to an abort. A status of\
              \ `finished` indicates that the upgrade has finished successfully."
            example: Installing
        description: "Interactive software upgrade attempt that contains information\
          \ about the current upgrade instance, including the current step, status\
          \ of the upgrade attempt, etc."
    SoftwareInstallationSteps:
      allOf:
      - description: dummy
      - type: object
        properties:
          id:
            type: string
            description: "A globally unique, system-generated ID. The ID cannot be\
              \ modified."
            readOnly: true
          name:
            type: string
            description: Name of the resource. The name cannot be modified.
            readOnly: true
        description: A resource with a non-unique name.
      - type: object
        properties:
          start_time:
            minimum: 0
            type: integer
            description: Start time in milliseconds since the UNIX epoch.
            format: int64
            example: 1567026779000
          end_time:
            minimum: 0
            type: integer
            description: End time in milliseconds since the UNIX epoch.
            format: int64
            example: 1567026888000
        description: A resource with a start time and end time.
      - type: object
        properties:
          checks:
            type: array
            description: A list of checks in this upgrade step.
            items:
              $ref: '#/components/schemas/SoftwareInstallationSteps_checks'
          description:
            type: string
            description: Detailed description of the step.
          details:
            type: string
            description: Detailed result of the step used to diagnose step failures.
          hop_version:
            type: string
            description: The version to which the current hop is upgrading.
            example: 99.9.9
          installation:
            $ref: '#/components/schemas/SoftwareInstallationSteps_installation'
          status:
            type: string
            description: Status of the step. Valid values are `running` and `finished`.
              A status of `running` indicates that the step has not finished. A status
              of `finished` indicates that the check has finished.
        description: Step needed to complete an upgrade.
    Subnet:
      allOf:
      - description: dummy
      - type: object
        properties:
          name:
            type: string
            description: A user-specified name. The name must be locally unique and
              can be changed.
        description: "An ordinary (as opposed to built-in) resource that can be created,\
          \ named, renamed or deleted by the user. This might be a virtual resource\
          \ (e.g., a volume), or correspond to something in the environment, like\
          \ a host or a server."
      - type: object
        properties:
          enabled:
            type: boolean
            description: "Returns a value of `true` if subnet is enabled. Returns\
              \ a value of `false` if subnet is disabled. If not specified, defaults\
              \ to `true`."
          gateway:
            type: string
            description: The IPv4 or IPv6 address of the gateway through which the
              specified subnet is to communicate with the network.
          mtu:
            maximum: 9216
            minimum: 1280
            type: integer
            description: "Maximum message transfer unit (packet) size for the subnet\
              \ in bytes. MTU setting cannot exceed the MTU of the corresponding physical\
              \ interface. If not specified, defaults to `1500`."
            format: int32
          prefix:
            type: string
            description: The IPv4 or IPv6 address to be associated with the specified
              subnet.
          vlan:
            type: integer
            description: VLAN ID number.
            format: int32
      - type: object
        properties:
          interfaces:
            type: array
            description: List of network interfaces associated with this subnet.
            readOnly: true
            items:
              $ref: api2.8networkinterfaces_eth_subinterfaces
          services:
            type: array
            description: "The services provided by this subnet, as inherited from\
              \ all of its interfaces."
            readOnly: true
            items:
              type: string
              description: "Valid values are `iscsi`, `management`, `nvme/fc`, `nvme/roce`,\
                \ and `replication`."
    Support:
      allOf:
      - description: dummy
      - type: object
        properties:
          phonehome_enabled:
            type: boolean
            description: "The status of phonehome. If set to `true`, enable phonehome.\
              \ If set to `false`, disable phonehome."
          proxy:
            type: string
            description: "The value of the current proxy, which is used for connecting\
              \ to cloud services such as phonehome, remote assist, etc. Specify the\
              \ server name, including the scheme and proxy port number."
            example: http://proxy.example.com:8080
          remote_assist_active:
            type: boolean
            description: "The status of a remote assist session. If set to `true`,\
              \ enable the remote assist session. If set to `false`, disable the remote\
              \ assist session."
      - type: object
        properties:
          phonehome_enabled:
            type: boolean
            description: "The status of phonehome. If set to `true`, enables phonehome.\
              \ If set to `false`, disables phonehome."
          proxy:
            type: string
            description: "The value of the current proxy, which is used to connect\
              \ to cloud services such as phonehome and remote assist. Specify the\
              \ server name, including the scheme and proxy port number."
            example: http://proxy.example.com:8080
          remote_assist_active:
            type: boolean
            description: "The status of the remote assist session. If set to `true`,\
              \ enables the remote assist session. If set to `false`, disables the\
              \ remote assist session."
          remote_assist_opened:
            type: integer
            description: "The timestamp when the session opened, measured in milliseconds\
              \ since the UNIX epoch."
            format: int64
            readOnly: true
            example: 1574460534674
          remote_assist_expires:
            type: integer
            description: "The timestamp when the session expires, measured in milliseconds\
              \ since the UNIX epoch."
            format: int64
            readOnly: true
            example: 1574633337678
          remote_assist_status:
            type: string
            description: "The status of the remote assist session. Values include\
              \ `connected`, `connecting`, `disconnected`, and `session-active`."
            readOnly: true
            example: connected
          remote_assist_paths:
            type: array
            readOnly: true
            items:
              $ref: '#/components/schemas/Support_remote_assist_paths'
    SyslogServer:
      allOf:
      - description: dummy
      - type: object
        properties:
          name:
            type: string
            description: A user-specified name. The name must be locally unique and
              cannot be changed.
            readOnly: true
        description: "An ordinary (as opposed to built-in) resource that can be created,\
          \ named, or deleted by the user. This might be a virtual resource (e.g.,\
          \ a volume) or correspond to something in the environment, like a host or\
          \ server."
      - type: object
        properties:
          uri:
            type: string
            description: The URI of the syslog server in the format `PROTOCOL://HOSTNAME:PORT`.
            example: tcp://my.syslogserver.com
        description: A syslog server
    SyslogServerSettings:
      type: object
      properties:
        ca_certificate:
          type: string
          description: "The certificate of the certificate authority (CA) that signed\
            \ the certificate(s) of the directory server, which is used to validate\
            \ the authenticity of the configured servers."
        tls_audit_enabled:
          type: boolean
          description: Returns a value of `true` if messages that are necessary in
            order to audit TLS negotiations performed by the array are forwarded to
            the configured syslog servers.
      description: Global settings for syslog servers.
      example:
        ca_certificate: ca_certificate
        tls_audit_enabled: true
    Tag:
      type: object
      properties:
        copyable:
          type: boolean
          description: "Specifies whether or not to include the tag when copying the\
            \ parent resource. If set to `true`, the tag is included in resource copying.\
            \ If set to `false`, the tag is not included. If not specified, defaults\
            \ to `true`."
          example: true
        key:
          type: string
          description: Key of the tag. Supports up to 64 Unicode characters.
          example: environment
        namespace:
          type: string
          description: Optional namespace of the tag. Namespace identifies the category
            of the tag. Omitting the namespace defaults to the namespace `default`.
            The `pure&#42;` namespaces are reserved for plugins and integration partners.
            It is recommended that customers avoid using reserved namespaces.
          example: default
        resource:
          $ref: '#/components/schemas/AlertEvent_alert'
        value:
          type: string
          description: Value of the tag. Supports up to 256 Unicode characters.
          example: staging
      example:
        copyable: true
        resource:
          name: name
          id: id
        namespace: default
        value: staging
        key: environment
    TestResult:
      type: object
      properties:
        component_address:
          type: string
          description: Address of the component running the test.
          example: 10.230.94.21
        component_name:
          type: string
          description: Name of the component running the test.
          example: CT0
        description:
          type: string
          description: What the test is doing.
          example: Testing phonehome connectivity
        destination:
          type: string
          description: The URI of the target server being tested.
          example: ra.cloud-support.purestorage.com
        enabled:
          type: boolean
          description: Whether the object being tested is enabled or not. Returns
            a value of `true` if the the service is enabled. Returns a value of `false`
            if the service is disabled.
          example: true
        result_details:
          type: string
          description: Additional information about the test result.
          example: Timeout connecting to phonehome endpoint
        success:
          type: boolean
          description: Whether the object being tested passed the test or not. Returns
            a value of `true` if the specified test has succeeded. Returns a value
            of `false` if the specified test has failed.
        test_type:
          type: string
          description: "Displays the type of test being performed. The returned values\
            \ are determined by the `resource` being tested and its configuration.\
            \ Values include `array-admin-group-searching`, `binding`, `connecting`,\
            \ `phonehome`, `phonehome-ping`, `remote-assist`, `rootdse-searching`,\
            \ `read-only-group-searching`, `storage-admin-group-searching`, and `validate-ntp-configuration`."
          example: phonehome
    TestResultWithResource:
      allOf:
      - description: dummy
      - $ref: '#/components/schemas/TestResult'
      - type: object
        properties:
          resource:
            $ref: '#/components/schemas/TestResultWithResource_resource'
    Username:
      type: object
      properties:
        username:
          type: string
          description: The username of the user.
          example: pureuser
      example:
        username: pureuser
    Volume:
      allOf:
      - description: dummy
      - allOf:
        - description: dummy
        - allOf:
          - description: dummy
          - type: object
            properties:
              id:
                type: string
                description: "A globally unique, system-generated ID. The ID cannot\
                  \ be modified and cannot refer to another resource."
                readOnly: true
              name:
                type: string
                description: A user-specified name. The name must be locally unique
                  and can be changed.
            description: "An ordinary (as opposed to built-in) resource that can be\
              \ created, named, renamed or deleted by the user. This might be a virtual\
              \ resource (e.g., a volume), or correspond to something in the environment,\
              \ like a host or a server."
          - type: object
            properties:
              connection_count:
                type: integer
                description: The total number of hosts and host groups connected to
                  the volume.
                format: int64
                readOnly: true
              created:
                type: integer
                description: The volume creation time. Measured in milliseconds since
                  the UNIX epoch.
                format: int64
                readOnly: true
              destroyed:
                type: boolean
                description: "Returns a value of `true` if the volume has been destroyed\
                  \ and is pending eradication. The `time_remaining` value displays\
                  \ the amount of time left until the destroyed volume is permanently\
                  \ eradicated. Before the `time_remaining` period has elapsed, the\
                  \ destroyed volume can be recovered by setting `destroyed=false`.\
                  \ Once the `time_remaining` period has elapsed, the volume is permanently\
                  \ eradicated and can no longer be recovered."
              host_encryption_key_status:
                type: string
                description: "The host encryption key status for this volume. Possible\
                  \ values include `none`, `detected`, and `fetched`."
                readOnly: true
                example: detected
              provisioned:
                maximum: 4503599627370496
                type: integer
                description: The virtual size of the volume. Measured in bytes and
                  must be a multiple of 512.
                format: int64
              qos:
                type: object
                properties:
                  bandwidth_limit:
                    maximum: 549755813888
                    minimum: 1048576
                    type: integer
                    description: "The maximum QoS bandwidth limit for the volume.\
                      \ Whenever throughput exceeds the bandwidth limit, throttling\
                      \ occurs. Measured in bytes per second. Maximum limit is 512\
                      \ GB/s."
                    format: int64
                  iops_limit:
                    maximum: 104857600
                    minimum: 100
                    type: integer
                    description: The QoS IOPs limit for the volume.
                    format: int64
                description: Displays QoS limit information.
              serial:
                type: string
                description: A globally unique serial number generated by the system
                  when the volume is created.
                readOnly: true
              space:
                type: object
                properties:
                  data_reduction:
                    type: number
                    description: "The ratio of mapped sectors within a volume versus\
                      \ the amount of physical space the data occupies after data\
                      \ compression and deduplication. The data reduction ratio does\
                      \ not include thin provisioning savings. For example, a data\
                      \ reduction ratio of 5&#58;1 means that for every 5 MB the host\
                      \ writes to the array, 1 MB is stored on the array's flash modules."
                    format: float
                  shared:
                    minimum: 0
                    type: integer
                    description: "The physical space occupied by deduplicated data,\
                      \ meaning that the space is shared with other volumes and snapshots\
                      \ as a result of data deduplication. Measured in bytes."
                    format: int64
                    example: 111863360624
                  snapshots:
                    minimum: 0
                    type: integer
                    description: The physical space occupied by data unique to one
                      or more snapshots. Measured in bytes.
                    format: int64
                  system:
                    minimum: 0
                    type: integer
                    description: The physical space occupied by internal array metadata.
                      Measured in bytes.
                    format: int64
                  thin_provisioning:
                    maximum: 1
                    minimum: 0
                    type: number
                    description: The percentage of volume sectors that do not contain
                      host-written data because the hosts have not written data to
                      them or the sectors have been explicitly trimmed.
                    format: float
                  total_physical:
                    minimum: 0
                    type: integer
                    description: "The total physical space occupied by system, shared\
                      \ space, volume, and snapshot data. Measured in bytes."
                    format: int64
                  total_provisioned:
                    minimum: 0
                    type: integer
                    description: "For a single volume, the provisioned size of the\
                      \ volume. For all other resources, the total provisioned size\
                      \ of all volumes that are connected to or are inside the resource.\
                      \ Represents storage capacity reported to hosts. Measured in\
                      \ bytes."
                    format: int64
                    example: 19937690345472
                  total_reduction:
                    type: number
                    description: "The ratio of provisioned sectors within a volume\
                      \ versus the amount of physical space the data occupies after\
                      \ reduction via data compression and deduplication and with\
                      \ thin provisioning savings. Total reduction is data reduction\
                      \ with thin provisioning savings. For example, a total reduction\
                      \ ratio of 10&#58;1 means that for every 10 MB of provisioned\
                      \ space, 1 MB is stored on the array's flash modules."
                    format: float
                  unique:
                    minimum: 0
                    type: integer
                    description: "The unique physical space occupied by customer data.\
                      \ Unique physical space does not include shared space, snapshots,\
                      \ and internal array metadata. Measured in bytes."
                    format: int64
                  virtual:
                    minimum: 0
                    type: integer
                    description: The amount of logically written data that a volume
                      or a snapshot references. Measured in bytes.
                    format: int64
                description: Displays size and space consumption information.
                readOnly: true
              time_remaining:
                type: integer
                description: "The amount of time left until the destroyed volume is\
                  \ permanently eradicated. Measured in milliseconds. Before the `time_remaining`\
                  \ period has elapsed, the destroyed volume can be recovered by setting\
                  \ `destroyed=false`."
                format: int64
                readOnly: true
            description: "A disk-like random access virtual storage device that a\
              \ FlashArray system exports to hosts via a logical unit number (LUN).\
              \ To a host, a volume contains a number of 512-byte sectors in which\
              \ data can be written and from which it can be read."
        - properties:
            pod:
              type: object
              properties:
                id:
                  type: string
                  description: "A globally unique, system-generated ID. The ID cannot\
                    \ be modified."
                name:
                  type: string
                  description: "The resource name, such as volume name, pod name,\
                    \ snapshot name, and so on."
              description: A reference to the pod.
            source:
              type: object
              properties:
                id:
                  type: string
                  description: "A globally unique, system-generated ID. The ID cannot\
                    \ be modified."
                name:
                  type: string
                  description: "The resource name, such as volume name, pod name,\
                    \ snapshot name, and so on."
              description: A reference to the originating volume as a result of a
                volume copy.
              readOnly: true
            subtype:
              type: string
              description: The type of volume. Valid values are `protocol_endpoint`
                and `regular`.
              readOnly: true
            volume_group:
              type: object
              properties:
                id:
                  type: string
                  description: "A globally unique, system-generated ID. The ID cannot\
                    \ be modified."
                name:
                  type: string
                  description: "The resource name, such as volume name, pod name,\
                    \ snapshot name, and so on."
              description: A reference to the volume group.
      - properties:
          requested_promotion_state:
            type: string
            description: Valid values are `promoted` and `demoted`. Patch `requested_promotion_state`
              to `demoted` to demote the volume so that the volume stops accepting
              write requests. Patch `requested_promotion_state` to `promoted` to promote
              the volume so that the volume starts accepting write requests.
          promotion_status:
            type: string
            description: Current promotion status of a volume. Valid values are `promoted`
              and `demoted`. A status of `promoted` indicates that the volume has
              been promoted and can accept write requests from hosts. This is the
              default status for a volume when it is created. A status of `demoted`
              indicates that the volume has been demoted and no longer accepts write
              requests.
    VolumeGroup:
      allOf:
      - description: dummy
      - type: object
        properties:
          id:
            type: string
            description: "A globally unique, system-generated ID. The ID cannot be\
              \ modified and cannot refer to another resource."
            readOnly: true
          name:
            type: string
            description: A user-specified name. The name must be locally unique and
              can be changed.
        description: "An ordinary (as opposed to built-in) resource that can be created,\
          \ named, renamed or deleted by the user. This might be a virtual resource\
          \ (e.g., a volume), or correspond to something in the environment, like\
          \ a host or a server."
      - type: object
        properties:
          destroyed:
            type: boolean
            description: "Returns a value of `true` if the volume group has been destroyed\
              \ and is pending eradication. The `time_remaining` value displays the\
              \ amount of time left until the destroyed volume group is permanently\
              \ eradicated. Before the `time_remaining` period has elapsed, the destroyed\
              \ volume group can be recovered by setting `destroyed=false`. Once the\
              \ `time_remaining` period has elapsed, the volume group is permanently\
              \ eradicated and can no longer be recovered."
          qos:
            $ref: '#/components/schemas/VolumeGroup_qos'
          space:
            $ref: '#/components/schemas/Offload_space'
          time_remaining:
            type: integer
            description: "The amount of time left until the destroyed volume group\
              \ is permanently eradicated. Measured in milliseconds. Before the `time_remaining`\
              \ period has elapsed, the destroyed volume group can be recovered by\
              \ setting `destroyed=false`."
            format: int64
            readOnly: true
          volume_count:
            type: integer
            description: The number of volumes in the volume group.
            format: int64
            readOnly: true
            example: 3
        description: Volume groups organize FlashArray volumes into logical groupings.
    VolumeGroupPerformance:
      allOf:
      - description: dummy
      - allOf:
        - description: dummy
        - type: object
          properties:
            bytes_per_mirrored_write:
              minimum: 0
              type: integer
              description: The average I/O size per mirrored write. Measured in bytes.
              format: int64
            bytes_per_op:
              minimum: 0
              type: integer
              description: The average I/O size for both read and write (all) operations.
              format: int64
            bytes_per_read:
              minimum: 0
              type: integer
              description: The average I/O size per read. Measured in bytes.
              format: int64
            bytes_per_write:
              minimum: 0
              type: integer
              description: The average I/O size per write. Measured in bytes.
              format: int64
            mirrored_write_bytes_per_sec:
              minimum: 0
              type: integer
              description: The number of mirrored bytes written per second.
              format: int64
            mirrored_writes_per_sec:
              minimum: 0
              type: integer
              description: The number of mirrored writes per second.
              format: int64
            qos_rate_limit_usec_per_mirrored_write_op:
              minimum: 0
              type: integer
              description: The average time it takes the array to process a mirrored
                I/O write request. Measured in microseconds.
              format: int64
            qos_rate_limit_usec_per_read_op:
              minimum: 0
              type: integer
              description: The average time spent waiting due to QoS rate limiting
                for a read request. Measured in microseconds.
              format: int64
            qos_rate_limit_usec_per_write_op:
              minimum: 0
              type: integer
              description: The average time that a write I/O request spends waiting
                as a result of the volume reaching its QoS bandwidth limit. Measured
                in microseconds.
              format: int64
            queue_usec_per_mirrored_write_op:
              minimum: 0
              type: integer
              description: The average time that a mirrored write I/O request spends
                in the array waiting to be served. Measured in microseconds.
              format: int64
            queue_usec_per_read_op:
              minimum: 0
              type: integer
              description: The average time that a read I/O request spends in the
                array waiting to be served. Measured in microseconds.
              format: int64
            queue_usec_per_write_op:
              minimum: 0
              type: integer
              description: The average time that a write I/O request spends in the
                array waiting to be served. Measured in microseconds.
              format: int64
            read_bytes_per_sec:
              minimum: 0
              type: integer
              description: The number of bytes read per second.
              format: int64
            reads_per_sec:
              minimum: 0
              type: integer
              description: The number of read requests processed per second.
              format: int64
            san_usec_per_mirrored_write_op:
              minimum: 0
              type: integer
              description: The average time required to transfer data from the initiator
                to the array for a mirrored write request. Measured in microseconds.
              format: int64
            san_usec_per_read_op:
              minimum: 0
              type: integer
              description: The average time required to transfer data from the array
                to the initiator for a read request. Measured in microseconds.
              format: int64
            san_usec_per_write_op:
              minimum: 0
              type: integer
              description: The average time required to transfer data from the initiator
                to the array for a write request. Measured in microseconds.
              format: int64
            service_usec_per_mirrored_write_op:
              minimum: 0
              type: integer
              description: The average time required for the array to service a mirrored
                write request. Measured in microseconds.
              format: int64
            service_usec_per_read_op:
              minimum: 0
              type: integer
              description: The average time required for the array to service a read
                request. Measured in microseconds.
              format: int64
            service_usec_per_write_op:
              minimum: 0
              type: integer
              description: The average time required for the array to service a write
                request. Measured in microseconds.
              format: int64
            time:
              type: integer
              description: The time when the sample performance data was taken. Measured
                in milliseconds since the UNIX epoch.
              format: int64
            usec_per_mirrored_write_op:
              minimum: 0
              type: integer
              description: "The average time it takes the array to process a mirrored\
                \ I/O write request. Measured in microseconds. The average time does\
                \ not include SAN time, queue time, or QoS rate limit time."
              format: int64
            usec_per_read_op:
              minimum: 0
              type: integer
              description: "The average time it takes the array to process an I/O\
                \ read request. Measured in microseconds. The average time does not\
                \ include SAN time, queue time, or QoS rate limit time."
              format: int64
            usec_per_write_op:
              minimum: 0
              type: integer
              description: "The average time it takes the array to process an I/O\
                \ write request. Measured in microseconds. The average time does not\
                \ include SAN time, queue time, or QoS rate limit time."
              format: int64
            write_bytes_per_sec:
              minimum: 0
              type: integer
              description: The number of bytes written per second.
              format: int64
            writes_per_sec:
              minimum: 0
              type: integer
              description: The number of write requests processed per second.
              format: int64
          readOnly: true
        - properties:
            service_usec_per_read_op_cache_reduction:
              maximum: 1
              minimum: 0
              type: number
              description: "The percentage reduction in `service_usec_per_read_op`\
                \ due to data cache hits. For example, a value of 0.25 indicates that\
                \ the value of `service_usec_per_read_op` is 25&#37; lower than it\
                \ would have been without any data cache hits."
              format: float
      - type: object
        properties:
          id:
            type: string
            description: "A globally unique, system-generated ID. The ID cannot be\
              \ modified and cannot refer to another resource."
            readOnly: true
          name:
            type: string
            description: A user-specified name. The name must be locally unique and
              can be changed.
        description: "An ordinary (as opposed to built-in) resource that can be created,\
          \ named, renamed or deleted by the user. This might be a virtual resource\
          \ (e.g., a volume), or correspond to something in the environment, like\
          \ a host or a server."
    VolumeGroupSpace:
      allOf:
      - description: dummy
      - type: object
        properties:
          id:
            type: string
            description: "A globally unique, system-generated ID. The ID cannot be\
              \ modified and cannot refer to another resource."
            readOnly: true
          name:
            type: string
            description: "A locally unique, system-generated name. The name cannot\
              \ be modified."
            readOnly: true
        description: |-
          A built-in resource. Many are singletons predefined by Purity (e.g., support settings). Some correspond to a piece of software, like an app, or hardware, like a controller. Others are created by the system in response to some event (e.g., alerts, audit records).
          Typically, a user can't create, delete or rename a built-in resource. A few can be created or deleted, but not renamed because the names are meaningful to Purity (e.g., VIFs).
      - properties:
          space:
            $ref: '#/components/schemas/DirectorySpace_space'
          time:
            type: integer
            description: The timestamp of when the data was taken. Measured in milliseconds
              since the UNIX epoch.
            format: int64
        readOnly: true
    VolumePerformance:
      allOf:
      - description: dummy
      - allOf:
        - description: dummy
        - type: object
          properties:
            bytes_per_mirrored_write:
              minimum: 0
              type: integer
              description: The average I/O size per mirrored write. Measured in bytes.
              format: int64
            bytes_per_op:
              minimum: 0
              type: integer
              description: The average I/O size for both read and write (all) operations.
              format: int64
            bytes_per_read:
              minimum: 0
              type: integer
              description: The average I/O size per read. Measured in bytes.
              format: int64
            bytes_per_write:
              minimum: 0
              type: integer
              description: The average I/O size per write. Measured in bytes.
              format: int64
            mirrored_write_bytes_per_sec:
              minimum: 0
              type: integer
              description: The number of mirrored bytes written per second.
              format: int64
            mirrored_writes_per_sec:
              minimum: 0
              type: integer
              description: The number of mirrored writes per second.
              format: int64
            qos_rate_limit_usec_per_mirrored_write_op:
              minimum: 0
              type: integer
              description: The average time it takes the array to process a mirrored
                I/O write request. Measured in microseconds.
              format: int64
            qos_rate_limit_usec_per_read_op:
              minimum: 0
              type: integer
              description: The average time spent waiting due to QoS rate limiting
                for a read request. Measured in microseconds.
              format: int64
            qos_rate_limit_usec_per_write_op:
              minimum: 0
              type: integer
              description: The average time that a write I/O request spends waiting
                as a result of the volume reaching its QoS bandwidth limit. Measured
                in microseconds.
              format: int64
            queue_usec_per_mirrored_write_op:
              minimum: 0
              type: integer
              description: The average time that a mirrored write I/O request spends
                in the array waiting to be served. Measured in microseconds.
              format: int64
            queue_usec_per_read_op:
              minimum: 0
              type: integer
              description: The average time that a read I/O request spends in the
                array waiting to be served. Measured in microseconds.
              format: int64
            queue_usec_per_write_op:
              minimum: 0
              type: integer
              description: The average time that a write I/O request spends in the
                array waiting to be served. Measured in microseconds.
              format: int64
            read_bytes_per_sec:
              minimum: 0
              type: integer
              description: The number of bytes read per second.
              format: int64
            reads_per_sec:
              minimum: 0
              type: integer
              description: The number of read requests processed per second.
              format: int64
            san_usec_per_mirrored_write_op:
              minimum: 0
              type: integer
              description: The average time required to transfer data from the initiator
                to the array for a mirrored write request. Measured in microseconds.
              format: int64
            san_usec_per_read_op:
              minimum: 0
              type: integer
              description: The average time required to transfer data from the array
                to the initiator for a read request. Measured in microseconds.
              format: int64
            san_usec_per_write_op:
              minimum: 0
              type: integer
              description: The average time required to transfer data from the initiator
                to the array for a write request. Measured in microseconds.
              format: int64
            service_usec_per_mirrored_write_op:
              minimum: 0
              type: integer
              description: The average time required for the array to service a mirrored
                write request. Measured in microseconds.
              format: int64
            service_usec_per_read_op:
              minimum: 0
              type: integer
              description: The average time required for the array to service a read
                request. Measured in microseconds.
              format: int64
            service_usec_per_write_op:
              minimum: 0
              type: integer
              description: The average time required for the array to service a write
                request. Measured in microseconds.
              format: int64
            time:
              type: integer
              description: The time when the sample performance data was taken. Measured
                in milliseconds since the UNIX epoch.
              format: int64
            usec_per_mirrored_write_op:
              minimum: 0
              type: integer
              description: "The average time it takes the array to process a mirrored\
                \ I/O write request. Measured in microseconds. The average time does\
                \ not include SAN time, queue time, or QoS rate limit time."
              format: int64
            usec_per_read_op:
              minimum: 0
              type: integer
              description: "The average time it takes the array to process an I/O\
                \ read request. Measured in microseconds. The average time does not\
                \ include SAN time, queue time, or QoS rate limit time."
              format: int64
            usec_per_write_op:
              minimum: 0
              type: integer
              description: "The average time it takes the array to process an I/O\
                \ write request. Measured in microseconds. The average time does not\
                \ include SAN time, queue time, or QoS rate limit time."
              format: int64
            write_bytes_per_sec:
              minimum: 0
              type: integer
              description: The number of bytes written per second.
              format: int64
            writes_per_sec:
              minimum: 0
              type: integer
              description: The number of write requests processed per second.
              format: int64
          readOnly: true
        - properties:
            service_usec_per_read_op_cache_reduction:
              maximum: 1
              minimum: 0
              type: number
              description: "The percentage reduction in `service_usec_per_read_op`\
                \ due to data cache hits. For example, a value of 0.25 indicates that\
                \ the value of `service_usec_per_read_op` is 25&#37; lower than it\
                \ would have been without any data cache hits."
              format: float
      - type: object
        properties:
          id:
            type: string
            description: "A globally unique, system-generated ID. The ID cannot be\
              \ modified and cannot refer to another resource."
            readOnly: true
          name:
            type: string
            description: A user-specified name. The name must be locally unique and
              can be changed.
        description: "An ordinary (as opposed to built-in) resource that can be created,\
          \ named, renamed or deleted by the user. This might be a virtual resource\
          \ (e.g., a volume), or correspond to something in the environment, like\
          \ a host or a server."
    VolumePerformanceByArray:
      allOf:
      - description: dummy
      - $ref: '#/components/schemas/PodPerformance'
      - properties:
          array:
            $ref: '#/components/schemas/HostPerformanceByArray_array'
    VolumeSnapshot:
      allOf:
      - description: dummy
      - type: object
        properties:
          id:
            type: string
            description: "A globally unique, system-generated ID. The ID cannot be\
              \ modified and cannot refer to another resource."
            readOnly: true
          name:
            type: string
            description: A user-specified name. The name must be locally unique and
              can be changed.
        description: "An ordinary (as opposed to built-in) resource that can be created,\
          \ named, renamed or deleted by the user. This might be a virtual resource\
          \ (e.g., a volume), or correspond to something in the environment, like\
          \ a host or a server."
      - type: object
        properties:
          created:
            type: integer
            description: The snapshot creation time. Measured in milliseconds since
              the UNIX epoch.
            format: int64
            readOnly: true
          destroyed:
            type: boolean
            description: "Returns a value of `true` if the snapshot has been destroyed\
              \ and is pending eradication. The `time_remaining` value displays the\
              \ amount of time left until the destroyed volume snapshot is permanently\
              \ eradicated. Before the `time_remaining` period has elapsed, the destroyed\
              \ volume snapshot can be recovered by setting `destroyed=false`. Once\
              \ the `time_remaining` period has elapsed, the volume snapshot is permanently\
              \ eradicated and can no longer be recovered."
          pod:
            $ref: '#/components/schemas/RemoteVolumeSnapshot_pod'
          provisioned:
            maximum: 4503599627370496
            minimum: 1048576
            type: integer
            description: The provisioned space of the snapshot. Measured in bytes.
            format: int64
            readOnly: true
          source:
            $ref: '#/components/schemas/RemoteVolumeSnapshot_source'
          suffix:
            type: string
            description: "The suffix that is appended to the `source_name` value to\
              \ generate the full volume snapshot name in the form `VOL.SUFFIX`. If\
              \ the suffix is not specified, the system constructs the snapshot name\
              \ in the form `VOL.NNN`, where `VOL` is the volume name, and `NNN` is\
              \ a monotonically increasing number."
          time_remaining:
            type: integer
            description: "The amount of time left until the destroyed snapshot is\
              \ permanently eradicated. Measured in milliseconds. Before the `time_remaining`\
              \ period has elapsed, the destroyed snapshot can be recovered by setting\
              \ `destroyed=false`."
            format: int64
            readOnly: true
      - type: object
        properties:
          serial:
            type: string
            description: A serial number generated by the system when the snapshot
              is created. The serial number is unique across all arrays.
            readOnly: true
          space:
            $ref: '#/components/schemas/DirectorySpace_space'
          volume_group:
            $ref: '#/components/schemas/VolumeSnapshot_volume_group'
        description: A point-in-time image of the contents of the volume.
    VolumeSnapshotTransfer:
      allOf:
      - description: dummy
      - type: object
        properties:
          id:
            type: string
            description: "A globally unique, system-generated ID. The ID cannot be\
              \ modified and cannot refer to another resource."
            readOnly: true
          name:
            type: string
            description: A user-specified name. The name must be locally unique and
              can be changed.
        description: "An ordinary (as opposed to built-in) resource that can be created,\
          \ named, renamed or deleted by the user. This might be a virtual resource\
          \ (e.g., a volume), or correspond to something in the environment, like\
          \ a host or a server."
      - type: object
        properties:
          destroyed:
            type: boolean
            description: "Returns a value of `true` if the snapshot has been destroyed\
              \ and is pending eradication. The destroyed snapshot can be recovered\
              \ by setting `destroyed=false`. Once the eradication pending period\
              \ has elapsed, the snapshot is permanently eradicated and can no longer\
              \ be recovered."
          started:
            type: integer
            description: The timestamp of when the snapshot replication process started.
              Measured in milliseconds since the UNIX epoch.
            format: int64
            readOnly: true
          progress:
            maximum: 1
            minimum: 0
            type: number
            description: The percentage progress of the snapshot transfer from the
              source array to the target. Displayed in decimal format.
            format: float
            readOnly: true
            example: 0.66
          completed:
            type: integer
            description: The timestamp of when the snapshot replication process completed.
              Measured in milliseconds since the UNIX epoch.
            format: int64
            readOnly: true
          data_transferred:
            type: integer
            description: The number of bytes transferred from the source to the target
              as part of the replication process. Measured in bytes.
            format: int64
            readOnly: true
          physical_bytes_written:
            type: integer
            description: The amount of physical/logical data written to the target
              due to replication. Measured in bytes.
            format: int64
            readOnly: true
      - description: The transfer statistics for snapshot replication data.
    VolumeSpace:
      allOf:
      - description: dummy
      - type: object
        properties:
          id:
            type: string
            description: "A globally unique, system-generated ID. The ID cannot be\
              \ modified and cannot refer to another resource."
            readOnly: true
          name:
            type: string
            description: "A locally unique, system-generated name. The name cannot\
              \ be modified."
            readOnly: true
        description: |-
          A built-in resource. Many are singletons predefined by Purity (e.g., support settings). Some correspond to a piece of software, like an app, or hardware, like a controller. Others are created by the system in response to some event (e.g., alerts, audit records).
          Typically, a user can't create, delete or rename a built-in resource. A few can be created or deleted, but not renamed because the names are meaningful to Purity (e.g., VIFs).
      - properties:
          space:
            $ref: '#/components/schemas/DirectorySpace_space'
          time:
            type: integer
            description: The timestamp of when the data was taken. Measured in milliseconds
              since the UNIX epoch.
            format: int64
        readOnly: true
    "1_0_token_body":
      required:
      - grant_type
      - subject_token
      - subject_token_type
      type: object
      properties:
        grant_type:
          type: string
          description: "The method by which the access token will be obtained. The\
            \ Pure Storage REST API supports the OAuth 2.0 \"token exchange\" grant\
            \ type, which indicates that a token exchange is being performed. Set\
            \ `grant_type` to `urn:ietf:params:oauth:grant-type:token-exchange`."
          default: urn:ietf:params:oauth:grant-type:token-exchange
        subject_token:
          type: string
          description: |-
            An encoded security ID Token representing the identity of the party on behalf of whom the request is being made. The token must be issued by a trusted identity provider which must be either a registered application in Pure1 or an enabled API client on the array. The token must be a JSON Web Token and must contain the following claims:
            > | JWT claim | Location | API Client Field | Description | Required By |
            > |-|-|-|-|-|
            > | kid | Header | key_id | Key ID of the API client that issues the identity token. | FlashArray and FlashBlade only. |
            > | aud | Payload | id | Client ID of the API client that issues the identity token. | FlashArray and FlashBlade only. |
            > | sub | Payload | | Login name of the array user for whom the token should be issued. This must be a valid user in the system. | FlashArray and FlashBlade only. |
            > | iss | Payload | issuer | Application ID for the Pure1 or API client's trusted identity issuer on the array. | All products. |
            > | iat | Payload | | Timestamp of when the identity token was issued. Measured in milliseconds since the UNIX epoch. | All products. |
            > | exp | Payload | | Timestamp of when the identity token will expire. Measured in milliseconds since the UNIX epoch. | All products. |

            Each token must also be signed with the private key that is paired with the API client's public key.
        subject_token_type:
          type: string
          description: An identifier that indicates the type of security token specifed
            in the `subject_token` parameter. The Pure Storage REST API supports the
            JSON Web Token (JWT) as the means for requesting the access token. Set
            `subject_token_type` to `urn:ietf:params:oauth:token-type:jwt`.
          default: urn:ietf:params:oauth:token-type:jwt
    oauth_token_response:
      title: oauth_token_response
      type: object
      properties:
        access_token:
          type: string
          description: The serialized OAuth 2.0 Bearer token used to perform authenticated
            requests. The access token must be added to the Authorization header of
            all API calls.
          example: eyJraWQiOiJqTlBzL1Ria2c4U2Vua3F3ZmkvbnI4bWxxQ3NPIiwidHlwIjoiSldUIiwiYWxnIjoiUlMyNTYifQ.eyJhdWQiOiI5NDcyMTkwOC1mNzkyLTcxMmUtYTYzOS0wODM5ZmE4MzA5MjIiLCJzdWIiOiJqb2UiLCJyb2xlIjoic3RvcmFnZV9hZG1pbiIsImlzcyI6Imh0dHA6Ly9sb2NhbGhvc3Q6OTAwMCIsImlhdCI6MTU0NDAzNjA1MiwiZXhwIjoxNTQ0MDcyMDUyLCJqdGkiOiJjOTg0MjgyNS1mNGM3LTRiNGUtODdkNy03OWFiZmIxYTUzNDgifQ.pnuYAx0CkmkIG0LDrMAQGRr5Ci4-t5yMto3A7BkmyKnAVHBXG5ZIWwvNkWDLhqbA4YjmG7LZmWHrCVehLy2zy2vRLahFURsd3GTnOaWSyWFIyrwpoO81jQRtOQATtseweuMT_-C8o3oa4MgBNBsuKrhwKQS3oDDpeRPaCRTGev1_xRDxh_K6CWJBTAeOP2pcR4LW6zIJkCLzzkMuyL4aTJWWUjSbl04mcFbyw8r8W1GURrmaDVOvvpT634Hk9-GGh9OMIRlS6OOq7cJKc-RRWn18IK2Gs53V_KYshXTBbnRr990Y_qOX8MaTWOJTqgzsojY02MSVuJ9XDJWoIU3TQytr4K1vM2EvwDZDgl7LuUYUn7vWhbKktFzpeZyyhOjq3eX-ViugYKpIjBcG2f_-fcTPceEWGV82rd6TyVNB5A-v9u2kxCdW198t_kesgVQfuupDeS02cZe0ABLCzEHPiVF17JfiVr6sjkciioxN7Wj_j18ga4U0mdSukauT8yhbgCW1ijTVTFu1VwWebW0s8z3BWMtXdTtZ3BhcZVAdKRF8bOq7nfEbUQGhTn9g7dK-yF050winjtp-VTL2oUtkF5j1v_N8vPNiN9ZdkGJZr7VVZ-qeOJZcjdaRbxL6YB__yT1wkTcKPh8RHz6GUq7Jbyw8VIlcBE2nvJ63d0tH9C4
        issued_token_type:
          type: string
          description: The type of token that is issued. The Pure Storage REST API
            supports OAuth 2.0 access tokens.
          example: urn:ietf:params:oauth:token-type:access_token
        token_type:
          type: string
          description: Indicates how the API client can use the access token issued.
            The Pure Storage REST API supports the `Bearer` token.
          example: Bearer
        expires_in:
          type: integer
          description: The duration after which the access token will expire. Measured
            in seconds. This differs from other duration fields that are expressed
            in milliseconds.
          format: uint32
          example: 35999
      example:
        access_token: eyJraWQiOiJqTlBzL1Ria2c4U2Vua3F3ZmkvbnI4bWxxQ3NPIiwidHlwIjoiSldUIiwiYWxnIjoiUlMyNTYifQ.eyJhdWQiOiI5NDcyMTkwOC1mNzkyLTcxMmUtYTYzOS0wODM5ZmE4MzA5MjIiLCJzdWIiOiJqb2UiLCJyb2xlIjoic3RvcmFnZV9hZG1pbiIsImlzcyI6Imh0dHA6Ly9sb2NhbGhvc3Q6OTAwMCIsImlhdCI6MTU0NDAzNjA1MiwiZXhwIjoxNTQ0MDcyMDUyLCJqdGkiOiJjOTg0MjgyNS1mNGM3LTRiNGUtODdkNy03OWFiZmIxYTUzNDgifQ.pnuYAx0CkmkIG0LDrMAQGRr5Ci4-t5yMto3A7BkmyKnAVHBXG5ZIWwvNkWDLhqbA4YjmG7LZmWHrCVehLy2zy2vRLahFURsd3GTnOaWSyWFIyrwpoO81jQRtOQATtseweuMT_-C8o3oa4MgBNBsuKrhwKQS3oDDpeRPaCRTGev1_xRDxh_K6CWJBTAeOP2pcR4LW6zIJkCLzzkMuyL4aTJWWUjSbl04mcFbyw8r8W1GURrmaDVOvvpT634Hk9-GGh9OMIRlS6OOq7cJKc-RRWn18IK2Gs53V_KYshXTBbnRr990Y_qOX8MaTWOJTqgzsojY02MSVuJ9XDJWoIU3TQytr4K1vM2EvwDZDgl7LuUYUn7vWhbKktFzpeZyyhOjq3eX-ViugYKpIjBcG2f_-fcTPceEWGV82rd6TyVNB5A-v9u2kxCdW198t_kesgVQfuupDeS02cZe0ABLCzEHPiVF17JfiVr6sjkciioxN7Wj_j18ga4U0mdSukauT8yhbgCW1ijTVTFu1VwWebW0s8z3BWMtXdTtZ3BhcZVAdKRF8bOq7nfEbUQGhTn9g7dK-yF050winjtp-VTL2oUtkF5j1v_N8vPNiN9ZdkGJZr7VVZ-qeOJZcjdaRbxL6YB__yT1wkTcKPh8RHz6GUq7Jbyw8VIlcBE2nvJ63d0tH9C4
        issued_token_type: urn:ietf:params:oauth:token-type:access_token
        token_type: Bearer
        expires_in: 35999
    inline_response_400:
      type: object
      properties:
        error:
          type: string
          example: invalid_request
        error_description:
          type: string
          example: "Unsupported subject_token_type: urn:ietf:params:oauth:token-"
    inline_response_401:
      type: object
      properties:
        error:
          type: string
          example: invalid_client
        error_description:
          type: string
          example: "Invalid identity: JWT validation failed."
    inline_response_200:
      type: object
      properties:
        version:
          type: array
          description: A list of supported API versions.
          example:
          - "1.0"
          - "1.1"
          - "1.2"
          - "1.3"
          - "1.4"
          - "1.5"
          - "1.6"
          - "1.7"
          - "1.8"
          - "1.9"
          - "1.10"
          - "1.11"
          - "1.12"
          - "1.13"
          - "1.14"
          - "1.15"
          - "1.16"
          - "1.17"
          - "2.0"
          items:
            type: string
      example:
        version:
        - "1.0"
        - "1.1"
        - "1.2"
        - "1.3"
        - "1.4"
        - "1.5"
        - "1.6"
        - "1.7"
        - "1.8"
        - "1.9"
        - "1.10"
        - "1.11"
        - "1.12"
        - "1.13"
        - "1.14"
        - "1.15"
        - "1.16"
        - "1.17"
        - "2.0"
    inline_response_200_1:
      type: object
      properties:
        items:
          type: array
          items:
            $ref: '#/components/schemas/Username'
      example:
        items:
        - username: pureuser
        - username: pureuser
    inline_response_200_2:
      allOf:
      - description: dummy
      - allOf:
        - description: dummy
        - type: object
          properties:
            more_items_remaining:
              type: boolean
              description: Returns a value of `true` if subsequent items can be retrieved.
              example: false
            total_item_count:
              type: integer
              description: "The total number of records after applying all filter\
                \ query parameters. The `total_item_count` will be calculated if and\
                \ only if the corresponding query parameter `total_item_count` is\
                \ set to `true`. If this query parameter is not set or set to `false`,\
                \ a value of `null` will be returned."
              format: int32
        - type: object
          properties:
            continuation_token:
              type: string
              description: "Continuation token that can be provided in the `continuation_token`\
                \ query param to get the next page of data. If you use the continuation\
                \ token to page through data you are guaranteed to get all items exactly\
                \ once regardless of how items are modified. If an item is added or\
                \ deleted during the pagination then it may or may not be returned.\
                \ The continuation token is generated if the limit is less than the\
                \ remaining number of items, and the default sort is used (no sort\
                \ is specified)."
      - type: object
        properties:
          items:
            type: array
            description: A list of Active Directory computer account configuration
              objects.
            items:
              allOf:
              - description: dummy
              - type: object
                properties:
                  name:
                    type: string
                    description: "A locally unique, system-generated name. The name\
                      \ cannot be modified."
                    readOnly: true
                description: |-
                  A built-in resource. Many are singletons predefined by Purity (e.g., support settings). Some correspond to a piece of software, like an app, or hardware, like a controller. Others are created by the system in response to some event (e.g., alerts, audit records).
                  Typically, a user can't create, delete or rename a built-in resource. A few can be created or deleted, but not renamed because the names are meaningful to Purity (e.g., VIFs, file systems, file system snapshots, volume snapshot).
              - properties:
                  computer_name:
                    type: string
                    description: The name of the computer account in the Active Directory
                      domain.
                    readOnly: true
                    example: FLASHARRAY01
                  directory_servers:
                    type: array
                    description: "A list of directory servers used for lookups related\
                      \ to user authorization. Servers must be specified in FQDN format.\
                      \ All specified servers must be registered to the domain appropriately\
                      \ in the configured DNS of the array and are only communicated\
                      \ with over the secure LDAP (LDAPS) protocol. If this field\
                      \ is `null`, the servers are resolved for the domain in DNS."
                    readOnly: true
                    items:
                      type: string
                      example: ldap.my-corporation.com
                  domain:
                    type: string
                    description: The Active Directory domain joined.
                    readOnly: true
                    example: my-corporation.com
                  kerberos_servers:
                    type: array
                    description: "A list of key distribution servers to use for Kerberos\
                      \ protocol. Servers must be specified in FQDN format. All specified\
                      \ servers must be registered to the domain appropriately in\
                      \ the configured DNS of the array. If this field is `null`,\
                      \ the servers are resolved for the domain in DNS."
                    readOnly: true
                    items:
                      type: string
                      example: kdc.my-corporation.com
    "2_8_activedirectory_body":
      allOf:
      - description: dummy
      - allOf:
        - description: dummy
        - type: object
        - properties:
            computer_name:
              type: string
              description: "The name of the computer account to be created in the\
                \ Active Directory domain. If not specified, defaults to the name\
                \ of the Active Directory configuration."
              example: FLASHARRAY01
            directory_servers:
              type: array
              description: "A list of directory servers used for lookups related to\
                \ user authorization. Servers must be specified in FQDN format. All\
                \ specified servers must be registered to the domain appropriately\
                \ in the configured DNS of the array and are only communicated with\
                \ over the secure LDAP (LDAPS) protocol. If not specified, servers\
                \ are resolved for the domain in DNS."
              items:
                type: string
                example: ldap.my-corporation.com
            domain:
              type: string
              description: The Active Directory domain to join.
              example: my-corporation.com
            kerberos_servers:
              type: array
              description: "A list of key distribution servers to use for Kerberos\
                \ protocol. Servers must be specified in FQDN format. All specified\
                \ servers must be registered to the domain appropriately in the configured\
                \ DNS of the array. If not specified, servers are resolved for the\
                \ domain in DNS."
              items:
                type: string
                example: kdc.my-corporation.com
            password:
              type: string
              description: The login password of the user with privileges to create
                the computer account in the domain. This is not persisted on the array.
              example: password
            user:
              type: string
              description: The login name of the user with privileges to create the
                computer account in the domain. This is not persisted on the array.
              example: Administrator
      - properties:
          join_ou:
            type: string
            description: "The distinguished name of the organizational unit in which\
              \ the computer account should be created when joining the domain. The\
              \ `DC=...` components of the distinguished name can be optionally omitted.\
              \ If not specified, defaults to `CN=Computers`."
            example: "OU=Dev,OU=Sweden,DC=purestorage,DC=com"
    inline_response_200_3:
      type: object
      properties:
        items:
          type: array
          description: A list of Active Directory computer account configuration objects.
          items:
            allOf:
            - description: dummy
            - type: object
              properties:
                name:
                  type: string
                  description: "A locally unique, system-generated name. The name\
                    \ cannot be modified."
                  readOnly: true
              description: |-
                A built-in resource. Many are singletons predefined by Purity (e.g., support settings). Some correspond to a piece of software, like an app, or hardware, like a controller. Others are created by the system in response to some event (e.g., alerts, audit records).
                Typically, a user can't create, delete or rename a built-in resource. A few can be created or deleted, but not renamed because the names are meaningful to Purity (e.g., VIFs, file systems, file system snapshots, volume snapshot).
            - properties:
                computer_name:
                  type: string
                  description: The name of the computer account in the Active Directory
                    domain.
                  readOnly: true
                  example: FLASHARRAY01
                directory_servers:
                  type: array
                  description: "A list of directory servers used for lookups related\
                    \ to user authorization. Servers must be specified in FQDN format.\
                    \ All specified servers must be registered to the domain appropriately\
                    \ in the configured DNS of the array and are only communicated\
                    \ with over the secure LDAP (LDAPS) protocol. If this field is\
                    \ `null`, the servers are resolved for the domain in DNS."
                  readOnly: true
                  items:
                    type: string
                    example: ldap.my-corporation.com
                domain:
                  type: string
                  description: The Active Directory domain joined.
                  readOnly: true
                  example: my-corporation.com
                kerberos_servers:
                  type: array
                  description: "A list of key distribution servers to use for Kerberos\
                    \ protocol. Servers must be specified in FQDN format. All specified\
                    \ servers must be registered to the domain appropriately in the\
                    \ configured DNS of the array. If this field is `null`, the servers\
                    \ are resolved for the domain in DNS."
                  readOnly: true
                  items:
                    type: string
                    example: kdc.my-corporation.com
      example:
        items:
        - ""
        - ""
    inline_response_200_4:
      allOf:
      - description: dummy
      - allOf:
        - description: dummy
        - type: object
          properties:
            more_items_remaining:
              type: boolean
              description: Returns a value of `true` if subsequent items can be retrieved.
              example: false
            total_item_count:
              type: integer
              description: "The total number of records after applying all filter\
                \ query parameters. The `total_item_count` will be calculated if and\
                \ only if the corresponding query parameter `total_item_count` is\
                \ set to `true`. If this query parameter is not set or set to `false`,\
                \ a value of `null` will be returned."
              format: int32
        - type: object
          properties:
            continuation_token:
              type: string
              description: "Continuation token that can be provided in the `continuation_token`\
                \ query param to get the next page of data. If you use the continuation\
                \ token to page through data you are guaranteed to get all items exactly\
                \ once regardless of how items are modified. If an item is added or\
                \ deleted during the pagination then it may or may not be returned.\
                \ The continuation token is generated if the limit is less than the\
                \ remaining number of items, and the default sort is used (no sort\
                \ is specified)."
      - type: object
        properties:
          items:
            type: array
            items:
              $ref: '#/components/schemas/Admin'
    "2_8_admins_body":
      type: object
      properties:
        password:
          type: string
          description: Password associated with the account.
        role:
          allOf:
          - description: dummy
          - description: "Privilege level. Valid values include `array_admin`, `storage_admin`,\
              \ and `readonly`."
          - type: object
            properties:
              name:
                type: string
                description: "The resource name, such as volume name, pod name, snapshot\
                  \ name, and so on."
    inline_response_200_5:
      type: object
      properties:
        items:
          type: array
          items:
            $ref: '#/components/schemas/Admin'
      example:
        items:
        - ""
        - ""
    "2_8_admins_body_1":
      allOf:
      - description: dummy
      - $ref: '#/components/schemas/Admin'
      - type: object
        properties:
          old_password:
            type: string
            description: The current password.
    inline_response_200_6:
      allOf:
      - description: dummy
      - allOf:
        - description: dummy
        - type: object
          properties:
            more_items_remaining:
              type: boolean
              description: Returns a value of `true` if subsequent items can be retrieved.
              example: false
            total_item_count:
              type: integer
              description: "The total number of records after applying all filter\
                \ query parameters. The `total_item_count` will be calculated if and\
                \ only if the corresponding query parameter `total_item_count` is\
                \ set to `true`. If this query parameter is not set or set to `false`,\
                \ a value of `null` will be returned."
              format: int32
        - type: object
          properties:
            continuation_token:
              type: string
              description: "Continuation token that can be provided in the `continuation_token`\
                \ query param to get the next page of data. If you use the continuation\
                \ token to page through data you are guaranteed to get all items exactly\
                \ once regardless of how items are modified. If an item is added or\
                \ deleted during the pagination then it may or may not be returned.\
                \ The continuation token is generated if the limit is less than the\
                \ remaining number of items, and the default sort is used (no sort\
                \ is specified)."
      - type: object
        properties:
          items:
            type: array
            items:
              $ref: '#/components/schemas/AdminApiToken'
    inline_response_200_7:
      type: object
      properties:
        items:
          type: array
          items:
            $ref: '#/components/schemas/AdminApiToken'
      example:
        items:
        - ""
        - ""
    inline_response_200_8:
      allOf:
      - description: dummy
      - allOf:
        - description: dummy
        - type: object
          properties:
            more_items_remaining:
              type: boolean
              description: Returns a value of `true` if subsequent items can be retrieved.
              example: false
            total_item_count:
              type: integer
              description: "The total number of records after applying all filter\
                \ query parameters. The `total_item_count` will be calculated if and\
                \ only if the corresponding query parameter `total_item_count` is\
                \ set to `true`. If this query parameter is not set or set to `false`,\
                \ a value of `null` will be returned."
              format: int32
        - type: object
          properties:
            continuation_token:
              type: string
              description: "Continuation token that can be provided in the `continuation_token`\
                \ query param to get the next page of data. If you use the continuation\
                \ token to page through data you are guaranteed to get all items exactly\
                \ once regardless of how items are modified. If an item is added or\
                \ deleted during the pagination then it may or may not be returned.\
                \ The continuation token is generated if the limit is less than the\
                \ remaining number of items, and the default sort is used (no sort\
                \ is specified)."
      - type: object
        properties:
          items:
            type: array
            items:
              $ref: '#/components/schemas/AdminCache'
    inline_response_200_9:
      type: object
      properties:
        items:
          type: array
          items:
            $ref: '#/components/schemas/AdminCache'
      example:
        items:
        - ""
        - ""
    inline_response_200_10:
      type: object
      properties:
        items:
          type: array
          items:
            $ref: '#/components/schemas/AdminSettings'
      example:
        items:
        - lockout_duration: 3600000
          single_sign_on_enabled: true
          min_password_length: 1
          max_login_attempts: 10
        - lockout_duration: 3600000
          single_sign_on_enabled: true
          min_password_length: 1
          max_login_attempts: 10
    inline_response_200_11:
      allOf:
      - description: dummy
      - allOf:
        - description: dummy
        - type: object
          properties:
            more_items_remaining:
              type: boolean
              description: Returns a value of `true` if subsequent items can be retrieved.
              example: false
            total_item_count:
              type: integer
              description: "The total number of records after applying all filter\
                \ query parameters. The `total_item_count` will be calculated if and\
                \ only if the corresponding query parameter `total_item_count` is\
                \ set to `true`. If this query parameter is not set or set to `false`,\
                \ a value of `null` will be returned."
              format: int32
        - type: object
          properties:
            continuation_token:
              type: string
              description: "Continuation token that can be provided in the `continuation_token`\
                \ query param to get the next page of data. If you use the continuation\
                \ token to page through data you are guaranteed to get all items exactly\
                \ once regardless of how items are modified. If an item is added or\
                \ deleted during the pagination then it may or may not be returned.\
                \ The continuation token is generated if the limit is less than the\
                \ remaining number of items, and the default sort is used (no sort\
                \ is specified)."
      - type: object
        properties:
          items:
            type: array
            items:
              $ref: '#/components/schemas/Alert'
    inline_response_200_12:
      type: object
      properties:
        items:
          type: array
          items:
            $ref: '#/components/schemas/Alert'
      example:
        items:
        - ""
        - ""
    inline_response_200_13:
      allOf:
      - description: dummy
      - allOf:
        - description: dummy
        - type: object
          properties:
            more_items_remaining:
              type: boolean
              description: Returns a value of `true` if subsequent items can be retrieved.
              example: false
            total_item_count:
              type: integer
              description: "The total number of records after applying all filter\
                \ query parameters. The `total_item_count` will be calculated if and\
                \ only if the corresponding query parameter `total_item_count` is\
                \ set to `true`. If this query parameter is not set or set to `false`,\
                \ a value of `null` will be returned."
              format: int32
        - type: object
          properties:
            continuation_token:
              type: string
              description: "Continuation token that can be provided in the `continuation_token`\
                \ query param to get the next page of data. If you use the continuation\
                \ token to page through data you are guaranteed to get all items exactly\
                \ once regardless of how items are modified. If an item is added or\
                \ deleted during the pagination then it may or may not be returned.\
                \ The continuation token is generated if the limit is less than the\
                \ remaining number of items, and the default sort is used (no sort\
                \ is specified)."
      - type: object
        properties:
          items:
            type: array
            items:
              $ref: '#/components/schemas/AlertEvent'
    inline_response_200_14:
      allOf:
      - description: dummy
      - allOf:
        - description: dummy
        - type: object
          properties:
            more_items_remaining:
              type: boolean
              description: Returns a value of `true` if subsequent items can be retrieved.
              example: false
            total_item_count:
              type: integer
              description: "The total number of records after applying all filter\
                \ query parameters. The `total_item_count` will be calculated if and\
                \ only if the corresponding query parameter `total_item_count` is\
                \ set to `true`. If this query parameter is not set or set to `false`,\
                \ a value of `null` will be returned."
              format: int32
        - type: object
          properties:
            continuation_token:
              type: string
              description: "Continuation token that can be provided in the `continuation_token`\
                \ query param to get the next page of data. If you use the continuation\
                \ token to page through data you are guaranteed to get all items exactly\
                \ once regardless of how items are modified. If an item is added or\
                \ deleted during the pagination then it may or may not be returned.\
                \ The continuation token is generated if the limit is less than the\
                \ remaining number of items, and the default sort is used (no sort\
                \ is specified)."
      - type: object
        properties:
          items:
            type: array
            description: A list of alert watcher objects.
            items:
              $ref: '#/components/schemas/AlertWatcher'
    "2_8_alertwatchers_body":
      type: object
      properties:
        enabled:
          type: boolean
          description: "If set to `true`, email notifications will be sent to this\
            \ watcher for alerts. If set to `false`, email notifications are disabled.\
            \ If not specified, defaults to `true`."
    inline_response_200_15:
      type: object
      properties:
        items:
          type: array
          description: A list of alert watcher objects.
          items:
            $ref: '#/components/schemas/AlertWatcher'
      example:
        items:
        - ""
        - ""
    "2_8_alertwatchers_body_1":
      type: object
      properties:
        enabled:
          type: boolean
          description: "If set to `true`, email notifications will be sent to this\
            \ watcher for alerts. If set to `false`, email notifications are disabled."
    inline_response_200_16:
      allOf:
      - description: dummy
      - type: object
        properties:
          total_item_count:
            type: integer
            description: "The total number of records after applying all filter query\
              \ parameters. The `total_item_count` will be calculated if and only\
              \ if the corresponding query parameter `total_item_count` is set to\
              \ `true`. If this query parameter is not set or set to `false`, a value\
              \ of `null` will be returned."
            format: int32
      - type: object
        properties:
          items:
            type: array
            items:
              $ref: '#/components/schemas/TestResultWithResource'
    inline_response_200_17:
      allOf:
      - description: dummy
      - allOf:
        - description: dummy
        - type: object
          properties:
            more_items_remaining:
              type: boolean
              description: Returns a value of `true` if subsequent items can be retrieved.
              example: false
            total_item_count:
              type: integer
              description: "The total number of records after applying all filter\
                \ query parameters. The `total_item_count` will be calculated if and\
                \ only if the corresponding query parameter `total_item_count` is\
                \ set to `true`. If this query parameter is not set or set to `false`,\
                \ a value of `null` will be returned."
              format: int32
        - type: object
          properties:
            continuation_token:
              type: string
              description: "Continuation token that can be provided in the `continuation_token`\
                \ query param to get the next page of data. If you use the continuation\
                \ token to page through data you are guaranteed to get all items exactly\
                \ once regardless of how items are modified. If an item is added or\
                \ deleted during the pagination then it may or may not be returned.\
                \ The continuation token is generated if the limit is less than the\
                \ remaining number of items, and the default sort is used (no sort\
                \ is specified)."
      - type: object
        properties:
          items:
            type: array
            description: Returns a list of all items after filtering. The values are
              displayed for each name where meaningful.
            items:
              $ref: '#/components/schemas/APIClient'
    "2_8_apiclients_body":
      type: object
      properties:
        max_role:
          type: string
          description: "The maximum role allowed for ID Tokens issued by this API\
            \ client. The bearer of an access token will be authorized to perform\
            \ actions within the intersection of this `max_role` and the role of the\
            \ array user specified as the `sub`. Valid values are `array_admin`, `storage_admin`,\
            \ `ops_admin`, and `readonly`. Users with the `readonly` (Read Only) role\
            \ can perform operations that convey the state of the array. Read Only\
            \ users cannot alter the state of the array. Users with the `ops_admin`\
            \ (Ops Admin) role can perform the same operations as Read Only users\
            \ plus enable and disable remote assistance sessions. Ops Admin users\
            \ cannot alter the state of the array. Users with the `storage_admin`\
            \ (Storage Admin) role can perform the same operations as Read Only users\
            \ plus storage related operations, such as administering volumes, hosts,\
            \ and host groups. Storage Admin users cannot perform operations that\
            \ deal with global and system configurations. Users with the `array_admin`\
            \ (Array Admin) role can perform the same operations as Storage Admin\
            \ users plus array-wide changes dealing with global and system configurations.\
            \ In other words, Array Admin users can perform all operations."
          example: storage_admin
        issuer:
          type: string
          description: "The name of the identity provider that will be issuing ID\
            \ Tokens for this API client. The `iss` claim in the JWT issued must match\
            \ this string. If not specified, defaults to the API client name."
          example: https://purestorage.idp.okta.com
        public_key:
          type: string
          description: The API client's PEM formatted (Base64 encoded) RSA public
            key. Include the `-----BEGIN PUBLIC KEY-----` and `-----END PUBLIC KEY-----`
            lines.
          example: '-----BEGIN PUBLIC KEY----- MIICIjANBgkqhkiG9w0BAQEFAAOCAg8AMIICCgKCAgEArSe6chh1JzME9svOKjU0
            eKTm8S23Ok3Vr2bWuPri/YHfLrlnRwWoCt+st0/BebKSJ+fQUWOaLlqpZQKpI8oR gJ9sWmwGibVG8cTuz7XMkskx9bsm/bjIenuB4W+s3g0BCsi9930mfdKgJgFzY69O
            nLh7d7hAFcmhSJa945PryQZpvJ/U4Ue5F4d+WXgEJ0SoSRaZ6bbeMPhcbMHTzTum 2ZrPBkK5cqPYitaso6BXeAlqNQPw4Kbu4Ugm0CTogrtImkwoonWDDP34XMOq+u7q
            sNTbJSvDKMTM1RPPrTWCaLiuZkdLVEVesZ9/8+XUMIgBTElwQJDCAQer03MJzqRr 1eCZGgLfDuYqwMG2MFaAX7kgqBwwyqRTd6MxaQxt2nkdfwiXSY71llzEQ23g3T+1
            64zjwAL5f+dtu8PkGF7IdU2T8P2Qk9bG9pckwZHWYkBK77BAk5jbmSzsKGZgRb2R 1E+TWDKIaveFhQp251j/C5wkZwMXgjOzN+BOPo+OiLBGUl+jRybWA9f7Vq1MEdf6
            SEdLiqYrXcZERkYBMieLXAfdtaztAIb96cUu+OKMSLDk+D0GHkUfm7lEbDK3ew1+ D6z+BnxDyH6oqZzz4lS2kPLBLsc+6pdTGuKLf0S9YuLiqJe659AdwU8+X/3KtwNd
            FVJSaxdFbWx0nj3hJqFkIO8CAwEAAQ== -----END PUBLIC KEY-----'
        access_token_ttl_in_ms:
          maximum: 86400000
          minimum: 1000
          type: integer
          description: "The TTL (Time To Live) length of time for the exchanged access\
            \ token. Measured in milliseconds. If not specified, defaults to `86400000`."
          format: int64
          example: 15000
    inline_response_200_18:
      type: object
      properties:
        items:
          type: array
          description: Returns a list of all items after filtering. The values are
            displayed for each name where meaningful.
          items:
            $ref: '#/components/schemas/APIClient'
      example:
        items:
        - public_key: '-----BEGIN PUBLIC KEY----- MIICIjANBgkqhkiG9w0BAQEFAAOCAg8AMIICCgKCAgEArSe6chh1JzME9svOKjU0
            eKTm8S23Ok3Vr2bWuPri/YHfLrlnRwWoCt+st0/BebKSJ+fQUWOaLlqpZQKpI8oR gJ9sWmwGibVG8cTuz7XMkskx9bsm/bjIenuB4W+s3g0BCsi9930mfdKgJgFzY69O
            nLh7d7hAFcmhSJa945PryQZpvJ/U4Ue5F4d+WXgEJ0SoSRaZ6bbeMPhcbMHTzTum 2ZrPBkK5cqPYitaso6BXeAlqNQPw4Kbu4Ugm0CTogrtImkwoonWDDP34XMOq+u7q
            sNTbJSvDKMTM1RPPrTWCaLiuZkdLVEVesZ9/8+XUMIgBTElwQJDCAQer03MJzqRr 1eCZGgLfDuYqwMG2MFaAX7kgqBwwyqRTd6MxaQxt2nkdfwiXSY71llzEQ23g3T+1
            64zjwAL5f+dtu8PkGF7IdU2T8P2Qk9bG9pckwZHWYkBK77BAk5jbmSzsKGZgRb2R 1E+TWDKIaveFhQp251j/C5wkZwMXgjOzN+BOPo+OiLBGUl+jRybWA9f7Vq1MEdf6
            SEdLiqYrXcZERkYBMieLXAfdtaztAIb96cUu+OKMSLDk+D0GHkUfm7lEbDK3ew1+ D6z+BnxDyH6oqZzz4lS2kPLBLsc+6pdTGuKLf0S9YuLiqJe659AdwU8+X/3KtwNd
            FVJSaxdFbWx0nj3hJqFkIO8CAwEAAQ== -----END PUBLIC KEY-----'
          max_role: storage_admin
          key_id: 6207d123-d123-0b5c-5fa1-95fabc5c7123
          name: NightlyStatsAggregationScript
          id: 6207d123-d123-0b5c-5fa1-95fabc5c7123
          issuer: https://purestorage.idp.okta.com
          enabled: true
          access_token_ttl_in_ms: 15000
        - public_key: '-----BEGIN PUBLIC KEY----- MIICIjANBgkqhkiG9w0BAQEFAAOCAg8AMIICCgKCAgEArSe6chh1JzME9svOKjU0
            eKTm8S23Ok3Vr2bWuPri/YHfLrlnRwWoCt+st0/BebKSJ+fQUWOaLlqpZQKpI8oR gJ9sWmwGibVG8cTuz7XMkskx9bsm/bjIenuB4W+s3g0BCsi9930mfdKgJgFzY69O
            nLh7d7hAFcmhSJa945PryQZpvJ/U4Ue5F4d+WXgEJ0SoSRaZ6bbeMPhcbMHTzTum 2ZrPBkK5cqPYitaso6BXeAlqNQPw4Kbu4Ugm0CTogrtImkwoonWDDP34XMOq+u7q
            sNTbJSvDKMTM1RPPrTWCaLiuZkdLVEVesZ9/8+XUMIgBTElwQJDCAQer03MJzqRr 1eCZGgLfDuYqwMG2MFaAX7kgqBwwyqRTd6MxaQxt2nkdfwiXSY71llzEQ23g3T+1
            64zjwAL5f+dtu8PkGF7IdU2T8P2Qk9bG9pckwZHWYkBK77BAk5jbmSzsKGZgRb2R 1E+TWDKIaveFhQp251j/C5wkZwMXgjOzN+BOPo+OiLBGUl+jRybWA9f7Vq1MEdf6
            SEdLiqYrXcZERkYBMieLXAfdtaztAIb96cUu+OKMSLDk+D0GHkUfm7lEbDK3ew1+ D6z+BnxDyH6oqZzz4lS2kPLBLsc+6pdTGuKLf0S9YuLiqJe659AdwU8+X/3KtwNd
            FVJSaxdFbWx0nj3hJqFkIO8CAwEAAQ== -----END PUBLIC KEY-----'
          max_role: storage_admin
          key_id: 6207d123-d123-0b5c-5fa1-95fabc5c7123
          name: NightlyStatsAggregationScript
          id: 6207d123-d123-0b5c-5fa1-95fabc5c7123
          issuer: https://purestorage.idp.okta.com
          enabled: true
          access_token_ttl_in_ms: 15000
    "2_8_apiclients_body_1":
      type: object
      properties:
        enabled:
          type: boolean
          description: Returns a value of `true` if the API client is permitted to
            exchange ID tokens for access tokens. API clients are disabled by default.
          example: true
    inline_response_200_19:
      allOf:
      - description: dummy
      - allOf:
        - description: dummy
        - type: object
          properties:
            more_items_remaining:
              type: boolean
              description: Returns a value of `true` if subsequent items can be retrieved.
              example: false
            total_item_count:
              type: integer
              description: "The total number of records after applying all filter\
                \ query parameters. The `total_item_count` will be calculated if and\
                \ only if the corresponding query parameter `total_item_count` is\
                \ set to `true`. If this query parameter is not set or set to `false`,\
                \ a value of `null` will be returned."
              format: int32
        - type: object
          properties:
            continuation_token:
              type: string
              description: "Continuation token that can be provided in the `continuation_token`\
                \ query param to get the next page of data. If you use the continuation\
                \ token to page through data you are guaranteed to get all items exactly\
                \ once regardless of how items are modified. If an item is added or\
                \ deleted during the pagination then it may or may not be returned.\
                \ The continuation token is generated if the limit is less than the\
                \ remaining number of items, and the default sort is used (no sort\
                \ is specified)."
      - type: object
        properties:
          items:
            type: array
            items:
              $ref: '#/components/schemas/App'
    inline_response_200_20:
      type: object
      properties:
        items:
          type: array
          items:
            $ref: '#/components/schemas/App'
      example:
        items:
        - ""
        - ""
    inline_response_200_21:
      allOf:
      - description: dummy
      - allOf:
        - description: dummy
        - type: object
          properties:
            more_items_remaining:
              type: boolean
              description: Returns a value of `true` if subsequent items can be retrieved.
              example: false
            total_item_count:
              type: integer
              description: "The total number of records after applying all filter\
                \ query parameters. The `total_item_count` will be calculated if and\
                \ only if the corresponding query parameter `total_item_count` is\
                \ set to `true`. If this query parameter is not set or set to `false`,\
                \ a value of `null` will be returned."
              format: int32
        - type: object
          properties:
            continuation_token:
              type: string
              description: "Continuation token that can be provided in the `continuation_token`\
                \ query param to get the next page of data. If you use the continuation\
                \ token to page through data you are guaranteed to get all items exactly\
                \ once regardless of how items are modified. If an item is added or\
                \ deleted during the pagination then it may or may not be returned.\
                \ The continuation token is generated if the limit is less than the\
                \ remaining number of items, and the default sort is used (no sort\
                \ is specified)."
      - type: object
        properties:
          items:
            type: array
            items:
              $ref: '#/components/schemas/AppNode'
    inline_response_200_22:
      allOf:
      - description: dummy
      - allOf:
        - description: dummy
        - type: object
          properties:
            more_items_remaining:
              type: boolean
              description: Returns a value of `true` if subsequent items can be retrieved.
              example: false
            total_item_count:
              type: integer
              description: "The total number of records after applying all filter\
                \ query parameters. The `total_item_count` will be calculated if and\
                \ only if the corresponding query parameter `total_item_count` is\
                \ set to `true`. If this query parameter is not set or set to `false`,\
                \ a value of `null` will be returned."
              format: int32
        - type: object
          properties:
            continuation_token:
              type: string
              description: "Continuation token that can be provided in the `continuation_token`\
                \ query param to get the next page of data. If you use the continuation\
                \ token to page through data you are guaranteed to get all items exactly\
                \ once regardless of how items are modified. If an item is added or\
                \ deleted during the pagination then it may or may not be returned.\
                \ The continuation token is generated if the limit is less than the\
                \ remaining number of items, and the default sort is used (no sort\
                \ is specified)."
      - type: object
        properties:
          items:
            type: array
            items:
              $ref: '#/components/schemas/Array'
    inline_response_200_23:
      type: object
      properties:
        items:
          type: array
          items:
            $ref: '#/components/schemas/Array'
      example:
        items:
        - ""
        - ""
    inline_response_200_24:
      allOf:
      - description: dummy
      - allOf:
        - description: dummy
        - type: object
          properties:
            more_items_remaining:
              type: boolean
              description: Returns a value of `true` if subsequent items can be retrieved.
              example: false
            total_item_count:
              type: integer
              description: "The total number of records after applying all filter\
                \ query parameters. The `total_item_count` will be calculated if and\
                \ only if the corresponding query parameter `total_item_count` is\
                \ set to `true`. If this query parameter is not set or set to `false`,\
                \ a value of `null` will be returned."
              format: int32
        - type: object
          properties:
            continuation_token:
              type: string
              description: "Continuation token that can be provided in the `continuation_token`\
                \ query param to get the next page of data. If you use the continuation\
                \ token to page through data you are guaranteed to get all items exactly\
                \ once regardless of how items are modified. If an item is added or\
                \ deleted during the pagination then it may or may not be returned.\
                \ The continuation token is generated if the limit is less than the\
                \ remaining number of items, and the default sort is used (no sort\
                \ is specified)."
      - type: object
        properties:
          items:
            type: array
            items:
              $ref: '#/components/schemas/CloudProviderTag'
    inline_response_200_25:
      type: object
      properties:
        items:
          type: array
          items:
            $ref: '#/components/schemas/CloudProviderTag'
      example:
        items:
        - details: partially applied
          value: staging
          key: environment
        - details: partially applied
          value: staging
          key: environment
    inline_response_200_26:
      allOf:
      - description: dummy
      - allOf:
        - description: dummy
        - type: object
          properties:
            more_items_remaining:
              type: boolean
              description: Returns a value of `true` if subsequent items can be retrieved.
              example: false
            total_item_count:
              type: integer
              description: "The total number of records after applying all filter\
                \ query parameters. The `total_item_count` will be calculated if and\
                \ only if the corresponding query parameter `total_item_count` is\
                \ set to `true`. If this query parameter is not set or set to `false`,\
                \ a value of `null` will be returned."
              format: int32
        - type: object
          properties:
            continuation_token:
              type: string
              description: "Continuation token that can be provided in the `continuation_token`\
                \ query param to get the next page of data. If you use the continuation\
                \ token to page through data you are guaranteed to get all items exactly\
                \ once regardless of how items are modified. If an item is added or\
                \ deleted during the pagination then it may or may not be returned.\
                \ The continuation token is generated if the limit is less than the\
                \ remaining number of items, and the default sort is used (no sort\
                \ is specified)."
      - type: object
        properties:
          items:
            type: array
            items:
              $ref: '#/components/schemas/inline_response_200_26_items'
    api2.8arrayseula_signature:
      type: object
      properties:
        name:
          type: string
          description: Name of the person who accepted the End User Agreement.
          example: John Doe
        title:
          type: string
          description: Title of the person who accepted the End User Agreement.
          example: Admin
        company:
          type: string
          description: Company of the person who accepted the End User Agreement.
          example: Example Inc.
        accepted:
          type: integer
          description: Accepted time in milliseconds since the UNIX epoch.
          format: int64
          readOnly: true
          example: 1577880000000
      example:
        name: John Doe
        accepted: 1577880000000
        company: Example Inc.
        title: Admin
    arrays_eula_body:
      type: object
      properties:
        agreement:
          type: string
          description: End User Agreement text.
          readOnly: true
        signature:
          $ref: '#/components/schemas/api2.8arrayseula_signature'
    inline_response_200_27:
      type: object
      properties:
        items:
          type: array
          items:
            $ref: '#/components/schemas/inline_response_200_26_items'
      example:
        items:
        - agreement: agreement
          signature:
            name: John Doe
            accepted: 1577880000000
            company: Example Inc.
            title: Admin
        - agreement: agreement
          signature:
            name: John Doe
            accepted: 1577880000000
            company: Example Inc.
            title: Admin
    inline_response_200_28:
      allOf:
      - description: dummy
      - allOf:
        - description: dummy
        - type: object
          properties:
            more_items_remaining:
              type: boolean
              description: Returns a value of `true` if subsequent items can be retrieved.
              example: false
            total_item_count:
              type: integer
              description: "The total number of records after applying all filter\
                \ query parameters. The `total_item_count` will be calculated if and\
                \ only if the corresponding query parameter `total_item_count` is\
                \ set to `true`. If this query parameter is not set or set to `false`,\
                \ a value of `null` will be returned."
              format: int32
        - type: object
          properties:
            continuation_token:
              type: string
              description: "Continuation token that can be provided in the `continuation_token`\
                \ query param to get the next page of data. If you use the continuation\
                \ token to page through data you are guaranteed to get all items exactly\
                \ once regardless of how items are modified. If an item is added or\
                \ deleted during the pagination then it may or may not be returned.\
                \ The continuation token is generated if the limit is less than the\
                \ remaining number of items, and the default sort is used (no sort\
                \ is specified)."
      - type: object
        properties:
          items:
            type: array
            items:
              $ref: '#/components/schemas/ArrayFactoryResetToken'
    inline_response_200_29:
      type: object
      properties:
        items:
          type: array
          items:
            $ref: '#/components/schemas/ArrayFactoryResetToken'
      example:
        items:
        - ""
        - ""
    inline_response_200_30:
      allOf:
      - description: dummy
      - allOf:
        - description: dummy
        - type: object
          properties:
            more_items_remaining:
              type: boolean
              description: Returns a value of `true` if subsequent items can be retrieved.
              example: false
            total_item_count:
              type: integer
              description: "The total number of records after applying all filter\
                \ query parameters. The `total_item_count` will be calculated if and\
                \ only if the corresponding query parameter `total_item_count` is\
                \ set to `true`. If this query parameter is not set or set to `false`,\
                \ a value of `null` will be returned."
              format: int32
        - type: object
          properties:
            continuation_token:
              type: string
              description: "Continuation token that can be provided in the `continuation_token`\
                \ query param to get the next page of data. If you use the continuation\
                \ token to page through data you are guaranteed to get all items exactly\
                \ once regardless of how items are modified. If an item is added or\
                \ deleted during the pagination then it may or may not be returned.\
                \ The continuation token is generated if the limit is less than the\
                \ remaining number of items, and the default sort is used (no sort\
                \ is specified)."
      - type: object
        properties:
          items:
            type: array
            items:
              $ref: '#/components/schemas/TestResult'
    inline_response_200_31:
      allOf:
      - description: dummy
      - allOf:
        - description: dummy
        - type: object
          properties:
            more_items_remaining:
              type: boolean
              description: Returns a value of `true` if subsequent items can be retrieved.
              example: false
            total_item_count:
              type: integer
              description: "The total number of records after applying all filter\
                \ query parameters. The `total_item_count` will be calculated if and\
                \ only if the corresponding query parameter `total_item_count` is\
                \ set to `true`. If this query parameter is not set or set to `false`,\
                \ a value of `null` will be returned."
              format: int32
        - type: object
          properties:
            continuation_token:
              type: string
              description: "Continuation token that can be provided in the `continuation_token`\
                \ query param to get the next page of data. If you use the continuation\
                \ token to page through data you are guaranteed to get all items exactly\
                \ once regardless of how items are modified. If an item is added or\
                \ deleted during the pagination then it may or may not be returned.\
                \ The continuation token is generated if the limit is less than the\
                \ remaining number of items, and the default sort is used (no sort\
                \ is specified)."
      - type: object
        properties:
          items:
            type: array
            items:
              $ref: '#/components/schemas/ArrayPerformance'
    inline_response_200_32:
      allOf:
      - description: dummy
      - allOf:
        - description: dummy
        - type: object
          properties:
            more_items_remaining:
              type: boolean
              description: Returns a value of `true` if subsequent items can be retrieved.
              example: false
            total_item_count:
              type: integer
              description: "The total number of records after applying all filter\
                \ query parameters. The `total_item_count` will be calculated if and\
                \ only if the corresponding query parameter `total_item_count` is\
                \ set to `true`. If this query parameter is not set or set to `false`,\
                \ a value of `null` will be returned."
              format: int32
        - type: object
          properties:
            continuation_token:
              type: string
              description: "Continuation token that can be provided in the `continuation_token`\
                \ query param to get the next page of data. If you use the continuation\
                \ token to page through data you are guaranteed to get all items exactly\
                \ once regardless of how items are modified. If an item is added or\
                \ deleted during the pagination then it may or may not be returned.\
                \ The continuation token is generated if the limit is less than the\
                \ remaining number of items, and the default sort is used (no sort\
                \ is specified)."
      - type: object
        properties:
          items:
            type: array
            items:
              allOf:
              - description: dummy
              - type: object
                properties:
                  id:
                    type: string
                    description: "A globally unique, system-generated ID. The ID cannot\
                      \ be modified and cannot refer to another resource."
                    readOnly: true
                  name:
                    type: string
                    description: "A locally unique, system-generated name. The name\
                      \ cannot be modified."
                    readOnly: true
                description: |-
                  A built-in resource. Many are singletons predefined by Purity (e.g., support settings). Some correspond to a piece of software, like an app, or hardware, like a controller. Others are created by the system in response to some event (e.g., alerts, audit records).
                  Typically, a user can't create, delete or rename a built-in resource. A few can be created or deleted, but not renamed because the names are meaningful to Purity (e.g., VIFs).
              - properties:
                  capacity:
                    type: integer
                    description: Usable capacity in bytes.
                    format: int64
                    example: 10995116277760
                  parity:
                    type: number
                    description: A representation of data redundancy on the array.
                      Data redundancy is rebuilt automatically by the system whenever
                      parity is less than 1.0.
                    format: float
                    example: 0.99
                  space:
                    allOf:
                    - description: dummy
                    - type: object
                      properties:
                        data_reduction:
                          type: number
                          description: "The ratio of mapped sectors within a volume\
                            \ versus the amount of physical space the data occupies\
                            \ after data compression and deduplication. The data reduction\
                            \ ratio does not include thin provisioning savings. For\
                            \ example, a data reduction ratio of 5&#58;1 means that\
                            \ for every 5 MB the host writes to the array, 1 MB is\
                            \ stored on the array's flash modules."
                          format: float
                        shared:
                          minimum: 0
                          type: integer
                          description: "The physical space occupied by deduplicated\
                            \ data, meaning that the space is shared with other volumes\
                            \ and snapshots as a result of data deduplication. Measured\
                            \ in bytes."
                          format: int64
                          example: 111863360624
                        snapshots:
                          minimum: 0
                          type: integer
                          description: The physical space occupied by data unique
                            to one or more snapshots. Measured in bytes.
                          format: int64
                        system:
                          minimum: 0
                          type: integer
                          description: The physical space occupied by internal array
                            metadata. Measured in bytes.
                          format: int64
                        thin_provisioning:
                          maximum: 1
                          minimum: 0
                          type: number
                          description: The percentage of volume sectors that do not
                            contain host-written data because the hosts have not written
                            data to them or the sectors have been explicitly trimmed.
                          format: float
                        total_physical:
                          minimum: 0
                          type: integer
                          description: "The total physical space occupied by system,\
                            \ shared space, volume, and snapshot data. Measured in\
                            \ bytes."
                          format: int64
                        total_provisioned:
                          minimum: 0
                          type: integer
                          description: "For a single volume, the provisioned size\
                            \ of the volume. For all other resources, the total provisioned\
                            \ size of all volumes that are connected to or are inside\
                            \ the resource. Represents storage capacity reported to\
                            \ hosts. Measured in bytes."
                          format: int64
                          example: 19937690345472
                        total_reduction:
                          type: number
                          description: "The ratio of provisioned sectors within a\
                            \ volume versus the amount of physical space the data\
                            \ occupies after reduction via data compression and deduplication\
                            \ and with thin provisioning savings. Total reduction\
                            \ is data reduction with thin provisioning savings. For\
                            \ example, a total reduction ratio of 10&#58;1 means that\
                            \ for every 10 MB of provisioned space, 1 MB is stored\
                            \ on the array's flash modules."
                          format: float
                        unique:
                          minimum: 0
                          type: integer
                          description: "The unique physical space occupied by customer\
                            \ data. Unique physical space does not include shared\
                            \ space, snapshots, and internal array metadata. Measured\
                            \ in bytes."
                          format: int64
                        virtual:
                          minimum: 0
                          type: integer
                          description: The amount of logically written data that a
                            volume or a snapshot references. Measured in bytes.
                          format: int64
                      readOnly: true
                    - properties:
                        replication:
                          minimum: 0
                          type: integer
                          description: This is the sum of replication space consumed
                            by all pods on this array.
                          format: int64
                  time:
                    type: integer
                    format: int64
                readOnly: true
    inline_response_200_33:
      allOf:
      - description: dummy
      - allOf:
        - description: dummy
        - type: object
          properties:
            more_items_remaining:
              type: boolean
              description: Returns a value of `true` if subsequent items can be retrieved.
              example: false
            total_item_count:
              type: integer
              description: "The total number of records after applying all filter\
                \ query parameters. The `total_item_count` will be calculated if and\
                \ only if the corresponding query parameter `total_item_count` is\
                \ set to `true`. If this query parameter is not set or set to `false`,\
                \ a value of `null` will be returned."
              format: int32
        - type: object
          properties:
            continuation_token:
              type: string
              description: "Continuation token that can be provided in the `continuation_token`\
                \ query param to get the next page of data. If you use the continuation\
                \ token to page through data you are guaranteed to get all items exactly\
                \ once regardless of how items are modified. If an item is added or\
                \ deleted during the pagination then it may or may not be returned.\
                \ The continuation token is generated if the limit is less than the\
                \ remaining number of items, and the default sort is used (no sort\
                \ is specified)."
      - type: object
        properties:
          items:
            type: array
            items:
              $ref: '#/components/schemas/ArrayConnection'
    "2_8_arrayconnections_body":
      allOf:
      - description: dummy
      - type: object
      - properties:
          management_address:
            type: string
            description: Management IP address of the target array.
            example: 10.202.101.78
          replication_addresses:
            type: array
            description: "IP addresses and FQDNs of the target arrays. Configurable\
              \ only when `replication_transport` is set to `ip`. If not configured,\
              \ will be set to all the replication addresses available on the target\
              \ array at the time of the POST."
            items:
              type: string
              example: 10.202.101.70
          type:
            type: string
            description: The type of replication. Valid values are `async-replication`
              and `sync-replication`.
          replication_transport:
            type: string
            description: The protocol used to transport data betwen the local array
              and the remote array. Valid values are `ip` and `fc`. The default is
              `ip`.
            example: ip
          connection_key:
            type: string
            description: The connection key of the target array.
            example: 6207d123-d123-0b5c-5fa1-95fabc5c7123
    inline_response_200_34:
      type: object
      properties:
        items:
          type: array
          items:
            $ref: '#/components/schemas/ArrayConnection'
      example:
        items:
        - ""
        - ""
    api2.8arrayconnections_window:
      type: object
      properties:
        start:
          type: integer
          description: "The window start time. Measured in milliseconds since midnight.\
            \ The time must be set on the hour. (e.g., `18000000`, which is equal\
            \ to 5:00 AM)."
          format: int64
          example: 3600000
        end:
          type: integer
          description: "The window end time. Measured in milliseconds since midnight.\
            \ The time must be set on the hour. (e.g., `28800000`, which is equal\
            \ to 8:00 AM)."
          format: int64
          example: 46800000
      description: The time during which the `window_limit` threshold is in effect.
      example: null
    "2_8_arrayconnections_body_1":
      type: object
      properties:
        default_limit:
          type: integer
          description: "Default maximum bandwidth threshold for outbound traffic in\
            \ bytes. Once exceeded, bandwidth throttling occurs."
          format: int64
          example: 1073741824
        window:
          $ref: '#/components/schemas/api2.8arrayconnections_window'
        window_limit:
          type: integer
          description: "Maximum bandwidth threshold for outbound traffic during the\
            \ specified `window_limit` time range in bytes. Once exceeded, bandwidth\
            \ throttling occurs."
          format: int64
          example: 2097152
      description: The bandwidth throttling for an array connection. Configurable
        on PATCH only.
    inline_response_200_35:
      allOf:
      - description: dummy
      - allOf:
        - description: dummy
        - type: object
          properties:
            more_items_remaining:
              type: boolean
              description: Returns a value of `true` if subsequent items can be retrieved.
              example: false
            total_item_count:
              type: integer
              description: "The total number of records after applying all filter\
                \ query parameters. The `total_item_count` will be calculated if and\
                \ only if the corresponding query parameter `total_item_count` is\
                \ set to `true`. If this query parameter is not set or set to `false`,\
                \ a value of `null` will be returned."
              format: int32
        - type: object
          properties:
            continuation_token:
              type: string
              description: "Continuation token that can be provided in the `continuation_token`\
                \ query param to get the next page of data. If you use the continuation\
                \ token to page through data you are guaranteed to get all items exactly\
                \ once regardless of how items are modified. If an item is added or\
                \ deleted during the pagination then it may or may not be returned.\
                \ The continuation token is generated if the limit is less than the\
                \ remaining number of items, and the default sort is used (no sort\
                \ is specified)."
      - properties:
          items:
            type: array
            items:
              $ref: '#/components/schemas/ArrayConnectionKey'
    inline_response_200_36:
      allOf:
      - description: dummy
      - allOf:
        - description: dummy
        - type: object
          properties:
            more_items_remaining:
              type: boolean
              description: Returns a value of `true` if subsequent items can be retrieved.
              example: false
            total_item_count:
              type: integer
              description: "The total number of records after applying all filter\
                \ query parameters. The `total_item_count` will be calculated if and\
                \ only if the corresponding query parameter `total_item_count` is\
                \ set to `true`. If this query parameter is not set or set to `false`,\
                \ a value of `null` will be returned."
              format: int32
        - type: object
          properties:
            continuation_token:
              type: string
              description: "Continuation token that can be provided in the `continuation_token`\
                \ query param to get the next page of data. If you use the continuation\
                \ token to page through data you are guaranteed to get all items exactly\
                \ once regardless of how items are modified. If an item is added or\
                \ deleted during the pagination then it may or may not be returned.\
                \ The continuation token is generated if the limit is less than the\
                \ remaining number of items, and the default sort is used (no sort\
                \ is specified)."
      - type: object
        properties:
          items:
            type: array
            items:
              $ref: '#/components/schemas/ArrayConnectionPath'
    inline_response_200_37:
      allOf:
      - description: dummy
      - allOf:
        - description: dummy
        - type: object
          properties:
            more_items_remaining:
              type: boolean
              description: Returns a value of `true` if subsequent items can be retrieved.
              example: false
            total_item_count:
              type: integer
              description: "The total number of records after applying all filter\
                \ query parameters. The `total_item_count` will be calculated if and\
                \ only if the corresponding query parameter `total_item_count` is\
                \ set to `true`. If this query parameter is not set or set to `false`,\
                \ a value of `null` will be returned."
              format: int32
        - type: object
          properties:
            continuation_token:
              type: string
              description: "Continuation token that can be provided in the `continuation_token`\
                \ query param to get the next page of data. If you use the continuation\
                \ token to page through data you are guaranteed to get all items exactly\
                \ once regardless of how items are modified. If an item is added or\
                \ deleted during the pagination then it may or may not be returned.\
                \ The continuation token is generated if the limit is less than the\
                \ remaining number of items, and the default sort is used (no sort\
                \ is specified)."
      - type: object
        properties:
          items:
            type: array
            items:
              $ref: '#/components/schemas/Audit'
    inline_response_200_38:
      allOf:
      - description: dummy
      - allOf:
        - description: dummy
        - type: object
          properties:
            more_items_remaining:
              type: boolean
              description: Returns a value of `true` if subsequent items can be retrieved.
              example: false
            total_item_count:
              type: integer
              description: "The total number of records after applying all filter\
                \ query parameters. The `total_item_count` will be calculated if and\
                \ only if the corresponding query parameter `total_item_count` is\
                \ set to `true`. If this query parameter is not set or set to `false`,\
                \ a value of `null` will be returned."
              format: int32
        - type: object
          properties:
            continuation_token:
              type: string
              description: "Continuation token that can be provided in the `continuation_token`\
                \ query param to get the next page of data. If you use the continuation\
                \ token to page through data you are guaranteed to get all items exactly\
                \ once regardless of how items are modified. If an item is added or\
                \ deleted during the pagination then it may or may not be returned.\
                \ The continuation token is generated if the limit is less than the\
                \ remaining number of items, and the default sort is used (no sort\
                \ is specified)."
      - type: object
        properties:
          items:
            type: array
            items:
              $ref: '#/components/schemas/Certificate'
    inline_response_200_39:
      type: object
      properties:
        items:
          type: array
          items:
            $ref: '#/components/schemas/Certificate'
      example:
        items:
        - ""
        - ""
    api2.8certificatescertificatesigningrequests_certificate:
      type: object
      properties:
        name:
          type: string
          description: "The resource name, such as volume name, pod name, snapshot\
            \ name, and so on."
      example: null
    certificates_certificatesigningrequests_body:
      type: object
      properties:
        certificate:
          $ref: '#/components/schemas/api2.8certificatescertificatesigningrequests_certificate'
        common_name:
          type: string
          description: The common name field listed in the certificate.
          example: Pure Storage Inc.
        country:
          type: string
          description: Two-letter country (ISO) code listed in the certificate.
          example: CA
        email:
          type: string
          description: The email field listed in the certificate.
          example: tcrisp@veridiandynamics.com
        locality:
          type: string
          description: The locality field listed in the certificate.
          example: Toronto
        organization:
          type: string
          description: The organization field listed in the certificate.
          example: Veridian Dynamics
        organizational_unit:
          type: string
          description: The organizational unit field listed in the certificate.
          example: Research & Development
        state:
          type: string
          description: The state/province field listed in the certificate.
          example: Ontario
      description: SSL Certificate managed by Purity//FA.
    inline_response_200_40:
      type: object
      properties:
        items:
          type: array
          items:
            $ref: '#/components/schemas/inline_response_200_40_items'
      example:
        items:
        - certificate_signing_request: certificate_signing_request
        - certificate_signing_request: certificate_signing_request
    inline_response_200_41:
      allOf:
      - description: dummy
      - allOf:
        - description: dummy
        - type: object
          properties:
            more_items_remaining:
              type: boolean
              description: Returns a value of `true` if subsequent items can be retrieved.
              example: false
            total_item_count:
              type: integer
              description: "The total number of records after applying all filter\
                \ query parameters. The `total_item_count` will be calculated if and\
                \ only if the corresponding query parameter `total_item_count` is\
                \ set to `true`. If this query parameter is not set or set to `false`,\
                \ a value of `null` will be returned."
              format: int32
        - type: object
          properties:
            continuation_token:
              type: string
              description: "Continuation token that can be provided in the `continuation_token`\
                \ query param to get the next page of data. If you use the continuation\
                \ token to page through data you are guaranteed to get all items exactly\
                \ once regardless of how items are modified. If an item is added or\
                \ deleted during the pagination then it may or may not be returned.\
                \ The continuation token is generated if the limit is less than the\
                \ remaining number of items, and the default sort is used (no sort\
                \ is specified)."
      - type: object
        properties:
          items:
            type: array
            items:
              $ref: '#/components/schemas/Connection'
    api2.8connections_protocol_endpoint:
      type: object
      properties:
        id:
          type: string
          description: "A globally unique, system-generated ID. The ID cannot be modified."
        name:
          type: string
          description: "The resource name, such as volume name, pod name, snapshot\
            \ name, and so on."
      description: "A protocol endpoint (also known as a conglomerate volume) which\
        \ acts as a proxy through which virtual volumes are created and then connected\
        \ to VMware ESXi hosts or host groups. The protocol endpoint itself does not\
        \ serve I/Os; instead, its job is to form connections between FlashArray volumes\
        \ and ESXi hosts and host groups."
      example: null
    "2_8_connections_body":
      type: object
      properties:
        lun:
          maximum: 4095
          minimum: 1
          type: integer
          description: "The logical unit number (LUN) by which the specified hosts\
            \ are to address the specified volume. If the LUN is not specified, the\
            \ system automatically assigns a LUN to the connection. To automatically\
            \ assign a LUN to a private connection, the system starts at LUN `1` and\
            \ counts up to the maximum LUN `4095`, assigning the first available LUN\
            \ to the connection. For shared connections, the system starts at LUN\
            \ `254` and counts down to the minimum LUN `1`, assigning the first available\
            \ LUN to the connection. If all LUNs in the `[1...254]` range are taken,\
            \ the system starts at LUN `255` and counts up to the maximum LUN `4095`,\
            \ assigning the first available LUN to the connection."
          format: int32
          example: 7
        protocol_endpoint:
          $ref: '#/components/schemas/api2.8connections_protocol_endpoint'
    inline_response_200_42:
      type: object
      properties:
        items:
          type: array
          items:
            $ref: '#/components/schemas/Connection'
      example:
        items:
        - ""
        - ""
    inline_response_200_43:
      allOf:
      - description: dummy
      - allOf:
        - description: dummy
        - type: object
          properties:
            more_items_remaining:
              type: boolean
              description: Returns a value of `true` if subsequent items can be retrieved.
              example: false
            total_item_count:
              type: integer
              description: "The total number of records after applying all filter\
                \ query parameters. The `total_item_count` will be calculated if and\
                \ only if the corresponding query parameter `total_item_count` is\
                \ set to `true`. If this query parameter is not set or set to `false`,\
                \ a value of `null` will be returned."
              format: int32
        - type: object
          properties:
            continuation_token:
              type: string
              description: "Continuation token that can be provided in the `continuation_token`\
                \ query param to get the next page of data. If you use the continuation\
                \ token to page through data you are guaranteed to get all items exactly\
                \ once regardless of how items are modified. If an item is added or\
                \ deleted during the pagination then it may or may not be returned.\
                \ The continuation token is generated if the limit is less than the\
                \ remaining number of items, and the default sort is used (no sort\
                \ is specified)."
      - type: object
        properties:
          items:
            type: array
            items:
              $ref: '#/components/schemas/Controllers'
    inline_response_200_44:
      allOf:
      - description: dummy
      - allOf:
        - description: dummy
        - type: object
          properties:
            more_items_remaining:
              type: boolean
              description: Returns a value of `true` if subsequent items can be retrieved.
              example: false
            total_item_count:
              type: integer
              description: "The total number of records after applying all filter\
                \ query parameters. The `total_item_count` will be calculated if and\
                \ only if the corresponding query parameter `total_item_count` is\
                \ set to `true`. If this query parameter is not set or set to `false`,\
                \ a value of `null` will be returned."
              format: int32
        - type: object
          properties:
            continuation_token:
              type: string
              description: "Continuation token that can be provided in the `continuation_token`\
                \ query param to get the next page of data. If you use the continuation\
                \ token to page through data you are guaranteed to get all items exactly\
                \ once regardless of how items are modified. If an item is added or\
                \ deleted during the pagination then it may or may not be returned.\
                \ The continuation token is generated if the limit is less than the\
                \ remaining number of items, and the default sort is used (no sort\
                \ is specified)."
      - type: object
        properties:
          items:
            type: array
            description: "Displays a list of all items after filtering. The values\
              \ are displayed for each name, if meaningful."
            items:
              $ref: '#/components/schemas/Directory'
      - properties:
          total:
            type: array
            description: "The aggregate value of all items after filtering. When applicable,\
              \ the average value is displayed instead. The values are displayed for\
              \ each field, if meaningful."
            items:
              $ref: '#/components/schemas/Directory'
    "2_8_directories_body":
      type: object
      properties:
        directory_name:
          type: string
          description: The managed directory name without the file system name prefix.
            A full managed directory name is constructed in the form of `FILE_SYSTEM:DIR`
            where `FILE_SYSTEM` is the file system name and `DIR` is the value of
            this field. `directory_name` is required if `file_system_names` or `file_system_ids`
            is set. `directory_name` cannot be set if `names` is set.
        path:
          type: string
          description: Path of the managed directory in the file system.
    inline_response_200_45:
      type: object
      properties:
        items:
          type: array
          description: "Displays a list of all items after filtering. The values are\
            \ displayed for each name, if meaningful."
          items:
            $ref: '#/components/schemas/Directory'
      example:
        items:
        - ""
        - ""
    "2_8_directories_body_1":
      type: string
      allOf:
      - description: dummy
      - type: object
        properties:
          name:
            type: string
            description: The new name for the resource.
    inline_response_200_46:
      allOf:
      - description: dummy
      - allOf:
        - description: dummy
        - type: object
          properties:
            more_items_remaining:
              type: boolean
              description: Returns a value of `true` if subsequent items can be retrieved.
              example: false
            total_item_count:
              type: integer
              description: "The total number of records after applying all filter\
                \ query parameters. The `total_item_count` will be calculated if and\
                \ only if the corresponding query parameter `total_item_count` is\
                \ set to `true`. If this query parameter is not set or set to `false`,\
                \ a value of `null` will be returned."
              format: int32
        - type: object
          properties:
            continuation_token:
              type: string
              description: "Continuation token that can be provided in the `continuation_token`\
                \ query param to get the next page of data. If you use the continuation\
                \ token to page through data you are guaranteed to get all items exactly\
                \ once regardless of how items are modified. If an item is added or\
                \ deleted during the pagination then it may or may not be returned.\
                \ The continuation token is generated if the limit is less than the\
                \ remaining number of items, and the default sort is used (no sort\
                \ is specified)."
      - type: object
        properties:
          items:
            type: array
            description: "Performance data. If `total_only=true`, the `items` list\
              \ will be empty."
            items:
              $ref: '#/components/schemas/DirectoryPerformance'
          total:
            type: array
            description: "The aggregate value of all items after filtering. When it\
              \ makes sense, the average value is displayed instead. The values are\
              \ displayed for each field if meaningful."
            items:
              $ref: '#/components/schemas/DirectoryPerformance'
    inline_response_200_47:
      allOf:
      - description: dummy
      - allOf:
        - description: dummy
        - type: object
          properties:
            more_items_remaining:
              type: boolean
              description: Returns a value of `true` if subsequent items can be retrieved.
              example: false
            total_item_count:
              type: integer
              description: "The total number of records after applying all filter\
                \ query parameters. The `total_item_count` will be calculated if and\
                \ only if the corresponding query parameter `total_item_count` is\
                \ set to `true`. If this query parameter is not set or set to `false`,\
                \ a value of `null` will be returned."
              format: int32
        - type: object
          properties:
            continuation_token:
              type: string
              description: "Continuation token that can be provided in the `continuation_token`\
                \ query param to get the next page of data. If you use the continuation\
                \ token to page through data you are guaranteed to get all items exactly\
                \ once regardless of how items are modified. If an item is added or\
                \ deleted during the pagination then it may or may not be returned.\
                \ The continuation token is generated if the limit is less than the\
                \ remaining number of items, and the default sort is used (no sort\
                \ is specified)."
      - type: object
        properties:
          items:
            type: array
            description: Displays a list of all items after filtering. The values
              are displayed for each name if meaningful.
            items:
              $ref: '#/components/schemas/PolicyMember'
    inline_response_200_48:
      allOf:
      - description: dummy
      - allOf:
        - description: dummy
        - type: object
          properties:
            more_items_remaining:
              type: boolean
              description: Returns a value of `true` if subsequent items can be retrieved.
              example: false
            total_item_count:
              type: integer
              description: "The total number of records after applying all filter\
                \ query parameters. The `total_item_count` will be calculated if and\
                \ only if the corresponding query parameter `total_item_count` is\
                \ set to `true`. If this query parameter is not set or set to `false`,\
                \ a value of `null` will be returned."
              format: int32
        - type: object
          properties:
            continuation_token:
              type: string
              description: "Continuation token that can be provided in the `continuation_token`\
                \ query param to get the next page of data. If you use the continuation\
                \ token to page through data you are guaranteed to get all items exactly\
                \ once regardless of how items are modified. If an item is added or\
                \ deleted during the pagination then it may or may not be returned.\
                \ The continuation token is generated if the limit is less than the\
                \ remaining number of items, and the default sort is used (no sort\
                \ is specified)."
      - type: object
        properties:
          items:
            type: array
            description: Displays a list of all items after filtering. The values
              are displayed for each name if meaningful.
            items:
              $ref: '#/components/schemas/PolicyMemberExport'
    inline_response_200_49:
      type: object
      properties:
        items:
          type: array
          description: Displays a list of all items after filtering. The values are
            displayed for each name if meaningful.
          items:
            $ref: '#/components/schemas/PolicyMemberExport'
      example:
        items:
        - ""
        - ""
    inline_response_200_50:
      type: object
      properties:
        items:
          type: array
          description: Displays a list of all items after filtering. The values are
            displayed for each name if meaningful.
          items:
            $ref: '#/components/schemas/PolicyMember'
      example:
        items:
        - destroyed: true
          member: ""
          enabled: true
          policy: ""
        - destroyed: true
          member: ""
          enabled: true
          policy: ""
    inline_response_200_51:
      allOf:
      - description: dummy
      - allOf:
        - description: dummy
        - type: object
          properties:
            more_items_remaining:
              type: boolean
              description: Returns a value of `true` if subsequent items can be retrieved.
              example: false
            total_item_count:
              type: integer
              description: "The total number of records after applying all filter\
                \ query parameters. The `total_item_count` will be calculated if and\
                \ only if the corresponding query parameter `total_item_count` is\
                \ set to `true`. If this query parameter is not set or set to `false`,\
                \ a value of `null` will be returned."
              format: int32
        - type: object
          properties:
            continuation_token:
              type: string
              description: "Continuation token that can be provided in the `continuation_token`\
                \ query param to get the next page of data. If you use the continuation\
                \ token to page through data you are guaranteed to get all items exactly\
                \ once regardless of how items are modified. If an item is added or\
                \ deleted during the pagination then it may or may not be returned.\
                \ The continuation token is generated if the limit is less than the\
                \ remaining number of items, and the default sort is used (no sort\
                \ is specified)."
      - type: object
        properties:
          items:
            type: array
            description: "Returns a list of all items after filtering. The values\
              \ are displayed for each name where meaningful. If `total_only=true`,\
              \ the `items` list will be empty."
            items:
              $ref: '#/components/schemas/VolumeSpace'
          total:
            type: array
            description: "The aggregate value of all items after filtering. Where\
              \ it makes more sense, the average value is displayed instead. The values\
              \ are displayed for each field where meaningful."
            items:
              $ref: '#/components/schemas/VolumeSpace'
    inline_response_200_52:
      allOf:
      - description: dummy
      - allOf:
        - description: dummy
        - type: object
          properties:
            more_items_remaining:
              type: boolean
              description: Returns a value of `true` if subsequent items can be retrieved.
              example: false
            total_item_count:
              type: integer
              description: "The total number of records after applying all filter\
                \ query parameters. The `total_item_count` will be calculated if and\
                \ only if the corresponding query parameter `total_item_count` is\
                \ set to `true`. If this query parameter is not set or set to `false`,\
                \ a value of `null` will be returned."
              format: int32
        - type: object
          properties:
            continuation_token:
              type: string
              description: "Continuation token that can be provided in the `continuation_token`\
                \ query param to get the next page of data. If you use the continuation\
                \ token to page through data you are guaranteed to get all items exactly\
                \ once regardless of how items are modified. If an item is added or\
                \ deleted during the pagination then it may or may not be returned.\
                \ The continuation token is generated if the limit is less than the\
                \ remaining number of items, and the default sort is used (no sort\
                \ is specified)."
      - type: object
        properties:
          items:
            type: array
            description: Displays a list of all items after filtering. The values
              are displayed for each name if meaningful.
            items:
              $ref: '#/components/schemas/DirectoryExport'
    "2_8_directoryexports_body":
      type: object
      properties:
        export_name:
          type: string
          description: The name of the export to create. Export names must be unique
            within the same protocol.
    inline_response_200_53:
      type: object
      properties:
        items:
          type: array
          description: Displays a list of all items after filtering. The values are
            displayed for each name if meaningful.
          items:
            $ref: '#/components/schemas/DirectoryExport'
      example:
        items:
        - path: path
          destroyed: true
          export_name: export_name
          directory: ""
          enabled: true
          policy: ""
        - path: path
          destroyed: true
          export_name: export_name
          directory: ""
          enabled: true
          policy: ""
    inline_response_200_54:
      allOf:
      - description: dummy
      - allOf:
        - description: dummy
        - type: object
          properties:
            more_items_remaining:
              type: boolean
              description: Returns a value of `true` if subsequent items can be retrieved.
              example: false
            total_item_count:
              type: integer
              description: "The total number of records after applying all filter\
                \ query parameters. The `total_item_count` will be calculated if and\
                \ only if the corresponding query parameter `total_item_count` is\
                \ set to `true`. If this query parameter is not set or set to `false`,\
                \ a value of `null` will be returned."
              format: int32
        - type: object
          properties:
            continuation_token:
              type: string
              description: "Continuation token that can be provided in the `continuation_token`\
                \ query param to get the next page of data. If you use the continuation\
                \ token to page through data you are guaranteed to get all items exactly\
                \ once regardless of how items are modified. If an item is added or\
                \ deleted during the pagination then it may or may not be returned.\
                \ The continuation token is generated if the limit is less than the\
                \ remaining number of items, and the default sort is used (no sort\
                \ is specified)."
      - type: object
        properties:
          items:
            type: array
            description: "Displays a list of all items after filtering. The values\
              \ are displayed for each name, if meaningful."
            items:
              $ref: '#/components/schemas/DirectoryQuota'
    inline_response_200_55:
      allOf:
      - description: dummy
      - allOf:
        - description: dummy
        - type: object
          properties:
            more_items_remaining:
              type: boolean
              description: Returns a value of `true` if subsequent items can be retrieved.
              example: false
            total_item_count:
              type: integer
              description: "The total number of records after applying all filter\
                \ query parameters. The `total_item_count` will be calculated if and\
                \ only if the corresponding query parameter `total_item_count` is\
                \ set to `true`. If this query parameter is not set or set to `false`,\
                \ a value of `null` will be returned."
              format: int32
        - type: object
          properties:
            continuation_token:
              type: string
              description: "Continuation token that can be provided in the `continuation_token`\
                \ query param to get the next page of data. If you use the continuation\
                \ token to page through data you are guaranteed to get all items exactly\
                \ once regardless of how items are modified. If an item is added or\
                \ deleted during the pagination then it may or may not be returned.\
                \ The continuation token is generated if the limit is less than the\
                \ remaining number of items, and the default sort is used (no sort\
                \ is specified)."
      - type: object
        properties:
          items:
            type: array
            items:
              $ref: '#/components/schemas/DirectoryService'
    inline_response_200_56:
      type: object
      properties:
        items:
          type: array
          items:
            $ref: '#/components/schemas/DirectoryService'
      example:
        items:
        - ""
        - ""
    inline_response_200_57:
      allOf:
      - description: dummy
      - allOf:
        - description: dummy
        - type: object
          properties:
            more_items_remaining:
              type: boolean
              description: Returns a value of `true` if subsequent items can be retrieved.
              example: false
            total_item_count:
              type: integer
              description: "The total number of records after applying all filter\
                \ query parameters. The `total_item_count` will be calculated if and\
                \ only if the corresponding query parameter `total_item_count` is\
                \ set to `true`. If this query parameter is not set or set to `false`,\
                \ a value of `null` will be returned."
              format: int32
        - type: object
          properties:
            continuation_token:
              type: string
              description: "Continuation token that can be provided in the `continuation_token`\
                \ query param to get the next page of data. If you use the continuation\
                \ token to page through data you are guaranteed to get all items exactly\
                \ once regardless of how items are modified. If an item is added or\
                \ deleted during the pagination then it may or may not be returned.\
                \ The continuation token is generated if the limit is less than the\
                \ remaining number of items, and the default sort is used (no sort\
                \ is specified)."
      - type: object
        properties:
          items:
            type: array
            items:
              $ref: '#/components/schemas/DirectoryServiceRole'
    inline_response_200_58:
      type: object
      properties:
        items:
          type: array
          items:
            $ref: '#/components/schemas/DirectoryServiceRole'
      example:
        items:
        - role:
            name: name
          group_base: "OU=PureGroups,OU=SANManagers"
          group: groupOfUsers
        - role:
            name: name
          group_base: "OU=PureGroups,OU=SANManagers"
          group: groupOfUsers
    inline_response_200_59:
      allOf:
      - description: dummy
      - allOf:
        - description: dummy
        - type: object
          properties:
            more_items_remaining:
              type: boolean
              description: Returns a value of `true` if subsequent items can be retrieved.
              example: false
            total_item_count:
              type: integer
              description: "The total number of records after applying all filter\
                \ query parameters. The `total_item_count` will be calculated if and\
                \ only if the corresponding query parameter `total_item_count` is\
                \ set to `true`. If this query parameter is not set or set to `false`,\
                \ a value of `null` will be returned."
              format: int32
        - type: object
          properties:
            continuation_token:
              type: string
              description: "Continuation token that can be provided in the `continuation_token`\
                \ query param to get the next page of data. If you use the continuation\
                \ token to page through data you are guaranteed to get all items exactly\
                \ once regardless of how items are modified. If an item is added or\
                \ deleted during the pagination then it may or may not be returned.\
                \ The continuation token is generated if the limit is less than the\
                \ remaining number of items, and the default sort is used (no sort\
                \ is specified)."
      - type: object
        properties:
          items:
            type: array
            items:
              $ref: '#/components/schemas/TestResultWithResource'
    inline_response_200_60:
      allOf:
      - description: dummy
      - allOf:
        - description: dummy
        - type: object
          properties:
            more_items_remaining:
              type: boolean
              description: Returns a value of `true` if subsequent items can be retrieved.
              example: false
            total_item_count:
              type: integer
              description: "The total number of records after applying all filter\
                \ query parameters. The `total_item_count` will be calculated if and\
                \ only if the corresponding query parameter `total_item_count` is\
                \ set to `true`. If this query parameter is not set or set to `false`,\
                \ a value of `null` will be returned."
              format: int32
        - type: object
          properties:
            continuation_token:
              type: string
              description: "Continuation token that can be provided in the `continuation_token`\
                \ query param to get the next page of data. If you use the continuation\
                \ token to page through data you are guaranteed to get all items exactly\
                \ once regardless of how items are modified. If an item is added or\
                \ deleted during the pagination then it may or may not be returned.\
                \ The continuation token is generated if the limit is less than the\
                \ remaining number of items, and the default sort is used (no sort\
                \ is specified)."
      - type: object
        properties:
          items:
            type: array
            description: Displays a list of all items after filtering. The values
              are displayed for each name if meaningful.
            items:
              $ref: '#/components/schemas/DirectorySnapshot'
      - properties:
          total:
            type: array
            description: "The aggregate value of all items after filtering. When applicable,\
              \ the average value is displayed instead. The values are displayed for\
              \ each field if meaningful."
            items:
              $ref: '#/components/schemas/DirectorySnapshot'
    "2_8_directorysnapshots_body":
      allOf:
      - description: dummy
      - type: object
        properties:
          client_name:
            type: string
            description: "The customizable portion of the client visible snapshot\
              \ name. A full snapshot name is constructed in the form of `DIR.CLIENT_NAME.NNN`\
              \ where `DIR` is the managed directory name, and `NNN` is a monotonically\
              \ increasing number generated by the system. The client visible snapshot\
              \ name is `CLIENT_NAME.NNN`."
          keep_for:
            type: integer
            description: "The time to keep the snapshots for, in milliseconds."
            format: int64
      - properties:
          client_name:
            type: string
            description: "The client name portion of the client visible snapshot name.\
              \ A full snapshot name is constructed in the form of `DIR.CLIENT_NAME.SUFFIX`\
              \ where `DIR` is the managed directory name, `CLIENT_NAME` is the value\
              \ of this field, and `SUFFIX` is the suffix. The client visible snapshot\
              \ name is `CLIENT_NAME.SUFFIX`."
          suffix:
            type: string
            description: "The suffix portion of the client visible snapshot name.\
              \ A full snapshot name is constructed in the form of `DIR.CLIENT_NAME.SUFFIX`\
              \ where `DIR` is the managed directory name, `CLIENT_NAME` is the client\
              \ name, and `SUFFIX` is the value of this field. The client visible\
              \ snapshot name is `CLIENT_NAME.SUFFIX`. If not specified, defaults\
              \ to a monotonically increasing number generated by the system."
    inline_response_200_61:
      type: object
      properties:
        items:
          type: array
          description: Displays a list of all items after filtering. The values are
            displayed for each name if meaningful.
          items:
            $ref: '#/components/schemas/DirectorySnapshot'
      example:
        items:
        - ""
        - ""
    api2.8directorysnapshots_policy:
      type: object
      properties:
        id:
          type: string
          description: "A globally unique, system-generated ID. The ID cannot be modified."
        name:
          type: string
          description: "The resource name, such as volume name, pod name, snapshot\
            \ name, and so on."
      description: The snapshot policy that manages this snapshot. Set to `name` or
        `id` to `""` to clear the policy.
      example: null
    "2_8_directorysnapshots_body_1":
      allOf:
      - description: dummy
      - type: object
        properties:
          destroyed:
            type: boolean
            description: "If set to `true`, destroys a resource. Once set to `true`,\
              \ the `time_remaining` value will display the amount of time left until\
              \ the destroyed resource is permanently eradicated. Before the `time_remaining`\
              \ period has elapsed, the destroyed resource can be recovered by setting\
              \ `destroyed=false`. Once the `time_remaining` period has elapsed, the\
              \ resource is permanently eradicated and can no longer be recovered."
      - type: object
        properties:
          keep_for:
            type: integer
            description: "The amount of time to keep the snapshots, in milliseconds.\
              \ Can only be set on snapshots that are not managed by any snapshot\
              \ policy. Set to `\"\"` to clear the keep_for value."
            format: int64
          policy:
            $ref: '#/components/schemas/api2.8directorysnapshots_policy'
    inline_response_200_62:
      allOf:
      - description: dummy
      - allOf:
        - description: dummy
        - type: object
          properties:
            more_items_remaining:
              type: boolean
              description: Returns a value of `true` if subsequent items can be retrieved.
              example: false
            total_item_count:
              type: integer
              description: "The total number of records after applying all filter\
                \ query parameters. The `total_item_count` will be calculated if and\
                \ only if the corresponding query parameter `total_item_count` is\
                \ set to `true`. If this query parameter is not set or set to `false`,\
                \ a value of `null` will be returned."
              format: int32
        - type: object
          properties:
            continuation_token:
              type: string
              description: "Continuation token that can be provided in the `continuation_token`\
                \ query param to get the next page of data. If you use the continuation\
                \ token to page through data you are guaranteed to get all items exactly\
                \ once regardless of how items are modified. If an item is added or\
                \ deleted during the pagination then it may or may not be returned.\
                \ The continuation token is generated if the limit is less than the\
                \ remaining number of items, and the default sort is used (no sort\
                \ is specified)."
      - type: object
        properties:
          items:
            type: array
            items:
              $ref: '#/components/schemas/DNS'
    "2_8_dns_body":
      type: object
      properties:
        domain:
          type: string
          description: Domain suffix to be appended by the appliance when performing
            DNS lookups.
          example: example.com
        nameservers:
          maxLength: 3
          type: array
          description: List of DNS server IP addresses.
          items:
            type: string
            example: 192.168.0.125
      description: Configuration information for the domain name servers.
    inline_response_200_63:
      type: object
      properties:
        items:
          type: array
          items:
            $ref: '#/components/schemas/DNS'
      example:
        items:
        - nameservers:
          - 192.168.0.125
          - 192.168.0.125
          domain: example.com
        - nameservers:
          - 192.168.0.125
          - 192.168.0.125
          domain: example.com
    inline_response_200_64:
      allOf:
      - description: dummy
      - allOf:
        - description: dummy
        - type: object
          properties:
            more_items_remaining:
              type: boolean
              description: Returns a value of `true` if subsequent items can be retrieved.
              example: false
            total_item_count:
              type: integer
              description: "The total number of records after applying all filter\
                \ query parameters. The `total_item_count` will be calculated if and\
                \ only if the corresponding query parameter `total_item_count` is\
                \ set to `true`. If this query parameter is not set or set to `false`,\
                \ a value of `null` will be returned."
              format: int32
        - type: object
          properties:
            continuation_token:
              type: string
              description: "Continuation token that can be provided in the `continuation_token`\
                \ query param to get the next page of data. If you use the continuation\
                \ token to page through data you are guaranteed to get all items exactly\
                \ once regardless of how items are modified. If an item is added or\
                \ deleted during the pagination then it may or may not be returned.\
                \ The continuation token is generated if the limit is less than the\
                \ remaining number of items, and the default sort is used (no sort\
                \ is specified)."
      - type: object
        properties:
          items:
            type: array
            items:
              $ref: '#/components/schemas/Drive'
    inline_response_200_65:
      type: object
      properties:
        items:
          type: array
          items:
            $ref: '#/components/schemas/Drive'
      example:
        items:
        - ""
        - ""
    inline_response_200_66:
      allOf:
      - description: dummy
      - allOf:
        - description: dummy
        - type: object
          properties:
            more_items_remaining:
              type: boolean
              description: Returns a value of `true` if subsequent items can be retrieved.
              example: false
            total_item_count:
              type: integer
              description: "The total number of records after applying all filter\
                \ query parameters. The `total_item_count` will be calculated if and\
                \ only if the corresponding query parameter `total_item_count` is\
                \ set to `true`. If this query parameter is not set or set to `false`,\
                \ a value of `null` will be returned."
              format: int32
        - type: object
          properties:
            continuation_token:
              type: string
              description: "Continuation token that can be provided in the `continuation_token`\
                \ query param to get the next page of data. If you use the continuation\
                \ token to page through data you are guaranteed to get all items exactly\
                \ once regardless of how items are modified. If an item is added or\
                \ deleted during the pagination then it may or may not be returned.\
                \ The continuation token is generated if the limit is less than the\
                \ remaining number of items, and the default sort is used (no sort\
                \ is specified)."
      - type: object
        properties:
          items:
            type: array
            description: Displays a list of all items after filtering. The values
              are displayed for each name if meaningful.
            items:
              $ref: '#/components/schemas/FileSystem'
    inline_response_200_67:
      type: object
      properties:
        items:
          type: array
          description: Displays a list of all items after filtering. The values are
            displayed for each name if meaningful.
          items:
            $ref: '#/components/schemas/FileSystem'
      example:
        items:
        - ""
        - ""
    inline_response_200_68:
      allOf:
      - description: dummy
      - allOf:
        - description: dummy
        - type: object
          properties:
            more_items_remaining:
              type: boolean
              description: Returns a value of `true` if subsequent items can be retrieved.
              example: false
            total_item_count:
              type: integer
              description: "The total number of records after applying all filter\
                \ query parameters. The `total_item_count` will be calculated if and\
                \ only if the corresponding query parameter `total_item_count` is\
                \ set to `true`. If this query parameter is not set or set to `false`,\
                \ a value of `null` will be returned."
              format: int32
        - type: object
          properties:
            continuation_token:
              type: string
              description: "Continuation token that can be provided in the `continuation_token`\
                \ query param to get the next page of data. If you use the continuation\
                \ token to page through data you are guaranteed to get all items exactly\
                \ once regardless of how items are modified. If an item is added or\
                \ deleted during the pagination then it may or may not be returned.\
                \ The continuation token is generated if the limit is less than the\
                \ remaining number of items, and the default sort is used (no sort\
                \ is specified)."
      - type: object
        properties:
          items:
            type: array
            items:
              $ref: '#/components/schemas/Hardware'
    "2_8_hardware_body":
      allOf:
      - description: dummy
      - type: object
        properties:
          name:
            type: string
            description: "A locally unique, system-generated name. The name cannot\
              \ be modified."
            readOnly: true
        description: |-
          A built-in resource. Many are singletons predefined by Purity (e.g., support settings). Some correspond to a piece of software, like an app, or hardware, like a controller. Others are created by the system in response to some event (e.g., alerts, audit records).
          Typically, a user can't create, delete or rename a built-in resource. A few can be created or deleted, but not renamed because the names are meaningful to Purity (e.g., VIFs, file systems, file system snapshots, volume snapshot).
      - type: object
        properties:
          identify_enabled:
            type: boolean
            description: State of an LED used to visually identify the component.
            example: true
          index:
            type: integer
            description: Number that identifies the relative position of a hardware
              component within the array.
            format: int32
            example: 1
    inline_response_200_69:
      type: object
      properties:
        items:
          type: array
          items:
            $ref: '#/components/schemas/Hardware'
      example:
        items:
        - ""
        - ""
    inline_response_200_70:
      allOf:
      - description: dummy
      - allOf:
        - description: dummy
        - type: object
          properties:
            more_items_remaining:
              type: boolean
              description: Returns a value of `true` if subsequent items can be retrieved.
              example: false
            total_item_count:
              type: integer
              description: "The total number of records after applying all filter\
                \ query parameters. The `total_item_count` will be calculated if and\
                \ only if the corresponding query parameter `total_item_count` is\
                \ set to `true`. If this query parameter is not set or set to `false`,\
                \ a value of `null` will be returned."
              format: int32
        - type: object
          properties:
            continuation_token:
              type: string
              description: "Continuation token that can be provided in the `continuation_token`\
                \ query param to get the next page of data. If you use the continuation\
                \ token to page through data you are guaranteed to get all items exactly\
                \ once regardless of how items are modified. If an item is added or\
                \ deleted during the pagination then it may or may not be returned.\
                \ The continuation token is generated if the limit is less than the\
                \ remaining number of items, and the default sort is used (no sort\
                \ is specified)."
      - type: object
        properties:
          items:
            type: array
            description: Returns a list of all items after filtering. The values are
              displayed for each name where meaningful.
            items:
              $ref: '#/components/schemas/HostGroup'
    inline_response_200_71:
      type: object
      properties:
        items:
          type: array
          description: Returns a list of all items after filtering. The values are
            displayed for each name where meaningful.
          items:
            $ref: '#/components/schemas/HostGroup'
      example:
        items:
        - ""
        - ""
    "2_8_hostgroups_body":
      allOf:
      - description: dummy
      - type: object
        properties:
          name:
            type: string
            description: The new name for the resource.
    inline_response_200_72:
      allOf:
      - description: dummy
      - allOf:
        - description: dummy
        - type: object
          properties:
            more_items_remaining:
              type: boolean
              description: Returns a value of `true` if subsequent items can be retrieved.
              example: false
            total_item_count:
              type: integer
              description: "The total number of records after applying all filter\
                \ query parameters. The `total_item_count` will be calculated if and\
                \ only if the corresponding query parameter `total_item_count` is\
                \ set to `true`. If this query parameter is not set or set to `false`,\
                \ a value of `null` will be returned."
              format: int32
        - type: object
          properties:
            continuation_token:
              type: string
              description: "Continuation token that can be provided in the `continuation_token`\
                \ query param to get the next page of data. If you use the continuation\
                \ token to page through data you are guaranteed to get all items exactly\
                \ once regardless of how items are modified. If an item is added or\
                \ deleted during the pagination then it may or may not be returned.\
                \ The continuation token is generated if the limit is less than the\
                \ remaining number of items, and the default sort is used (no sort\
                \ is specified)."
      - type: object
        properties:
          items:
            type: array
            description: Returns a list of all items after filtering. The values are
              displayed for each name where meaningful.
            items:
              $ref: '#/components/schemas/MemberNoIdAll'
    inline_response_200_73:
      type: object
      properties:
        items:
          type: array
          description: Returns a list of all items after filtering. The values are
            displayed for each name where meaningful.
          items:
            $ref: '#/components/schemas/MemberNoIdAll'
      example:
        items:
        - ""
        - ""
    inline_response_200_74:
      allOf:
      - description: dummy
      - allOf:
        - description: dummy
        - type: object
          properties:
            more_items_remaining:
              type: boolean
              description: Returns a value of `true` if subsequent items can be retrieved.
              example: false
            total_item_count:
              type: integer
              description: "The total number of records after applying all filter\
                \ query parameters. The `total_item_count` will be calculated if and\
                \ only if the corresponding query parameter `total_item_count` is\
                \ set to `true`. If this query parameter is not set or set to `false`,\
                \ a value of `null` will be returned."
              format: int32
        - type: object
          properties:
            continuation_token:
              type: string
              description: "Continuation token that can be provided in the `continuation_token`\
                \ query param to get the next page of data. If you use the continuation\
                \ token to page through data you are guaranteed to get all items exactly\
                \ once regardless of how items are modified. If an item is added or\
                \ deleted during the pagination then it may or may not be returned.\
                \ The continuation token is generated if the limit is less than the\
                \ remaining number of items, and the default sort is used (no sort\
                \ is specified)."
      - type: object
        properties:
          items:
            type: array
            description: "Performance data. If `total_only=true`, the `items` list\
              \ will be empty."
            items:
              allOf:
              - description: dummy
              - allOf:
                - description: dummy
                - type: object
                  properties:
                    bytes_per_mirrored_write:
                      minimum: 0
                      type: integer
                      description: The average I/O size per mirrored write. Measured
                        in bytes.
                      format: int64
                    bytes_per_op:
                      minimum: 0
                      type: integer
                      description: The average I/O size for both read and write (all)
                        operations.
                      format: int64
                    bytes_per_read:
                      minimum: 0
                      type: integer
                      description: The average I/O size per read. Measured in bytes.
                      format: int64
                    bytes_per_write:
                      minimum: 0
                      type: integer
                      description: The average I/O size per write. Measured in bytes.
                      format: int64
                    mirrored_write_bytes_per_sec:
                      minimum: 0
                      type: integer
                      description: The number of mirrored bytes written per second.
                      format: int64
                    mirrored_writes_per_sec:
                      minimum: 0
                      type: integer
                      description: The number of mirrored writes per second.
                      format: int64
                    qos_rate_limit_usec_per_mirrored_write_op:
                      minimum: 0
                      type: integer
                      description: The average time it takes the array to process
                        a mirrored I/O write request. Measured in microseconds.
                      format: int64
                    qos_rate_limit_usec_per_read_op:
                      minimum: 0
                      type: integer
                      description: The average time spent waiting due to QoS rate
                        limiting for a read request. Measured in microseconds.
                      format: int64
                    qos_rate_limit_usec_per_write_op:
                      minimum: 0
                      type: integer
                      description: The average time that a write I/O request spends
                        waiting as a result of the volume reaching its QoS bandwidth
                        limit. Measured in microseconds.
                      format: int64
                    queue_usec_per_mirrored_write_op:
                      minimum: 0
                      type: integer
                      description: The average time that a mirrored write I/O request
                        spends in the array waiting to be served. Measured in microseconds.
                      format: int64
                    queue_usec_per_read_op:
                      minimum: 0
                      type: integer
                      description: The average time that a read I/O request spends
                        in the array waiting to be served. Measured in microseconds.
                      format: int64
                    queue_usec_per_write_op:
                      minimum: 0
                      type: integer
                      description: The average time that a write I/O request spends
                        in the array waiting to be served. Measured in microseconds.
                      format: int64
                    read_bytes_per_sec:
                      minimum: 0
                      type: integer
                      description: The number of bytes read per second.
                      format: int64
                    reads_per_sec:
                      minimum: 0
                      type: integer
                      description: The number of read requests processed per second.
                      format: int64
                    san_usec_per_mirrored_write_op:
                      minimum: 0
                      type: integer
                      description: The average time required to transfer data from
                        the initiator to the array for a mirrored write request. Measured
                        in microseconds.
                      format: int64
                    san_usec_per_read_op:
                      minimum: 0
                      type: integer
                      description: The average time required to transfer data from
                        the array to the initiator for a read request. Measured in
                        microseconds.
                      format: int64
                    san_usec_per_write_op:
                      minimum: 0
                      type: integer
                      description: The average time required to transfer data from
                        the initiator to the array for a write request. Measured in
                        microseconds.
                      format: int64
                    service_usec_per_mirrored_write_op:
                      minimum: 0
                      type: integer
                      description: The average time required for the array to service
                        a mirrored write request. Measured in microseconds.
                      format: int64
                    service_usec_per_read_op:
                      minimum: 0
                      type: integer
                      description: The average time required for the array to service
                        a read request. Measured in microseconds.
                      format: int64
                    service_usec_per_write_op:
                      minimum: 0
                      type: integer
                      description: The average time required for the array to service
                        a write request. Measured in microseconds.
                      format: int64
                    time:
                      type: integer
                      description: The time when the sample performance data was taken.
                        Measured in milliseconds since the UNIX epoch.
                      format: int64
                    usec_per_mirrored_write_op:
                      minimum: 0
                      type: integer
                      description: "The average time it takes the array to process\
                        \ a mirrored I/O write request. Measured in microseconds.\
                        \ The average time does not include SAN time, queue time,\
                        \ or QoS rate limit time."
                      format: int64
                    usec_per_read_op:
                      minimum: 0
                      type: integer
                      description: "The average time it takes the array to process\
                        \ an I/O read request. Measured in microseconds. The average\
                        \ time does not include SAN time, queue time, or QoS rate\
                        \ limit time."
                      format: int64
                    usec_per_write_op:
                      minimum: 0
                      type: integer
                      description: "The average time it takes the array to process\
                        \ an I/O write request. Measured in microseconds. The average\
                        \ time does not include SAN time, queue time, or QoS rate\
                        \ limit time."
                      format: int64
                    write_bytes_per_sec:
                      minimum: 0
                      type: integer
                      description: The number of bytes written per second.
                      format: int64
                    writes_per_sec:
                      minimum: 0
                      type: integer
                      description: The number of write requests processed per second.
                      format: int64
                  readOnly: true
                - properties:
                    service_usec_per_read_op_cache_reduction:
                      maximum: 1
                      minimum: 0
                      type: number
                      description: "The percentage reduction in `service_usec_per_read_op`\
                        \ due to data cache hits. For example, a value of 0.25 indicates\
                        \ that the value of `service_usec_per_read_op` is 25&#37;\
                        \ lower than it would have been without any data cache hits."
                      format: float
              - type: object
                properties:
                  name:
                    type: string
                    description: A user-specified name. The name must be locally unique
                      and can be changed.
                description: "An ordinary (as opposed to built-in) resource that can\
                  \ be created, named, renamed or deleted by the user. This might\
                  \ be a virtual resource (e.g., a volume), or correspond to something\
                  \ in the environment, like a host or a server."
          total:
            type: array
            description: "The aggregate value of all items after filtering. Where\
              \ it makes more sense, the average value is displayed instead. The values\
              \ are displayed for each field where meaningful."
            items:
              allOf:
              - description: dummy
              - allOf:
                - description: dummy
                - type: object
                  properties:
                    bytes_per_mirrored_write:
                      minimum: 0
                      type: integer
                      description: The average I/O size per mirrored write. Measured
                        in bytes.
                      format: int64
                    bytes_per_op:
                      minimum: 0
                      type: integer
                      description: The average I/O size for both read and write (all)
                        operations.
                      format: int64
                    bytes_per_read:
                      minimum: 0
                      type: integer
                      description: The average I/O size per read. Measured in bytes.
                      format: int64
                    bytes_per_write:
                      minimum: 0
                      type: integer
                      description: The average I/O size per write. Measured in bytes.
                      format: int64
                    mirrored_write_bytes_per_sec:
                      minimum: 0
                      type: integer
                      description: The number of mirrored bytes written per second.
                      format: int64
                    mirrored_writes_per_sec:
                      minimum: 0
                      type: integer
                      description: The number of mirrored writes per second.
                      format: int64
                    qos_rate_limit_usec_per_mirrored_write_op:
                      minimum: 0
                      type: integer
                      description: The average time it takes the array to process
                        a mirrored I/O write request. Measured in microseconds.
                      format: int64
                    qos_rate_limit_usec_per_read_op:
                      minimum: 0
                      type: integer
                      description: The average time spent waiting due to QoS rate
                        limiting for a read request. Measured in microseconds.
                      format: int64
                    qos_rate_limit_usec_per_write_op:
                      minimum: 0
                      type: integer
                      description: The average time that a write I/O request spends
                        waiting as a result of the volume reaching its QoS bandwidth
                        limit. Measured in microseconds.
                      format: int64
                    queue_usec_per_mirrored_write_op:
                      minimum: 0
                      type: integer
                      description: The average time that a mirrored write I/O request
                        spends in the array waiting to be served. Measured in microseconds.
                      format: int64
                    queue_usec_per_read_op:
                      minimum: 0
                      type: integer
                      description: The average time that a read I/O request spends
                        in the array waiting to be served. Measured in microseconds.
                      format: int64
                    queue_usec_per_write_op:
                      minimum: 0
                      type: integer
                      description: The average time that a write I/O request spends
                        in the array waiting to be served. Measured in microseconds.
                      format: int64
                    read_bytes_per_sec:
                      minimum: 0
                      type: integer
                      description: The number of bytes read per second.
                      format: int64
                    reads_per_sec:
                      minimum: 0
                      type: integer
                      description: The number of read requests processed per second.
                      format: int64
                    san_usec_per_mirrored_write_op:
                      minimum: 0
                      type: integer
                      description: The average time required to transfer data from
                        the initiator to the array for a mirrored write request. Measured
                        in microseconds.
                      format: int64
                    san_usec_per_read_op:
                      minimum: 0
                      type: integer
                      description: The average time required to transfer data from
                        the array to the initiator for a read request. Measured in
                        microseconds.
                      format: int64
                    san_usec_per_write_op:
                      minimum: 0
                      type: integer
                      description: The average time required to transfer data from
                        the initiator to the array for a write request. Measured in
                        microseconds.
                      format: int64
                    service_usec_per_mirrored_write_op:
                      minimum: 0
                      type: integer
                      description: The average time required for the array to service
                        a mirrored write request. Measured in microseconds.
                      format: int64
                    service_usec_per_read_op:
                      minimum: 0
                      type: integer
                      description: The average time required for the array to service
                        a read request. Measured in microseconds.
                      format: int64
                    service_usec_per_write_op:
                      minimum: 0
                      type: integer
                      description: The average time required for the array to service
                        a write request. Measured in microseconds.
                      format: int64
                    time:
                      type: integer
                      description: The time when the sample performance data was taken.
                        Measured in milliseconds since the UNIX epoch.
                      format: int64
                    usec_per_mirrored_write_op:
                      minimum: 0
                      type: integer
                      description: "The average time it takes the array to process\
                        \ a mirrored I/O write request. Measured in microseconds.\
                        \ The average time does not include SAN time, queue time,\
                        \ or QoS rate limit time."
                      format: int64
                    usec_per_read_op:
                      minimum: 0
                      type: integer
                      description: "The average time it takes the array to process\
                        \ an I/O read request. Measured in microseconds. The average\
                        \ time does not include SAN time, queue time, or QoS rate\
                        \ limit time."
                      format: int64
                    usec_per_write_op:
                      minimum: 0
                      type: integer
                      description: "The average time it takes the array to process\
                        \ an I/O write request. Measured in microseconds. The average\
                        \ time does not include SAN time, queue time, or QoS rate\
                        \ limit time."
                      format: int64
                    write_bytes_per_sec:
                      minimum: 0
                      type: integer
                      description: The number of bytes written per second.
                      format: int64
                    writes_per_sec:
                      minimum: 0
                      type: integer
                      description: The number of write requests processed per second.
                      format: int64
                  readOnly: true
                - properties:
                    service_usec_per_read_op_cache_reduction:
                      maximum: 1
                      minimum: 0
                      type: number
                      description: "The percentage reduction in `service_usec_per_read_op`\
                        \ due to data cache hits. For example, a value of 0.25 indicates\
                        \ that the value of `service_usec_per_read_op` is 25&#37;\
                        \ lower than it would have been without any data cache hits."
                      format: float
              - type: object
                properties:
                  name:
                    type: string
                    description: A user-specified name. The name must be locally unique
                      and can be changed.
                description: "An ordinary (as opposed to built-in) resource that can\
                  \ be created, named, renamed or deleted by the user. This might\
                  \ be a virtual resource (e.g., a volume), or correspond to something\
                  \ in the environment, like a host or a server."
    inline_response_200_75:
      allOf:
      - description: dummy
      - allOf:
        - description: dummy
        - type: object
          properties:
            more_items_remaining:
              type: boolean
              description: Returns a value of `true` if subsequent items can be retrieved.
              example: false
            total_item_count:
              type: integer
              description: "The total number of records after applying all filter\
                \ query parameters. The `total_item_count` will be calculated if and\
                \ only if the corresponding query parameter `total_item_count` is\
                \ set to `true`. If this query parameter is not set or set to `false`,\
                \ a value of `null` will be returned."
              format: int32
        - type: object
          properties:
            continuation_token:
              type: string
              description: "Continuation token that can be provided in the `continuation_token`\
                \ query param to get the next page of data. If you use the continuation\
                \ token to page through data you are guaranteed to get all items exactly\
                \ once regardless of how items are modified. If an item is added or\
                \ deleted during the pagination then it may or may not be returned.\
                \ The continuation token is generated if the limit is less than the\
                \ remaining number of items, and the default sort is used (no sort\
                \ is specified)."
      - type: object
        properties:
          items:
            type: array
            description: "Performance data, broken down by array. If `total_only=true`,\
              \ the `items` list will be empty."
            items:
              allOf:
              - description: dummy
              - allOf:
                - description: dummy
                - allOf:
                  - description: dummy
                  - type: object
                    properties:
                      bytes_per_mirrored_write:
                        minimum: 0
                        type: integer
                        description: The average I/O size per mirrored write. Measured
                          in bytes.
                        format: int64
                      bytes_per_op:
                        minimum: 0
                        type: integer
                        description: The average I/O size for both read and write
                          (all) operations.
                        format: int64
                      bytes_per_read:
                        minimum: 0
                        type: integer
                        description: The average I/O size per read. Measured in bytes.
                        format: int64
                      bytes_per_write:
                        minimum: 0
                        type: integer
                        description: The average I/O size per write. Measured in bytes.
                        format: int64
                      mirrored_write_bytes_per_sec:
                        minimum: 0
                        type: integer
                        description: The number of mirrored bytes written per second.
                        format: int64
                      mirrored_writes_per_sec:
                        minimum: 0
                        type: integer
                        description: The number of mirrored writes per second.
                        format: int64
                      qos_rate_limit_usec_per_mirrored_write_op:
                        minimum: 0
                        type: integer
                        description: The average time it takes the array to process
                          a mirrored I/O write request. Measured in microseconds.
                        format: int64
                      qos_rate_limit_usec_per_read_op:
                        minimum: 0
                        type: integer
                        description: The average time spent waiting due to QoS rate
                          limiting for a read request. Measured in microseconds.
                        format: int64
                      qos_rate_limit_usec_per_write_op:
                        minimum: 0
                        type: integer
                        description: The average time that a write I/O request spends
                          waiting as a result of the volume reaching its QoS bandwidth
                          limit. Measured in microseconds.
                        format: int64
                      queue_usec_per_mirrored_write_op:
                        minimum: 0
                        type: integer
                        description: The average time that a mirrored write I/O request
                          spends in the array waiting to be served. Measured in microseconds.
                        format: int64
                      queue_usec_per_read_op:
                        minimum: 0
                        type: integer
                        description: The average time that a read I/O request spends
                          in the array waiting to be served. Measured in microseconds.
                        format: int64
                      queue_usec_per_write_op:
                        minimum: 0
                        type: integer
                        description: The average time that a write I/O request spends
                          in the array waiting to be served. Measured in microseconds.
                        format: int64
                      read_bytes_per_sec:
                        minimum: 0
                        type: integer
                        description: The number of bytes read per second.
                        format: int64
                      reads_per_sec:
                        minimum: 0
                        type: integer
                        description: The number of read requests processed per second.
                        format: int64
                      san_usec_per_mirrored_write_op:
                        minimum: 0
                        type: integer
                        description: The average time required to transfer data from
                          the initiator to the array for a mirrored write request.
                          Measured in microseconds.
                        format: int64
                      san_usec_per_read_op:
                        minimum: 0
                        type: integer
                        description: The average time required to transfer data from
                          the array to the initiator for a read request. Measured
                          in microseconds.
                        format: int64
                      san_usec_per_write_op:
                        minimum: 0
                        type: integer
                        description: The average time required to transfer data from
                          the initiator to the array for a write request. Measured
                          in microseconds.
                        format: int64
                      service_usec_per_mirrored_write_op:
                        minimum: 0
                        type: integer
                        description: The average time required for the array to service
                          a mirrored write request. Measured in microseconds.
                        format: int64
                      service_usec_per_read_op:
                        minimum: 0
                        type: integer
                        description: The average time required for the array to service
                          a read request. Measured in microseconds.
                        format: int64
                      service_usec_per_write_op:
                        minimum: 0
                        type: integer
                        description: The average time required for the array to service
                          a write request. Measured in microseconds.
                        format: int64
                      time:
                        type: integer
                        description: The time when the sample performance data was
                          taken. Measured in milliseconds since the UNIX epoch.
                        format: int64
                      usec_per_mirrored_write_op:
                        minimum: 0
                        type: integer
                        description: "The average time it takes the array to process\
                          \ a mirrored I/O write request. Measured in microseconds.\
                          \ The average time does not include SAN time, queue time,\
                          \ or QoS rate limit time."
                        format: int64
                      usec_per_read_op:
                        minimum: 0
                        type: integer
                        description: "The average time it takes the array to process\
                          \ an I/O read request. Measured in microseconds. The average\
                          \ time does not include SAN time, queue time, or QoS rate\
                          \ limit time."
                        format: int64
                      usec_per_write_op:
                        minimum: 0
                        type: integer
                        description: "The average time it takes the array to process\
                          \ an I/O write request. Measured in microseconds. The average\
                          \ time does not include SAN time, queue time, or QoS rate\
                          \ limit time."
                        format: int64
                      write_bytes_per_sec:
                        minimum: 0
                        type: integer
                        description: The number of bytes written per second.
                        format: int64
                      writes_per_sec:
                        minimum: 0
                        type: integer
                        description: The number of write requests processed per second.
                        format: int64
                    readOnly: true
                  - properties:
                      service_usec_per_read_op_cache_reduction:
                        maximum: 1
                        minimum: 0
                        type: number
                        description: "The percentage reduction in `service_usec_per_read_op`\
                          \ due to data cache hits. For example, a value of 0.25 indicates\
                          \ that the value of `service_usec_per_read_op` is 25&#37;\
                          \ lower than it would have been without any data cache hits."
                        format: float
                - type: object
                  properties:
                    name:
                      type: string
                      description: A user-specified name. The name must be locally
                        unique and can be changed.
                  description: "An ordinary (as opposed to built-in) resource that\
                    \ can be created, named, renamed or deleted by the user. This\
                    \ might be a virtual resource (e.g., a volume), or correspond\
                    \ to something in the environment, like a host or a server."
              - properties:
                  array:
                    type: object
                    properties:
                      id:
                        type: string
                        description: "A globally unique, system-generated ID. The\
                          \ ID cannot be modified and cannot refer to another resource."
                        readOnly: true
                      name:
                        type: string
                        description: A user-specified name. The name must be locally
                          unique and can be changed.
                    description: "An ordinary (as opposed to built-in) resource that\
                      \ can be created, named, renamed or deleted by the user. This\
                      \ might be a virtual resource (e.g., a volume), or correspond\
                      \ to something in the environment, like a host or a server."
          total:
            type: array
            description: "The aggregate value of all items after filtering. Where\
              \ it makes more sense, the average value is displayed instead. The values\
              \ are displayed for each field where meaningful."
            items:
              allOf:
              - description: dummy
              - allOf:
                - description: dummy
                - allOf:
                  - description: dummy
                  - type: object
                    properties:
                      bytes_per_mirrored_write:
                        minimum: 0
                        type: integer
                        description: The average I/O size per mirrored write. Measured
                          in bytes.
                        format: int64
                      bytes_per_op:
                        minimum: 0
                        type: integer
                        description: The average I/O size for both read and write
                          (all) operations.
                        format: int64
                      bytes_per_read:
                        minimum: 0
                        type: integer
                        description: The average I/O size per read. Measured in bytes.
                        format: int64
                      bytes_per_write:
                        minimum: 0
                        type: integer
                        description: The average I/O size per write. Measured in bytes.
                        format: int64
                      mirrored_write_bytes_per_sec:
                        minimum: 0
                        type: integer
                        description: The number of mirrored bytes written per second.
                        format: int64
                      mirrored_writes_per_sec:
                        minimum: 0
                        type: integer
                        description: The number of mirrored writes per second.
                        format: int64
                      qos_rate_limit_usec_per_mirrored_write_op:
                        minimum: 0
                        type: integer
                        description: The average time it takes the array to process
                          a mirrored I/O write request. Measured in microseconds.
                        format: int64
                      qos_rate_limit_usec_per_read_op:
                        minimum: 0
                        type: integer
                        description: The average time spent waiting due to QoS rate
                          limiting for a read request. Measured in microseconds.
                        format: int64
                      qos_rate_limit_usec_per_write_op:
                        minimum: 0
                        type: integer
                        description: The average time that a write I/O request spends
                          waiting as a result of the volume reaching its QoS bandwidth
                          limit. Measured in microseconds.
                        format: int64
                      queue_usec_per_mirrored_write_op:
                        minimum: 0
                        type: integer
                        description: The average time that a mirrored write I/O request
                          spends in the array waiting to be served. Measured in microseconds.
                        format: int64
                      queue_usec_per_read_op:
                        minimum: 0
                        type: integer
                        description: The average time that a read I/O request spends
                          in the array waiting to be served. Measured in microseconds.
                        format: int64
                      queue_usec_per_write_op:
                        minimum: 0
                        type: integer
                        description: The average time that a write I/O request spends
                          in the array waiting to be served. Measured in microseconds.
                        format: int64
                      read_bytes_per_sec:
                        minimum: 0
                        type: integer
                        description: The number of bytes read per second.
                        format: int64
                      reads_per_sec:
                        minimum: 0
                        type: integer
                        description: The number of read requests processed per second.
                        format: int64
                      san_usec_per_mirrored_write_op:
                        minimum: 0
                        type: integer
                        description: The average time required to transfer data from
                          the initiator to the array for a mirrored write request.
                          Measured in microseconds.
                        format: int64
                      san_usec_per_read_op:
                        minimum: 0
                        type: integer
                        description: The average time required to transfer data from
                          the array to the initiator for a read request. Measured
                          in microseconds.
                        format: int64
                      san_usec_per_write_op:
                        minimum: 0
                        type: integer
                        description: The average time required to transfer data from
                          the initiator to the array for a write request. Measured
                          in microseconds.
                        format: int64
                      service_usec_per_mirrored_write_op:
                        minimum: 0
                        type: integer
                        description: The average time required for the array to service
                          a mirrored write request. Measured in microseconds.
                        format: int64
                      service_usec_per_read_op:
                        minimum: 0
                        type: integer
                        description: The average time required for the array to service
                          a read request. Measured in microseconds.
                        format: int64
                      service_usec_per_write_op:
                        minimum: 0
                        type: integer
                        description: The average time required for the array to service
                          a write request. Measured in microseconds.
                        format: int64
                      time:
                        type: integer
                        description: The time when the sample performance data was
                          taken. Measured in milliseconds since the UNIX epoch.
                        format: int64
                      usec_per_mirrored_write_op:
                        minimum: 0
                        type: integer
                        description: "The average time it takes the array to process\
                          \ a mirrored I/O write request. Measured in microseconds.\
                          \ The average time does not include SAN time, queue time,\
                          \ or QoS rate limit time."
                        format: int64
                      usec_per_read_op:
                        minimum: 0
                        type: integer
                        description: "The average time it takes the array to process\
                          \ an I/O read request. Measured in microseconds. The average\
                          \ time does not include SAN time, queue time, or QoS rate\
                          \ limit time."
                        format: int64
                      usec_per_write_op:
                        minimum: 0
                        type: integer
                        description: "The average time it takes the array to process\
                          \ an I/O write request. Measured in microseconds. The average\
                          \ time does not include SAN time, queue time, or QoS rate\
                          \ limit time."
                        format: int64
                      write_bytes_per_sec:
                        minimum: 0
                        type: integer
                        description: The number of bytes written per second.
                        format: int64
                      writes_per_sec:
                        minimum: 0
                        type: integer
                        description: The number of write requests processed per second.
                        format: int64
                    readOnly: true
                  - properties:
                      service_usec_per_read_op_cache_reduction:
                        maximum: 1
                        minimum: 0
                        type: number
                        description: "The percentage reduction in `service_usec_per_read_op`\
                          \ due to data cache hits. For example, a value of 0.25 indicates\
                          \ that the value of `service_usec_per_read_op` is 25&#37;\
                          \ lower than it would have been without any data cache hits."
                        format: float
                - type: object
                  properties:
                    name:
                      type: string
                      description: A user-specified name. The name must be locally
                        unique and can be changed.
                  description: "An ordinary (as opposed to built-in) resource that\
                    \ can be created, named, renamed or deleted by the user. This\
                    \ might be a virtual resource (e.g., a volume), or correspond\
                    \ to something in the environment, like a host or a server."
              - properties:
                  array:
                    type: object
                    properties:
                      id:
                        type: string
                        description: "A globally unique, system-generated ID. The\
                          \ ID cannot be modified and cannot refer to another resource."
                        readOnly: true
                      name:
                        type: string
                        description: A user-specified name. The name must be locally
                          unique and can be changed.
                    description: "An ordinary (as opposed to built-in) resource that\
                      \ can be created, named, renamed or deleted by the user. This\
                      \ might be a virtual resource (e.g., a volume), or correspond\
                      \ to something in the environment, like a host or a server."
    inline_response_200_76:
      allOf:
      - description: dummy
      - allOf:
        - description: dummy
        - type: object
          properties:
            more_items_remaining:
              type: boolean
              description: Returns a value of `true` if subsequent items can be retrieved.
              example: false
            total_item_count:
              type: integer
              description: "The total number of records after applying all filter\
                \ query parameters. The `total_item_count` will be calculated if and\
                \ only if the corresponding query parameter `total_item_count` is\
                \ set to `true`. If this query parameter is not set or set to `false`,\
                \ a value of `null` will be returned."
              format: int32
        - type: object
          properties:
            continuation_token:
              type: string
              description: "Continuation token that can be provided in the `continuation_token`\
                \ query param to get the next page of data. If you use the continuation\
                \ token to page through data you are guaranteed to get all items exactly\
                \ once regardless of how items are modified. If an item is added or\
                \ deleted during the pagination then it may or may not be returned.\
                \ The continuation token is generated if the limit is less than the\
                \ remaining number of items, and the default sort is used (no sort\
                \ is specified)."
      - type: object
        properties:
          items:
            type: array
            items:
              $ref: '#/components/schemas/ProtectionGroupSpace'
    inline_response_200_77:
      allOf:
      - description: dummy
      - allOf:
        - description: dummy
        - type: object
          properties:
            more_items_remaining:
              type: boolean
              description: Returns a value of `true` if subsequent items can be retrieved.
              example: false
            total_item_count:
              type: integer
              description: "The total number of records after applying all filter\
                \ query parameters. The `total_item_count` will be calculated if and\
                \ only if the corresponding query parameter `total_item_count` is\
                \ set to `true`. If this query parameter is not set or set to `false`,\
                \ a value of `null` will be returned."
              format: int32
        - type: object
          properties:
            continuation_token:
              type: string
              description: "Continuation token that can be provided in the `continuation_token`\
                \ query param to get the next page of data. If you use the continuation\
                \ token to page through data you are guaranteed to get all items exactly\
                \ once regardless of how items are modified. If an item is added or\
                \ deleted during the pagination then it may or may not be returned.\
                \ The continuation token is generated if the limit is less than the\
                \ remaining number of items, and the default sort is used (no sort\
                \ is specified)."
      - type: object
        properties:
          items:
            type: array
            description: Returns a list of all items after filtering. The values are
              displayed for each name where meaningful.
            items:
              $ref: '#/components/schemas/Host'
    api2.8hosts_chap:
      type: object
      properties:
        host_password:
          type: string
          description: The host password for CHAP authentication. The password must
            be between 12 and 255 characters (inclusive) and cannot be the same as
            the target password.
        host_user:
          type: string
          description: The host username for CHAP authentication.
        target_password:
          type: string
          description: The target password for CHAP authentication. The password must
            be between 12 and 255 characters (inclusive) and cannot be the same as
            the host password.
        target_user:
          type: string
          description: The target username for CHAP authentication.
      description: Challenge-Handshake Authentication Protocol (CHAP).
      example: null
    api2.8hosts_preferred_arrays:
      type: object
      properties:
        id:
          type: string
          description: "A globally unique, system-generated ID. The ID cannot be modified."
        name:
          type: string
          description: "The resource name, such as volume name, pod name, snapshot\
            \ name, and so on."
      example: null
    "2_8_hosts_body":
      allOf:
      - description: dummy
      - type: object
        properties:
          chap:
            $ref: '#/components/schemas/api2.8hosts_chap'
          iqns:
            type: array
            description: The iSCSI qualified name (IQN) associated with the host.
            items:
              type: string
              example: iqn.2010-06.com.purestorage:linux.393d930077be2977
          nqns:
            type: array
            description: The NVMe Qualified Name (NQN) associated with the host.
            items:
              type: string
              example: nqn.2010-06.com.purestorage:flasharray.512f7bb185978505
          personality:
            type: string
            description: "Determines how the system tunes the array to ensure that\
              \ it works optimally with the host. Set `personality` to the name of\
              \ the host operating system or virtual memory system. Valid values are\
              \ `aix`, `esxi`, `hitachi-vsp`, `hpux`, `oracle-vm-server`, `solaris`,\
              \ and `vms`. If your system is not listed as one of the valid host personalities,\
              \ do not set the option. By default, the personality is not set."
          preferred_arrays:
            type: array
            description: "For synchronous replication configurations, sets a host's\
              \ preferred array to specify which array exposes active/optimized paths\
              \ to that host. Enter multiple preferred arrays in comma-separated format.\
              \ If a preferred array is set for a host, then the other arrays in the\
              \ same pod will expose active/non-optimized paths to that host. If the\
              \ host is in a host group, `preferred_arrays` cannot be set because\
              \ host groups have their own preferred arrays. On a preferred array\
              \ of a certain host, all the paths on all the ports (for both the primary\
              \ and secondary controllers) are set up as A/O (active/optimized) paths,\
              \ while on a non-preferred array, all the paths are A/N (Active/Non-optimized)\
              \ paths."
            items:
              $ref: api2.8hosts_preferred_arrays
          wwns:
            type: array
            description: The Fibre Channel World Wide Name (WWN) associated with the
              host.
            items:
              type: string
              example: 52:4A:93:70:4E:E5:68:00
    inline_response_200_78:
      type: object
      properties:
        items:
          type: array
          description: Returns a list of all items after filtering. The values are
            displayed for each name where meaningful.
          items:
            $ref: '#/components/schemas/Host'
      example:
        items:
        - ""
        - ""
    api2.8hosts_host_group:
      type: object
      properties:
        name:
          type: string
          description: "The resource name, such as volume name, pod name, snapshot\
            \ name, and so on."
      description: The host group to which the host should be associated.
      example: null
    "2_8_hosts_body_1":
      allOf:
      - description: dummy
      - type: object
        properties:
          name:
            type: string
            description: The new name for the resource.
      - type: object
        properties:
          add_iqns:
            type: array
            description: Adds the specified iSCSI Qualified Names (IQNs) to those
              already associated with the specified host.
            items:
              type: string
              description: IQNs to add.
              example: iqn.2010-06.com.purestorage:linux.393d930077be2977
          add_nqns:
            type: array
            description: Adds the specified NVMe Qualified Names (NQNs) to those already
              associated with the specified host.
            items:
              type: string
              description: NQNs to add.
              example: nqn.2010-06.com.purestorage:flasharray.512f7bb185978505
          add_wwns:
            type: array
            description: Adds the specified Fibre Channel World Wide Names (WWNs)
              to those already associated with the specified host.
            items:
              type: string
              description: WWNs to add.
              example: 52:4A:93:70:4E:E5:68:00
          chap:
            $ref: api2.8hosts_chap
          host_group:
            $ref: '#/components/schemas/api2.8hosts_host_group'
          iqns:
            type: array
            description: The iSCSI qualified name (IQN) associated with the host.
            items:
              type: string
              example: iqn.2010-06.com.purestorage:linux.393d930077be2977
          nqns:
            type: array
            description: The NVMe Qualified Name (NQN) associated with the host.
            items:
              type: string
              example: nqn.2010-06.com.purestorage:flasharray.512f7bb185978505
          personality:
            type: string
            description: "Determines how the system tunes the array to ensure that\
              \ it works optimally with the host. Set `personality` to the name of\
              \ the host operating system or virtual memory system. Valid values are\
              \ `aix`, `esxi`, `hitachi-vsp`, `hpux`, `oracle-vm-server`, `solaris`,\
              \ and `vms`. If your system is not listed as one of the valid host personalities,\
              \ do not set the option. By default, the personality is not set."
          preferred_arrays:
            type: array
            description: "For synchronous replication configurations, sets a host's\
              \ preferred array to specify which array exposes active/optimized paths\
              \ to that host. Enter multiple preferred arrays in comma-separated format.\
              \ If a preferred array is set for a host, then the other arrays in the\
              \ same pod will expose active/non-optimized paths to that host. If the\
              \ host is in a host group, `preferred_arrays` cannot be set because\
              \ host groups have their own preferred arrays. On a preferred array\
              \ of a certain host, all the paths on all the ports (for both the primary\
              \ and secondary controllers) are set up as A/O (active/optimized) paths,\
              \ while on a non-preferred array, all the paths are A/N (Active/Non-optimized)\
              \ paths."
            items:
              $ref: api2.8hosts_preferred_arrays
          remove_iqns:
            type: array
            description: Disassociates the specified iSCSI Qualified Names (IQNs)
              from the specified host.
            items:
              type: string
              description: IQNs to remove.
              example: iqn.2010-06.com.purestorage:linux.393d930077be2977
          remove_nqns:
            type: array
            description: Disassociates the specified NVMe Qualified Names (NQNs) from
              the specified host.
            items:
              type: string
              description: NQNs to remove.
              example: nqn.2010-06.com.purestorage:flasharray.512f7bb185978505
          remove_wwns:
            type: array
            description: Disassociates the specified Fibre Channel World Wide Names
              (WWNs) from the specified host.
            items:
              type: string
              description: WWNs to remove.
              example: 52:4A:93:70:4E:E5:68:00
          wwns:
            type: array
            description: The Fibre Channel World Wide Name (WWN) associated with the
              host.
            items:
              type: string
              example: 52:4A:93:70:4E:E5:68:00
    inline_response_200_79:
      allOf:
      - description: dummy
      - allOf:
        - description: dummy
        - type: object
          properties:
            more_items_remaining:
              type: boolean
              description: Returns a value of `true` if subsequent items can be retrieved.
              example: false
            total_item_count:
              type: integer
              description: "The total number of records after applying all filter\
                \ query parameters. The `total_item_count` will be calculated if and\
                \ only if the corresponding query parameter `total_item_count` is\
                \ set to `true`. If this query parameter is not set or set to `false`,\
                \ a value of `null` will be returned."
              format: int32
        - type: object
          properties:
            continuation_token:
              type: string
              description: "Continuation token that can be provided in the `continuation_token`\
                \ query param to get the next page of data. If you use the continuation\
                \ token to page through data you are guaranteed to get all items exactly\
                \ once regardless of how items are modified. If an item is added or\
                \ deleted during the pagination then it may or may not be returned.\
                \ The continuation token is generated if the limit is less than the\
                \ remaining number of items, and the default sort is used (no sort\
                \ is specified)."
      - type: object
        properties:
          items:
            type: array
            description: A list of entries indicating count and percentage of I/O
              operations across various data paths between the host and the array.
            items:
              $ref: '#/components/schemas/HostPerformanceBalance'
    inline_response_200_80:
      allOf:
      - description: dummy
      - allOf:
        - description: dummy
        - type: object
          properties:
            more_items_remaining:
              type: boolean
              description: Returns a value of `true` if subsequent items can be retrieved.
              example: false
            total_item_count:
              type: integer
              description: "The total number of records after applying all filter\
                \ query parameters. The `total_item_count` will be calculated if and\
                \ only if the corresponding query parameter `total_item_count` is\
                \ set to `true`. If this query parameter is not set or set to `false`,\
                \ a value of `null` will be returned."
              format: int32
        - type: object
          properties:
            continuation_token:
              type: string
              description: "Continuation token that can be provided in the `continuation_token`\
                \ query param to get the next page of data. If you use the continuation\
                \ token to page through data you are guaranteed to get all items exactly\
                \ once regardless of how items are modified. If an item is added or\
                \ deleted during the pagination then it may or may not be returned.\
                \ The continuation token is generated if the limit is less than the\
                \ remaining number of items, and the default sort is used (no sort\
                \ is specified)."
      - type: object
        properties:
          items:
            type: array
            items:
              $ref: '#/components/schemas/KMIP'
    inline_response_200_81:
      type: object
      properties:
        items:
          type: array
          items:
            $ref: '#/components/schemas/KMIP'
      example:
        items:
        - ""
        - ""
    inline_response_200_82:
      allOf:
      - description: dummy
      - allOf:
        - description: dummy
        - type: object
          properties:
            more_items_remaining:
              type: boolean
              description: Returns a value of `true` if subsequent items can be retrieved.
              example: false
            total_item_count:
              type: integer
              description: "The total number of records after applying all filter\
                \ query parameters. The `total_item_count` will be calculated if and\
                \ only if the corresponding query parameter `total_item_count` is\
                \ set to `true`. If this query parameter is not set or set to `false`,\
                \ a value of `null` will be returned."
              format: int32
        - type: object
          properties:
            continuation_token:
              type: string
              description: "Continuation token that can be provided in the `continuation_token`\
                \ query param to get the next page of data. If you use the continuation\
                \ token to page through data you are guaranteed to get all items exactly\
                \ once regardless of how items are modified. If an item is added or\
                \ deleted during the pagination then it may or may not be returned.\
                \ The continuation token is generated if the limit is less than the\
                \ remaining number of items, and the default sort is used (no sort\
                \ is specified)."
      - type: object
        properties:
          items:
            type: array
            items:
              $ref: '#/components/schemas/KMIPTestResult'
    inline_response_200_83:
      allOf:
      - description: dummy
      - allOf:
        - description: dummy
        - type: object
          properties:
            more_items_remaining:
              type: boolean
              description: Returns a value of `true` if subsequent items can be retrieved.
              example: false
            total_item_count:
              type: integer
              description: "The total number of records after applying all filter\
                \ query parameters. The `total_item_count` will be calculated if and\
                \ only if the corresponding query parameter `total_item_count` is\
                \ set to `true`. If this query parameter is not set or set to `false`,\
                \ a value of `null` will be returned."
              format: int32
        - type: object
          properties:
            continuation_token:
              type: string
              description: "Continuation token that can be provided in the `continuation_token`\
                \ query param to get the next page of data. If you use the continuation\
                \ token to page through data you are guaranteed to get all items exactly\
                \ once regardless of how items are modified. If an item is added or\
                \ deleted during the pagination then it may or may not be returned.\
                \ The continuation token is generated if the limit is less than the\
                \ remaining number of items, and the default sort is used (no sort\
                \ is specified)."
      - type: object
        properties:
          items:
            type: array
            items:
              $ref: '#/components/schemas/MaintenanceWindow'
    "2_8_maintenancewindows_body":
      allOf:
      - description: dummy
      - type: object
        properties:
          timeout:
            maximum: 86400000
            minimum: 0
            type: integer
            description: "The specified length of time that alerts are suppressed\
              \ during a maintenance window, measured in milliseconds. The maintenance\
              \ window timeout value must be between `60000` (1 minute) and `86400000`\
              \ (24 hours). The value entered is rounded down to the nearest minute.\
              \ The `names` and `timeout` parameters must be set together, and the\
              \ `names` parameter must be set to `environment`."
            format: int32
            example: 3600000
    inline_response_200_84:
      type: object
      properties:
        items:
          type: array
          items:
            $ref: '#/components/schemas/MaintenanceWindow'
      example:
        items:
        - ""
        - ""
    inline_response_200_85:
      allOf:
      - description: dummy
      - allOf:
        - description: dummy
        - type: object
          properties:
            more_items_remaining:
              type: boolean
              description: Returns a value of `true` if subsequent items can be retrieved.
              example: false
            total_item_count:
              type: integer
              description: "The total number of records after applying all filter\
                \ query parameters. The `total_item_count` will be calculated if and\
                \ only if the corresponding query parameter `total_item_count` is\
                \ set to `true`. If this query parameter is not set or set to `false`,\
                \ a value of `null` will be returned."
              format: int32
        - type: object
          properties:
            continuation_token:
              type: string
              description: "Continuation token that can be provided in the `continuation_token`\
                \ query param to get the next page of data. If you use the continuation\
                \ token to page through data you are guaranteed to get all items exactly\
                \ once regardless of how items are modified. If an item is added or\
                \ deleted during the pagination then it may or may not be returned.\
                \ The continuation token is generated if the limit is less than the\
                \ remaining number of items, and the default sort is used (no sort\
                \ is specified)."
      - type: object
        properties:
          items:
            type: array
            items:
              $ref: '#/components/schemas/NetworkInterface'
    api2.8networkinterfaces_eth_subinterfaces:
      type: object
      properties:
        name:
          type: string
          description: "The resource name, such as volume name, pod name, snapshot\
            \ name, and so on."
      readOnly: true
      example: null
    api2.8networkinterfaces_eth_subnet:
      type: object
      properties:
        name:
          type: string
          description: "The resource name, such as volume name, pod name, snapshot\
            \ name, and so on."
      description: Subnet that is associated with the specified network interface.
      example: null
    api2.8networkinterfaces_eth:
      type: object
      properties:
        address:
          type: string
          description: The IPv4 or IPv6 address to be associated with the specified
            network interface.
        subinterfaces:
          type: array
          description: List of network interfaces configured to be a subinterface
            of the specified network interface.
          items:
            $ref: api2.8networkinterfaces_eth_subinterfaces
        subnet:
          $ref: '#/components/schemas/api2.8networkinterfaces_eth_subnet'
        subtype:
          type: string
          description: "The subtype of the specified network interface. Only interfaces\
            \ of subtype `virtual` and `lacp_bond` can be created. Configurable on\
            \ POST only. Valid values are `failover_bond`, `lacp_bond`, `physical`,\
            \ and `virtual`."
      description: Ethernet network interface properties.
      example: null
    "2_8_networkinterfaces_body":
      allOf:
      - description: dummy
      - type: object
        properties:
          name:
            type: string
            description: "A locally unique, system-generated name. The name cannot\
              \ be modified."
            readOnly: true
        description: |-
          A built-in resource. Many are singletons predefined by Purity (e.g., support settings). Some correspond to a piece of software, like an app, or hardware, like a controller. Others are created by the system in response to some event (e.g., alerts, audit records).
          Typically, a user can't create, delete or rename a built-in resource. A few can be created or deleted, but not renamed because the names are meaningful to Purity (e.g., VIFs, file systems, file system snapshots, volume snapshot).
      - type: object
        properties:
          eth:
            $ref: '#/components/schemas/api2.8networkinterfaces_eth'
          services:
            type: array
            description: The services provided by the specified network interface
              or Fibre Channel port.
            items:
              type: string
              description: "Valid values include `iscsi`, `management`, `nvme-fc`,\
                \ `nvme-roce`, `replication`, and `scsi-fc`."
    inline_response_200_86:
      type: object
      properties:
        items:
          type: array
          items:
            $ref: '#/components/schemas/NetworkInterface'
      example:
        items:
        - ""
        - ""
    api2.8networkinterfaces_eth_1:
      type: object
      properties:
        add_subinterfaces:
          type: array
          description: Child devices to be added to the specified bond interface.
          items:
            $ref: api2.8networkinterfaces_eth_subinterfaces
        address:
          type: string
          description: The IPv4 or IPv6 address to be associated with the specified
            network interface.
        gateway:
          type: string
          description: The IPv4 or IPv6 address of the gateway through which the specified
            network interface is to communicate with the network.
        mtu:
          type: integer
          description: Maximum message transfer unit (packet) size for the network
            interface in bytes. MTU setting cannot exceed the MTU of the corresponding
            physical interface.
          format: int32
        netmask:
          type: string
          description: "Netmask of the specified network interface that, when combined\
            \ with the address of the interface, determines the network address of\
            \ the interface."
        remove_subinterfaces:
          type: array
          description: Child devices to be removed from the specified bond interface.
          items:
            $ref: api2.8networkinterfaces_eth_subinterfaces
        subinterfaces:
          type: array
          description: Child devices to be added to the specified bond interface.
          items:
            $ref: api2.8networkinterfaces_eth_subinterfaces
        subnet:
          $ref: api2.8networkinterfaces_eth_subnet
      description: Ethernet network interface properties.
      example: null
    "2_8_networkinterfaces_body_1":
      allOf:
      - description: dummy
      - type: object
        properties:
          enabled:
            type: boolean
            description: Returns a value of `true` if the specified network interface
              or Fibre Channel port is enabled. Returns a value of `false` if the
              specified network interface or Fibre Channel port is disabled.
          eth:
            $ref: '#/components/schemas/api2.8networkinterfaces_eth_1'
          override_npiv_check:
            type: boolean
            description: N-Port ID Virtualization (NPIV) requires a balanced configuration
              of Fibre Channel ports configured for SCSI on both controllers. Enabling
              or Disabling a Fibre Channel port configured for SCSI might cause the
              NPIV status to change from enabled to disabled or vice versa. Set this
              option to proceed with enabling or disabling the port.
          services:
            type: array
            description: The services provided by the specified network interface
              or Fibre Channel port.
            items:
              type: string
              description: "Valid values include `iscsi`, `management`, `nvme-fc`,\
                \ `nvme-roce`, `replication`, and `scsi-fc`."
    inline_response_200_87:
      allOf:
      - description: dummy
      - allOf:
        - description: dummy
        - type: object
          properties:
            more_items_remaining:
              type: boolean
              description: Returns a value of `true` if subsequent items can be retrieved.
              example: false
            total_item_count:
              type: integer
              description: "The total number of records after applying all filter\
                \ query parameters. The `total_item_count` will be calculated if and\
                \ only if the corresponding query parameter `total_item_count` is\
                \ set to `true`. If this query parameter is not set or set to `false`,\
                \ a value of `null` will be returned."
              format: int32
        - type: object
          properties:
            continuation_token:
              type: string
              description: "Continuation token that can be provided in the `continuation_token`\
                \ query param to get the next page of data. If you use the continuation\
                \ token to page through data you are guaranteed to get all items exactly\
                \ once regardless of how items are modified. If an item is added or\
                \ deleted during the pagination then it may or may not be returned.\
                \ The continuation token is generated if the limit is less than the\
                \ remaining number of items, and the default sort is used (no sort\
                \ is specified)."
      - type: object
        properties:
          items:
            type: array
            description: A list of performance objects.
            items:
              $ref: '#/components/schemas/NetworkInterfacePerformance'
          total:
            type: array
            description: "The aggregate value of all items after filtering. Where\
              \ it makes more sense, the average value is displayed instead. The values\
              \ are displayed for each field where meaningful."
            items:
              $ref: '#/components/schemas/NetworkInterfacePerformance'
    inline_response_200_88:
      allOf:
      - description: dummy
      - allOf:
        - description: dummy
        - type: object
          properties:
            more_items_remaining:
              type: boolean
              description: Returns a value of `true` if subsequent items can be retrieved.
              example: false
            total_item_count:
              type: integer
              description: "The total number of records after applying all filter\
                \ query parameters. The `total_item_count` will be calculated if and\
                \ only if the corresponding query parameter `total_item_count` is\
                \ set to `true`. If this query parameter is not set or set to `false`,\
                \ a value of `null` will be returned."
              format: int32
        - type: object
          properties:
            continuation_token:
              type: string
              description: "Continuation token that can be provided in the `continuation_token`\
                \ query param to get the next page of data. If you use the continuation\
                \ token to page through data you are guaranteed to get all items exactly\
                \ once regardless of how items are modified. If an item is added or\
                \ deleted during the pagination then it may or may not be returned.\
                \ The continuation token is generated if the limit is less than the\
                \ remaining number of items, and the default sort is used (no sort\
                \ is specified)."
      - type: object
        properties:
          items:
            type: array
            items:
              $ref: '#/components/schemas/Offload'
      - properties:
          total:
            type: array
            description: "The aggregate value of all items after filtering. Where\
              \ it makes more sense, the average value is displayed instead. The values\
              \ are displayed for each field where meaningful."
            items:
              $ref: '#/components/schemas/Offload'
    api2.8offloads_azure:
      type: object
      properties:
        container_name:
          type: string
          description: "The name of the container in the Azure Blob storage account\
            \ to where the data will be offloaded. The name must be a valid DNS name.\
            \ If not specified, defaults to `offload`."
        account_name:
          type: string
          description: The name of the existing Azure Blob storage account.
        secret_access_key:
          type: string
          description: "The secret access key that goes with the account name (`account_name`)\
            \ of the Azure Blob storage account. The secret access key is only accepted\
            \ when creating the connection between the array and the Azure Blob storage\
            \ account. The `account_name` and `container_name`, and `secret_access_key`\
            \ parameters must be set together."
      description: Microsoft Azure Blob storage settings.
      example: null
    api2.8offloads_googlecloud:
      type: object
      properties:
        access_key_id:
          type: string
          description: "The access key ID of the Google Cloud account used to create\
            \ a connection between the array and a Google Cloud offload target. The\
            \ access key ID is 24 characters in length and is only accepted when creating\
            \ the connection between the array and the Google Cloud offload target.\
            \ The `access_key_id`, `secret_access_key`, and `bucket` parameters must\
            \ be set together."
        bucket:
          type: string
          description: "The name of the Google Cloud Storage bucket to which the data\
            \ will be offloaded. Grant basic read and write access permissions to\
            \ the bucket and verify that the bucket is empty of all objects. The `access_key_id`,\
            \ `secret_access_key`, and `bucket` parameters must be set together."
        secret_access_key:
          type: string
          description: "The secret access key that goes with the access key ID of\
            \ the Google Cloud account. The secret access key is 40 characters in\
            \ length is only accepted when creating the connection between the array\
            \ and the Google Cloud offload target. The `access_key_id`, `secret_access_key`,\
            \ and `bucket` parameters must be set together."
      description: Google Cloud Storage settings.
      example: null
    api2.8offloads_nfs:
      type: object
      properties:
        address:
          type: string
          description: "The hostname or IP address of the NFS server to where the\
            \ data will be offloaded. An array can be connected to one offload target\
            \ at a time, while multiple arrays can be connected to the same offload\
            \ target. If the protection group is in a stretched pod, for high availability,\
            \ connect both arrays in the stretched pod to the offload target."
        mount_options:
          type: string
          description: "The custom mount options on the NFS server. Enter multiple\
            \ mount options in comma-separated format. Valid values include `port`,\
            \ `rsize`, `wsize`, `nfsvers`, and `tcp` or `udp`. These mount options\
            \ are common to all NFS file systems."
        mount_point:
          type: string
          description: "The mount point of the NFS export on the NFS server. For example,\
            \ `/mnt`. The `access_key_id`, `secret_access_key`, and `bucket` parameters\
            \ must be set together."
      description: NFS settings.
      example: null
    api2.8offloads_s3:
      type: object
      properties:
        access_key_id:
          type: string
          description: "The access key ID of the AWS account used to create a connection\
            \ between the array and an Amazon S3 offload target. The access key ID\
            \ is 20 characters in length and is only accepted when creating the connection\
            \ between the array and the S3 offload target. The `access_key_id`, `secret_access_key`,\
            \ and `bucket` parameters must be set together."
        bucket:
          type: string
          description: "The name of the Amazon S3 bucket to where the data will be\
            \ offloaded. Grant basic read and write ACL permissions to the bucket,\
            \ and enable default (server-side) encryption for the bucket. Also verify\
            \ that the bucket is empty of all objects and does not have any lifecycle\
            \ policies. The `access_key_id`, `secret_access_key`, and `bucket` parameters\
            \ must be set together."
        placement_strategy:
          type: string
          description: "The storage placement strategy used for the dynamic placement\
            \ of data in an Amazon S3 offload target. Valid values are `aws-intelligent-tiering`,\
            \ `aws-standard-class`, and `retention-based`. If set to `aws-intelligent-tiering`,\
            \ data is stored in the Amazon S3 INTELLIGENT_TIERING storage class regardless\
            \ of the retention period. If set to `aws-standard-access`, the data is\
            \ stored in the Amazon S3 STANDARD storage class regardless of the retention\
            \ period. If set to `retention-based`, the data for protection groups\
            \ with longer retention periods is placed in the Amazon S3 STANDARD_IA\
            \ (infrequently accessed, more cost-effective) storage class. All other\
            \ data is placed in the STANDARD storage class. When the array is initially\
            \ connected to an S3 offload target, `placement_strategy` is automatically\
            \ set to `retention-based`. The `placement_strategy` and `uri` parameters\
            \ cannot be set together."
        secret_access_key:
          type: string
          description: "The secret access key that goes with the access key ID (`access_key_id`)\
            \ of the AWS account. The secret access key is 40 characters in length\
            \ is only accepted when creating the connection between the array and\
            \ the S3 offload target. The `access_key_id`, `secret_access_key`, and\
            \ `bucket` parameters must be set together."
        uri:
          type: string
          description: The URI used to create a connection between the array and a
            non-AWS S3 offload target. Storage placement strategies are not supported
            for non-AWS S3 offload targets. Both the HTTP and HTTPS protocols are
            allowed.
          example: http://arrayname:port/
      description: S3 settings.
      example: null
    "2_8_offloads_body":
      type: object
      properties:
        azure:
          $ref: '#/components/schemas/api2.8offloads_azure'
        google-cloud:
          $ref: '#/components/schemas/api2.8offloads_googlecloud'
        nfs:
          $ref: '#/components/schemas/api2.8offloads_nfs'
        s3:
          $ref: '#/components/schemas/api2.8offloads_s3'
    inline_response_200_89:
      type: object
      properties:
        items:
          type: array
          items:
            $ref: '#/components/schemas/Offload'
      example:
        items:
        - ""
        - ""
    inline_response_200_90:
      allOf:
      - description: dummy
      - allOf:
        - description: dummy
        - type: object
          properties:
            more_items_remaining:
              type: boolean
              description: Returns a value of `true` if subsequent items can be retrieved.
              example: false
            total_item_count:
              type: integer
              description: "The total number of records after applying all filter\
                \ query parameters. The `total_item_count` will be calculated if and\
                \ only if the corresponding query parameter `total_item_count` is\
                \ set to `true`. If this query parameter is not set or set to `false`,\
                \ a value of `null` will be returned."
              format: int32
        - type: object
          properties:
            continuation_token:
              type: string
              description: "Continuation token that can be provided in the `continuation_token`\
                \ query param to get the next page of data. If you use the continuation\
                \ token to page through data you are guaranteed to get all items exactly\
                \ once regardless of how items are modified. If an item is added or\
                \ deleted during the pagination then it may or may not be returned.\
                \ The continuation token is generated if the limit is less than the\
                \ remaining number of items, and the default sort is used (no sort\
                \ is specified)."
      - type: object
        properties:
          items:
            type: array
            items:
              $ref: '#/components/schemas/Pod'
      - properties:
          total:
            type: array
            description: "The aggregate value of all items after filtering. When applicable,\
              \ the average value is displayed instead. The values are displayed for\
              \ each field if meaningful."
            items:
              $ref: '#/components/schemas/Pod'
    api2.8pods_source:
      type: object
      properties:
        id:
          type: string
          description: "A globally unique, system-generated ID. The ID cannot be modified."
        name:
          type: string
          description: "The resource name, such as volume name, pod name, snapshot\
            \ name, and so on."
      description: The source pod from where data is cloned to create the new pod.
      example: null
    "2_8_pods_body":
      allOf:
      - description: dummy
      - type: object
        properties:
          id:
            type: string
            description: "A globally unique, system-generated ID. The ID cannot be\
              \ modified and cannot refer to another resource."
            readOnly: true
          name:
            type: string
            description: "A locally unique, system-generated name. The name cannot\
              \ be modified."
            readOnly: true
        description: |-
          A built-in resource. Many are singletons predefined by Purity (e.g., support settings). Some correspond to a piece of software, like an app, or hardware, like a controller. Others are created by the system in response to some event (e.g., alerts, audit records).
          Typically, a user can't create, delete or rename a built-in resource. A few can be created or deleted, but not renamed because the names are meaningful to Purity (e.g., VIFs).
      - type: object
        properties:
          failover_preferences:
            type: array
            description: "Determines which array within a stretched pod should be\
              \ given priority to stay online should the arrays ever lose contact\
              \ with each other. The current array and any peer arrays that are connected\
              \ to the current array for synchronous replication can be added to a\
              \ pod for failover preference. By default, `failover_preferences=null`,\
              \ meaning no arrays have been configured for failover preference. Enter\
              \ multiple arrays in comma-separated format. To clear the list of failover\
              \ preferences, set to an empty list `[]`."
            items:
              $ref: api2.8hosts_preferred_arrays
          source:
            $ref: '#/components/schemas/api2.8pods_source'
        description: "A pod is an administrative domain, a data container, and a namespace\
          \ for volumes and protection groups."
    inline_response_200_91:
      type: object
      properties:
        items:
          type: array
          items:
            $ref: '#/components/schemas/Pod'
      example:
        items:
        - ""
        - ""
    "2_8_pods_body_1":
      allOf:
      - description: dummy
      - allOf:
        - description: dummy
        - type: object
          properties:
            id:
              type: string
              description: "A globally unique, system-generated ID. The ID cannot\
                \ be modified and cannot refer to another resource."
              readOnly: true
            name:
              type: string
              description: A user-specified name. The name must be locally unique
                and can be changed.
          description: "An ordinary (as opposed to built-in) resource that can be\
            \ created, named, renamed or deleted by the user. This might be a virtual\
            \ resource (e.g., a volume), or correspond to something in the environment,\
            \ like a host or a server."
        - type: object
          properties:
            destroyed:
              type: boolean
              description: "If set to `true`, the pod has been destroyed and is pending\
                \ eradication. The `time_remaining` value displays the amount of time\
                \ left until the destroyed pod is permanently eradicated. A pod can\
                \ only be destroyed if it is empty, so before destroying a pod, ensure\
                \ all volumes and protection groups inside the pod have been either\
                \ moved out of the pod or destroyed. A stretched pod cannot be destroyed\
                \ unless you unstretch it first. Before the `time_remaining` period\
                \ has elapsed, the destroyed pod can be recovered by setting `destroyed=false`.\
                \ Once the `time_remaining` period has elapsed, the pod is permanently\
                \ eradicated and can no longer be recovered."
            failover_preferences:
              type: array
              description: "Determines which array within a stretched pod should be\
                \ given priority to stay online should the arrays ever lose contact\
                \ with each other. The current array and any peer arrays that are\
                \ connected to the current array for synchronous replication can be\
                \ added to a pod for failover preference. By default, `failover_preferences=null`,\
                \ meaning no arrays have been configured for failover preference.\
                \ Enter multiple arrays in comma-separated format."
              items:
                type: object
                properties:
                  id:
                    type: string
                    description: "A globally unique, system-generated ID. The ID cannot\
                      \ be modified."
                  name:
                    type: string
                    description: "The resource name, such as volume name, pod name,\
                      \ snapshot name, and so on."
            mediator:
              type: string
              description: "Sets the URL of the mediator for this pod, replacing the\
                \ URL of the current mediator. By default, the Pure1 Cloud Mediator\
                \ (`purestorage`) serves as the mediator."
              example: https://mediator.cloud-support.purestorage.com
          description: "A pod is an administrative domain, a data container, and a\
            \ namespace for volumes and protection groups."
      - properties:
          requested_promotion_state:
            type: string
            description: "Patch `requested_promotion_state` to `demoted` to demote\
              \ the pod so that it can be used as a link target for continuous replication\
              \ between pods. Demoted pods do not accept write requests, and a destroyed\
              \ version of the pod with `undo-demote` appended to the pod name is\
              \ created on the array with the state of the pod when it was in the\
              \ promoted state. Patch `requested_promotion_state` to `promoted` to\
              \ start the process of promoting the pod. The `promotion_status` indicates\
              \ when the pod has been successfully promoted. Promoted pods stop incorporating\
              \ replicated data from the source pod and start accepting write requests.\
              \ The replication process does not stop when the source pod continues\
              \ replicating data to the pod. The space consumed by the unique replicated\
              \ data is tracked by the `space.journal` field of the pod."
    inline_response_200_92:
      allOf:
      - description: dummy
      - allOf:
        - description: dummy
        - type: object
          properties:
            more_items_remaining:
              type: boolean
              description: Returns a value of `true` if subsequent items can be retrieved.
              example: false
            total_item_count:
              type: integer
              description: "The total number of records after applying all filter\
                \ query parameters. The `total_item_count` will be calculated if and\
                \ only if the corresponding query parameter `total_item_count` is\
                \ set to `true`. If this query parameter is not set or set to `false`,\
                \ a value of `null` will be returned."
              format: int32
        - type: object
          properties:
            continuation_token:
              type: string
              description: "Continuation token that can be provided in the `continuation_token`\
                \ query param to get the next page of data. If you use the continuation\
                \ token to page through data you are guaranteed to get all items exactly\
                \ once regardless of how items are modified. If an item is added or\
                \ deleted during the pagination then it may or may not be returned.\
                \ The continuation token is generated if the limit is less than the\
                \ remaining number of items, and the default sort is used (no sort\
                \ is specified)."
      - type: object
        properties:
          items:
            type: array
            description: "Returns a list of all items after filtering. The values\
              \ are displayed for each name where meaningful. If `total_only=true`,\
              \ the `items` list will be empty."
            items:
              $ref: '#/components/schemas/Member'
    inline_response_200_93:
      type: object
      properties:
        items:
          type: array
          description: "Returns a list of all items after filtering. The values are\
            \ displayed for each name where meaningful. If `total_only=true`, the\
            \ `items` list will be empty."
          items:
            $ref: '#/components/schemas/Member'
      example:
        items:
        - ""
        - ""
    inline_response_200_94:
      allOf:
      - description: dummy
      - allOf:
        - description: dummy
        - type: object
          properties:
            more_items_remaining:
              type: boolean
              description: Returns a value of `true` if subsequent items can be retrieved.
              example: false
            total_item_count:
              type: integer
              description: "The total number of records after applying all filter\
                \ query parameters. The `total_item_count` will be calculated if and\
                \ only if the corresponding query parameter `total_item_count` is\
                \ set to `true`. If this query parameter is not set or set to `false`,\
                \ a value of `null` will be returned."
              format: int32
        - type: object
          properties:
            continuation_token:
              type: string
              description: "Continuation token that can be provided in the `continuation_token`\
                \ query param to get the next page of data. If you use the continuation\
                \ token to page through data you are guaranteed to get all items exactly\
                \ once regardless of how items are modified. If an item is added or\
                \ deleted during the pagination then it may or may not be returned.\
                \ The continuation token is generated if the limit is less than the\
                \ remaining number of items, and the default sort is used (no sort\
                \ is specified)."
      - type: object
        properties:
          items:
            type: array
            description: "Performance data. If `total_only=true`, the `items` list\
              \ will be empty."
            items:
              $ref: '#/components/schemas/PodPerformance'
          total:
            type: array
            description: "The aggregate value of all items after filtering. Where\
              \ it makes more sense, the average value is displayed instead. The values\
              \ are displayed for each field where meaningful."
            items:
              $ref: '#/components/schemas/PodPerformance'
    inline_response_200_95:
      allOf:
      - description: dummy
      - allOf:
        - description: dummy
        - type: object
          properties:
            more_items_remaining:
              type: boolean
              description: Returns a value of `true` if subsequent items can be retrieved.
              example: false
            total_item_count:
              type: integer
              description: "The total number of records after applying all filter\
                \ query parameters. The `total_item_count` will be calculated if and\
                \ only if the corresponding query parameter `total_item_count` is\
                \ set to `true`. If this query parameter is not set or set to `false`,\
                \ a value of `null` will be returned."
              format: int32
        - type: object
          properties:
            continuation_token:
              type: string
              description: "Continuation token that can be provided in the `continuation_token`\
                \ query param to get the next page of data. If you use the continuation\
                \ token to page through data you are guaranteed to get all items exactly\
                \ once regardless of how items are modified. If an item is added or\
                \ deleted during the pagination then it may or may not be returned.\
                \ The continuation token is generated if the limit is less than the\
                \ remaining number of items, and the default sort is used (no sort\
                \ is specified)."
      - type: object
        properties:
          items:
            type: array
            description: "Performance data, broken down by array. If `total_only=true`,\
              \ the `items` list will be empty."
            items:
              $ref: '#/components/schemas/VolumePerformanceByArray'
          total:
            type: array
            description: "The aggregate value of all items after filtering. Where\
              \ it makes more sense, the average value is displayed instead. The values\
              \ are displayed for each field where meaningful."
            items:
              $ref: '#/components/schemas/VolumePerformanceByArray'
    inline_response_200_96:
      allOf:
      - description: dummy
      - allOf:
        - description: dummy
        - type: object
          properties:
            more_items_remaining:
              type: boolean
              description: Returns a value of `true` if subsequent items can be retrieved.
              example: false
            total_item_count:
              type: integer
              description: "The total number of records after applying all filter\
                \ query parameters. The `total_item_count` will be calculated if and\
                \ only if the corresponding query parameter `total_item_count` is\
                \ set to `true`. If this query parameter is not set or set to `false`,\
                \ a value of `null` will be returned."
              format: int32
        - type: object
          properties:
            continuation_token:
              type: string
              description: "Continuation token that can be provided in the `continuation_token`\
                \ query param to get the next page of data. If you use the continuation\
                \ token to page through data you are guaranteed to get all items exactly\
                \ once regardless of how items are modified. If an item is added or\
                \ deleted during the pagination then it may or may not be returned.\
                \ The continuation token is generated if the limit is less than the\
                \ remaining number of items, and the default sort is used (no sort\
                \ is specified)."
      - type: object
        properties:
          items:
            type: array
            description: A list of pod performance replication objects.
            items:
              $ref: '#/components/schemas/PodPerformanceReplication'
          total:
            type: array
            description: "The aggregate value of all items after filtering. For real-time\
              \ performance, the values are aggregated for the latest timestamp. For\
              \ historical performance, the values are aggregated for each timestamp\
              \ from `start_time` to `end_time`. When applicable, the average value\
              \ is displayed instead. The values are displayed for each field if meaningful."
            items:
              $ref: '#/components/schemas/PodPerformanceReplication'
    inline_response_200_97:
      allOf:
      - description: dummy
      - allOf:
        - description: dummy
        - type: object
          properties:
            more_items_remaining:
              type: boolean
              description: Returns a value of `true` if subsequent items can be retrieved.
              example: false
            total_item_count:
              type: integer
              description: "The total number of records after applying all filter\
                \ query parameters. The `total_item_count` will be calculated if and\
                \ only if the corresponding query parameter `total_item_count` is\
                \ set to `true`. If this query parameter is not set or set to `false`,\
                \ a value of `null` will be returned."
              format: int32
        - type: object
          properties:
            continuation_token:
              type: string
              description: "Continuation token that can be provided in the `continuation_token`\
                \ query param to get the next page of data. If you use the continuation\
                \ token to page through data you are guaranteed to get all items exactly\
                \ once regardless of how items are modified. If an item is added or\
                \ deleted during the pagination then it may or may not be returned.\
                \ The continuation token is generated if the limit is less than the\
                \ remaining number of items, and the default sort is used (no sort\
                \ is specified)."
      - type: object
        properties:
          items:
            type: array
            description: "A list of pod performance replication objects, arranged\
              \ by array."
            items:
              $ref: '#/components/schemas/PodPerformanceReplicationByArray'
          total:
            type: array
            description: "The aggregate value of all items after filtering. When applicable,\
              \ the average value is displayed instead. The values are displayed for\
              \ each field if meaningful."
            items:
              $ref: '#/components/schemas/PodPerformanceReplicationByArray'
    inline_response_200_98:
      allOf:
      - description: dummy
      - allOf:
        - description: dummy
        - type: object
          properties:
            more_items_remaining:
              type: boolean
              description: Returns a value of `true` if subsequent items can be retrieved.
              example: false
            total_item_count:
              type: integer
              description: "The total number of records after applying all filter\
                \ query parameters. The `total_item_count` will be calculated if and\
                \ only if the corresponding query parameter `total_item_count` is\
                \ set to `true`. If this query parameter is not set or set to `false`,\
                \ a value of `null` will be returned."
              format: int32
        - type: object
          properties:
            continuation_token:
              type: string
              description: "Continuation token that can be provided in the `continuation_token`\
                \ query param to get the next page of data. If you use the continuation\
                \ token to page through data you are guaranteed to get all items exactly\
                \ once regardless of how items are modified. If an item is added or\
                \ deleted during the pagination then it may or may not be returned.\
                \ The continuation token is generated if the limit is less than the\
                \ remaining number of items, and the default sort is used (no sort\
                \ is specified)."
      - type: object
        properties:
          items:
            type: array
            description: "Displays a list of all items after filtering. The values\
              \ are displayed for each name where meaningful. If `total_only=true`,\
              \ the `items` list will be empty."
            items:
              $ref: '#/components/schemas/PodSpace'
          total:
            type: array
            description: "The aggregate value of all items after filtering. When applicable,\
              \ the average value is displayed instead. The values are displayed for\
              \ each field if meaningful."
            items:
              $ref: '#/components/schemas/PodSpace'
    inline_response_200_99:
      allOf:
      - description: dummy
      - allOf:
        - description: dummy
        - type: object
          properties:
            more_items_remaining:
              type: boolean
              description: Returns a value of `true` if subsequent items can be retrieved.
              example: false
            total_item_count:
              type: integer
              description: "The total number of records after applying all filter\
                \ query parameters. The `total_item_count` will be calculated if and\
                \ only if the corresponding query parameter `total_item_count` is\
                \ set to `true`. If this query parameter is not set or set to `false`,\
                \ a value of `null` will be returned."
              format: int32
        - type: object
          properties:
            continuation_token:
              type: string
              description: "Continuation token that can be provided in the `continuation_token`\
                \ query param to get the next page of data. If you use the continuation\
                \ token to page through data you are guaranteed to get all items exactly\
                \ once regardless of how items are modified. If an item is added or\
                \ deleted during the pagination then it may or may not be returned.\
                \ The continuation token is generated if the limit is less than the\
                \ remaining number of items, and the default sort is used (no sort\
                \ is specified)."
      - type: object
        properties:
          items:
            type: array
            description: A list of pod replica link objects.
            items:
              $ref: '#/components/schemas/PodReplicaLink'
    inline_response_200_100:
      type: object
      properties:
        items:
          type: array
          description: A list of pod replica link objects.
          items:
            $ref: '#/components/schemas/PodReplicaLink'
      example:
        items:
        - ""
        - ""
    "2_8_podreplicalinks_body":
      type: object
      properties:
        paused:
          type: boolean
          description: "Returns a value of `true` if the replica link is to be created\
            \ in a `paused` state. Returns a value of `false` if the replica link\
            \ is to be created not in a `paused` state. If not specified, defaults\
            \ to `false`."
    inline_response_200_101:
      allOf:
      - description: dummy
      - allOf:
        - description: dummy
        - type: object
          properties:
            more_items_remaining:
              type: boolean
              description: Returns a value of `true` if subsequent items can be retrieved.
              example: false
            total_item_count:
              type: integer
              description: "The total number of records after applying all filter\
                \ query parameters. The `total_item_count` will be calculated if and\
                \ only if the corresponding query parameter `total_item_count` is\
                \ set to `true`. If this query parameter is not set or set to `false`,\
                \ a value of `null` will be returned."
              format: int32
        - type: object
          properties:
            continuation_token:
              type: string
              description: "Continuation token that can be provided in the `continuation_token`\
                \ query param to get the next page of data. If you use the continuation\
                \ token to page through data you are guaranteed to get all items exactly\
                \ once regardless of how items are modified. If an item is added or\
                \ deleted during the pagination then it may or may not be returned.\
                \ The continuation token is generated if the limit is less than the\
                \ remaining number of items, and the default sort is used (no sort\
                \ is specified)."
      - type: object
        properties:
          items:
            type: array
            description: A list of pod replica link lag objects.
            items:
              $ref: '#/components/schemas/PodReplicaLinkLag'
    inline_response_200_102:
      allOf:
      - description: dummy
      - allOf:
        - description: dummy
        - type: object
          properties:
            more_items_remaining:
              type: boolean
              description: Returns a value of `true` if subsequent items can be retrieved.
              example: false
            total_item_count:
              type: integer
              description: "The total number of records after applying all filter\
                \ query parameters. The `total_item_count` will be calculated if and\
                \ only if the corresponding query parameter `total_item_count` is\
                \ set to `true`. If this query parameter is not set or set to `false`,\
                \ a value of `null` will be returned."
              format: int32
        - type: object
          properties:
            continuation_token:
              type: string
              description: "Continuation token that can be provided in the `continuation_token`\
                \ query param to get the next page of data. If you use the continuation\
                \ token to page through data you are guaranteed to get all items exactly\
                \ once regardless of how items are modified. If an item is added or\
                \ deleted during the pagination then it may or may not be returned.\
                \ The continuation token is generated if the limit is less than the\
                \ remaining number of items, and the default sort is used (no sort\
                \ is specified)."
      - type: object
        properties:
          items:
            type: array
            description: A list of pod replica link performance objects.
            items:
              $ref: '#/components/schemas/PodReplicaLinkPerformance'
          total:
            type: array
            description: "The aggregate value of all items after filtering. For real-time\
              \ performance, the values are aggregated for the latest timestamp. For\
              \ historical performance, the values are aggregated for each timestamp\
              \ from `start_time` to `end_time`. Where it makes more sense, the average\
              \ value is displayed instead. The values are displayed for each field\
              \ where meaningful."
            items:
              $ref: '#/components/schemas/PodReplicaLinkPerformance'
    inline_response_200_103:
      allOf:
      - description: dummy
      - allOf:
        - description: dummy
        - type: object
          properties:
            more_items_remaining:
              type: boolean
              description: Returns a value of `true` if subsequent items can be retrieved.
              example: false
            total_item_count:
              type: integer
              description: "The total number of records after applying all filter\
                \ query parameters. The `total_item_count` will be calculated if and\
                \ only if the corresponding query parameter `total_item_count` is\
                \ set to `true`. If this query parameter is not set or set to `false`,\
                \ a value of `null` will be returned."
              format: int32
        - type: object
          properties:
            continuation_token:
              type: string
              description: "Continuation token that can be provided in the `continuation_token`\
                \ query param to get the next page of data. If you use the continuation\
                \ token to page through data you are guaranteed to get all items exactly\
                \ once regardless of how items are modified. If an item is added or\
                \ deleted during the pagination then it may or may not be returned.\
                \ The continuation token is generated if the limit is less than the\
                \ remaining number of items, and the default sort is used (no sort\
                \ is specified)."
      - type: object
        properties:
          items:
            type: array
            description: Displays a list of all items after filtering. The values
              are displayed for each name if meaningful.
            items:
              $ref: '#/components/schemas/Policy'
    inline_response_200_104:
      type: object
      properties:
        items:
          type: array
          description: Displays a list of all items after filtering. The values are
            displayed for each name if meaningful.
          items:
            $ref: '#/components/schemas/Policy'
      example:
        items:
        - ""
        - ""
    inline_response_200_105:
      allOf:
      - description: dummy
      - allOf:
        - description: dummy
        - type: object
          properties:
            more_items_remaining:
              type: boolean
              description: Returns a value of `true` if subsequent items can be retrieved.
              example: false
            total_item_count:
              type: integer
              description: "The total number of records after applying all filter\
                \ query parameters. The `total_item_count` will be calculated if and\
                \ only if the corresponding query parameter `total_item_count` is\
                \ set to `true`. If this query parameter is not set or set to `false`,\
                \ a value of `null` will be returned."
              format: int32
        - type: object
          properties:
            continuation_token:
              type: string
              description: "Continuation token that can be provided in the `continuation_token`\
                \ query param to get the next page of data. If you use the continuation\
                \ token to page through data you are guaranteed to get all items exactly\
                \ once regardless of how items are modified. If an item is added or\
                \ deleted during the pagination then it may or may not be returned.\
                \ The continuation token is generated if the limit is less than the\
                \ remaining number of items, and the default sort is used (no sort\
                \ is specified)."
      - type: object
        properties:
          items:
            type: array
            description: Displays a list of all items after filtering. The values
              are displayed for each name if meaningful.
            items:
              $ref: '#/components/schemas/PolicyRuleNfsClient'
    api2.8policiesnfsclientrules_rules:
      type: object
      properties:
        access:
          type: string
          description: Specifies access control for the export. Valid values are `root-squash`
            and `no-root-squash`. The default is `root-squash` if not specified.
        client:
          type: string
          description: "Specifies which clients are given access. Accepted notation\
            \ includes IP, IP mask, or hostname. The default is `*` if not specified."
        permission:
          type: string
          description: Specifies which read-write client access permissions are allowed
            for the export. Valid values are `rw` and `ro`. The default is `rw` if
            not specified.
      example: null
    nfs_clientrules_body:
      type: object
      properties:
        rules:
          type: array
          description: A list of NFS policy rules to create.
          items:
            $ref: api2.8policiesnfsclientrules_rules
    inline_response_200_106:
      type: object
      properties:
        items:
          type: array
          description: Displays a list of all items after filtering. The values are
            displayed for each name if meaningful.
          items:
            $ref: '#/components/schemas/PolicyRuleNfsClient'
      example:
        items:
        - access: access
          name: name
          client: client
          permission: permission
          policy: ""
        - access: access
          name: name
          client: client
          permission: permission
          policy: ""
    inline_response_200_107:
      allOf:
      - description: dummy
      - allOf:
        - description: dummy
        - type: object
          properties:
            more_items_remaining:
              type: boolean
              description: Returns a value of `true` if subsequent items can be retrieved.
              example: false
            total_item_count:
              type: integer
              description: "The total number of records after applying all filter\
                \ query parameters. The `total_item_count` will be calculated if and\
                \ only if the corresponding query parameter `total_item_count` is\
                \ set to `true`. If this query parameter is not set or set to `false`,\
                \ a value of `null` will be returned."
              format: int32
        - type: object
          properties:
            continuation_token:
              type: string
              description: "Continuation token that can be provided in the `continuation_token`\
                \ query param to get the next page of data. If you use the continuation\
                \ token to page through data you are guaranteed to get all items exactly\
                \ once regardless of how items are modified. If an item is added or\
                \ deleted during the pagination then it may or may not be returned.\
                \ The continuation token is generated if the limit is less than the\
                \ remaining number of items, and the default sort is used (no sort\
                \ is specified)."
      - type: object
        properties:
          items:
            type: array
            description: "Returns a list of all items after filtering. The values\
              \ are displayed for each name, if meaningful."
            items:
              $ref: '#/components/schemas/PolicyRuleQuota'
    api2.8policiesquotarules_rules:
      type: object
      properties:
        enforced:
          type: boolean
          description: "If set to `true`, this rule describes an enforced quota. An\
            \ out-of-space warning is issued if logical space usage exceeds the limit\
            \ value described in this rule. If set to `false`, this rule describes\
            \ an unenforced quota. Alerts and/or notifications are issued when logical\
            \ space usage exceeds the limit value described in this rule. If not specified,\
            \ defaults to `false`."
        quota_limit:
          type: integer
          description: Logical space limit of the quota (in bytes) assigned by the
            rule. This value cannot be set to 0.
          format: int64
        notifications:
          type: string
          description: "Targets to notify when usage approaches the quota limit. The\
            \ list of notification targets is a comma-separated string. Valid values\
            \ are `user`, and `group`. If not specified, notification targets are\
            \ not assigned for the rule."
      example: null
    quota_rules_body:
      type: object
      properties:
        rules:
          type: array
          description: A list of quota policy rules to create.
          items:
            $ref: api2.8policiesquotarules_rules
    inline_response_200_108:
      type: object
      properties:
        items:
          type: array
          description: "Returns a list of all items after filtering. The values are\
            \ displayed for each name, if meaningful."
          items:
            $ref: '#/components/schemas/PolicyRuleQuota'
      example:
        items:
        - quota_limit: 0
          enforced: true
          name: name
          notifications: notifications
          policy: ""
        - quota_limit: 0
          enforced: true
          name: name
          notifications: notifications
          policy: ""
    inline_response_200_109:
      allOf:
      - description: dummy
      - allOf:
        - description: dummy
        - type: object
          properties:
            more_items_remaining:
              type: boolean
              description: Returns a value of `true` if subsequent items can be retrieved.
              example: false
            total_item_count:
              type: integer
              description: "The total number of records after applying all filter\
                \ query parameters. The `total_item_count` will be calculated if and\
                \ only if the corresponding query parameter `total_item_count` is\
                \ set to `true`. If this query parameter is not set or set to `false`,\
                \ a value of `null` will be returned."
              format: int32
        - type: object
          properties:
            continuation_token:
              type: string
              description: "Continuation token that can be provided in the `continuation_token`\
                \ query param to get the next page of data. If you use the continuation\
                \ token to page through data you are guaranteed to get all items exactly\
                \ once regardless of how items are modified. If an item is added or\
                \ deleted during the pagination then it may or may not be returned.\
                \ The continuation token is generated if the limit is less than the\
                \ remaining number of items, and the default sort is used (no sort\
                \ is specified)."
      - type: object
        properties:
          items:
            type: array
            description: Returns a list of all items after filtering. The values are
              displayed for each name where meaningful.
            items:
              $ref: '#/components/schemas/PolicySmb'
    policies_smb_body:
      allOf:
      - description: dummy
      - type: object
        properties:
          enabled:
            type: boolean
            description: "If set to `true`, enables the policy. If set to `false`,\
              \ disables the policy."
      - properties:
          access_based_enumeration_enabled:
            type: boolean
            description: "If set to `true`, enables access based enumeration on the\
              \ policy. When access based enumeration is enabled on a policy, files\
              \ and folders within exports that are attached to the policy will be\
              \ hidden from users who do not have permission to view them. If not\
              \ specified, defaults to `false`."
    inline_response_200_110:
      type: object
      properties:
        items:
          type: array
          description: Returns a list of all items after filtering. The values are
            displayed for each name where meaningful.
          items:
            $ref: '#/components/schemas/PolicySmb'
      example:
        items:
        - ""
        - ""
    policies_smb_body_1:
      allOf:
      - description: dummy
      - allOf:
        - description: dummy
        - type: object
          properties:
            name:
              type: string
              description: The new name for the resource.
        - properties:
            enabled:
              type: boolean
              description: "If set to `true`, enables the policy. If set to `false`,\
                \ disables the policy."
      - properties:
          access_based_enumeration_enabled:
            type: boolean
            description: "If set to `true`, enables access based enumeration on the\
              \ policy. When access based enumeration is enabled on a policy, files\
              \ and folders within exports that are attached to the policy will be\
              \ hidden from users who do not have permission to view them."
    inline_response_200_111:
      allOf:
      - description: dummy
      - allOf:
        - description: dummy
        - type: object
          properties:
            more_items_remaining:
              type: boolean
              description: Returns a value of `true` if subsequent items can be retrieved.
              example: false
            total_item_count:
              type: integer
              description: "The total number of records after applying all filter\
                \ query parameters. The `total_item_count` will be calculated if and\
                \ only if the corresponding query parameter `total_item_count` is\
                \ set to `true`. If this query parameter is not set or set to `false`,\
                \ a value of `null` will be returned."
              format: int32
        - type: object
          properties:
            continuation_token:
              type: string
              description: "Continuation token that can be provided in the `continuation_token`\
                \ query param to get the next page of data. If you use the continuation\
                \ token to page through data you are guaranteed to get all items exactly\
                \ once regardless of how items are modified. If an item is added or\
                \ deleted during the pagination then it may or may not be returned.\
                \ The continuation token is generated if the limit is less than the\
                \ remaining number of items, and the default sort is used (no sort\
                \ is specified)."
      - type: object
        properties:
          items:
            type: array
            description: Returns a list of all items after filtering. The values are
              displayed for each name where meaningful.
            items:
              $ref: '#/components/schemas/PolicyRuleSmbClient'
    api2.8policiessmbclientrules_rules:
      type: object
      properties:
        anonymous_access_allowed:
          type: boolean
          description: "Specifies whether access to information is allowed for anonymous\
            \ users. If not specified, defaults to `false`."
        client:
          type: string
          description: "Specifies which clients are given access. Accepted notation,\
            \ IP, IP mask, or hostname. The default is `*` if not specified."
        smb_encryption_required:
          type: boolean
          description: "Specifies whether the remote client is required to use SMB\
            \ encryption. If not specified, defaults to `false`."
      example: null
    smb_clientrules_body:
      type: object
      properties:
        rules:
          type: array
          description: A list of SMB policy rules to create.
          items:
            $ref: api2.8policiessmbclientrules_rules
    inline_response_200_112:
      type: object
      properties:
        items:
          type: array
          description: Returns a list of all items after filtering. The values are
            displayed for each name where meaningful.
          items:
            $ref: '#/components/schemas/PolicyRuleSmbClient'
      example:
        items:
        - anonymous_access_allowed: true
          name: name
          client: client
          smb_encryption_required: true
          policy: ""
        - anonymous_access_allowed: true
          name: name
          client: client
          smb_encryption_required: true
          policy: ""
    inline_response_200_113:
      allOf:
      - description: dummy
      - allOf:
        - description: dummy
        - type: object
          properties:
            more_items_remaining:
              type: boolean
              description: Returns a value of `true` if subsequent items can be retrieved.
              example: false
            total_item_count:
              type: integer
              description: "The total number of records after applying all filter\
                \ query parameters. The `total_item_count` will be calculated if and\
                \ only if the corresponding query parameter `total_item_count` is\
                \ set to `true`. If this query parameter is not set or set to `false`,\
                \ a value of `null` will be returned."
              format: int32
        - type: object
          properties:
            continuation_token:
              type: string
              description: "Continuation token that can be provided in the `continuation_token`\
                \ query param to get the next page of data. If you use the continuation\
                \ token to page through data you are guaranteed to get all items exactly\
                \ once regardless of how items are modified. If an item is added or\
                \ deleted during the pagination then it may or may not be returned.\
                \ The continuation token is generated if the limit is less than the\
                \ remaining number of items, and the default sort is used (no sort\
                \ is specified)."
      - type: object
        properties:
          items:
            type: array
            description: Returns a list of all items after filtering. The values are
              displayed for each name where meaningful.
            items:
              $ref: '#/components/schemas/PolicyRuleSnapshot'
    api2.8policiessnapshotrules_rules:
      type: object
      properties:
        at:
          type: integer
          description: "Specifies the number of milliseconds since midnight at which\
            \ to take a snapshot. The `at` value can only be set to an hour and must\
            \ be between 0 and 82800000, inclusive. The `at` value can only be set\
            \ on the rule with the smallest `every` value. The `at` value cannot be\
            \ set if the `every` value is not measured in days. The `at` value can\
            \ only be set for at most one rule in the same policy."
          format: int64
        client_name:
          type: string
          description: "The snapshot client name. A full snapshot name is constructed\
            \ in the form of `DIR.CLIENT_NAME.SUFFIX` where `DIR` is the managed directory\
            \ name, `CLIENT_NAME` is the snapshot client name, and `SUFFIX` is a monotonically\
            \ increasing number generated by the system. The client visible snapshot\
            \ name is `CLIENT_NAME.SUFFIX`."
        every:
          type: integer
          description: "Specifies the interval between snapshots, in milliseconds.\
            \ The `every` value for all rules must be multiples of one another. The\
            \ `every` value must be unique for each rule in the same policy. The `every`\
            \ value must be between 5 minutes and 1 year."
          format: int64
        keep_for:
          type: integer
          description: "Specifies the period that snapshots are retained before they\
            \ are eradicated, in milliseconds. The `keep_for` value cannot be less\
            \ than the `every` value of the rule. The `keep_for` value must be unique\
            \ for each rule in the same policy. The `keep_for` value must be between\
            \ 5 minutes and 1 year. The `keep_for` value cannot be less than the `keep_for`\
            \ value of any rule in the same policy with a smaller `every` value."
          format: int64
      example: null
    snapshot_rules_body:
      type: object
      properties:
        rules:
          type: array
          description: A list of snapshot policy rules to create.
          items:
            $ref: api2.8policiessnapshotrules_rules
    inline_response_200_114:
      type: object
      properties:
        items:
          type: array
          description: Returns a list of all items after filtering. The values are
            displayed for each name where meaningful.
          items:
            $ref: '#/components/schemas/PolicyRuleSnapshot'
      example:
        items:
        - at: 0
          name: name
          keep_for: 1
          client_name: client_name
          every: 6
          policy: ""
        - at: 0
          name: name
          keep_for: 1
          client_name: client_name
          every: 6
          policy: ""
    inline_response_200_115:
      allOf:
      - description: dummy
      - allOf:
        - description: dummy
        - type: object
          properties:
            more_items_remaining:
              type: boolean
              description: Returns a value of `true` if subsequent items can be retrieved.
              example: false
            total_item_count:
              type: integer
              description: "The total number of records after applying all filter\
                \ query parameters. The `total_item_count` will be calculated if and\
                \ only if the corresponding query parameter `total_item_count` is\
                \ set to `true`. If this query parameter is not set or set to `false`,\
                \ a value of `null` will be returned."
              format: int32
        - type: object
          properties:
            continuation_token:
              type: string
              description: "Continuation token that can be provided in the `continuation_token`\
                \ query param to get the next page of data. If you use the continuation\
                \ token to page through data you are guaranteed to get all items exactly\
                \ once regardless of how items are modified. If an item is added or\
                \ deleted during the pagination then it may or may not be returned.\
                \ The continuation token is generated if the limit is less than the\
                \ remaining number of items, and the default sort is used (no sort\
                \ is specified)."
      - type: object
        properties:
          items:
            type: array
            items:
              $ref: '#/components/schemas/Port'
    inline_response_200_116:
      allOf:
      - description: dummy
      - allOf:
        - description: dummy
        - type: object
          properties:
            more_items_remaining:
              type: boolean
              description: Returns a value of `true` if subsequent items can be retrieved.
              example: false
            total_item_count:
              type: integer
              description: "The total number of records after applying all filter\
                \ query parameters. The `total_item_count` will be calculated if and\
                \ only if the corresponding query parameter `total_item_count` is\
                \ set to `true`. If this query parameter is not set or set to `false`,\
                \ a value of `null` will be returned."
              format: int32
        - type: object
          properties:
            continuation_token:
              type: string
              description: "Continuation token that can be provided in the `continuation_token`\
                \ query param to get the next page of data. If you use the continuation\
                \ token to page through data you are guaranteed to get all items exactly\
                \ once regardless of how items are modified. If an item is added or\
                \ deleted during the pagination then it may or may not be returned.\
                \ The continuation token is generated if the limit is less than the\
                \ remaining number of items, and the default sort is used (no sort\
                \ is specified)."
      - type: object
        properties:
          items:
            type: array
            items:
              $ref: '#/components/schemas/PortInitiator'
    inline_response_200_117:
      allOf:
      - description: dummy
      - allOf:
        - description: dummy
        - type: object
          properties:
            more_items_remaining:
              type: boolean
              description: Returns a value of `true` if subsequent items can be retrieved.
              example: false
            total_item_count:
              type: integer
              description: "The total number of records after applying all filter\
                \ query parameters. The `total_item_count` will be calculated if and\
                \ only if the corresponding query parameter `total_item_count` is\
                \ set to `true`. If this query parameter is not set or set to `false`,\
                \ a value of `null` will be returned."
              format: int32
        - type: object
          properties:
            continuation_token:
              type: string
              description: "Continuation token that can be provided in the `continuation_token`\
                \ query param to get the next page of data. If you use the continuation\
                \ token to page through data you are guaranteed to get all items exactly\
                \ once regardless of how items are modified. If an item is added or\
                \ deleted during the pagination then it may or may not be returned.\
                \ The continuation token is generated if the limit is less than the\
                \ remaining number of items, and the default sort is used (no sort\
                \ is specified)."
      - type: object
        properties:
          items:
            type: array
            description: "Returns a list of all items after filtering. The values\
              \ are displayed for each name where meaningful. If `total_only=true`,\
              \ the `items` list will be empty."
            items:
              $ref: '#/components/schemas/ProtectionGroup'
      - properties:
          total:
            type: array
            description: "The aggregate value of all items after filtering. Where\
              \ it makes more sense, the average value is displayed instead. The values\
              \ are displayed for each field where meaningful."
            items:
              $ref: '#/components/schemas/ProtectionGroup'
    inline_response_200_118:
      type: object
      properties:
        items:
          type: array
          description: "Returns a list of all items after filtering. The values are\
            \ displayed for each name where meaningful. If `total_only=true`, the\
            \ `items` list will be empty."
          items:
            $ref: '#/components/schemas/ProtectionGroup'
      example:
        items:
        - ""
        - ""
    inline_response_200_119:
      allOf:
      - description: dummy
      - allOf:
        - description: dummy
        - type: object
          properties:
            more_items_remaining:
              type: boolean
              description: Returns a value of `true` if subsequent items can be retrieved.
              example: false
            total_item_count:
              type: integer
              description: "The total number of records after applying all filter\
                \ query parameters. The `total_item_count` will be calculated if and\
                \ only if the corresponding query parameter `total_item_count` is\
                \ set to `true`. If this query parameter is not set or set to `false`,\
                \ a value of `null` will be returned."
              format: int32
        - type: object
          properties:
            continuation_token:
              type: string
              description: "Continuation token that can be provided in the `continuation_token`\
                \ query param to get the next page of data. If you use the continuation\
                \ token to page through data you are guaranteed to get all items exactly\
                \ once regardless of how items are modified. If an item is added or\
                \ deleted during the pagination then it may or may not be returned.\
                \ The continuation token is generated if the limit is less than the\
                \ remaining number of items, and the default sort is used (no sort\
                \ is specified)."
      - properties:
          items:
            type: array
            description: A list of protection group performance objects.
            items:
              $ref: '#/components/schemas/ProtectionGroupPerformance'
    inline_response_200_120:
      allOf:
      - description: dummy
      - allOf:
        - description: dummy
        - type: object
          properties:
            more_items_remaining:
              type: boolean
              description: Returns a value of `true` if subsequent items can be retrieved.
              example: false
            total_item_count:
              type: integer
              description: "The total number of records after applying all filter\
                \ query parameters. The `total_item_count` will be calculated if and\
                \ only if the corresponding query parameter `total_item_count` is\
                \ set to `true`. If this query parameter is not set or set to `false`,\
                \ a value of `null` will be returned."
              format: int32
        - type: object
          properties:
            continuation_token:
              type: string
              description: "Continuation token that can be provided in the `continuation_token`\
                \ query param to get the next page of data. If you use the continuation\
                \ token to page through data you are guaranteed to get all items exactly\
                \ once regardless of how items are modified. If an item is added or\
                \ deleted during the pagination then it may or may not be returned.\
                \ The continuation token is generated if the limit is less than the\
                \ remaining number of items, and the default sort is used (no sort\
                \ is specified)."
      - properties:
          items:
            type: array
            description: "List performance data, broken down by array."
            items:
              $ref: '#/components/schemas/ProtectionGroupPerformanceByArray'
    inline_response_200_121:
      allOf:
      - description: dummy
      - allOf:
        - description: dummy
        - type: object
          properties:
            more_items_remaining:
              type: boolean
              description: Returns a value of `true` if subsequent items can be retrieved.
              example: false
            total_item_count:
              type: integer
              description: "The total number of records after applying all filter\
                \ query parameters. The `total_item_count` will be calculated if and\
                \ only if the corresponding query parameter `total_item_count` is\
                \ set to `true`. If this query parameter is not set or set to `false`,\
                \ a value of `null` will be returned."
              format: int32
        - type: object
          properties:
            continuation_token:
              type: string
              description: "Continuation token that can be provided in the `continuation_token`\
                \ query param to get the next page of data. If you use the continuation\
                \ token to page through data you are guaranteed to get all items exactly\
                \ once regardless of how items are modified. If an item is added or\
                \ deleted during the pagination then it may or may not be returned.\
                \ The continuation token is generated if the limit is less than the\
                \ remaining number of items, and the default sort is used (no sort\
                \ is specified)."
      - type: object
        properties:
          items:
            type: array
            description: Returns a list of all items after filtering. The values are
              displayed for each name where meaningful.
            items:
              allOf:
              - description: dummy
              - type: object
                properties:
                  group:
                    type: object
                    properties:
                      name:
                        type: string
                        description: "The resource name, such as volume name, pod\
                          \ name, snapshot name, and so on."
                  member:
                    type: object
                    properties:
                      name:
                        type: string
                        description: "The resource name, such as volume name, pod\
                          \ name, snapshot name, and so on."
                  allowed:
                    type: boolean
                    description: "If set to `true`, the target array has allowed the\
                      \ source array to replicate protection group data to the target\
                      \ array. If set to `false`, the target array has not allowed\
                      \ the source array to replicate protection group data to the\
                      \ target."
                    example: true
    inline_response_200_122:
      type: object
      properties:
        items:
          type: array
          description: Returns a list of all items after filtering. The values are
            displayed for each name where meaningful.
          items:
            allOf:
            - description: dummy
            - type: object
              properties:
                group:
                  type: object
                  properties:
                    name:
                      type: string
                      description: "The resource name, such as volume name, pod name,\
                        \ snapshot name, and so on."
                member:
                  type: object
                  properties:
                    name:
                      type: string
                      description: "The resource name, such as volume name, pod name,\
                        \ snapshot name, and so on."
                allowed:
                  type: boolean
                  description: "If set to `true`, the target array has allowed the\
                    \ source array to replicate protection group data to the target\
                    \ array. If set to `false`, the target array has not allowed the\
                    \ source array to replicate protection group data to the target."
                  example: true
      example:
        items:
        - ""
        - ""
    protectiongroups_targets_body:
      allOf:
      - description: dummy
      - type: object
        properties:
          protection_group:
            $ref: api2.8networkinterfaces_eth_subinterfaces
          target:
            $ref: api2.8networkinterfaces_eth_subinterfaces
          allowed:
            type: boolean
            description: "If set to `true`, the target array has allowed the source\
              \ array to replicate protection group data to the target array. If set\
              \ to `false`, the target array has not allowed the source array to replicate\
              \ protection group data to the target. target-protection-group"
            example: true
    inline_response_200_123:
      allOf:
      - description: dummy
      - allOf:
        - description: dummy
        - type: object
          properties:
            more_items_remaining:
              type: boolean
              description: Returns a value of `true` if subsequent items can be retrieved.
              example: false
            total_item_count:
              type: integer
              description: "The total number of records after applying all filter\
                \ query parameters. The `total_item_count` will be calculated if and\
                \ only if the corresponding query parameter `total_item_count` is\
                \ set to `true`. If this query parameter is not set or set to `false`,\
                \ a value of `null` will be returned."
              format: int32
        - type: object
          properties:
            continuation_token:
              type: string
              description: "Continuation token that can be provided in the `continuation_token`\
                \ query param to get the next page of data. If you use the continuation\
                \ token to page through data you are guaranteed to get all items exactly\
                \ once regardless of how items are modified. If an item is added or\
                \ deleted during the pagination then it may or may not be returned.\
                \ The continuation token is generated if the limit is less than the\
                \ remaining number of items, and the default sort is used (no sort\
                \ is specified)."
      - type: object
        properties:
          items:
            type: array
            description: Returns a list of all items after filtering. The values are
              displayed for each name where meaningful.
            items:
              $ref: '#/components/schemas/ProtectionGroupSnapshot'
      - properties:
          total:
            type: array
            description: "The aggregate value of all items after filtering. Where\
              \ it makes more sense, the average value is displayed instead. The values\
              \ are displayed for each field where meaningful."
            items:
              $ref: '#/components/schemas/ProtectionGroupSnapshot'
    "2_8_protectiongroupsnapshots_body":
      allOf:
      - description: dummy
      - type: object
        properties:
          id:
            type: string
            description: "A globally unique, system-generated ID. The ID cannot be\
              \ modified and cannot refer to another resource."
            readOnly: true
          name:
            type: string
            description: "A locally unique, system-generated name. The name cannot\
              \ be modified."
            readOnly: true
        description: |-
          A built-in resource. Many are singletons predefined by Purity (e.g., support settings). Some correspond to a piece of software, like an app, or hardware, like a controller. Others are created by the system in response to some event (e.g., alerts, audit records).
          Typically, a user can't create, delete or rename a built-in resource. A few can be created or deleted, but not renamed because the names are meaningful to Purity (e.g., VIFs).
      - $ref: '#/components/schemas/ProtectionGroupSnapshot'
      - type: object
        properties:
          destroyed:
            type: boolean
            readOnly: true
    inline_response_200_124:
      type: object
      properties:
        items:
          type: array
          description: Returns a list of all items after filtering. The values are
            displayed for each name where meaningful.
          items:
            $ref: '#/components/schemas/ProtectionGroupSnapshot'
      example:
        items:
        - ""
        - ""
    "2_8_protectiongroupsnapshots_body_1":
      allOf:
      - description: dummy
      - $ref: '#/components/schemas/ProtectionGroupSnapshot'
      - type: object
        properties:
          suffix:
            type: string
            readOnly: true
    inline_response_200_125:
      allOf:
      - description: dummy
      - allOf:
        - description: dummy
        - type: object
          properties:
            more_items_remaining:
              type: boolean
              description: Returns a value of `true` if subsequent items can be retrieved.
              example: false
            total_item_count:
              type: integer
              description: "The total number of records after applying all filter\
                \ query parameters. The `total_item_count` will be calculated if and\
                \ only if the corresponding query parameter `total_item_count` is\
                \ set to `true`. If this query parameter is not set or set to `false`,\
                \ a value of `null` will be returned."
              format: int32
        - type: object
          properties:
            continuation_token:
              type: string
              description: "Continuation token that can be provided in the `continuation_token`\
                \ query param to get the next page of data. If you use the continuation\
                \ token to page through data you are guaranteed to get all items exactly\
                \ once regardless of how items are modified. If an item is added or\
                \ deleted during the pagination then it may or may not be returned.\
                \ The continuation token is generated if the limit is less than the\
                \ remaining number of items, and the default sort is used (no sort\
                \ is specified)."
      - type: object
        properties:
          items:
            type: array
            description: Returns a list of all items after filtering. The values are
              displayed for each name where meaningful.
            items:
              allOf:
              - description: dummy
              - type: object
                properties:
                  name:
                    type: string
                    description: A user-specified name. The name must be locally unique
                      and can be changed.
                description: "An ordinary (as opposed to built-in) resource that can\
                  \ be created, named, renamed or deleted by the user. This might\
                  \ be a virtual resource (e.g., a volume), or correspond to something\
                  \ in the environment, like a host or a server."
              - type: object
                properties:
                  destroyed:
                    type: boolean
                    description: "Returns a value of `true` if the snapshot has been\
                      \ destroyed and is pending eradication. The destroyed snapshot\
                      \ can be recovered by setting `destroyed=false`. Once the eradication\
                      \ pending period has elapsed, the snapshot is permanently eradicated\
                      \ and can no longer be recovered."
                  started:
                    type: integer
                    description: The timestamp of when the snapshot replication process
                      started. Measured in milliseconds since the UNIX epoch.
                    format: int64
                    readOnly: true
                  progress:
                    maximum: 1
                    minimum: 0
                    type: number
                    description: The percentage progress of the snapshot transfer
                      from the source array to the target. Displayed in decimal format.
                    format: float
                    readOnly: true
                    example: 0.66
                  completed:
                    type: integer
                    description: The timestamp of when the snapshot replication process
                      completed. Measured in milliseconds since the UNIX epoch.
                    format: int64
                    readOnly: true
                  data_transferred:
                    type: integer
                    description: The number of bytes transferred from the source to
                      the target as part of the replication process. Measured in bytes.
                    format: int64
                    readOnly: true
                  physical_bytes_written:
                    type: integer
                    description: The amount of physical/logical data written to the
                      target due to replication. Measured in bytes.
                    format: int64
                    readOnly: true
              - description: The transfer statistics for snapshot replication data.
      - properties:
          total:
            type: array
            description: "The aggregate value of all items after filtering. Where\
              \ it makes more sense, the average value is displayed instead. The values\
              \ are displayed for each field where meaningful."
            items:
              allOf:
              - description: dummy
              - type: object
                properties:
                  name:
                    type: string
                    description: A user-specified name. The name must be locally unique
                      and can be changed.
                description: "An ordinary (as opposed to built-in) resource that can\
                  \ be created, named, renamed or deleted by the user. This might\
                  \ be a virtual resource (e.g., a volume), or correspond to something\
                  \ in the environment, like a host or a server."
              - type: object
                properties:
                  destroyed:
                    type: boolean
                    description: "Returns a value of `true` if the snapshot has been\
                      \ destroyed and is pending eradication. The destroyed snapshot\
                      \ can be recovered by setting `destroyed=false`. Once the eradication\
                      \ pending period has elapsed, the snapshot is permanently eradicated\
                      \ and can no longer be recovered."
                  started:
                    type: integer
                    description: The timestamp of when the snapshot replication process
                      started. Measured in milliseconds since the UNIX epoch.
                    format: int64
                    readOnly: true
                  progress:
                    maximum: 1
                    minimum: 0
                    type: number
                    description: The percentage progress of the snapshot transfer
                      from the source array to the target. Displayed in decimal format.
                    format: float
                    readOnly: true
                    example: 0.66
                  completed:
                    type: integer
                    description: The timestamp of when the snapshot replication process
                      completed. Measured in milliseconds since the UNIX epoch.
                    format: int64
                    readOnly: true
                  data_transferred:
                    type: integer
                    description: The number of bytes transferred from the source to
                      the target as part of the replication process. Measured in bytes.
                    format: int64
                    readOnly: true
                  physical_bytes_written:
                    type: integer
                    description: The amount of physical/logical data written to the
                      target due to replication. Measured in bytes.
                    format: int64
                    readOnly: true
              - description: The transfer statistics for snapshot replication data.
    inline_response_200_126:
      allOf:
      - description: dummy
      - allOf:
        - description: dummy
        - type: object
          properties:
            more_items_remaining:
              type: boolean
              description: Returns a value of `true` if subsequent items can be retrieved.
              example: false
            total_item_count:
              type: integer
              description: "The total number of records after applying all filter\
                \ query parameters. The `total_item_count` will be calculated if and\
                \ only if the corresponding query parameter `total_item_count` is\
                \ set to `true`. If this query parameter is not set or set to `false`,\
                \ a value of `null` will be returned."
              format: int32
        - type: object
          properties:
            continuation_token:
              type: string
              description: "Continuation token that can be provided in the `continuation_token`\
                \ query param to get the next page of data. If you use the continuation\
                \ token to page through data you are guaranteed to get all items exactly\
                \ once regardless of how items are modified. If an item is added or\
                \ deleted during the pagination then it may or may not be returned.\
                \ The continuation token is generated if the limit is less than the\
                \ remaining number of items, and the default sort is used (no sort\
                \ is specified)."
      - type: object
        properties:
          items:
            type: array
            description: Returns a list of all items after filtering. The values are
              displayed for each name where meaningful.
            items:
              allOf:
              - description: dummy
              - type: object
                properties:
                  id:
                    type: string
                    description: "A globally unique, system-generated ID. The ID cannot\
                      \ be modified and cannot refer to another resource."
                    readOnly: true
                  name:
                    type: string
                    description: A user-specified name. The name must be locally unique
                      and can be changed.
                description: "An ordinary (as opposed to built-in) resource that can\
                  \ be created, named, renamed or deleted by the user. This might\
                  \ be a virtual resource (e.g., a volume), or correspond to something\
                  \ in the environment, like a host or a server."
              - type: object
                properties:
                  arrays:
                    minItems: 1
                    type: array
                    items:
                      type: object
                      properties:
                        id:
                          type: string
                          description: "A globally unique, system-generated ID. The\
                            \ ID cannot be modified and cannot refer to another resource."
                          readOnly: true
                        name:
                          type: string
                          description: A user-specified name. The name must be locally
                            unique and can be changed.
                      description: "An ordinary (as opposed to built-in) resource\
                        \ that can be created, named, renamed or deleted by the user.\
                        \ This might be a virtual resource (e.g., a volume), or correspond\
                        \ to something in the environment, like a host or a server."
                description: Remote pod that's not directly stretched to this array.
    inline_response_200_127:
      allOf:
      - description: dummy
      - allOf:
        - description: dummy
        - type: object
          properties:
            more_items_remaining:
              type: boolean
              description: Returns a value of `true` if subsequent items can be retrieved.
              example: false
            total_item_count:
              type: integer
              description: "The total number of records after applying all filter\
                \ query parameters. The `total_item_count` will be calculated if and\
                \ only if the corresponding query parameter `total_item_count` is\
                \ set to `true`. If this query parameter is not set or set to `false`,\
                \ a value of `null` will be returned."
              format: int32
        - type: object
          properties:
            continuation_token:
              type: string
              description: "Continuation token that can be provided in the `continuation_token`\
                \ query param to get the next page of data. If you use the continuation\
                \ token to page through data you are guaranteed to get all items exactly\
                \ once regardless of how items are modified. If an item is added or\
                \ deleted during the pagination then it may or may not be returned.\
                \ The continuation token is generated if the limit is less than the\
                \ remaining number of items, and the default sort is used (no sort\
                \ is specified)."
      - type: object
        properties:
          items:
            type: array
            description: Returns a list of all items after filtering. The values are
              displayed for each name where meaningful.
            items:
              $ref: '#/components/schemas/RemoteProtectionGroup'
    inline_response_200_128:
      type: object
      properties:
        items:
          type: array
          description: Returns a list of all items after filtering. The values are
            displayed for each name where meaningful.
          items:
            $ref: '#/components/schemas/RemoteProtectionGroup'
      example:
        items:
        - ""
        - ""
    inline_response_200_129:
      allOf:
      - description: dummy
      - allOf:
        - description: dummy
        - type: object
          properties:
            more_items_remaining:
              type: boolean
              description: Returns a value of `true` if subsequent items can be retrieved.
              example: false
            total_item_count:
              type: integer
              description: "The total number of records after applying all filter\
                \ query parameters. The `total_item_count` will be calculated if and\
                \ only if the corresponding query parameter `total_item_count` is\
                \ set to `true`. If this query parameter is not set or set to `false`,\
                \ a value of `null` will be returned."
              format: int32
        - type: object
          properties:
            continuation_token:
              type: string
              description: "Continuation token that can be provided in the `continuation_token`\
                \ query param to get the next page of data. If you use the continuation\
                \ token to page through data you are guaranteed to get all items exactly\
                \ once regardless of how items are modified. If an item is added or\
                \ deleted during the pagination then it may or may not be returned.\
                \ The continuation token is generated if the limit is less than the\
                \ remaining number of items, and the default sort is used (no sort\
                \ is specified)."
      - type: object
        properties:
          items:
            type: array
            description: Returns a list of all items after filtering. The values are
              displayed for each name where meaningful.
            items:
              $ref: '#/components/schemas/RemoteProtectionGroupSnapshot'
    "2_8_remoteprotectiongroupsnapshots_body":
      allOf:
      - description: dummy
      - type: object
        properties:
          id:
            type: string
            description: "A globally unique, system-generated ID. The ID cannot be\
              \ modified and cannot refer to another resource."
            readOnly: true
          name:
            type: string
            description: "A locally unique, system-generated name. The name cannot\
              \ be modified."
            readOnly: true
        description: |-
          A built-in resource. Many are singletons predefined by Purity (e.g., support settings). Some correspond to a piece of software, like an app, or hardware, like a controller. Others are created by the system in response to some event (e.g., alerts, audit records).
          Typically, a user can't create, delete or rename a built-in resource. A few can be created or deleted, but not renamed because the names are meaningful to Purity (e.g., VIFs).
      - $ref: '#/components/schemas/RemoteProtectionGroupSnapshot'
      - type: object
        properties:
          destroyed:
            type: boolean
            readOnly: true
          suffix:
            type: string
            description: Specifies a name suffix for the snapshots created. The snapshot
              is created on the FlashArray specified by the `on` parameter. The `on`
              parameter cannot refer to an offload target. Snapshots with suffixes
              specified have names in the form `PGROUP.SUFFIX` instead of the default
              `PGROUP.NNN` form. The names of all snapshots created by a single command
              that specifies this option have the same suffix.
    inline_response_200_130:
      type: object
      properties:
        items:
          type: array
          description: Returns a list of all items after filtering. The values are
            displayed for each name where meaningful.
          items:
            $ref: '#/components/schemas/RemoteProtectionGroupSnapshot'
      example:
        items:
        - ""
        - ""
    inline_response_200_131:
      allOf:
      - description: dummy
      - allOf:
        - description: dummy
        - type: object
          properties:
            more_items_remaining:
              type: boolean
              description: Returns a value of `true` if subsequent items can be retrieved.
              example: false
            total_item_count:
              type: integer
              description: "The total number of records after applying all filter\
                \ query parameters. The `total_item_count` will be calculated if and\
                \ only if the corresponding query parameter `total_item_count` is\
                \ set to `true`. If this query parameter is not set or set to `false`,\
                \ a value of `null` will be returned."
              format: int32
        - type: object
          properties:
            continuation_token:
              type: string
              description: "Continuation token that can be provided in the `continuation_token`\
                \ query param to get the next page of data. If you use the continuation\
                \ token to page through data you are guaranteed to get all items exactly\
                \ once regardless of how items are modified. If an item is added or\
                \ deleted during the pagination then it may or may not be returned.\
                \ The continuation token is generated if the limit is less than the\
                \ remaining number of items, and the default sort is used (no sort\
                \ is specified)."
      - type: object
        properties:
          items:
            type: array
            items:
              $ref: '#/components/schemas/RemoteProtectionGroupSnapshotTransfer'
      - properties:
          total:
            type: array
            description: "The aggregate value of all items after filtering. Where\
              \ it makes more sense, the average value is displayed instead. The values\
              \ are displayed for each field where meaningful."
            items:
              $ref: '#/components/schemas/RemoteProtectionGroupSnapshotTransfer'
    inline_response_200_132:
      allOf:
      - description: dummy
      - allOf:
        - description: dummy
        - type: object
          properties:
            more_items_remaining:
              type: boolean
              description: Returns a value of `true` if subsequent items can be retrieved.
              example: false
            total_item_count:
              type: integer
              description: "The total number of records after applying all filter\
                \ query parameters. The `total_item_count` will be calculated if and\
                \ only if the corresponding query parameter `total_item_count` is\
                \ set to `true`. If this query parameter is not set or set to `false`,\
                \ a value of `null` will be returned."
              format: int32
        - type: object
          properties:
            continuation_token:
              type: string
              description: "Continuation token that can be provided in the `continuation_token`\
                \ query param to get the next page of data. If you use the continuation\
                \ token to page through data you are guaranteed to get all items exactly\
                \ once regardless of how items are modified. If an item is added or\
                \ deleted during the pagination then it may or may not be returned.\
                \ The continuation token is generated if the limit is less than the\
                \ remaining number of items, and the default sort is used (no sort\
                \ is specified)."
      - type: object
        properties:
          items:
            type: array
            items:
              $ref: '#/components/schemas/RemoteVolumeSnapshot'
    inline_response_200_133:
      type: object
      properties:
        items:
          type: array
          items:
            $ref: '#/components/schemas/RemoteVolumeSnapshot'
      example:
        items:
        - ""
        - ""
    inline_response_200_134:
      allOf:
      - description: dummy
      - allOf:
        - description: dummy
        - type: object
          properties:
            more_items_remaining:
              type: boolean
              description: Returns a value of `true` if subsequent items can be retrieved.
              example: false
            total_item_count:
              type: integer
              description: "The total number of records after applying all filter\
                \ query parameters. The `total_item_count` will be calculated if and\
                \ only if the corresponding query parameter `total_item_count` is\
                \ set to `true`. If this query parameter is not set or set to `false`,\
                \ a value of `null` will be returned."
              format: int32
        - type: object
          properties:
            continuation_token:
              type: string
              description: "Continuation token that can be provided in the `continuation_token`\
                \ query param to get the next page of data. If you use the continuation\
                \ token to page through data you are guaranteed to get all items exactly\
                \ once regardless of how items are modified. If an item is added or\
                \ deleted during the pagination then it may or may not be returned.\
                \ The continuation token is generated if the limit is less than the\
                \ remaining number of items, and the default sort is used (no sort\
                \ is specified)."
      - type: object
        properties:
          items:
            type: array
            items:
              $ref: '#/components/schemas/RemoteVolumeSnapshotTransfer'
      - properties:
          total:
            type: array
            description: "The aggregate value of all items after filtering. Where\
              \ it makes more sense, the average value is displayed instead. The values\
              \ are displayed for each field where meaningful."
            items:
              $ref: '#/components/schemas/RemoteVolumeSnapshotTransfer'
    inline_response_200_135:
      allOf:
      - description: dummy
      - allOf:
        - description: dummy
        - type: object
          properties:
            more_items_remaining:
              type: boolean
              description: Returns a value of `true` if subsequent items can be retrieved.
              example: false
            total_item_count:
              type: integer
              description: "The total number of records after applying all filter\
                \ query parameters. The `total_item_count` will be calculated if and\
                \ only if the corresponding query parameter `total_item_count` is\
                \ set to `true`. If this query parameter is not set or set to `false`,\
                \ a value of `null` will be returned."
              format: int32
        - type: object
          properties:
            continuation_token:
              type: string
              description: "Continuation token that can be provided in the `continuation_token`\
                \ query param to get the next page of data. If you use the continuation\
                \ token to page through data you are guaranteed to get all items exactly\
                \ once regardless of how items are modified. If an item is added or\
                \ deleted during the pagination then it may or may not be returned.\
                \ The continuation token is generated if the limit is less than the\
                \ remaining number of items, and the default sort is used (no sort\
                \ is specified)."
      - type: object
        properties:
          items:
            type: array
            items:
              $ref: '#/components/schemas/Session'
    inline_response_200_136:
      allOf:
      - description: dummy
      - allOf:
        - description: dummy
        - type: object
          properties:
            more_items_remaining:
              type: boolean
              description: Returns a value of `true` if subsequent items can be retrieved.
              example: false
            total_item_count:
              type: integer
              description: "The total number of records after applying all filter\
                \ query parameters. The `total_item_count` will be calculated if and\
                \ only if the corresponding query parameter `total_item_count` is\
                \ set to `true`. If this query parameter is not set or set to `false`,\
                \ a value of `null` will be returned."
              format: int32
        - type: object
          properties:
            continuation_token:
              type: string
              description: "Continuation token that can be provided in the `continuation_token`\
                \ query param to get the next page of data. If you use the continuation\
                \ token to page through data you are guaranteed to get all items exactly\
                \ once regardless of how items are modified. If an item is added or\
                \ deleted during the pagination then it may or may not be returned.\
                \ The continuation token is generated if the limit is less than the\
                \ remaining number of items, and the default sort is used (no sort\
                \ is specified)."
      - type: object
        properties:
          items:
            type: array
            items:
              $ref: '#/components/schemas/SMI-S'
    inline_response_200_137:
      type: object
      properties:
        items:
          type: array
          items:
            $ref: '#/components/schemas/SMI-S'
      example:
        items:
        - wbem_https_enabled: true
          slp_enabled: true
        - wbem_https_enabled: true
          slp_enabled: true
    inline_response_200_138:
      allOf:
      - description: dummy
      - allOf:
        - description: dummy
        - type: object
          properties:
            more_items_remaining:
              type: boolean
              description: Returns a value of `true` if subsequent items can be retrieved.
              example: false
            total_item_count:
              type: integer
              description: "The total number of records after applying all filter\
                \ query parameters. The `total_item_count` will be calculated if and\
                \ only if the corresponding query parameter `total_item_count` is\
                \ set to `true`. If this query parameter is not set or set to `false`,\
                \ a value of `null` will be returned."
              format: int32
        - type: object
          properties:
            continuation_token:
              type: string
              description: "Continuation token that can be provided in the `continuation_token`\
                \ query param to get the next page of data. If you use the continuation\
                \ token to page through data you are guaranteed to get all items exactly\
                \ once regardless of how items are modified. If an item is added or\
                \ deleted during the pagination then it may or may not be returned.\
                \ The continuation token is generated if the limit is less than the\
                \ remaining number of items, and the default sort is used (no sort\
                \ is specified)."
      - type: object
        properties:
          items:
            type: array
            items:
              $ref: '#/components/schemas/SMTP'
    inline_response_200_139:
      type: object
      properties:
        items:
          type: array
          items:
            $ref: '#/components/schemas/SMTP'
      example:
        items:
        - ""
        - ""
    inline_response_200_140:
      allOf:
      - description: dummy
      - allOf:
        - description: dummy
        - type: object
          properties:
            more_items_remaining:
              type: boolean
              description: Returns a value of `true` if subsequent items can be retrieved.
              example: false
            total_item_count:
              type: integer
              description: "The total number of records after applying all filter\
                \ query parameters. The `total_item_count` will be calculated if and\
                \ only if the corresponding query parameter `total_item_count` is\
                \ set to `true`. If this query parameter is not set or set to `false`,\
                \ a value of `null` will be returned."
              format: int32
        - type: object
          properties:
            continuation_token:
              type: string
              description: "Continuation token that can be provided in the `continuation_token`\
                \ query param to get the next page of data. If you use the continuation\
                \ token to page through data you are guaranteed to get all items exactly\
                \ once regardless of how items are modified. If an item is added or\
                \ deleted during the pagination then it may or may not be returned.\
                \ The continuation token is generated if the limit is less than the\
                \ remaining number of items, and the default sort is used (no sort\
                \ is specified)."
      - type: object
        properties:
          items:
            type: array
            items:
              $ref: '#/components/schemas/SNMPAgent'
    api2.8snmpagents_v2c:
      type: object
      properties:
        community:
          maxLength: 32
          type: string
          description: Manager community ID under which Purity//FA is to communicate
            with the specified managers.
          example: '****'
      description: The v2c configurations of SNMP.
      example: null
    api2.8snmpagents_v3:
      type: object
      properties:
        auth_passphrase:
          maxLength: 32
          type: string
          description: Passphrase used by Purity//FA to authenticate the array with
            the specified managers.
          example: '********'
        auth_protocol:
          type: string
          description: Hash algorithm used to validate the authentication passphrase.
            Valid values are `MD5` and `SHA`.
          example: MD5
        privacy_passphrase:
          maxLength: 63
          minLength: 8
          type: string
          description: Passphrase used to encrypt SNMP messages.
          example: '********'
        privacy_protocol:
          type: string
          description: Encryption protocol for SNMP messages. Valid values are `AES`
            and `DES`.
          example: DES
        user:
          type: string
          description: User ID recognized by the specified SNMP managers which Purity//FA
            is to use in communications with them.
          example: User1
      description: The v3 configurations of SNMP.
      example: null
    "2_8_snmpagents_body":
      allOf:
      - description: dummy
      - type: object
        properties:
          name:
            type: string
            description: A user-specified name. The name must be locally unique and
              can be changed.
        description: "An ordinary (as opposed to built-in) resource that can be created,\
          \ named, renamed or deleted by the user. This might be a virtual resource\
          \ (e.g., a volume), or correspond to something in the environment, like\
          \ a host or a server."
      - type: object
        properties:
          engine_id:
            maxLength: 32
            type: string
            description: The administration domain unique name of an SNMP agent.
            readOnly: true
            example: 80009e2205d7c0bd31fef5b87f4f44da
          v2c:
            $ref: '#/components/schemas/api2.8snmpagents_v2c'
          v3:
            $ref: '#/components/schemas/api2.8snmpagents_v3'
          version:
            type: string
            description: Version of the SNMP protocol to be used by Purity//FA in
              communications with the specified manager. Valid values are `v2c` and
              `v3`.
            example: v3
    inline_response_200_141:
      type: object
      properties:
        items:
          type: array
          items:
            $ref: '#/components/schemas/SNMPAgent'
      example:
        items:
        - ""
        - ""
    inline_response_200_142:
      allOf:
      - description: dummy
      - allOf:
        - description: dummy
        - type: object
          properties:
            more_items_remaining:
              type: boolean
              description: Returns a value of `true` if subsequent items can be retrieved.
              example: false
            total_item_count:
              type: integer
              description: "The total number of records after applying all filter\
                \ query parameters. The `total_item_count` will be calculated if and\
                \ only if the corresponding query parameter `total_item_count` is\
                \ set to `true`. If this query parameter is not set or set to `false`,\
                \ a value of `null` will be returned."
              format: int32
        - type: object
          properties:
            continuation_token:
              type: string
              description: "Continuation token that can be provided in the `continuation_token`\
                \ query param to get the next page of data. If you use the continuation\
                \ token to page through data you are guaranteed to get all items exactly\
                \ once regardless of how items are modified. If an item is added or\
                \ deleted during the pagination then it may or may not be returned.\
                \ The continuation token is generated if the limit is less than the\
                \ remaining number of items, and the default sort is used (no sort\
                \ is specified)."
      - type: object
        properties:
          items:
            type: array
            items:
              allOf:
              - description: dummy
              - type: object
                properties:
                  mib:
                    type: string
                    description: MIB text.
                    readOnly: true
    inline_response_200_143:
      allOf:
      - description: dummy
      - allOf:
        - description: dummy
        - type: object
          properties:
            more_items_remaining:
              type: boolean
              description: Returns a value of `true` if subsequent items can be retrieved.
              example: false
            total_item_count:
              type: integer
              description: "The total number of records after applying all filter\
                \ query parameters. The `total_item_count` will be calculated if and\
                \ only if the corresponding query parameter `total_item_count` is\
                \ set to `true`. If this query parameter is not set or set to `false`,\
                \ a value of `null` will be returned."
              format: int32
        - type: object
          properties:
            continuation_token:
              type: string
              description: "Continuation token that can be provided in the `continuation_token`\
                \ query param to get the next page of data. If you use the continuation\
                \ token to page through data you are guaranteed to get all items exactly\
                \ once regardless of how items are modified. If an item is added or\
                \ deleted during the pagination then it may or may not be returned.\
                \ The continuation token is generated if the limit is less than the\
                \ remaining number of items, and the default sort is used (no sort\
                \ is specified)."
      - type: object
        properties:
          items:
            type: array
            items:
              $ref: '#/components/schemas/SNMPManagers'
    "2_8_snmpmanagers_body":
      type: object
      properties:
        host:
          type: string
          description: DNS hostname or IP address of a computer that hosts an SNMP
            manager to which Purity//FA is to send trap messages when it generates
            alerts.
          example: snmp.purestorage.com
        notification:
          type: string
          description: The type of notification the agent will send. Valid values
            are `inform` and `trap`.
          example: trap
        v2c:
          $ref: api2.8snmpagents_v2c
        v3:
          $ref: api2.8snmpagents_v3
        version:
          type: string
          description: Version of the SNMP protocol to be used by Purity//FA to communicate
            with the specified manager. Valid values are `v2c` and `v3`.
          example: v3
    inline_response_200_144:
      type: object
      properties:
        items:
          type: array
          items:
            $ref: '#/components/schemas/SNMPManagers'
      example:
        items:
        - ""
        - ""
    "2_8_snmpmanagers_body_1":
      allOf:
      - description: dummy
      - type: object
        properties:
          name:
            type: string
            description: A user-specified name. The name must be locally unique and
              can be changed.
        description: "An ordinary (as opposed to built-in) resource that can be created,\
          \ named, renamed or deleted by the user. This might be a virtual resource\
          \ (e.g., a volume), or correspond to something in the environment, like\
          \ a host or a server."
      - type: object
        properties:
          host:
            type: string
            description: DNS hostname or IP address of a computer that hosts an SNMP
              manager to which Purity//FA is to send trap messages when it generates
              alerts.
            example: snmp.purestorage.com
          notification:
            type: string
            description: The type of notification the agent will send. Valid values
              are `inform` and `trap`.
            example: trap
          v2c:
            $ref: api2.8snmpagents_v2c
          v3:
            $ref: api2.8snmpagents_v3
          version:
            type: string
            description: Version of the SNMP protocol to be used by Purity//FA to
              communicate with the specified manager. Valid values are `v2c` and `v3`.
            example: v3
    inline_response_200_145:
      allOf:
      - description: dummy
      - allOf:
        - description: dummy
        - type: object
          properties:
            more_items_remaining:
              type: boolean
              description: Returns a value of `true` if subsequent items can be retrieved.
              example: false
            total_item_count:
              type: integer
              description: "The total number of records after applying all filter\
                \ query parameters. The `total_item_count` will be calculated if and\
                \ only if the corresponding query parameter `total_item_count` is\
                \ set to `true`. If this query parameter is not set or set to `false`,\
                \ a value of `null` will be returned."
              format: int32
        - type: object
          properties:
            continuation_token:
              type: string
              description: "Continuation token that can be provided in the `continuation_token`\
                \ query param to get the next page of data. If you use the continuation\
                \ token to page through data you are guaranteed to get all items exactly\
                \ once regardless of how items are modified. If an item is added or\
                \ deleted during the pagination then it may or may not be returned.\
                \ The continuation token is generated if the limit is less than the\
                \ remaining number of items, and the default sort is used (no sort\
                \ is specified)."
      - type: object
        properties:
          items:
            type: array
            items:
              $ref: '#/components/schemas/Software'
    inline_response_200_146:
      allOf:
      - description: dummy
      - allOf:
        - description: dummy
        - type: object
          properties:
            more_items_remaining:
              type: boolean
              description: Returns a value of `true` if subsequent items can be retrieved.
              example: false
            total_item_count:
              type: integer
              description: "The total number of records after applying all filter\
                \ query parameters. The `total_item_count` will be calculated if and\
                \ only if the corresponding query parameter `total_item_count` is\
                \ set to `true`. If this query parameter is not set or set to `false`,\
                \ a value of `null` will be returned."
              format: int32
        - type: object
          properties:
            continuation_token:
              type: string
              description: "Continuation token that can be provided in the `continuation_token`\
                \ query param to get the next page of data. If you use the continuation\
                \ token to page through data you are guaranteed to get all items exactly\
                \ once regardless of how items are modified. If an item is added or\
                \ deleted during the pagination then it may or may not be returned.\
                \ The continuation token is generated if the limit is less than the\
                \ remaining number of items, and the default sort is used (no sort\
                \ is specified)."
      - type: object
        properties:
          items:
            type: array
            items:
              $ref: '#/components/schemas/SoftwareBundle'
    "2_8_softwarebundle_body":
      type: object
      properties:
        source:
          type: string
          description: "The source of the software bundle. Accepts HTTP, HTTPS or\
            \ FTP, and paths."
          example: ftp://local/upgrade_bundle.sh
      description: The source of the software bundle.
    inline_response_200_147:
      type: object
      properties:
        items:
          type: array
          items:
            $ref: '#/components/schemas/SoftwareBundle'
      example:
        items:
        - ""
        - ""
    inline_response_200_148:
      allOf:
      - description: dummy
      - allOf:
        - description: dummy
        - type: object
          properties:
            more_items_remaining:
              type: boolean
              description: Returns a value of `true` if subsequent items can be retrieved.
              example: false
            total_item_count:
              type: integer
              description: "The total number of records after applying all filter\
                \ query parameters. The `total_item_count` will be calculated if and\
                \ only if the corresponding query parameter `total_item_count` is\
                \ set to `true`. If this query parameter is not set or set to `false`,\
                \ a value of `null` will be returned."
              format: int32
        - type: object
          properties:
            continuation_token:
              type: string
              description: "Continuation token that can be provided in the `continuation_token`\
                \ query param to get the next page of data. If you use the continuation\
                \ token to page through data you are guaranteed to get all items exactly\
                \ once regardless of how items are modified. If an item is added or\
                \ deleted during the pagination then it may or may not be returned.\
                \ The continuation token is generated if the limit is less than the\
                \ remaining number of items, and the default sort is used (no sort\
                \ is specified)."
      - type: object
        properties:
          items:
            type: array
            items:
              $ref: '#/components/schemas/SoftwareInstallations'
    api2.8softwareinstallations_override_checks:
      type: object
      properties:
        name:
          type: string
          description: "The name of the upgrade check to be overridden so the software\
            \ upgrade can continue if the check failed or is anticipated to fail during\
            \ the upgrade process. Overriding the check forces the system to ignore\
            \ the check failure and continue with the upgrade. If the check includes\
            \ more specific checks that failed or are anticipated to fail, set them\
            \ using the `args` parameter. For example, the HostIOCheck check may include\
            \ a list of hosts that have failed or are anticipated to fail the upgrade\
            \ check."
          example: HostIOCheck
        args:
          type: string
          description: "The name of the specific check within the override check to\
            \ ignore so that the system can continue with the software upgrade. The\
            \ `name` parameter of the override check must be specified with the `args`\
            \ parameter. For example, if the HostIOCheck check fails on hosts host01\
            \ and host02, the system displays a list of these host names in the failed\
            \ check. To override the HostIOCheck checks for host01 and host02, set\
            \ `name=HostIOCheck`, and set `args=host01,host02`. Enter multiple `args`\
            \ in comma-separated format. Note that not all checks have `args` values."
          example: "host1,host2,host3"
        persistent:
          type: boolean
          description: |-
            If set to `true`, the system always ignores the failure of the specified upgrade check and continues with the upgrade process.
            If set to `false`, the system ignores the failure of the specified upgrade check until the upgrade check finishes and the upgrade process is continued. For example, the `continue` command is successfully issued in an `interactive` mode, or the first upgrade check step successfully finishes in a `one-click` mode.
      example: null
    "2_8_softwareinstallations_body":
      type: object
      properties:
        mode:
          type: string
          description: "Mode the upgrade is in. Valid values are `check-only`, `interactive`,\
            \ `semi-interactive`, and `one-click`. In `check-only` mode, the upgrade\
            \ only runs pre-upgrade checks and returns. In `interactive` mode, the\
            \ upgrade process pauses at several points, at which users must enter\
            \ certain commands to proceed. In `semi-interactive` mode, the upgrade\
            \ pauses if there are any upgrade check failures and functions like `one-click`\
            \ mode otherwise. In `one-click` mode, the upgrade proceeds automatically\
            \ without pausing."
          example: interactive
        override_checks:
          type: array
          description: "A list of upgrade checks whose failure is overridden during\
            \ the upgrade. If any optional `args` are provided, they are validated\
            \ later when the corresponding check script runs."
          items:
            $ref: api2.8softwareinstallations_override_checks
      description: Software upgrade attempt.
    inline_response_200_149:
      type: object
      properties:
        items:
          type: array
          items:
            $ref: '#/components/schemas/SoftwareInstallations'
      example:
        items:
        - ""
        - ""
    "2_8_softwareinstallations_body_1":
      type: object
      properties:
        add_override_checks:
          type: array
          description: Adds the specified checks to the current list of override checks.
          items:
            $ref: api2.8softwareinstallations_override_checks
    inline_response_200_150:
      allOf:
      - description: dummy
      - allOf:
        - description: dummy
        - type: object
          properties:
            more_items_remaining:
              type: boolean
              description: Returns a value of `true` if subsequent items can be retrieved.
              example: false
            total_item_count:
              type: integer
              description: "The total number of records after applying all filter\
                \ query parameters. The `total_item_count` will be calculated if and\
                \ only if the corresponding query parameter `total_item_count` is\
                \ set to `true`. If this query parameter is not set or set to `false`,\
                \ a value of `null` will be returned."
              format: int32
        - type: object
          properties:
            continuation_token:
              type: string
              description: "Continuation token that can be provided in the `continuation_token`\
                \ query param to get the next page of data. If you use the continuation\
                \ token to page through data you are guaranteed to get all items exactly\
                \ once regardless of how items are modified. If an item is added or\
                \ deleted during the pagination then it may or may not be returned.\
                \ The continuation token is generated if the limit is less than the\
                \ remaining number of items, and the default sort is used (no sort\
                \ is specified)."
      - type: object
        properties:
          items:
            type: array
            items:
              $ref: '#/components/schemas/SoftwareInstallationSteps'
    inline_response_200_151:
      allOf:
      - description: dummy
      - allOf:
        - description: dummy
        - type: object
          properties:
            more_items_remaining:
              type: boolean
              description: Returns a value of `true` if subsequent items can be retrieved.
              example: false
            total_item_count:
              type: integer
              description: "The total number of records after applying all filter\
                \ query parameters. The `total_item_count` will be calculated if and\
                \ only if the corresponding query parameter `total_item_count` is\
                \ set to `true`. If this query parameter is not set or set to `false`,\
                \ a value of `null` will be returned."
              format: int32
        - type: object
          properties:
            continuation_token:
              type: string
              description: "Continuation token that can be provided in the `continuation_token`\
                \ query param to get the next page of data. If you use the continuation\
                \ token to page through data you are guaranteed to get all items exactly\
                \ once regardless of how items are modified. If an item is added or\
                \ deleted during the pagination then it may or may not be returned.\
                \ The continuation token is generated if the limit is less than the\
                \ remaining number of items, and the default sort is used (no sort\
                \ is specified)."
      - type: object
        properties:
          items:
            type: array
            items:
              $ref: '#/components/schemas/Subnet'
    "2_8_subnets_body":
      type: object
      properties:
        enabled:
          type: boolean
          description: "Returns a value of `true` if subnet is enabled. Returns a\
            \ value of `false` if subnet is disabled. If not specified, defaults to\
            \ `true`."
        gateway:
          type: string
          description: The IPv4 or IPv6 address of the gateway through which the specified
            subnet is to communicate with the network.
        mtu:
          maximum: 9216
          minimum: 1280
          type: integer
          description: "Maximum message transfer unit (packet) size for the subnet\
            \ in bytes. MTU setting cannot exceed the MTU of the corresponding physical\
            \ interface. If not specified, defaults to `1500`."
          format: int32
        prefix:
          type: string
          description: The IPv4 or IPv6 address to be associated with the specified
            subnet.
        vlan:
          type: integer
          description: VLAN ID number.
          format: int32
    inline_response_200_152:
      type: object
      properties:
        items:
          type: array
          items:
            $ref: '#/components/schemas/Subnet'
      example:
        items:
        - ""
        - ""
    "2_8_subnets_body_1":
      allOf:
      - description: dummy
      - type: object
        properties:
          name:
            type: string
            description: A user-specified name. The name must be locally unique and
              can be changed.
        description: "An ordinary (as opposed to built-in) resource that can be created,\
          \ named, renamed or deleted by the user. This might be a virtual resource\
          \ (e.g., a volume), or correspond to something in the environment, like\
          \ a host or a server."
      - type: object
        properties:
          enabled:
            type: boolean
            description: "Returns a value of `true` if subnet is enabled. Returns\
              \ a value of `false` if subnet is disabled. If not specified, defaults\
              \ to `true`."
          gateway:
            type: string
            description: The IPv4 or IPv6 address of the gateway through which the
              specified subnet is to communicate with the network.
          mtu:
            maximum: 9216
            minimum: 1280
            type: integer
            description: "Maximum message transfer unit (packet) size for the subnet\
              \ in bytes. MTU setting cannot exceed the MTU of the corresponding physical\
              \ interface. If not specified, defaults to `1500`."
            format: int32
          prefix:
            type: string
            description: The IPv4 or IPv6 address to be associated with the specified
              subnet.
          vlan:
            type: integer
            description: VLAN ID number.
            format: int32
    inline_response_200_153:
      allOf:
      - description: dummy
      - allOf:
        - description: dummy
        - type: object
          properties:
            more_items_remaining:
              type: boolean
              description: Returns a value of `true` if subsequent items can be retrieved.
              example: false
            total_item_count:
              type: integer
              description: "The total number of records after applying all filter\
                \ query parameters. The `total_item_count` will be calculated if and\
                \ only if the corresponding query parameter `total_item_count` is\
                \ set to `true`. If this query parameter is not set or set to `false`,\
                \ a value of `null` will be returned."
              format: int32
        - type: object
          properties:
            continuation_token:
              type: string
              description: "Continuation token that can be provided in the `continuation_token`\
                \ query param to get the next page of data. If you use the continuation\
                \ token to page through data you are guaranteed to get all items exactly\
                \ once regardless of how items are modified. If an item is added or\
                \ deleted during the pagination then it may or may not be returned.\
                \ The continuation token is generated if the limit is less than the\
                \ remaining number of items, and the default sort is used (no sort\
                \ is specified)."
      - type: object
        properties:
          items:
            type: array
            items:
              $ref: '#/components/schemas/Support'
    "2_8_support_body":
      type: object
      properties:
        phonehome_enabled:
          type: boolean
          description: "The status of phonehome. If set to `true`, enable phonehome.\
            \ If set to `false`, disable phonehome."
        proxy:
          type: string
          description: "The value of the current proxy, which is used for connecting\
            \ to cloud services such as phonehome, remote assist, etc. Specify the\
            \ server name, including the scheme and proxy port number."
          example: http://proxy.example.com:8080
        remote_assist_active:
          type: boolean
          description: "The status of a remote assist session. If set to `true`, enable\
            \ the remote assist session. If set to `false`, disable the remote assist\
            \ session."
    inline_response_200_154:
      type: object
      properties:
        items:
          type: array
          items:
            $ref: '#/components/schemas/Support'
      example:
        items:
        - ""
        - ""
    inline_response_200_155:
      allOf:
      - description: dummy
      - allOf:
        - description: dummy
        - type: object
          properties:
            more_items_remaining:
              type: boolean
              description: Returns a value of `true` if subsequent items can be retrieved.
              example: false
            total_item_count:
              type: integer
              description: "The total number of records after applying all filter\
                \ query parameters. The `total_item_count` will be calculated if and\
                \ only if the corresponding query parameter `total_item_count` is\
                \ set to `true`. If this query parameter is not set or set to `false`,\
                \ a value of `null` will be returned."
              format: int32
        - type: object
          properties:
            continuation_token:
              type: string
              description: "Continuation token that can be provided in the `continuation_token`\
                \ query param to get the next page of data. If you use the continuation\
                \ token to page through data you are guaranteed to get all items exactly\
                \ once regardless of how items are modified. If an item is added or\
                \ deleted during the pagination then it may or may not be returned.\
                \ The continuation token is generated if the limit is less than the\
                \ remaining number of items, and the default sort is used (no sort\
                \ is specified)."
      - type: object
        properties:
          items:
            type: array
            items:
              $ref: '#/components/schemas/SyslogServer'
    inline_response_200_156:
      type: object
      properties:
        items:
          type: array
          items:
            $ref: '#/components/schemas/SyslogServer'
      example:
        items:
        - ""
        - ""
    inline_response_200_157:
      allOf:
      - description: dummy
      - allOf:
        - description: dummy
        - type: object
          properties:
            more_items_remaining:
              type: boolean
              description: Returns a value of `true` if subsequent items can be retrieved.
              example: false
            total_item_count:
              type: integer
              description: "The total number of records after applying all filter\
                \ query parameters. The `total_item_count` will be calculated if and\
                \ only if the corresponding query parameter `total_item_count` is\
                \ set to `true`. If this query parameter is not set or set to `false`,\
                \ a value of `null` will be returned."
              format: int32
        - type: object
          properties:
            continuation_token:
              type: string
              description: "Continuation token that can be provided in the `continuation_token`\
                \ query param to get the next page of data. If you use the continuation\
                \ token to page through data you are guaranteed to get all items exactly\
                \ once regardless of how items are modified. If an item is added or\
                \ deleted during the pagination then it may or may not be returned.\
                \ The continuation token is generated if the limit is less than the\
                \ remaining number of items, and the default sort is used (no sort\
                \ is specified)."
      - type: object
        properties:
          items:
            type: array
            items:
              $ref: '#/components/schemas/SyslogServerSettings'
    inline_response_200_158:
      type: object
      properties:
        items:
          type: array
          items:
            $ref: '#/components/schemas/SyslogServerSettings'
      example:
        items:
        - ca_certificate: ca_certificate
          tls_audit_enabled: true
        - ca_certificate: ca_certificate
          tls_audit_enabled: true
    inline_response_200_159:
      allOf:
      - description: dummy
      - allOf:
        - description: dummy
        - type: object
          properties:
            more_items_remaining:
              type: boolean
              description: Returns a value of `true` if subsequent items can be retrieved.
              example: false
            total_item_count:
              type: integer
              description: "The total number of records after applying all filter\
                \ query parameters. The `total_item_count` will be calculated if and\
                \ only if the corresponding query parameter `total_item_count` is\
                \ set to `true`. If this query parameter is not set or set to `false`,\
                \ a value of `null` will be returned."
              format: int32
        - type: object
          properties:
            continuation_token:
              type: string
              description: "Continuation token that can be provided in the `continuation_token`\
                \ query param to get the next page of data. If you use the continuation\
                \ token to page through data you are guaranteed to get all items exactly\
                \ once regardless of how items are modified. If an item is added or\
                \ deleted during the pagination then it may or may not be returned.\
                \ The continuation token is generated if the limit is less than the\
                \ remaining number of items, and the default sort is used (no sort\
                \ is specified)."
      - type: object
        properties:
          items:
            type: array
            description: "Displays a list of all items after filtering. The values\
              \ are displayed for each name if meaningful. If `total_only=true`, the\
              \ `items` list will be empty."
            items:
              $ref: '#/components/schemas/Volume'
      - properties:
          total:
            type: array
            description: "The aggregate value of all items after filtering. When applicable,\
              \ the average value is displayed instead. The values are displayed for\
              \ each field if meaningful."
            items:
              $ref: '#/components/schemas/Volume'
    api2.8volumes_qos:
      type: object
      properties:
        bandwidth_limit:
          maximum: 549755813888
          minimum: 1048576
          type: integer
          description: "The maximum QoS bandwidth limit for the volume. Whenever throughput\
            \ exceeds the bandwidth limit, throttling occurs. Measured in bytes per\
            \ second. Maximum limit is 512 GB/s."
          format: int64
        iops_limit:
          maximum: 104857600
          minimum: 100
          type: integer
          description: The QoS IOPs limit for the volume.
          format: int64
      description: Sets QoS limits.
      example: null
    api2.8volumes_source:
      type: object
      properties:
        id:
          type: string
          description: "A globally unique, system-generated ID. The ID cannot be modified."
        name:
          type: string
          description: "The resource name, such as volume name, pod name, snapshot\
            \ name, and so on."
      description: The source volume of a volume copy.
      example: null
    "2_8_volumes_body":
      allOf:
      - description: dummy
      - type: object
        properties:
          destroyed:
            type: boolean
            description: "If set to `true`, destroys a resource. Once set to `true`,\
              \ the `time_remaining` value will display the amount of time left until\
              \ the destroyed resource is permanently eradicated. Before the `time_remaining`\
              \ period has elapsed, the destroyed resource can be recovered by setting\
              \ `destroyed=false`. Once the `time_remaining` period has elapsed, the\
              \ resource is permanently eradicated and can no longer be recovered."
      - type: object
        properties:
          provisioned:
            maximum: 4503599627370496
            type: integer
            description: Sets the virtual size of the volume. Measured in bytes.
            format: int64
          qos:
            $ref: '#/components/schemas/api2.8volumes_qos'
          source:
            $ref: '#/components/schemas/api2.8volumes_source'
          subtype:
            type: string
            description: The type of volume. Valid values are `protocol_endpoint`
              and `regular`.
    inline_response_200_160:
      type: object
      properties:
        items:
          type: array
          description: "Displays a list of all items after filtering. The values are\
            \ displayed for each name if meaningful. If `total_only=true`, the `items`\
            \ list will be empty."
          items:
            $ref: '#/components/schemas/Volume'
      example:
        items:
        - ""
        - ""
    "2_8_volumes_body_1":
      allOf:
      - description: dummy
      - allOf:
        - description: dummy
        - type: object
          properties:
            destroyed:
              type: boolean
              description: "If set to `true`, destroys a resource. Once set to `true`,\
                \ the `time_remaining` value will display the amount of time left\
                \ until the destroyed resource is permanently eradicated. Before the\
                \ `time_remaining` period has elapsed, the destroyed resource can\
                \ be recovered by setting `destroyed=false`. Once the `time_remaining`\
                \ period has elapsed, the resource is permanently eradicated and can\
                \ no longer be recovered."
        - type: object
          properties:
            name:
              type: string
              description: The new name for the resource.
        - type: object
          properties:
            pod:
              type: object
              properties:
                id:
                  type: string
                  description: "A globally unique, system-generated ID. The ID cannot\
                    \ be modified."
                name:
                  type: string
                  description: "The resource name, such as volume name, pod name,\
                    \ snapshot name, and so on."
              description: Moves the volume into the specified pod.
            provisioned:
              maximum: 4503599627370496
              type: integer
              description: Updates the virtual size of the volume. Measured in bytes.
              format: int64
            qos:
              type: object
              properties:
                bandwidth_limit:
                  maximum: 549755813888
                  minimum: 1048576
                  type: integer
                  description: "The maximum QoS bandwidth limit for the volume. Whenever\
                    \ throughput exceeds the bandwidth limit, throttling occurs. Measured\
                    \ in bytes per second. Maximum limit is 512 GB/s."
                  format: int64
                iops_limit:
                  maximum: 104857600
                  minimum: 100
                  type: integer
                  description: The QoS IOPs limit for the volume.
                  format: int64
              description: Sets QoS limits.
            volume_group:
              type: object
              properties:
                id:
                  type: string
                  description: "A globally unique, system-generated ID. The ID cannot\
                    \ be modified."
                name:
                  type: string
                  description: "The resource name, such as volume name, pod name,\
                    \ snapshot name, and so on."
              description: Adds the volume to the specified volume group.
      - properties:
          requested_promotion_state:
            type: string
            description: Valid values are `promoted` and `demoted`. Patch `requested_promotion_state`
              to `demoted` to demote the volume so that the volume stops accepting
              write requests. Patch `requested_promotion_state` to `promoted` to promote
              the volume so that the volume starts accepting write requests.
    inline_response_200_161:
      allOf:
      - description: dummy
      - allOf:
        - description: dummy
        - type: object
          properties:
            more_items_remaining:
              type: boolean
              description: Returns a value of `true` if subsequent items can be retrieved.
              example: false
            total_item_count:
              type: integer
              description: "The total number of records after applying all filter\
                \ query parameters. The `total_item_count` will be calculated if and\
                \ only if the corresponding query parameter `total_item_count` is\
                \ set to `true`. If this query parameter is not set or set to `false`,\
                \ a value of `null` will be returned."
              format: int32
        - type: object
          properties:
            continuation_token:
              type: string
              description: "Continuation token that can be provided in the `continuation_token`\
                \ query param to get the next page of data. If you use the continuation\
                \ token to page through data you are guaranteed to get all items exactly\
                \ once regardless of how items are modified. If an item is added or\
                \ deleted during the pagination then it may or may not be returned.\
                \ The continuation token is generated if the limit is less than the\
                \ remaining number of items, and the default sort is used (no sort\
                \ is specified)."
      - type: object
        properties:
          items:
            type: array
            items:
              $ref: '#/components/schemas/Tag'
    inline_response_200_162:
      type: object
      properties:
        items:
          type: array
          items:
            $ref: '#/components/schemas/Tag'
      example:
        items:
        - copyable: true
          resource:
            name: name
            id: id
          namespace: default
          value: staging
          key: environment
        - copyable: true
          resource:
            name: name
            id: id
          namespace: default
          value: staging
          key: environment
    inline_response_200_163:
      allOf:
      - description: dummy
      - allOf:
        - description: dummy
        - type: object
          properties:
            more_items_remaining:
              type: boolean
              description: Returns a value of `true` if subsequent items can be retrieved.
              example: false
            total_item_count:
              type: integer
              description: "The total number of records after applying all filter\
                \ query parameters. The `total_item_count` will be calculated if and\
                \ only if the corresponding query parameter `total_item_count` is\
                \ set to `true`. If this query parameter is not set or set to `false`,\
                \ a value of `null` will be returned."
              format: int32
        - type: object
          properties:
            continuation_token:
              type: string
              description: "Continuation token that can be provided in the `continuation_token`\
                \ query param to get the next page of data. If you use the continuation\
                \ token to page through data you are guaranteed to get all items exactly\
                \ once regardless of how items are modified. If an item is added or\
                \ deleted during the pagination then it may or may not be returned.\
                \ The continuation token is generated if the limit is less than the\
                \ remaining number of items, and the default sort is used (no sort\
                \ is specified)."
      - type: object
        properties:
          items:
            type: array
            items:
              $ref: '#/components/schemas/VolumeGroup'
      - properties:
          total:
            type: array
            description: "The aggregate value of all items after filtering. Where\
              \ it makes more sense, the average value is displayed instead. The values\
              \ are displayed for each field where meaningful."
            items:
              $ref: '#/components/schemas/VolumeGroup'
    "2_8_volumegroups_body":
      allOf:
      - description: dummy
      - type: object
        properties:
          id:
            type: string
            description: "A globally unique, system-generated ID. The ID cannot be\
              \ modified and cannot refer to another resource."
            readOnly: true
          name:
            type: string
            description: "A locally unique, system-generated name. The name cannot\
              \ be modified."
            readOnly: true
        description: |-
          A built-in resource. Many are singletons predefined by Purity (e.g., support settings). Some correspond to a piece of software, like an app, or hardware, like a controller. Others are created by the system in response to some event (e.g., alerts, audit records).
          Typically, a user can't create, delete or rename a built-in resource. A few can be created or deleted, but not renamed because the names are meaningful to Purity (e.g., VIFs).
      - $ref: '#/components/schemas/VolumeGroup'
      - type: object
        properties:
          destroyed:
            type: boolean
            description: "Has this volume group been destroyed? To destroy a volume\
              \ group, patch to `true`. To recover a destroyed volume group, patch\
              \ to `false`. If not specified, defaults to `false`."
            readOnly: true
    inline_response_200_164:
      type: object
      properties:
        items:
          type: array
          items:
            $ref: '#/components/schemas/VolumeGroup'
      example:
        items:
        - ""
        - ""
    inline_response_200_165:
      allOf:
      - description: dummy
      - allOf:
        - description: dummy
        - type: object
          properties:
            more_items_remaining:
              type: boolean
              description: Returns a value of `true` if subsequent items can be retrieved.
              example: false
            total_item_count:
              type: integer
              description: "The total number of records after applying all filter\
                \ query parameters. The `total_item_count` will be calculated if and\
                \ only if the corresponding query parameter `total_item_count` is\
                \ set to `true`. If this query parameter is not set or set to `false`,\
                \ a value of `null` will be returned."
              format: int32
        - type: object
          properties:
            continuation_token:
              type: string
              description: "Continuation token that can be provided in the `continuation_token`\
                \ query param to get the next page of data. If you use the continuation\
                \ token to page through data you are guaranteed to get all items exactly\
                \ once regardless of how items are modified. If an item is added or\
                \ deleted during the pagination then it may or may not be returned.\
                \ The continuation token is generated if the limit is less than the\
                \ remaining number of items, and the default sort is used (no sort\
                \ is specified)."
      - type: object
        properties:
          items:
            type: array
            description: "Returns a list of all items after filtering. The values\
              \ are displayed for each name where meaningful. If `total_only=true`,\
              \ the `items` list will be empty."
            items:
              $ref: '#/components/schemas/VolumeSnapshot'
      - properties:
          total:
            type: array
            description: "The aggregate value of all items after filtering. Where\
              \ it makes more sense, the average value is displayed instead. The values\
              \ are displayed for each field where meaningful."
            items:
              $ref: '#/components/schemas/VolumeSnapshot'
    "2_8_volumesnapshots_body":
      allOf:
      - description: dummy
      - type: object
        properties:
          destroyed:
            type: boolean
            description: "If set to `true`, destroys a resource. Once set to `true`,\
              \ the `time_remaining` value will display the amount of time left until\
              \ the destroyed resource is permanently eradicated. Before the `time_remaining`\
              \ period has elapsed, the destroyed resource can be recovered by setting\
              \ `destroyed=false`. Once the `time_remaining` period has elapsed, the\
              \ resource is permanently eradicated and can no longer be recovered."
      - properties:
          suffix:
            type: string
            description: "The suffix that is appended to the `source_name` value to\
              \ generate the full volume snapshot name in the form `VOL.SUFFIX`. If\
              \ the suffix is not specified, the system constructs the snapshot name\
              \ in the form `VOL.NNN`, where `VOL` is the volume name, and `NNN` is\
              \ a monotonically increasing number."
    inline_response_200_166:
      type: object
      properties:
        items:
          type: array
          description: "Returns a list of all items after filtering. The values are\
            \ displayed for each name where meaningful. If `total_only=true`, the\
            \ `items` list will be empty."
          items:
            $ref: '#/components/schemas/VolumeSnapshot'
      example:
        items:
        - ""
        - ""
    inline_response_200_167:
      allOf:
      - description: dummy
      - allOf:
        - description: dummy
        - type: object
          properties:
            more_items_remaining:
              type: boolean
              description: Returns a value of `true` if subsequent items can be retrieved.
              example: false
            total_item_count:
              type: integer
              description: "The total number of records after applying all filter\
                \ query parameters. The `total_item_count` will be calculated if and\
                \ only if the corresponding query parameter `total_item_count` is\
                \ set to `true`. If this query parameter is not set or set to `false`,\
                \ a value of `null` will be returned."
              format: int32
        - type: object
          properties:
            continuation_token:
              type: string
              description: "Continuation token that can be provided in the `continuation_token`\
                \ query param to get the next page of data. If you use the continuation\
                \ token to page through data you are guaranteed to get all items exactly\
                \ once regardless of how items are modified. If an item is added or\
                \ deleted during the pagination then it may or may not be returned.\
                \ The continuation token is generated if the limit is less than the\
                \ remaining number of items, and the default sort is used (no sort\
                \ is specified)."
      - type: object
        properties:
          items:
            type: array
            description: "Returns a list of all items after filtering. The values\
              \ are displayed for each name where meaningful. If `total_only=true`,\
              \ the `items` list will be empty."
            items:
              $ref: '#/components/schemas/VolumeSnapshotTransfer'
      - properties:
          total:
            type: array
            description: "The aggregate value of all items after filtering. Where\
              \ it makes more sense, the average value is displayed instead. The values\
              \ are displayed for each field where meaningful."
            items:
              $ref: '#/components/schemas/VolumeSnapshotTransfer'
    Admin_api_token:
      type: object
      properties:
        created_at:
          type: integer
          description: Creation time in milliseconds since the UNIX epoch.
          format: int64
        expires_at:
          type: integer
          description: Expiration time in milliseconds since the UNIX epoch.
          format: int64
        token:
          type: string
      description: API token
      readOnly: true
      example: null
    AlertEvent_alert:
      type: object
      properties:
        id:
          type: string
          description: "A globally unique, system-generated ID. The ID cannot be modified."
        name:
          type: string
          description: "The resource name, such as volume name, pod name, snapshot\
            \ name, and so on."
      readOnly: true
      example:
        name: name
        id: id
    AppNode_app:
      type: object
      properties:
        id:
          type: string
          description: "A globally unique, system-generated ID. The ID cannot be modified."
        name:
          type: string
          description: "The resource name, such as volume name, pod name, snapshot\
            \ name, and so on."
      description: A reference to the app of which this node is a part.
      readOnly: true
      example: null
    Array_encryption_data_at_rest:
      type: object
      properties:
        algorithm:
          type: string
          description: The algorithm used to encrypt data on the array. Values include
            `AES-256-CTR` and `null`.
          example: AES-256-CTR
        enabled:
          type: boolean
          description: Returns a value of `true` if data at rest encryption is enabled
            on the array.
      description: Data at rest encryption properties.
      example: null
    Array_encryption:
      type: object
      properties:
        data_at_rest:
          $ref: '#/components/schemas/Array_encryption_data_at_rest'
        module_version:
          type: string
          description: "The version of the Purity encryption module installed on the\
            \ array. Security certifications are carried out on a per-version basis.\
            \ On non-encrypt builds, an encryption module may be installed without\
            \ being enabled. Values include `FA-1.0`, `FA-1.1`, `FA-1.2`, `FA-1.3`,\
            \ and so on."
          example: FA-1.3
      readOnly: true
      example: null
    Array_eradication_config:
      type: object
      properties:
        eradication_delay:
          type: integer
          description: The eradication delay in milliseconds. Automatically eradicate
            destroyed items after the delay time. Valid values are `86400000` and
            any multiple of `86400000` in the range of `86400000` and `2592000000`.
            Any other values will be rounded down to the nearest multiple of `86400000`.
          format: int64
          example: 86400000
      description: The configuration of eradication feature.
      example: null
    ArrayConnection_throttle:
      type: object
      properties:
        default_limit:
          type: integer
          description: "Default maximum bandwidth threshold for outbound traffic in\
            \ bytes. Once exceeded, bandwidth throttling occurs."
          format: int64
          example: 1073741824
        window:
          $ref: api2.8arrayconnections_window
        window_limit:
          type: integer
          description: "Maximum bandwidth threshold for outbound traffic during the\
            \ specified `window_limit` time range in bytes. Once exceeded, bandwidth\
            \ throttling occurs."
          format: int64
          example: 2097152
      description: The bandwidth throttling for an array connection. Configurable
        on PATCH only.
      example: null
    Audit_origin:
      type: object
      properties:
        id:
          type: string
          description: "A globally unique, system-generated ID. The ID cannot be modified."
        name:
          type: string
          description: "The resource name, such as volume name, pod name, snapshot\
            \ name, and so on."
      description: The array from which the command originated.
      readOnly: true
      example: null
    Connection_host:
      type: object
      properties:
        name:
          type: string
          description: "The resource name, such as volume name, pod name, snapshot\
            \ name, and so on."
      description: The host computer that sends and receives I/O requests to and from
        volumes on the FlashArray array.
      readOnly: true
      example: null
    Connection_host_group:
      type: object
      properties:
        name:
          type: string
          description: "The resource name, such as volume name, pod name, snapshot\
            \ name, and so on."
      description: A virtual collection of hosts with common connectivity to volumes.
      readOnly: true
      example: null
    Connection_volume:
      type: object
      properties:
        id:
          type: string
          description: "A globally unique, system-generated ID. The ID cannot be modified."
        name:
          type: string
          description: "The resource name, such as volume name, pod name, snapshot\
            \ name, and so on."
      description: A container that manages the storage space on the array.
      readOnly: true
      example: null
    Directory_limited_by:
      type: object
      properties:
        member:
          description: Reference to the resource to which the effective quota policy
            is attached.
          allOf:
          - description: dummy
          - type: object
            properties:
              id:
                type: string
                description: "A globally unique, system-generated ID. The ID cannot\
                  \ be modified."
              name:
                type: string
                description: "The resource name, such as volume name, pod name, snapshot\
                  \ name, and so on."
            readOnly: true
          - properties:
              resource_type:
                type: string
                description: "Type of the object (full name of the endpoint). Valid\
                  \ values include `hosts`, `host-groups`, `network-interfaces`, `pods`,\
                  \ `ports`, `pod-replica-links`, `subnets`, `volumes`, `volume-snapshots`,\
                  \ `volume-groups`, `directories`, `policies/nfs`, `policies/smb`,\
                  \ `policies/snapshot`, and `policies/quota`."
                readOnly: true
        policy:
          description: Reference to the effective quota policy.
          allOf:
          - description: dummy
          - type: object
            properties:
              id:
                type: string
                description: "A globally unique, system-generated ID. The ID cannot\
                  \ be modified."
              name:
                type: string
                description: "The resource name, such as volume name, pod name, snapshot\
                  \ name, and so on."
            readOnly: true
          - properties:
              resource_type:
                type: string
                description: "Type of the object (full name of the endpoint). Valid\
                  \ values include `hosts`, `host-groups`, `network-interfaces`, `pods`,\
                  \ `ports`, `pod-replica-links`, `subnets`, `volumes`, `volume-snapshots`,\
                  \ `volume-groups`, `directories`, `policies/nfs`, `policies/smb`,\
                  \ `policies/snapshot`, and `policies/quota`."
                readOnly: true
      description: The quota policy that is limiting usage on this managed directory.
        This policy defines the total amount of space provisioned to this managed
        directory and its descendants. The returned value contains two parts&#58;
        the name of the policy and the managed directory to which the policy is attached.
      readOnly: true
      example: null
    DirectorySpace_space:
      type: object
      properties:
        data_reduction:
          type: number
          description: "The ratio of mapped sectors within a volume versus the amount\
            \ of physical space the data occupies after data compression and deduplication.\
            \ The data reduction ratio does not include thin provisioning savings.\
            \ For example, a data reduction ratio of 5&#58;1 means that for every\
            \ 5 MB the host writes to the array, 1 MB is stored on the array's flash\
            \ modules."
          format: float
        shared:
          minimum: 0
          type: integer
          description: "The physical space occupied by deduplicated data, meaning\
            \ that the space is shared with other volumes and snapshots as a result\
            \ of data deduplication. Measured in bytes."
          format: int64
          example: 111863360624
        snapshots:
          minimum: 0
          type: integer
          description: The physical space occupied by data unique to one or more snapshots.
            Measured in bytes.
          format: int64
        system:
          minimum: 0
          type: integer
          description: The physical space occupied by internal array metadata. Measured
            in bytes.
          format: int64
        thin_provisioning:
          maximum: 1
          minimum: 0
          type: number
          description: The percentage of volume sectors that do not contain host-written
            data because the hosts have not written data to them or the sectors have
            been explicitly trimmed.
          format: float
        total_physical:
          minimum: 0
          type: integer
          description: "The total physical space occupied by system, shared space,\
            \ volume, and snapshot data. Measured in bytes."
          format: int64
        total_provisioned:
          minimum: 0
          type: integer
          description: "For a single volume, the provisioned size of the volume. For\
            \ all other resources, the total provisioned size of all volumes that\
            \ are connected to or are inside the resource. Represents storage capacity\
            \ reported to hosts. Measured in bytes."
          format: int64
          example: 19937690345472
        total_reduction:
          type: number
          description: "The ratio of provisioned sectors within a volume versus the\
            \ amount of physical space the data occupies after reduction via data\
            \ compression and deduplication and with thin provisioning savings. Total\
            \ reduction is data reduction with thin provisioning savings. For example,\
            \ a total reduction ratio of 10&#58;1 means that for every 10 MB of provisioned\
            \ space, 1 MB is stored on the array's flash modules."
          format: float
        unique:
          minimum: 0
          type: integer
          description: "The unique physical space occupied by customer data. Unique\
            \ physical space does not include shared space, snapshots, and internal\
            \ array metadata. Measured in bytes."
          format: int64
        virtual:
          minimum: 0
          type: integer
          description: The amount of logically written data that a volume or a snapshot
            references. Measured in bytes.
          format: int64
      description: Displays size and space consumption information.
      readOnly: true
      example: null
    DirectoryService_management:
      type: object
      properties:
        user_login_attribute:
          type: string
          description: User login attribute in the structure of the configured LDAP
            servers. Typically the attribute field that holds the user's unique login
            name. Default value is `sAMAccountName` for Active Directory or `uid`
            for all other directory services.
          example: email
        user_object_class:
          type: string
          description: "Value of the object class for a management LDAP user. Defaults\
            \ to `User` for Active Directory servers, `posixAccount` or `shadowAccount`\
            \ for OpenLDAP servers dependent on the group type of the server, or `person`\
            \ for all other directory servers."
          example: inetOrgPerson
      description: Properties specific to the management service.
      example: null
    DirectoryServiceRole_role:
      type: object
      properties:
        name:
          type: string
          description: "The resource name, such as volume name, pod name, snapshot\
            \ name, and so on."
      description: A reference to the role&#59; can be any role that exists on the
        system.
      readOnly: true
      example:
        name: name
    DirectorySnapshot_policy:
      type: object
      properties:
        id:
          type: string
          description: "A globally unique, system-generated ID. The ID cannot be modified."
        name:
          type: string
          description: "The resource name, such as volume name, pod name, snapshot\
            \ name, and so on."
      description: "The snapshot policy that manages this snapshot, if applicable."
      readOnly: true
      example: null
    DirectorySnapshot_source:
      type: object
      properties:
        id:
          type: string
          description: "A globally unique, system-generated ID. The ID cannot be modified."
        name:
          type: string
          description: "The resource name, such as volume name, pod name, snapshot\
            \ name, and so on."
      description: The directory from which this snapshot was taken.
      readOnly: true
      example: null
    HostPerformanceBalance_initiator:
      type: object
      properties:
        iqn:
          type: string
          description: The iSCSI Qualified Name (or `null` if target is not iSCSI).
          example: iqn.2010-06.com.purestorage:flasharray.393d930077be2977
        nqn:
          type: string
          description: NVMe Qualified Name (or `null` if target is not NVMeoF).
          example: nqn.2010-06.com.purestorage:flasharray.512f7bb185978505
        portal:
          type: string
          description: IP and port number (or `null` if target is not iSCSI).
          example: 10.16.200.27:3260
        wwn:
          type: string
          description: Fibre Channel World Wide Name (or `null` if target is not Fibre
            Channel).
          example: 52:4A:93:70:4E:E5:68:00
      readOnly: true
      example: null
    HostPerformanceByArray_array:
      type: object
      properties:
        id:
          type: string
          description: "A globally unique, system-generated ID. The ID cannot be modified\
            \ and cannot refer to another resource."
          readOnly: true
        name:
          type: string
          description: A user-specified name. The name must be locally unique and
            can be changed.
      description: "An ordinary (as opposed to built-in) resource that can be created,\
        \ named, renamed or deleted by the user. This might be a virtual resource\
        \ (e.g., a volume), or correspond to something in the environment, like a\
        \ host or a server."
      example: null
    KMIP_certificate:
      type: object
      properties:
        name:
          type: string
          description: "The resource name, such as volume name, pod name, snapshot\
            \ name, and so on."
      description: The certificate used to verify FlashArray authenticity to the KMIP
        servers.
      example: null
    MemberNoIdAll_group:
      type: object
      properties:
        name:
          type: string
          description: "The resource name, such as volume name, pod name, snapshot\
            \ name, and so on."
      description: "The resource in which the host, volume, or other item in the environment\
        \ is a member."
      example: null
    MemberNoIdAll_member:
      type: object
      properties:
        name:
          type: string
          description: "The resource name, such as volume name, pod name, snapshot\
            \ name, and so on."
      description: The member of the resource.
      example: null
    NetworkInterface_eth:
      type: object
      properties:
        address:
          type: string
          description: The IPv4 or IPv6 address to be associated with the specified
            network interface.
        gateway:
          type: string
          description: The IPv4 or IPv6 address of the gateway through which the specified
            network interface is to communicate with the network.
        mac_address:
          type: string
          description: The media access control address associated with the specified
            network interface.
          readOnly: true
        mtu:
          type: integer
          description: "Maximum message transfer unit (packet) size for the network\
            \ interface, in bytes. MTU setting cannot exceed the MTU of the corresponding\
            \ physical interface."
          format: int32
        netmask:
          type: string
          description: "Netmask of the specified network interface that, when combined\
            \ with the address of the interface, determines the network address of\
            \ the interface."
        subinterfaces:
          type: array
          description: List of network interfaces configured to be a subinterface
            of the specified network interface.
          items:
            $ref: api2.8networkinterfaces_eth_subinterfaces
        subnet:
          $ref: api2.8networkinterfaces_eth_subnet
        subtype:
          type: string
          description: "The subtype of the specified network interface. Only interfaces\
            \ of subtype `virtual` can be created. Configurable on POST only. Valid\
            \ values are `failover_bond`, `lacp_bond`, `physical`, and `virtual`."
        vlan:
          type: integer
          description: VLAN ID
          format: int32
          readOnly: true
      description: Ethernet network interface properties.
      example: null
    NetworkInterface_fc:
      type: object
      properties:
        wwn:
          type: string
          description: World Wide Name of the specified Fibre Channel port.
          readOnly: true
      description: Fibre Channel port properties.
      example: null
    NetworkInterfacePerformance_eth:
      type: object
      properties:
        other_errors_per_sec:
          minimum: 0
          type: integer
          description: The sum of unspecified reception and transmission errors per
            second.
          format: int64
        received_bytes_per_sec:
          minimum: 0
          type: integer
          description: Bytes received per second.
          format: int64
        received_crc_errors_per_sec:
          minimum: 0
          type: integer
          description: Reception CRC errors per second.
          format: int64
        received_frame_errors_per_sec:
          minimum: 0
          type: integer
          description: Received packet frame errors per second.
          format: int64
        received_packets_per_sec:
          minimum: 0
          type: integer
          description: Packets received per second.
          format: int64
        total_errors_per_sec:
          minimum: 0
          type: integer
          description: The sum of all reception and transmission errors per second.
          format: int64
        transmitted_bytes_per_sec:
          minimum: 0
          type: integer
          description: Bytes transmitted per second.
          format: int64
        transmitted_carrier_errors_per_sec:
          minimum: 0
          type: integer
          description: Transmission carrier errors per second.
          format: int64
        transmitted_dropped_errors_per_sec:
          minimum: 0
          type: integer
          description: Transmitted packets dropped per second.
          format: int64
        transmitted_packets_per_sec:
          minimum: 0
          type: integer
          description: Packets transmitted per second.
          format: int64
      description: Ethernet network interface statistics.
      example: null
    NetworkInterfacePerformance_fc:
      type: object
      properties:
        received_bytes_per_sec:
          minimum: 0
          type: integer
          description: Bytes received per second.
          format: int64
        received_crc_errors_per_sec:
          minimum: 0
          type: integer
          description: Fibre Channel frame CRC errors per second.
          format: int64
        received_frames_per_sec:
          minimum: 0
          type: integer
          description: Fibre Channel frames received per second.
          format: int64
        received_link_failures_per_sec:
          minimum: 0
          type: integer
          description: Loss of connectivity errors per second.
          format: int64
        received_loss_of_signal_per_sec:
          minimum: 0
          type: integer
          description: Loss of signal errors on Fibre Channel port per second.
          format: int64
        received_loss_of_sync_per_sec:
          minimum: 0
          type: integer
          description: Loss of sync errors on Fibre Channel port per second.
          format: int64
        total_errors_per_sec:
          minimum: 0
          type: integer
          description: The sum of all reception and transmission errors per second.
          format: int64
        transmitted_bytes_per_sec:
          minimum: 0
          type: integer
          description: Bytes transmitted per second.
          format: int64
        transmitted_frames_per_sec:
          minimum: 0
          type: integer
          description: Fibre Channel frames transmitted per second.
          format: int64
        transmitted_invalid_words_per_sec:
          minimum: 0
          type: integer
          description: Bit errors in transmission word per second.
          format: int64
      description: Fibre Channel port statistics.
      example: null
    Offload_space:
      type: object
      properties:
        data_reduction:
          type: number
          description: "The ratio of mapped sectors within a volume versus the amount\
            \ of physical space the data occupies after data compression and deduplication.\
            \ The data reduction ratio does not include thin provisioning savings.\
            \ For example, a data reduction ratio of 5&#58;1 means that for every\
            \ 5 MB the host writes to the array, 1 MB is stored on the array's flash\
            \ modules."
          format: float
        shared:
          minimum: 0
          type: integer
          description: "The physical space occupied by deduplicated data, meaning\
            \ that the space is shared with other volumes and snapshots as a result\
            \ of data deduplication. Measured in bytes."
          format: int64
          example: 111863360624
        snapshots:
          minimum: 0
          type: integer
          description: The physical space occupied by data unique to one or more snapshots.
            Measured in bytes.
          format: int64
        system:
          minimum: 0
          type: integer
          description: The physical space occupied by internal array metadata. Measured
            in bytes.
          format: int64
        thin_provisioning:
          maximum: 1
          minimum: 0
          type: number
          description: The percentage of volume sectors that do not contain host-written
            data because the hosts have not written data to them or the sectors have
            been explicitly trimmed.
          format: float
        total_physical:
          minimum: 0
          type: integer
          description: "The total physical space occupied by system, shared space,\
            \ volume, and snapshot data. Measured in bytes."
          format: int64
        total_provisioned:
          minimum: 0
          type: integer
          description: "For a single volume, the provisioned size of the volume. For\
            \ all other resources, the total provisioned size of all volumes that\
            \ are connected to or are inside the resource. Represents storage capacity\
            \ reported to hosts. Measured in bytes."
          format: int64
          example: 19937690345472
        total_reduction:
          type: number
          description: "The ratio of provisioned sectors within a volume versus the\
            \ amount of physical space the data occupies after reduction via data\
            \ compression and deduplication and with thin provisioning savings. Total\
            \ reduction is data reduction with thin provisioning savings. For example,\
            \ a total reduction ratio of 10&#58;1 means that for every 10 MB of provisioned\
            \ space, 1 MB is stored on the array's flash modules."
          format: float
        unique:
          minimum: 0
          type: integer
          description: "The unique physical space occupied by customer data. Unique\
            \ physical space does not include shared space, snapshots, and internal\
            \ array metadata. Measured in bytes."
          format: int64
        virtual:
          minimum: 0
          type: integer
          description: The amount of logically written data that a volume or a snapshot
            references. Measured in bytes.
          format: int64
      readOnly: true
      example: null
    PodPerformanceReplication_continuous_bytes_per_sec:
      type: object
      properties:
        from_remote_bytes_per_sec:
          minimum: 0
          type: integer
          description: The number of bytes received per second from a remote array.
            The number will be zero if the arrays are unable to communicate.
          format: int64
        to_remote_bytes_per_sec:
          minimum: 0
          type: integer
          description: The number of bytes transmitted per second to a remote array.
            The number will be zero if the arrays are unable to communicate.
          format: int64
        total_bytes_per_sec:
          minimum: 0
          type: integer
          description: Total bytes transmitted and received per second. The number
            will be zero if the arrays are unable to communicate.
          format: int64
      description: Total bytes transmitted or received per second for continuous replication.
        The continuous replication feature is used for disaster recovery on FlashArray
        and provides a recovery point objective (RPO) of significantly less than 30s.
      readOnly: true
      example: null
    PodPerformanceReplication_periodic_bytes_per_sec:
      type: object
      properties:
        from_remote_bytes_per_sec:
          minimum: 0
          type: integer
          description: The number of bytes received per second from a remote array.
            The number will be zero if the arrays are unable to communicate.
          format: int64
        to_remote_bytes_per_sec:
          minimum: 0
          type: integer
          description: The number of bytes transmitted per second to a remote array.
            The number will be zero if the arrays are unable to communicate.
          format: int64
        total_bytes_per_sec:
          minimum: 0
          type: integer
          description: Total bytes transmitted and received per second. The number
            will be zero if the arrays are unable to communicate.
          format: int64
      description: Total bytes transmitted or received per second for periodic replication.
      readOnly: true
      example: null
    PodPerformanceReplication_pod:
      type: object
      properties:
        id:
          type: string
          description: "A globally unique, system-generated ID. The ID cannot be modified."
        name:
          type: string
          description: "The resource name, such as volume name, pod name, snapshot\
            \ name, and so on."
      description: Reference to the pod that the performance data is associated with.
      readOnly: true
      example: null
    PodPerformanceReplication_resync_bytes_per_sec:
      type: object
      properties:
        from_remote_bytes_per_sec:
          minimum: 0
          type: integer
          description: The number of bytes received per second from a remote array.
            The number will be zero if the arrays are unable to communicate.
          format: int64
        to_remote_bytes_per_sec:
          minimum: 0
          type: integer
          description: The number of bytes transmitted per second to a remote array.
            The number will be zero if the arrays are unable to communicate.
          format: int64
        total_bytes_per_sec:
          minimum: 0
          type: integer
          description: Total bytes transmitted and received per second. The number
            will be zero if the arrays are unable to communicate.
          format: int64
      description: "Total bytes transmitted or received per second during resync replication.\
        \ Resync replication is the mechanism to bring two arrays into sync. This\
        \ may occur during an initial pod stretch, or, in case of outage, when two\
        \ arrays reestablish connection. After the connection is restored, the array\
        \ that was online starts replicating pod data to its peer array until the\
        \ pod is once again in sync."
      readOnly: true
      example: null
    PodPerformanceReplication_sync_bytes_per_sec:
      type: object
      properties:
        from_remote_bytes_per_sec:
          minimum: 0
          type: integer
          description: The number of bytes received per second from a remote array.
            The number will be zero if the arrays are unable to communicate.
          format: int64
        to_remote_bytes_per_sec:
          minimum: 0
          type: integer
          description: The number of bytes transmitted per second to a remote array.
            The number will be zero if the arrays are unable to communicate.
          format: int64
        total_bytes_per_sec:
          minimum: 0
          type: integer
          description: Total bytes transmitted and received per second. The number
            will be zero if the arrays are unable to communicate.
          format: int64
      description: Total bytes transmitted or received per second for synchronous
        replication.
      readOnly: true
      example: null
    PodReplicaLink_local_pod:
      type: object
      properties:
        id:
          type: string
          description: "A globally unique, system-generated ID. The ID cannot be modified."
        name:
          type: string
          description: "The resource name, such as volume name, pod name, snapshot\
            \ name, and so on."
      description: Reference to a local pod.
      readOnly: true
      example: null
    PodReplicaLink_remote_pod:
      type: object
      properties:
        id:
          type: string
          description: "A globally unique, system-generated ID. The ID cannot be modified."
        name:
          type: string
          description: "The resource name, such as volume name, pod name, snapshot\
            \ name, and so on."
      description: Reference to a remote pod.
      readOnly: true
      example: null
    PodReplicaLinkLag_lag:
      type: object
      properties:
        avg:
          minimum: 0
          type: integer
          description: The average time difference between the current time and `recovery_point`
            for a period of time.
          format: int64
        maximum:
          minimum: 0
          type: integer
          description: The maximum time difference between the current time and `recovery_point`
            for a period of time.
          format: int64
      description: Duration in milliseconds that indicates how far behind the replication
        target is from the source.
      readOnly: true
      example: null
    ProtectionGroup_pod:
      type: object
      properties:
        id:
          type: string
          description: "A globally unique, system-generated ID. The ID cannot be modified."
        name:
          type: string
          description: "The resource name, such as volume name, pod name, snapshot\
            \ name, and so on."
      description: The pod in which the protection group resides.
      readOnly: true
      example: null
    ProtectionGroup_snapshot_schedule:
      type: object
      properties:
        at:
          maximum: 86399000
          minimum: 0
          type: integer
          description: "The time of day the snapshot is scheduled to be taken and\
            \ retained on the local array or immediately replicated to the target(s).\
            \ Measured in milliseconds since midnight. The `at` value is only used\
            \ if the `frequency` parameter is in days (e.g., `259200000`, which is\
            \ equal to 3 days)."
          format: int64
          example: 7200000
        enabled:
          type: boolean
          description: "If set to `true`, the policy is enabled."
          example: false
        frequency:
          maximum: 34560000000
          minimum: 300000
          type: integer
          description: The frequency of the scheduled action. Measured in milliseconds.
          format: int64
          example: 259200000
      description: The replication or snapshot schedule.
      example: null
    ProtectionGroup_source:
      type: object
      properties:
        id:
          type: string
          description: "A globally unique, system-generated ID. The ID cannot be modified."
        name:
          type: string
          description: "The resource name, such as volume name, pod name, snapshot\
            \ name, and so on."
      description: The array on which the protection group was created.
      readOnly: true
      example: null
    ProtectionGroup_source_retention:
      type: object
      properties:
        all_for_sec:
          maximum: 34560000
          minimum: 60
          type: integer
          description: The length of time to keep the specified snapshots. Measured
            in seconds.
          format: int32
          example: 86400
        days:
          maximum: 4000
          minimum: 0
          type: integer
          description: The number of days to keep the snapshots after the `all_for_sec`
            period has passed.
          format: int32
          example: 7
        per_day:
          maximum: 1440
          minimum: 0
          type: integer
          description: The number of snapshots to keep per day after the `all_for_sec`
            period has passed.
          format: int32
          example: 3
      description: The snapshot retention policy.
      example: null
    ProtectionGroup_space:
      type: object
      properties:
        data_reduction:
          type: number
          description: "The ratio of mapped sectors within a volume versus the amount\
            \ of physical space the data occupies after data compression and deduplication.\
            \ The data reduction ratio does not include thin provisioning savings.\
            \ For example, a data reduction ratio of 5&#58;1 means that for every\
            \ 5 MB the host writes to the array, 1 MB is stored on the array's flash\
            \ modules."
          format: float
        shared:
          minimum: 0
          type: integer
          description: "The physical space occupied by deduplicated data, meaning\
            \ that the space is shared with other volumes and snapshots as a result\
            \ of data deduplication. Measured in bytes."
          format: int64
          example: 111863360624
        snapshots:
          minimum: 0
          type: integer
          description: The physical space occupied by data unique to one or more snapshots.
            Measured in bytes.
          format: int64
        system:
          minimum: 0
          type: integer
          description: The physical space occupied by internal array metadata. Measured
            in bytes.
          format: int64
        thin_provisioning:
          maximum: 1
          minimum: 0
          type: number
          description: The percentage of volume sectors that do not contain host-written
            data because the hosts have not written data to them or the sectors have
            been explicitly trimmed.
          format: float
        total_physical:
          minimum: 0
          type: integer
          description: "The total physical space occupied by system, shared space,\
            \ volume, and snapshot data. Measured in bytes."
          format: int64
        total_provisioned:
          minimum: 0
          type: integer
          description: "For a single volume, the provisioned size of the volume. For\
            \ all other resources, the total provisioned size of all volumes that\
            \ are connected to or are inside the resource. Represents storage capacity\
            \ reported to hosts. Measured in bytes."
          format: int64
          example: 19937690345472
        total_reduction:
          type: number
          description: "The ratio of provisioned sectors within a volume versus the\
            \ amount of physical space the data occupies after reduction via data\
            \ compression and deduplication and with thin provisioning savings. Total\
            \ reduction is data reduction with thin provisioning savings. For example,\
            \ a total reduction ratio of 10&#58;1 means that for every 10 MB of provisioned\
            \ space, 1 MB is stored on the array's flash modules."
          format: float
        unique:
          minimum: 0
          type: integer
          description: "The unique physical space occupied by customer data. Unique\
            \ physical space does not include shared space, snapshots, and internal\
            \ array metadata. Measured in bytes."
          format: int64
        virtual:
          minimum: 0
          type: integer
          description: The amount of logically written data that a volume or a snapshot
            references. Measured in bytes.
          format: int64
      description: Returns provisioned (virtual) size and physical storage consumption
        data for each protection group.
      readOnly: true
      example: null
    ProtectionGroupSnapshot_pod:
      type: object
      properties:
        id:
          type: string
          description: "A globally unique, system-generated ID. The ID cannot be modified."
        name:
          type: string
          description: "The resource name, such as volume name, pod name, snapshot\
            \ name, and so on."
      description: The pod in which the protection group of the protection group snapshot
        resides.
      readOnly: true
      example: null
    ProtectionGroupSnapshot_source:
      type: object
      properties:
        id:
          type: string
          description: "A globally unique, system-generated ID. The ID cannot be modified."
        name:
          type: string
          description: "The resource name, such as volume name, pod name, snapshot\
            \ name, and so on."
      description: The original protection group from which this snapshot was taken.
      readOnly: true
      example: null
    RemoteProtectionGroup_remote:
      type: object
      properties:
        id:
          type: string
          description: "A globally unique, system-generated ID. The ID cannot be modified."
        name:
          type: string
          description: "The resource name, such as volume name, pod name, snapshot\
            \ name, and so on."
      description: The offload target that the remote protection group is on.
      readOnly: true
      example: null
    RemoteProtectionGroup_source:
      type: object
      properties:
        id:
          type: string
          description: "A globally unique, system-generated ID. The ID cannot be modified."
        name:
          type: string
          description: "The resource name, such as volume name, pod name, snapshot\
            \ name, and so on."
      description: The array where the remote protection group is replicated from.
      readOnly: true
      example: null
    RemoteProtectionGroupSnapshot_remote:
      type: object
      properties:
        id:
          type: string
          description: "A globally unique, system-generated ID. The ID cannot be modified."
        name:
          type: string
          description: "The resource name, such as volume name, pod name, snapshot\
            \ name, and so on."
      description: The offload target where the remote protection group snapshot is
        located.
      readOnly: true
      example: null
    RemoteProtectionGroupSnapshot_source:
      type: object
      properties:
        name:
          type: string
          description: "The resource name, such as volume name, pod name, snapshot\
            \ name, and so on."
      description: The original protection group from which this snapshot was taken.
      readOnly: true
      example: null
    RemoteVolumeSnapshot_pod:
      type: object
      properties:
        id:
          type: string
          description: "A globally unique, system-generated ID. The ID cannot be modified."
        name:
          type: string
          description: "The resource name, such as volume name, pod name, snapshot\
            \ name, and so on."
      description: A reference to the pod.
      readOnly: true
      example: null
    RemoteVolumeSnapshot_source:
      type: object
      properties:
        id:
          type: string
          description: "A globally unique, system-generated ID. The ID cannot be modified."
        name:
          type: string
          description: "The resource name, such as volume name, pod name, snapshot\
            \ name, and so on."
      description: The volume from which this snapshot was taken.
      readOnly: true
      example: null
    RemoteVolumeSnapshot_remote:
      type: object
      properties:
        id:
          type: string
          description: "A globally unique, system-generated ID. The ID cannot be modified."
        name:
          type: string
          description: "The resource name, such as volume name, pod name, snapshot\
            \ name, and so on."
      description: Remote target where this volume snapshot is located.
      readOnly: true
      example: null
    SNMPAgent_v3:
      type: object
      properties:
        auth_passphrase:
          type: string
          description: Passphrase used by Purity//FA to authenticate the array with
            the specified managers.
          example: '****'
        auth_protocol:
          type: string
          description: Hash algorithm used to validate the authentication passphrase.
            Valid values are `MD5` and `SHA`.
          example: MD5
        privacy_passphrase:
          type: string
          description: Passphrase used to encrypt SNMP messages.
          example: '****'
        privacy_protocol:
          type: string
          description: Encryption protocol for SNMP messages. Valid values are `AES`
            and `DES`.
          example: DES
        user:
          type: string
          description: User ID recognized by the specified SNMP managers which Purity//FA
            is to use in communications with them.
          example: User1
      description: The v3 configurations of SNMP.
      example: null
    Software_upgrade_plan:
      type: object
      properties:
        step_name:
          type: string
          description: Name of the upgrade step.
          example: Pre-upgrade check
        description:
          type: string
          description: Description of the upgrade step.
        hop_version:
          type: string
          description: The version to which the step is upgrading.
          example: 99.9.9
      example: null
    SoftwareInstallations_software:
      type: object
      properties:
        id:
          type: string
          description: "A globally unique, system-generated ID. The ID cannot be modified."
        name:
          type: string
          description: "The resource name, such as volume name, pod name, snapshot\
            \ name, and so on."
      description: Referenced `software` to which the upgrade belongs.
      example: null
    SoftwareInstallationSteps_checks:
      type: object
      properties:
        details:
          type: string
          description: Detailed result of the check used to diagnose check failures.
        name:
          type: string
          description: Name of the upgrade check.
          example: HostIOCheck
        overridable:
          type: boolean
          description: Whether the check failure can be overridden.
        status:
          type: string
          description: "Status of the check. Valid values are `running`, `failed`,\
            \ `passed`, and `overridden`. A status of `running` indicates that the\
            \ check has not finished. A status of `failed` indicates that the check\
            \ has failed. A status of `passed` indicates that the check has passed.\
            \ A status of `overridden` indicates that the check has failed, but the\
            \ failure has been overridden."
      example: null
    SoftwareInstallationSteps_installation:
      type: object
      properties:
        id:
          type: string
          description: "A globally unique, system-generated ID. The ID cannot be modified."
        name:
          type: string
          description: "The resource name, such as volume name, pod name, snapshot\
            \ name, and so on."
      description: Referenced `software-installation` to which the step belongs.
      example: null
    Support_remote_assist_paths:
      properties:
        component_name:
          type: string
          description: The name of the local controller that is running the remote
            assist session.
          example: CT0
        status:
          type: string
          description: "The status of the remote assist session on the local controller.\
            \ Values include `connected`, `connecting`, `disconnected`, and `session-active`."
          example: connected
      example: null
    TestResultWithResource_resource:
      type: object
      properties:
        name:
          type: string
          description: "The resource name, such as volume name, pod name, snapshot\
            \ name, and so on."
      description: A reference to the object being tested.
      readOnly: true
      example: null
    VolumeGroup_qos:
      type: object
      properties:
        bandwidth_limit:
          maximum: 549755813888
          minimum: 1048576
          type: integer
          description: "The maximum QoS bandwidth limit for the volume. Whenever throughput\
            \ exceeds the bandwidth limit, throttling occurs. Measured in bytes per\
            \ second. Maximum limit is 512 GB/s."
          format: int64
        iops_limit:
          maximum: 104857600
          minimum: 100
          type: integer
          description: The QoS IOPs limit for the volume.
          format: int64
      example: null
    VolumeSnapshot_volume_group:
      type: object
      properties:
        id:
          type: string
          description: "A globally unique, system-generated ID. The ID cannot be modified."
        name:
          type: string
          description: "The resource name, such as volume name, pod name, snapshot\
            \ name, and so on."
      description: The volume group to which the volume that is the source of this
        volume snapshot belongs.
      readOnly: true
      example: null
    inline_response_200_26_items:
      type: object
      properties:
        agreement:
          type: string
          description: End User Agreement text.
          readOnly: true
        signature:
          $ref: api2.8arrayseula_signature
      example:
        agreement: agreement
        signature:
          name: John Doe
          accepted: 1577880000000
          company: Example Inc.
          title: Admin
    inline_response_200_40_items:
      type: object
      properties:
        certificate_signing_request:
          type: string
          description: The text of a new certificate signing request.
      description: SSL certificate managed by Purity//FA.
      example:
        certificate_signing_request: certificate_signing_request
  requestBodies:
    Policies:
      content:
        application/json:
          schema:
            type: object
            properties:
              policies:
                type: array
                description: "A list of policies to apply to the resource. The `id`\
                  \ and `name` field in each `policy` parameter is required, but cannot\
                  \ be set together."
                items:
                  type: object
                  properties:
                    policy:
                      type: object
                      properties:
                        id:
                          type: string
                          description: "A globally unique, system-generated ID. The\
                            \ ID cannot be modified."
                        name:
                          type: string
                          description: "The resource name, such as volume name, pod\
                            \ name, snapshot name, and so on."
                      description: Reference to the policy to apply to the resource.
      required: true
    Members:
      content:
        application/json:
          schema:
            type: object
            properties:
              members:
                type: array
                description: A list of directories to which the export policy may
                  be applied.
                items:
                  type: object
                  properties:
                    export_name:
                      type: string
                      description: The name of the export to create when applying
                        the export policy to the directory.
                    member:
                      description: "Reference to the directory to which the export\
                        \ policy may be applied. The `id` or `name` parameter is required,\
                        \ but cannot be set together. If the `name` parameter is set,\
                        \ `resource_type` must also be set."
                      allOf:
                      - description: dummy
                      - type: object
                        properties:
                          id:
                            type: string
                            description: "A globally unique, system-generated ID.\
                              \ The ID cannot be modified."
                          name:
                            type: string
                            description: "The resource name, such as volume name,\
                              \ pod name, snapshot name, and so on."
                      - properties:
                          resource_type:
                            type: string
                            description: "Type of the object (full name of the endpoint).\
                              \ Valid values are `hosts`, `host-groups`, `network-interfaces`,\
                              \ `pods`, `ports`, `pod-replica-links`, `subnets`, `volumes`,\
                              \ `volume-snapshots`, `volume-groups`, `directories`,\
                              \ `policies/nfs`, `policies/smb`, and `policies/snapshot`."
      required: true
    Policy:
      content:
        application/json:
          schema:
            type: object
            properties:
              enabled:
                type: boolean
                description: "If set to `true`, enables the policy. If set to `false`,\
                  \ disables the policy."
      required: true
    Members2:
      content:
        application/json:
          schema:
            type: object
            properties:
              members:
                type: array
                description: A list of resources to which the policy may be applied.
                items:
                  type: object
                  properties:
                    member:
                      description: "Reference to the resource to which the policy\
                        \ may be applied. The `id` or `name` parameter is required,\
                        \ but cannot be set together. If the `name` parameter is set,\
                        \ `resource_type` must also be set."
                      allOf:
                      - description: dummy
                      - type: object
                        properties:
                          id:
                            type: string
                            description: "A globally unique, system-generated ID.\
                              \ The ID cannot be modified."
                          name:
                            type: string
                            description: "The resource name, such as volume name,\
                              \ pod name, snapshot name, and so on."
                      - properties:
                          resource_type:
                            type: string
                            description: "Type of the object (full name of the endpoint).\
                              \ Valid values are `hosts`, `host-groups`, `network-interfaces`,\
                              \ `pods`, `ports`, `pod-replica-links`, `subnets`, `volumes`,\
                              \ `volume-snapshots`, `volume-groups`, `directories`,\
                              \ `policies/nfs`, `policies/smb`, and `policies/snapshot`."
      required: true
    Policy2:
      content:
        application/json:
          schema:
            allOf:
            - description: dummy
            - type: object
              properties:
                name:
                  type: string
                  description: The new name for the resource.
            - properties:
                enabled:
                  type: boolean
                  description: "If set to `true`, enables the policy. If set to `false`,\
                    \ disables the policy."
      required: true
    Certificate:
      content:
        application/json:
          schema:
            allOf:
            - description: dummy
            - $ref: '#/components/schemas/Certificate'
            - type: object
              properties:
                days:
                  type: integer
                  description: "The number of days that the self-signed certificate\
                    \ is valid. If not specified, defaults to 3650."
                  format: int32
                  example: 3650
                key:
                  type: string
                  description: The text of private key.
                passphrase:
                  type: string
                  description: The passphrase used to encrypt `private_key`.
      required: true
    Policies2:
      content:
        application/json:
          schema:
            type: object
            properties:
              policies:
                type: array
                description: "A list of export policies to apply to the directory.\
                  \ The `id` and `name` fields in each `policy` parameter are required,\
                  \ but cannot be set together."
                items:
                  type: object
                  properties:
                    export_name:
                      type: string
                      description: The name of the export to create when applying
                        the export policy to the directory.
                    policy:
                      type: object
                      properties:
                        id:
                          type: string
                          description: "A globally unique, system-generated ID. The\
                            \ ID cannot be modified."
                        name:
                          type: string
                          description: "The resource name, such as volume name, pod\
                            \ name, snapshot name, and so on."
                      description: Reference to the export policy to apply to the
                        directory.
      required: true
    FileSystem:
      content:
        application/json:
          schema:
            allOf:
            - description: dummy
            - type: object
              properties:
                destroyed:
                  type: boolean
                  description: "If set to `true`, destroys a resource. Once set to\
                    \ `true`, the `time_remaining` value will display the amount of\
                    \ time left until the destroyed resource is permanently eradicated.\
                    \ Before the `time_remaining` period has elapsed, the destroyed\
                    \ resource can be recovered by setting `destroyed=false`. Once\
                    \ the `time_remaining` period has elapsed, the resource is permanently\
                    \ eradicated and can no longer be recovered."
            - type: object
              properties:
                name:
                  type: string
                  description: The new name for the resource.
      required: true
    Kmip:
      content:
        application/json:
          schema:
            allOf:
            - description: dummy
            - type: object
              properties:
                ca_certificate:
                  maxLength: 3000
                  type: string
                  description: The text of the CA certificate for the KMIP server.
                  example: '-----BEGIN CERTIFICATE-----...-----END CERTIFICATE-----'
                certificate:
                  type: object
                  properties:
                    name:
                      type: string
                      description: "The resource name, such as volume name, pod name,\
                        \ snapshot name, and so on."
                  description: The certificate used to verify FlashArray authenticity
                    to the KMIP servers.
                uris:
                  type: array
                  description: List of URIs for the configured KMIP servers.
                  example:
                  - 1.1.1.1:8888
                  - 2.2.2.2:9999
                  items:
                    type: string
      required: true
    RemoteProtectionGroupSnapshot:
      content:
        application/json:
          schema:
            type: object
            properties:
              destroyed:
                type: boolean
                description: "If set to `true`, destroys a resource. Once set to `true`,\
                  \ the `time_remaining` value will display the amount of time left\
                  \ until the destroyed resource is permanently eradicated. Before\
                  \ the `time_remaining` period has elapsed, the destroyed resource\
                  \ can be recovered by setting `destroyed=false`. Once the `time_remaining`\
                  \ period has elapsed, the resource is permanently eradicated and\
                  \ can no longer be recovered."
      required: true
    SyslogServer:
      content:
        application/json:
          schema:
            $ref: '#/components/schemas/SyslogServer'
      required: true
